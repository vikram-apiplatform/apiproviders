[
    {
        "id": 115634,
        "executor_type": "THIRDPARTY",
        "executor_name": "updatTheme",
        "executor_version": "v2",
        "executor_display_name": "Update Theme",
        "executor_description": "Update Theme",
        "executor_category": "Checkout",
        "executor_category_group": "Checkout",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "{{host}}/v2/theme/{themeId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "themeId",
                "value": "",
                "description": "Parameter that was created within the create theme API call that applies the customizations upon the checkout interface. Read Theming for details."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "logo": "string",
                "entity_id": "string",
                "base_font_family": "Roboto",
                "text_color": "string",
                "heading_color": "string",
                "background_color": "string",
                "panel_background_color": "string",
                "primary_color": "string",
                "primary_color_inverse": "string",
                "primary_color_disabled": "string",
                "primary_color_inverse_disabled": "string",
                "error_color": "string",
                "error_color_inverse": "string",
                "input_border_radius": 0,
                "input_border_width": 0,
                "hide_verifone_seal": true,
                "config": {
                    "is_default": false
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695330928337,
        "lastModifiedTime": 1695330928337,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "logo": "string",
                    "entity_id": "string",
                    "base_font_family": "Roboto",
                    "text_color": "string",
                    "heading_color": "string",
                    "background_color": "string",
                    "panel_background_color": "string",
                    "primary_color": "string",
                    "primary_color_inverse": "string",
                    "primary_color_disabled": "string",
                    "primary_color_inverse_disabled": "string",
                    "error_color": "string",
                    "error_color_inverse": "string",
                    "input_border_radius": 0,
                    "input_border_width": 0,
                    "hide_verifone_seal": true,
                    "config": {
                        "is_default": false
                    },
                    "id": "string",
                    "created_at": "2019-08-24",
                    "updated_at": "2019-08-24"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 115617,
        "executor_type": "THIRDPARTY",
        "executor_name": "listCheckouts",
        "executor_version": "v2",
        "executor_display_name": "List Checkouts",
        "executor_description": "List Checkouts",
        "executor_category": "Checkout",
        "executor_category_group": "Checkout",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/v2/checkout",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "search",
                "value": "",
                "description": "RSQl Query is composed of one or more expressions, combined to each other with following logical operators:  A filter query in RSQL format to retrieve themes. The returned themes are limited to those that can be retrieved by the user.  Criteria\tDescription\tOperator Used amount\tnumber\t==, !=, =in=, =out=, =gt=, =ge=, =lt=, =le= created_at\tdate\t==, !=, =in=, =out=, =gt=, =ge=, =lt=, =le= currency_code\tstring\t==, !=, =in=, =out=, =regex= customer\tstring\t==, !=, =in=, =out=, =regex= id\tstring\t==, !=, =in=, =out=, =regex= merchant_reference\tstring\t==, !=, =in=, =out=, =regex= entity_id\tstring\t==, !=, =in=, =out=, =regex= updated_at\tdate\t==, !=, =in=, =out=, =gt=, =ge=, =lt=, =le= expiry_time\tdate\t==, !=, =in=, =out=, =gt=, =ge=, =lt=, =le= status\tstring\t==, !=, =in=, =out=, =regex= notification_methods.email.email_address\tstring\t==, !=, =in=, =out=, =regex= configurations.card.token_details.reuse_token\tstring\t==, !=, =in=, =out=, =regex= payment_method_used\tstring\t==, !=, =in=, =out=, =regex= interaction_type\tstring\t==, !=, =in=, =out=, =regex= theme_id\tstring\t==, !=, =in=, =out=, =regex= transaction_id\tstring\t==, !=, =in=, =out=, =regex= created_by\tstring\t==, !=, =in=, =out=, =regex= Note:  Operator\tDescription ==\tequal !=\tnot equal =lt=\tless than =le=\tless than and equal to =gt=\tgreater than =ge=\tgreater than and equal to =regex=\tpattern matching =in=\tmultiple arguments search =out=\texclude ;\tLogical AND ,\tLogical OR Note: Logical AND ( ; ) has higher precedence than Logical OR ( , ), whereas a parenthesis () can be used to override the precedence of an operator.  Example for list checkout:  /v2/checkout?search= id==123; (amount==999, currency_code==USD); status==Authorized& order_by=ASC& order_criteria=amount& page_size=1& page_number=2   /v2/checkout?search= id==12345, merchant_reference==1234554321; amount==3224& order_by=DESC& order_criteria=created_at& page_size=10& page_number=1   /v2/checkout?search= amount=in=(100,200); interaction_type!=PAYMENT_LINK& order_by=ASC& order_criteria=currency_code& page_size=1& page_number=2  order_criteria\t string <= 255 characters The ordering sequence of the selected checkouts If not selected then a default order is based on created Date Time. The value of order_criteria can be one of the following:  amount currency_code created_at updated_at order_by\t string Enum: \"ASC\" \"DESC\" The ordering sequence of the selected customers If not selected then Descending order is the default order.  page_number\t number >= 1 A filter query in RSQL format to retrieve customers based on page number. If not selected then a default pageNumber is 1.  page_size\t number >= 0 A filter query in RSQL format to retrieve customers based on page size. If not selected then a default pageSize is 50",
                "req": false
            },
            {
                "key": "order_criteria",
                "value": "",
                "description": "The ordering sequence of the selected checkouts If not selected then a default order is based on created Date Time. The value of order_criteria can be one of the following:  amount currency_code created_at updated_at",
                "req": false
            },
            {
                "key": "order_by",
                "value": "",
                "description": "Enum: \"ASC\" \"DESC\" The ordering sequence of the selected customers If not selected then Descending order is the default order.",
                "req": false
            },
            {
                "key": "page_number\t",
                "value": "",
                "description": "A filter query in RSQL format to retrieve customers based on page number. If not selected then a default pageNumber is 1.",
                "req": false
            },
            {
                "key": "page_size",
                "value": "",
                "description": "A filter query in RSQL format to retrieve customers based on page size. If not selected then a default pageSize is 50",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695329520003,
        "lastModifiedTime": 1695329520003,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": "string",
                        "amount": 9007199254740991,
                        "entity_id": "string",
                        "currency_code": "AED",
                        "customer": "string",
                        "expiry_time": "2019-08-24",
                        "merchant_reference": "string",
                        "return_url": "string",
                        "configurations": {
                            "card": {
                                "dynamic_descriptor": "string",
                                "account_validation": false,
                                "capture_now": true,
                                "cvv_required": false,
                                "authorization_type": "PRE_AUTH",
                                "shopper_interaction": "ECOMMERCE",
                                "payment_contract_id": "string",
                                "token_preference": {
                                    "token_scope": "string",
                                    "token_expiry_date": "2019-08-24",
                                    "token_type": "REUSE"
                                },
                                "threed_secure": {
                                    "account_age_indicator": "01",
                                    "account_create_date": "2019-08-24",
                                    "account_change_indicator": "01",
                                    "account_change_date": "2019-08-24",
                                    "account_pwd_change_indicator": "01",
                                    "account_pwd_change_date": "2019-08-24",
                                    "account_id": "string",
                                    "account_purchases": 9999,
                                    "acs_window_size": "01",
                                    "add_card_attempts": 999,
                                    "address_match": "Y",
                                    "alternate_authentication_method": "01",
                                    "alternate_authentication_date": "2019-08-24",
                                    "alternate_authentication_data": "string",
                                    "threeds_contract_id": "string",
                                    "authentication_indicator": "01",
                                    "category_code": 9999,
                                    "challenge_indicator": "01",
                                    "delivery_email": "string",
                                    "delivery_time_frame": "01",
                                    "enabled": true,
                                    "fraud_activity": "01",
                                    "gift_card_amount": 999999999999999,
                                    "gift_card_currency_code": "str",
                                    "gift_card_count": 99,
                                    "installment": 2,
                                    "message_category": "01",
                                    "payment_use_case": "01",
                                    "payment_account_indicator": "01",
                                    "payment_account_age": "2019-08-24",
                                    "pre_order_indicator": "01",
                                    "pre_order_date": "2019-08-24",
                                    "prior_authentication_data": "string",
                                    "prior_authentication_method": "01",
                                    "prior_authentication_time": "2019-08-24",
                                    "prior_authentication_ref": "string",
                                    "product_code": "PHY",
                                    "recurring_end": "2019-08-24",
                                    "recurring_frequency": 9999,
                                    "reorder_indicator": "01",
                                    "requestor_id": "string",
                                    "requestor_name": "string",
                                    "shipping_address_usage_indicator": "01",
                                    "shipping_address_usage_date": "2019-08-24",
                                    "shipping_method_indicator": "01",
                                    "shipping_name_indicator": "01",
                                    "total_items": "string",
                                    "merchant_score": "string",
                                    "transaction_count_day": 999,
                                    "transaction_count_year": 999,
                                    "transaction_mode": "M",
                                    "version": "1.0.2"
                                },
                                "mode": "CARD_CAPTURE",
                                "card_capture_mode": "v2",
                                "card_token": "string",
                                "card_last_four": "stri",
                                "card_expiry_year": "string",
                                "card_expiry_month": "string",
                                "card_brand": [
                                    "string"
                                ],
                                "card_encryption_key_alias": "string",
                                "threeds_authentication_id": "string",
                                "token_details": {
                                    "reuse_token": "string",
                                    "analytics_token": "string"
                                },
                                "credit_term": "DEBIT",
                                "credit_term_used": "DEBIT",
                                "instalment": {
                                    "max_number_of_instalments": 1,
                                    "down_payment_amount": 9007199254740991
                                },
                                "input_overrides": {
                                    "CVV": {
                                        "validation_rule": "NONE",
                                        "usage": "REQUIRED"
                                    },
                                    "CREDIT_TERM": {
                                        "validation_rule": "NONE",
                                        "usage": "REQUIRED"
                                    },
                                    "IDENTITY_CARD_NUMBER": {
                                        "validation_rule": "NONE",
                                        "usage": "REQUIRED"
                                    }
                                },
                                "instalment_used": {
                                    "instalment_amount": 9007199254740991,
                                    "down_payment_amount": 9007199254740991,
                                    "number_of_instalments": 0
                                },
                                "stored_credential": {
                                    "stored_credential_type": "SIGNUP",
                                    "first_payment": true,
                                    "consent_text": "string",
                                    "consent_text_dynamic_values": [
                                        "string"
                                    ],
                                    "processing_model_details": {
                                        "processing_model": "RECURRING",
                                        "total_payment_number": 9007199254740991,
                                        "total_payment_amount": 9007199254740991,
                                        "first_payment_amount": 9007199254740991,
                                        "payment_frequency": {
                                            "time_unit": "DAY",
                                            "value": 0
                                        },
                                        "merchant_signup_code": "string"
                                    },
                                    "reference": "string",
                                    "scheme_reference": "string"
                                },
                                "reuse_token": "string",
                                "encrypted_card": "string",
                                "additional_business_data": {
                                    "addendum1": "string",
                                    "addendum2": "string"
                                }
                            },
                            "gpp2": {
                                "payment_contract_id": "string",
                                "shopper_interaction": "ECOMMERCE",
                                "card_encryption_key_alias": "string"
                            },
                            "paypal": {
                                "dynamic_descriptor": "string",
                                "capture_now": true,
                                "payment_contract_id": "string",
                                "description": "string",
                                "application_context": {
                                    "landing_page": "BILLING",
                                    "brand_name": "string",
                                    "locale": "string"
                                }
                            },
                            "google_pay": {
                                "dynamic_descriptor": "string",
                                "capture_now": true,
                                "account_validation": false,
                                "card": {
                                    "sca_compliance_level": "NONE",
                                    "threed_secure": {
                                        "account_age_indicator": "01",
                                        "account_create_date": "2019-08-24",
                                        "account_change_indicator": "01",
                                        "account_change_date": "2019-08-24",
                                        "account_pwd_change_indicator": "01",
                                        "account_pwd_change_date": "2019-08-24",
                                        "account_id": "string",
                                        "account_purchases": 9999,
                                        "acs_window_size": "01",
                                        "add_card_attempts": 999,
                                        "address_match": "Y",
                                        "alternate_authentication_method": "01",
                                        "alternate_authentication_date": "2019-08-24",
                                        "alternate_authentication_data": "string",
                                        "threeds_contract_id": "string",
                                        "authentication_indicator": "01",
                                        "category_code": 9999,
                                        "challenge_indicator": "01",
                                        "delivery_email": "string",
                                        "delivery_time_frame": "01",
                                        "enabled": true,
                                        "fraud_activity": "01",
                                        "gift_card_amount": 999999999999999,
                                        "gift_card_currency_code": "str",
                                        "gift_card_count": 99,
                                        "installment": 2,
                                        "message_category": "01",
                                        "payment_use_case": "01",
                                        "payment_account_indicator": "01",
                                        "payment_account_age": "2019-08-24",
                                        "pre_order_indicator": "01",
                                        "pre_order_date": "2019-08-24",
                                        "prior_authentication_data": "string",
                                        "prior_authentication_method": "01",
                                        "prior_authentication_time": "2019-08-24",
                                        "prior_authentication_ref": "string",
                                        "product_code": "PHY",
                                        "recurring_end": "2019-08-24",
                                        "recurring_frequency": 9999,
                                        "reorder_indicator": "01",
                                        "requestor_id": "string",
                                        "requestor_name": "string",
                                        "shipping_address_usage_indicator": "01",
                                        "shipping_address_usage_date": "2019-08-24",
                                        "shipping_method_indicator": "01",
                                        "shipping_name_indicator": "01",
                                        "total_items": "string",
                                        "merchant_score": "string",
                                        "transaction_count_day": 999,
                                        "transaction_count_year": 999,
                                        "transaction_mode": "M",
                                        "version": "1.0.2"
                                    },
                                    "authorization_type": "FINAL_AUTH",
                                    "shopper_interaction": "ECOMMERCE",
                                    "payment_contract_id": "string",
                                    "token_preference": {
                                        "token_scope": "string",
                                        "token_expiry_date": "2019-08-24",
                                        "token_type": "REUSE"
                                    },
                                    "card_encryption_key_alias": "string",
                                    "threeds_authentication_id": "string",
                                    "token_details": {
                                        "reuse_token": "string",
                                        "analytics_token": "string"
                                    }
                                }
                            },
                            "apple_pay": {
                                "dynamic_descriptor": "string",
                                "capture_now": true,
                                "account_validation": false,
                                "card": {
                                    "sca_compliance_level": "NONE",
                                    "threed_secure": {
                                        "account_age_indicator": "01",
                                        "account_create_date": "2019-08-24",
                                        "account_change_indicator": "01",
                                        "account_change_date": "2019-08-24",
                                        "account_pwd_change_indicator": "01",
                                        "account_pwd_change_date": "2019-08-24",
                                        "account_id": "string",
                                        "account_purchases": 9999,
                                        "acs_window_size": "01",
                                        "add_card_attempts": 999,
                                        "address_match": "Y",
                                        "alternate_authentication_method": "01",
                                        "alternate_authentication_date": "2019-08-24",
                                        "alternate_authentication_data": "string",
                                        "threeds_contract_id": "string",
                                        "authentication_indicator": "01",
                                        "category_code": 9999,
                                        "challenge_indicator": "01",
                                        "delivery_email": "string",
                                        "delivery_time_frame": "01",
                                        "enabled": true,
                                        "fraud_activity": "01",
                                        "gift_card_amount": 999999999999999,
                                        "gift_card_currency_code": "str",
                                        "gift_card_count": 99,
                                        "installment": 2,
                                        "message_category": "01",
                                        "payment_use_case": "01",
                                        "payment_account_indicator": "01",
                                        "payment_account_age": "2019-08-24",
                                        "pre_order_indicator": "01",
                                        "pre_order_date": "2019-08-24",
                                        "prior_authentication_data": "string",
                                        "prior_authentication_method": "01",
                                        "prior_authentication_time": "2019-08-24",
                                        "prior_authentication_ref": "string",
                                        "product_code": "PHY",
                                        "recurring_end": "2019-08-24",
                                        "recurring_frequency": 9999,
                                        "reorder_indicator": "01",
                                        "requestor_id": "string",
                                        "requestor_name": "string",
                                        "shipping_address_usage_indicator": "01",
                                        "shipping_address_usage_date": "2019-08-24",
                                        "shipping_method_indicator": "01",
                                        "shipping_name_indicator": "01",
                                        "total_items": "string",
                                        "merchant_score": "string",
                                        "transaction_count_day": 999,
                                        "transaction_count_year": 999,
                                        "transaction_mode": "M",
                                        "version": "1.0.2"
                                    },
                                    "authorization_type": "FINAL_AUTH",
                                    "shopper_interaction": "ECOMMERCE",
                                    "payment_contract_id": "string",
                                    "token_preference": {
                                        "token_scope": "string",
                                        "token_expiry_date": "2019-08-24",
                                        "token_type": "REUSE"
                                    }
                                }
                            },
                            "vipps": {
                                "payment_contract_id": "string",
                                "dynamic_descriptor": "string",
                                "capture_now": true,
                                "is_app": false,
                                "app_phone_number": "string",
                                "card": {
                                    "sca_compliance_level": "NONE",
                                    "threed_secure": {
                                        "account_age_indicator": "01",
                                        "account_create_date": "2019-08-24",
                                        "account_change_indicator": "01",
                                        "account_change_date": "2019-08-24",
                                        "account_pwd_change_indicator": "01",
                                        "account_pwd_change_date": "2019-08-24",
                                        "account_id": "string",
                                        "account_purchases": 9999,
                                        "acs_window_size": "01",
                                        "add_card_attempts": 999,
                                        "address_match": "Y",
                                        "alternate_authentication_method": "01",
                                        "alternate_authentication_date": "2019-08-24",
                                        "alternate_authentication_data": "string",
                                        "threeds_contract_id": "string",
                                        "authentication_indicator": "01",
                                        "category_code": 9999,
                                        "challenge_indicator": "01",
                                        "delivery_email": "string",
                                        "delivery_time_frame": "01",
                                        "enabled": true,
                                        "fraud_activity": "01",
                                        "gift_card_amount": 999999999999999,
                                        "gift_card_currency_code": "str",
                                        "gift_card_count": 99,
                                        "installment": 2,
                                        "message_category": "01",
                                        "payment_use_case": "01",
                                        "payment_account_indicator": "01",
                                        "payment_account_age": "2019-08-24",
                                        "pre_order_indicator": "01",
                                        "pre_order_date": "2019-08-24",
                                        "prior_authentication_data": "string",
                                        "prior_authentication_method": "01",
                                        "prior_authentication_time": "2019-08-24",
                                        "prior_authentication_ref": "string",
                                        "product_code": "PHY",
                                        "recurring_end": "2019-08-24",
                                        "recurring_frequency": 9999,
                                        "reorder_indicator": "01",
                                        "requestor_id": "string",
                                        "requestor_name": "string",
                                        "shipping_address_usage_indicator": "01",
                                        "shipping_address_usage_date": "2019-08-24",
                                        "shipping_method_indicator": "01",
                                        "shipping_name_indicator": "01",
                                        "total_items": "string",
                                        "merchant_score": "string",
                                        "transaction_count_day": 999,
                                        "transaction_count_year": 999,
                                        "transaction_mode": "M",
                                        "version": "1.0.2"
                                    },
                                    "authorization_type": "FINAL_AUTH",
                                    "encrypted_card": "string",
                                    "card_encryption_key_alias": "string",
                                    "return_url": "string"
                                }
                            },
                            "klarna": {
                                "capture_now": true
                            },
                            "swish": {
                                "app_phone_number": "string",
                                "shopper_interaction": "ECOMMERCE"
                            },
                            "mobile_pay": {
                                "dynamic_descriptor": "string",
                                "capture_now": true,
                                "payment_contract_id": "string",
                                "card": {
                                    "sca_compliance_level": "NONE",
                                    "threed_secure": {
                                        "account_age_indicator": "01",
                                        "account_create_date": "2019-08-24",
                                        "account_change_indicator": "01",
                                        "account_change_date": "2019-08-24",
                                        "account_pwd_change_indicator": "01",
                                        "account_pwd_change_date": "2019-08-24",
                                        "account_id": "string",
                                        "account_purchases": 9999,
                                        "acs_window_size": "01",
                                        "add_card_attempts": 999,
                                        "address_match": "Y",
                                        "alternate_authentication_method": "01",
                                        "alternate_authentication_date": "2019-08-24",
                                        "alternate_authentication_data": "string",
                                        "threeds_contract_id": "string",
                                        "authentication_indicator": "01",
                                        "category_code": 9999,
                                        "challenge_indicator": "01",
                                        "delivery_email": "string",
                                        "delivery_time_frame": "01",
                                        "enabled": true,
                                        "fraud_activity": "01",
                                        "gift_card_amount": 999999999999999,
                                        "gift_card_currency_code": "str",
                                        "gift_card_count": 99,
                                        "installment": 2,
                                        "message_category": "01",
                                        "payment_use_case": "01",
                                        "payment_account_indicator": "01",
                                        "payment_account_age": "2019-08-24",
                                        "pre_order_indicator": "01",
                                        "pre_order_date": "2019-08-24",
                                        "prior_authentication_data": "string",
                                        "prior_authentication_method": "01",
                                        "prior_authentication_time": "2019-08-24",
                                        "prior_authentication_ref": "string",
                                        "product_code": "PHY",
                                        "recurring_end": "2019-08-24",
                                        "recurring_frequency": 9999,
                                        "reorder_indicator": "01",
                                        "requestor_id": "string",
                                        "requestor_name": "string",
                                        "shipping_address_usage_indicator": "01",
                                        "shipping_address_usage_date": "2019-08-24",
                                        "shipping_method_indicator": "01",
                                        "shipping_name_indicator": "01",
                                        "total_items": "string",
                                        "merchant_score": "string",
                                        "transaction_count_day": 999,
                                        "transaction_count_year": 999,
                                        "transaction_mode": "M",
                                        "version": "1.0.2"
                                    },
                                    "authorization_type": "PRE_AUTH",
                                    "shopper_interaction": "ECOMMERCE",
                                    "payment_contract_id": "string",
                                    "token_preference": {
                                        "token_scope": "string",
                                        "token_expiry_date": "2019-08-24",
                                        "token_type": "REUSE"
                                    },
                                    "card_encryption_key_alias": "string",
                                    "threeds_authentication_id": "string",
                                    "token_details": {
                                        "reuse_token": "string",
                                        "analytics_token": "string"
                                    },
                                    "encrypted_card": "string",
                                    "return_url": "string"
                                }
                            }
                        },
                        "created_at": "2019-08-24",
                        "updated_at": "2019-08-24",
                        "transaction_id": "string",
                        "customer_ip": "string",
                        "user_agent": "string",
                        "i18n": {
                            "default_language": "string",
                            "fallback_language": "string",
                            "show_language_options": true
                        },
                        "events": [
                            {
                                "type": "string",
                                "id": "string",
                                "timestamp": "2019-08-24",
                                "details": {}
                            }
                        ],
                        "status": "string",
                        "notification_methods": {
                            "email": {
                                "email_address": "string"
                            },
                            "sms": {
                                "phone_number": "string"
                            }
                        },
                        "display_line_items": true,
                        "line_items": [
                            {
                                "image_url": "string",
                                "item_url": "string",
                                "image_id": "string",
                                "name": "string",
                                "quantity": 0,
                                "unit_price": 0,
                                "unit_price_tax": 0,
                                "tax_rate": 0,
                                "total_tax_amount": 0,
                                "total_amount": 0,
                                "sku": "string",
                                "description": "string",
                                "category": "DIGITAL_GOODS"
                            }
                        ],
                        "interaction_type": "HPP",
                        "payment_method_used": "card",
                        "url": "string",
                        "theme_id": "string",
                        "receipt_type": "INVOICE",
                        "sales_description": "string",
                        "created_by": "string",
                        "fraud_protection_data": {
                            "fraud_protection_token": "string",
                            "client_side_parameters": {
                                "org_id": "string",
                                "web_session_id": "string"
                            }
                        }
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 115620,
        "executor_type": "THIRDPARTY",
        "executor_name": "getacheckoutbyid",
        "executor_version": "v2",
        "executor_display_name": "Get a checkout by id",
        "executor_description": "Get a checkout by id",
        "executor_category": "Checkout",
        "executor_category_group": "Checkout",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/v2/checkout/{checkoutId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "checkoutId",
                "value": "",
                "description": "Checkout ID"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695329774270,
        "lastModifiedTime": 1695329774270,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string",
                    "amount": 9007199254740991,
                    "entity_id": "string",
                    "currency_code": "AED",
                    "customer": "string",
                    "expiry_time": "2019-08-24",
                    "merchant_reference": "string",
                    "return_url": "string",
                    "configurations": {
                        "card": {
                            "dynamic_descriptor": "string",
                            "account_validation": false,
                            "capture_now": true,
                            "cvv_required": false,
                            "authorization_type": "PRE_AUTH",
                            "shopper_interaction": "ECOMMERCE",
                            "payment_contract_id": "string",
                            "token_preference": {
                                "token_scope": "string",
                                "token_expiry_date": "2019-08-24",
                                "token_type": "REUSE"
                            },
                            "threed_secure": {
                                "account_age_indicator": "01",
                                "account_create_date": "2019-08-24",
                                "account_change_indicator": "01",
                                "account_change_date": "2019-08-24",
                                "account_pwd_change_indicator": "01",
                                "account_pwd_change_date": "2019-08-24",
                                "account_id": "string",
                                "account_purchases": 9999,
                                "acs_window_size": "01",
                                "add_card_attempts": 999,
                                "address_match": "Y",
                                "alternate_authentication_method": "01",
                                "alternate_authentication_date": "2019-08-24",
                                "alternate_authentication_data": "string",
                                "threeds_contract_id": "string",
                                "authentication_indicator": "01",
                                "category_code": 9999,
                                "challenge_indicator": "01",
                                "delivery_email": "string",
                                "delivery_time_frame": "01",
                                "enabled": true,
                                "fraud_activity": "01",
                                "gift_card_amount": 999999999999999,
                                "gift_card_currency_code": "str",
                                "gift_card_count": 99,
                                "installment": 2,
                                "message_category": "01",
                                "payment_use_case": "01",
                                "payment_account_indicator": "01",
                                "payment_account_age": "2019-08-24",
                                "pre_order_indicator": "01",
                                "pre_order_date": "2019-08-24",
                                "prior_authentication_data": "string",
                                "prior_authentication_method": "01",
                                "prior_authentication_time": "2019-08-24",
                                "prior_authentication_ref": "string",
                                "product_code": "PHY",
                                "recurring_end": "2019-08-24",
                                "recurring_frequency": 9999,
                                "reorder_indicator": "01",
                                "requestor_id": "string",
                                "requestor_name": "string",
                                "shipping_address_usage_indicator": "01",
                                "shipping_address_usage_date": "2019-08-24",
                                "shipping_method_indicator": "01",
                                "shipping_name_indicator": "01",
                                "total_items": "string",
                                "merchant_score": "string",
                                "transaction_count_day": 999,
                                "transaction_count_year": 999,
                                "transaction_mode": "M",
                                "version": "1.0.2"
                            },
                            "mode": "CARD_CAPTURE",
                            "card_capture_mode": "v2",
                            "card_token": "string",
                            "card_last_four": "stri",
                            "card_expiry_year": "string",
                            "card_expiry_month": "string",
                            "card_brand": [
                                "string"
                            ],
                            "card_encryption_key_alias": "string",
                            "threeds_authentication_id": "string",
                            "token_details": {
                                "reuse_token": "string",
                                "analytics_token": "string"
                            },
                            "credit_term": "DEBIT",
                            "credit_term_used": "DEBIT",
                            "instalment": {
                                "max_number_of_instalments": 1,
                                "down_payment_amount": 9007199254740991
                            },
                            "input_overrides": {
                                "CVV": {
                                    "validation_rule": "NONE",
                                    "usage": "REQUIRED"
                                },
                                "CREDIT_TERM": {
                                    "validation_rule": "NONE",
                                    "usage": "REQUIRED"
                                },
                                "IDENTITY_CARD_NUMBER": {
                                    "validation_rule": "NONE",
                                    "usage": "REQUIRED"
                                }
                            },
                            "instalment_used": {
                                "instalment_amount": 9007199254740991,
                                "down_payment_amount": 9007199254740991,
                                "number_of_instalments": 0
                            },
                            "stored_credential": {
                                "stored_credential_type": "SIGNUP",
                                "first_payment": true,
                                "consent_text": "string",
                                "consent_text_dynamic_values": [
                                    "string"
                                ],
                                "processing_model_details": {
                                    "processing_model": "RECURRING",
                                    "total_payment_number": 9007199254740991,
                                    "total_payment_amount": 9007199254740991,
                                    "first_payment_amount": 9007199254740991,
                                    "payment_frequency": {
                                        "time_unit": "DAY",
                                        "value": 0
                                    },
                                    "merchant_signup_code": "string"
                                },
                                "reference": "string",
                                "scheme_reference": "string"
                            },
                            "reuse_token": "string",
                            "encrypted_card": "string",
                            "additional_business_data": {
                                "addendum1": "string",
                                "addendum2": "string"
                            }
                        },
                        "gpp2": {
                            "payment_contract_id": "string",
                            "shopper_interaction": "ECOMMERCE",
                            "card_encryption_key_alias": "string"
                        },
                        "paypal": {
                            "dynamic_descriptor": "string",
                            "capture_now": true,
                            "payment_contract_id": "string",
                            "description": "string",
                            "application_context": {
                                "landing_page": "BILLING",
                                "brand_name": "string",
                                "locale": "string"
                            }
                        },
                        "google_pay": {
                            "dynamic_descriptor": "string",
                            "capture_now": true,
                            "account_validation": false,
                            "card": {
                                "sca_compliance_level": "NONE",
                                "threed_secure": {
                                    "account_age_indicator": "01",
                                    "account_create_date": "2019-08-24",
                                    "account_change_indicator": "01",
                                    "account_change_date": "2019-08-24",
                                    "account_pwd_change_indicator": "01",
                                    "account_pwd_change_date": "2019-08-24",
                                    "account_id": "string",
                                    "account_purchases": 9999,
                                    "acs_window_size": "01",
                                    "add_card_attempts": 999,
                                    "address_match": "Y",
                                    "alternate_authentication_method": "01",
                                    "alternate_authentication_date": "2019-08-24",
                                    "alternate_authentication_data": "string",
                                    "threeds_contract_id": "string",
                                    "authentication_indicator": "01",
                                    "category_code": 9999,
                                    "challenge_indicator": "01",
                                    "delivery_email": "string",
                                    "delivery_time_frame": "01",
                                    "enabled": true,
                                    "fraud_activity": "01",
                                    "gift_card_amount": 999999999999999,
                                    "gift_card_currency_code": "str",
                                    "gift_card_count": 99,
                                    "installment": 2,
                                    "message_category": "01",
                                    "payment_use_case": "01",
                                    "payment_account_indicator": "01",
                                    "payment_account_age": "2019-08-24",
                                    "pre_order_indicator": "01",
                                    "pre_order_date": "2019-08-24",
                                    "prior_authentication_data": "string",
                                    "prior_authentication_method": "01",
                                    "prior_authentication_time": "2019-08-24",
                                    "prior_authentication_ref": "string",
                                    "product_code": "PHY",
                                    "recurring_end": "2019-08-24",
                                    "recurring_frequency": 9999,
                                    "reorder_indicator": "01",
                                    "requestor_id": "string",
                                    "requestor_name": "string",
                                    "shipping_address_usage_indicator": "01",
                                    "shipping_address_usage_date": "2019-08-24",
                                    "shipping_method_indicator": "01",
                                    "shipping_name_indicator": "01",
                                    "total_items": "string",
                                    "merchant_score": "string",
                                    "transaction_count_day": 999,
                                    "transaction_count_year": 999,
                                    "transaction_mode": "M",
                                    "version": "1.0.2"
                                },
                                "authorization_type": "FINAL_AUTH",
                                "shopper_interaction": "ECOMMERCE",
                                "payment_contract_id": "string",
                                "token_preference": {
                                    "token_scope": "string",
                                    "token_expiry_date": "2019-08-24",
                                    "token_type": "REUSE"
                                },
                                "card_encryption_key_alias": "string",
                                "threeds_authentication_id": "string",
                                "token_details": {
                                    "reuse_token": "string",
                                    "analytics_token": "string"
                                }
                            }
                        },
                        "apple_pay": {
                            "dynamic_descriptor": "string",
                            "capture_now": true,
                            "account_validation": false,
                            "card": {
                                "sca_compliance_level": "NONE",
                                "threed_secure": {
                                    "account_age_indicator": "01",
                                    "account_create_date": "2019-08-24",
                                    "account_change_indicator": "01",
                                    "account_change_date": "2019-08-24",
                                    "account_pwd_change_indicator": "01",
                                    "account_pwd_change_date": "2019-08-24",
                                    "account_id": "string",
                                    "account_purchases": 9999,
                                    "acs_window_size": "01",
                                    "add_card_attempts": 999,
                                    "address_match": "Y",
                                    "alternate_authentication_method": "01",
                                    "alternate_authentication_date": "2019-08-24",
                                    "alternate_authentication_data": "string",
                                    "threeds_contract_id": "string",
                                    "authentication_indicator": "01",
                                    "category_code": 9999,
                                    "challenge_indicator": "01",
                                    "delivery_email": "string",
                                    "delivery_time_frame": "01",
                                    "enabled": true,
                                    "fraud_activity": "01",
                                    "gift_card_amount": 999999999999999,
                                    "gift_card_currency_code": "str",
                                    "gift_card_count": 99,
                                    "installment": 2,
                                    "message_category": "01",
                                    "payment_use_case": "01",
                                    "payment_account_indicator": "01",
                                    "payment_account_age": "2019-08-24",
                                    "pre_order_indicator": "01",
                                    "pre_order_date": "2019-08-24",
                                    "prior_authentication_data": "string",
                                    "prior_authentication_method": "01",
                                    "prior_authentication_time": "2019-08-24",
                                    "prior_authentication_ref": "string",
                                    "product_code": "PHY",
                                    "recurring_end": "2019-08-24",
                                    "recurring_frequency": 9999,
                                    "reorder_indicator": "01",
                                    "requestor_id": "string",
                                    "requestor_name": "string",
                                    "shipping_address_usage_indicator": "01",
                                    "shipping_address_usage_date": "2019-08-24",
                                    "shipping_method_indicator": "01",
                                    "shipping_name_indicator": "01",
                                    "total_items": "string",
                                    "merchant_score": "string",
                                    "transaction_count_day": 999,
                                    "transaction_count_year": 999,
                                    "transaction_mode": "M",
                                    "version": "1.0.2"
                                },
                                "authorization_type": "FINAL_AUTH",
                                "shopper_interaction": "ECOMMERCE",
                                "payment_contract_id": "string",
                                "token_preference": {
                                    "token_scope": "string",
                                    "token_expiry_date": "2019-08-24",
                                    "token_type": "REUSE"
                                }
                            }
                        },
                        "vipps": {
                            "payment_contract_id": "string",
                            "dynamic_descriptor": "string",
                            "capture_now": true,
                            "is_app": false,
                            "app_phone_number": "string",
                            "card": {
                                "sca_compliance_level": "NONE",
                                "threed_secure": {
                                    "account_age_indicator": "01",
                                    "account_create_date": "2019-08-24",
                                    "account_change_indicator": "01",
                                    "account_change_date": "2019-08-24",
                                    "account_pwd_change_indicator": "01",
                                    "account_pwd_change_date": "2019-08-24",
                                    "account_id": "string",
                                    "account_purchases": 9999,
                                    "acs_window_size": "01",
                                    "add_card_attempts": 999,
                                    "address_match": "Y",
                                    "alternate_authentication_method": "01",
                                    "alternate_authentication_date": "2019-08-24",
                                    "alternate_authentication_data": "string",
                                    "threeds_contract_id": "string",
                                    "authentication_indicator": "01",
                                    "category_code": 9999,
                                    "challenge_indicator": "01",
                                    "delivery_email": "string",
                                    "delivery_time_frame": "01",
                                    "enabled": true,
                                    "fraud_activity": "01",
                                    "gift_card_amount": 999999999999999,
                                    "gift_card_currency_code": "str",
                                    "gift_card_count": 99,
                                    "installment": 2,
                                    "message_category": "01",
                                    "payment_use_case": "01",
                                    "payment_account_indicator": "01",
                                    "payment_account_age": "2019-08-24",
                                    "pre_order_indicator": "01",
                                    "pre_order_date": "2019-08-24",
                                    "prior_authentication_data": "string",
                                    "prior_authentication_method": "01",
                                    "prior_authentication_time": "2019-08-24",
                                    "prior_authentication_ref": "string",
                                    "product_code": "PHY",
                                    "recurring_end": "2019-08-24",
                                    "recurring_frequency": 9999,
                                    "reorder_indicator": "01",
                                    "requestor_id": "string",
                                    "requestor_name": "string",
                                    "shipping_address_usage_indicator": "01",
                                    "shipping_address_usage_date": "2019-08-24",
                                    "shipping_method_indicator": "01",
                                    "shipping_name_indicator": "01",
                                    "total_items": "string",
                                    "merchant_score": "string",
                                    "transaction_count_day": 999,
                                    "transaction_count_year": 999,
                                    "transaction_mode": "M",
                                    "version": "1.0.2"
                                },
                                "authorization_type": "FINAL_AUTH",
                                "encrypted_card": "string",
                                "card_encryption_key_alias": "string",
                                "return_url": "string"
                            }
                        },
                        "klarna": {
                            "capture_now": true
                        },
                        "swish": {
                            "app_phone_number": "string",
                            "shopper_interaction": "ECOMMERCE"
                        },
                        "mobile_pay": {
                            "dynamic_descriptor": "string",
                            "capture_now": true,
                            "payment_contract_id": "string",
                            "card": {
                                "sca_compliance_level": "NONE",
                                "threed_secure": {
                                    "account_age_indicator": "01",
                                    "account_create_date": "2019-08-24",
                                    "account_change_indicator": "01",
                                    "account_change_date": "2019-08-24",
                                    "account_pwd_change_indicator": "01",
                                    "account_pwd_change_date": "2019-08-24",
                                    "account_id": "string",
                                    "account_purchases": 9999,
                                    "acs_window_size": "01",
                                    "add_card_attempts": 999,
                                    "address_match": "Y",
                                    "alternate_authentication_method": "01",
                                    "alternate_authentication_date": "2019-08-24",
                                    "alternate_authentication_data": "string",
                                    "threeds_contract_id": "string",
                                    "authentication_indicator": "01",
                                    "category_code": 9999,
                                    "challenge_indicator": "01",
                                    "delivery_email": "string",
                                    "delivery_time_frame": "01",
                                    "enabled": true,
                                    "fraud_activity": "01",
                                    "gift_card_amount": 999999999999999,
                                    "gift_card_currency_code": "str",
                                    "gift_card_count": 99,
                                    "installment": 2,
                                    "message_category": "01",
                                    "payment_use_case": "01",
                                    "payment_account_indicator": "01",
                                    "payment_account_age": "2019-08-24",
                                    "pre_order_indicator": "01",
                                    "pre_order_date": "2019-08-24",
                                    "prior_authentication_data": "string",
                                    "prior_authentication_method": "01",
                                    "prior_authentication_time": "2019-08-24",
                                    "prior_authentication_ref": "string",
                                    "product_code": "PHY",
                                    "recurring_end": "2019-08-24",
                                    "recurring_frequency": 9999,
                                    "reorder_indicator": "01",
                                    "requestor_id": "string",
                                    "requestor_name": "string",
                                    "shipping_address_usage_indicator": "01",
                                    "shipping_address_usage_date": "2019-08-24",
                                    "shipping_method_indicator": "01",
                                    "shipping_name_indicator": "01",
                                    "total_items": "string",
                                    "merchant_score": "string",
                                    "transaction_count_day": 999,
                                    "transaction_count_year": 999,
                                    "transaction_mode": "M",
                                    "version": "1.0.2"
                                },
                                "authorization_type": "PRE_AUTH",
                                "shopper_interaction": "ECOMMERCE",
                                "payment_contract_id": "string",
                                "token_preference": {
                                    "token_scope": "string",
                                    "token_expiry_date": "2019-08-24",
                                    "token_type": "REUSE"
                                },
                                "card_encryption_key_alias": "string",
                                "threeds_authentication_id": "string",
                                "token_details": {
                                    "reuse_token": "string",
                                    "analytics_token": "string"
                                },
                                "encrypted_card": "string",
                                "return_url": "string"
                            }
                        }
                    },
                    "created_at": "2019-08-24",
                    "updated_at": "2019-08-24",
                    "transaction_id": "string",
                    "customer_ip": "string",
                    "user_agent": "string",
                    "i18n": {
                        "default_language": "string",
                        "fallback_language": "string",
                        "show_language_options": true
                    },
                    "events": [
                        {
                            "type": "string",
                            "id": "string",
                            "timestamp": "2019-08-24",
                            "details": {}
                        }
                    ],
                    "status": "string",
                    "notification_methods": {
                        "email": {
                            "email_address": "string"
                        },
                        "sms": {
                            "phone_number": "string"
                        }
                    },
                    "display_line_items": true,
                    "line_items": [
                        {
                            "image_url": "string",
                            "item_url": "string",
                            "image_id": "string",
                            "name": "string",
                            "quantity": 0,
                            "unit_price": 0,
                            "unit_price_tax": 0,
                            "tax_rate": 0,
                            "total_tax_amount": 0,
                            "total_amount": 0,
                            "sku": "string",
                            "description": "string",
                            "category": "DIGITAL_GOODS"
                        }
                    ],
                    "interaction_type": "HPP",
                    "payment_method_used": "card",
                    "url": "string",
                    "theme_id": "string",
                    "receipt_type": "INVOICE",
                    "sales_description": "string",
                    "created_by": "string",
                    "fraud_protection_data": {
                        "fraud_protection_token": "string",
                        "client_side_parameters": {
                            "org_id": "string",
                            "web_session_id": "string"
                        }
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 115625,
        "executor_type": "THIRDPARTY",
        "executor_name": "createaCheckoutNotification",
        "executor_version": "v2",
        "executor_display_name": "Create a Checkout Notification",
        "executor_description": "Create a Checkout Notification",
        "executor_category": "Checkout",
        "executor_category_group": "Checkout",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/v2/checkout/{checkoutId}/notification",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "checkoutId",
                "value": "",
                "description": "Checkout ID"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "notification_methods": {
                    "email": {
                        "email_address": "string"
                    },
                    "sms": {
                        "phone_number": "string"
                    }
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695330213811,
        "lastModifiedTime": 1695330213811,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 115626,
        "executor_type": "THIRDPARTY",
        "executor_name": "listThemesverifone",
        "executor_version": "v2",
        "executor_display_name": "List Themes",
        "executor_description": "List Themes",
        "executor_category": "Checkout",
        "executor_category_group": "Checkout",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/v2/theme",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "search",
                "value": "",
                "description": " RSQl Query is composed of one or more expressions, combined to each other with following logical operators:  A filter query in RSQL format to retrieve themes. The returned themes are limited to those that can be retrieved by the user.  Criteria\tDescription\tOperator Used name\tstring\t==, !=, =in=, =out=, =regex=, =contains= created_at\tdate\t==, !=, =in=, =out=, =gt=, =ge=, =lt=, =le= updated_at\tdate\t==, !=, =in=, =out=, =gt=, =ge=, =lt=, =le= entity_id\tstring\t==, !=, =in=, =out=, =regex= is_default\tboolean\t==, != Note:  Operator\tDescription ==\tequal !=\tnot equal =lt=\tless than =le=\tless than and equal to =gt=\tgreater than =ge=\tgreater than and equal to =regex=\tpattern matching =contains=\tcase insensitive substring matching =in=\tmultiple arguments search =out=\texclude ;\tLogical AND ,\tLogical OR Note: Parenthesis can be used to determine the precedence of the operator.  Example for list theme:  /v2/theme?search= name==ThemeName& order_by=ASC& order_criteria=name& page_size=1& page_number=2   /v2/theme?search= name==ThemeName& order_by=DESC& order_criteria=created_at& page_size=10& page_number=1",
                "req": false
            },
            {
                "key": "order_criteria",
                "value": "",
                "description": "Enum: \"name\" \"created_at\" \"updated_at\"",
                "req": false
            },
            {
                "key": "order_by",
                "value": "",
                "description": "The ordering sequence of the selected customers If not selected then Descending order is the default order.",
                "req": false
            },
            {
                "key": "page_number\t",
                "value": "",
                "description": "A filter query in RSQL format to retrieve customers based on page number. If not selected then a default pageNumber is 1.",
                "req": false
            },
            {
                "key": "page_size",
                "value": "",
                "description": "A filter query in RSQL format to retrieve customers based on page size. If not selected then a default pageSize is 50",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695330428138,
        "lastModifiedTime": 1695330428138,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "name": "string",
                        "logo": "string",
                        "entity_id": "string",
                        "base_font_family": "Roboto",
                        "text_color": "string",
                        "heading_color": "string",
                        "background_color": "string",
                        "panel_background_color": "string",
                        "primary_color": "string",
                        "primary_color_inverse": "string",
                        "primary_color_disabled": "string",
                        "primary_color_inverse_disabled": "string",
                        "error_color": "string",
                        "error_color_inverse": "string",
                        "input_border_radius": 0,
                        "input_border_width": 0,
                        "hide_verifone_seal": true,
                        "config": {
                            "is_default": false
                        },
                        "id": "string",
                        "created_at": "2019-08-24",
                        "updated_at": "2019-08-24"
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 115610,
        "executor_type": "THIRDPARTY",
        "executor_name": "createacheckout",
        "executor_version": "v2",
        "executor_display_name": "Create a checkout",
        "executor_description": "Create a checkout",
        "executor_category": "Checkout",
        "executor_category_group": "Checkout",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/v2/checkout",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "entity_id": "string",
                "currency_code": "AED",
                "amount": 9007199254740991,
                "customer": "string",
                "configurations": {
                    "card": {
                        "mode": "CARD_CAPTURE",
                        "card_capture_mode": "v2",
                        "cvv_required": false,
                        "input_overrides": {
                            "CVV": {
                                "validation_rule": "NONE",
                                "usage": "REQUIRED"
                            },
                            "CREDIT_TERM": {
                                "validation_rule": "NONE",
                                "usage": "REQUIRED"
                            },
                            "IDENTITY_CARD_NUMBER": {
                                "validation_rule": "NONE",
                                "usage": "REQUIRED"
                            }
                        }
                    },
                    "gpp2": {
                        "payment_contract_id": "string",
                        "shopper_interaction": "ECOMMERCE"
                    },
                    "paypal": {
                        "dynamic_descriptor": "string",
                        "capture_now": true,
                        "payment_contract_id": "string",
                        "description": "string",
                        "application_context": {
                            "landing_page": "BILLING",
                            "brand_name": "string",
                            "locale": "string"
                        }
                    },
                    "google_pay": {
                        "dynamic_descriptor": "string",
                        "capture_now": true,
                        "account_validation": false,
                        "card": {
                            "sca_compliance_level": "NONE",
                            "threed_secure": {
                                "account_age_indicator": "01",
                                "account_create_date": "2019-08-24",
                                "account_change_indicator": "01",
                                "account_change_date": "2019-08-24",
                                "account_pwd_change_indicator": "01",
                                "account_pwd_change_date": "2019-08-24",
                                "account_id": "string",
                                "account_purchases": 9999,
                                "acs_window_size": "01",
                                "add_card_attempts": 999,
                                "address_match": "Y",
                                "alternate_authentication_method": "01",
                                "alternate_authentication_date": "2019-08-24",
                                "alternate_authentication_data": "string",
                                "threeds_contract_id": "string",
                                "authentication_indicator": "01",
                                "category_code": 9999,
                                "challenge_indicator": "01",
                                "delivery_email": "string",
                                "delivery_time_frame": "01",
                                "enabled": true,
                                "fraud_activity": "01",
                                "gift_card_amount": 999999999999999,
                                "gift_card_currency_code": "str",
                                "gift_card_count": 99,
                                "installment": 2,
                                "message_category": "01",
                                "payment_use_case": "01",
                                "payment_account_indicator": "01",
                                "payment_account_age": "2019-08-24",
                                "pre_order_indicator": "01",
                                "pre_order_date": "2019-08-24",
                                "prior_authentication_data": "string",
                                "prior_authentication_method": "01",
                                "prior_authentication_time": "2019-08-24",
                                "prior_authentication_ref": "string",
                                "product_code": "PHY",
                                "recurring_end": "2019-08-24",
                                "recurring_frequency": 9999,
                                "reorder_indicator": "01",
                                "requestor_id": "string",
                                "requestor_name": "string",
                                "shipping_address_usage_indicator": "01",
                                "shipping_address_usage_date": "2019-08-24",
                                "shipping_method_indicator": "01",
                                "shipping_name_indicator": "01",
                                "total_items": "string",
                                "merchant_score": "string",
                                "transaction_count_day": 999,
                                "transaction_count_year": 999,
                                "transaction_mode": "M",
                                "version": "1.0.2"
                            },
                            "authorization_type": "FINAL_AUTH",
                            "shopper_interaction": "ECOMMERCE",
                            "payment_contract_id": "string",
                            "token_preference": {
                                "token_scope": "string",
                                "token_expiry_date": "2019-08-24",
                                "token_type": "REUSE"
                            }
                        }
                    },
                    "apple_pay": {
                        "dynamic_descriptor": "string",
                        "capture_now": true,
                        "account_validation": false,
                        "card": {
                            "sca_compliance_level": "NONE",
                            "threed_secure": {
                                "account_age_indicator": "01",
                                "account_create_date": "2019-08-24",
                                "account_change_indicator": "01",
                                "account_change_date": "2019-08-24",
                                "account_pwd_change_indicator": "01",
                                "account_pwd_change_date": "2019-08-24",
                                "account_id": "string",
                                "account_purchases": 9999,
                                "acs_window_size": "01",
                                "add_card_attempts": 999,
                                "address_match": "Y",
                                "alternate_authentication_method": "01",
                                "alternate_authentication_date": "2019-08-24",
                                "alternate_authentication_data": "string",
                                "threeds_contract_id": "string",
                                "authentication_indicator": "01",
                                "category_code": 9999,
                                "challenge_indicator": "01",
                                "delivery_email": "string",
                                "delivery_time_frame": "01",
                                "enabled": true,
                                "fraud_activity": "01",
                                "gift_card_amount": 999999999999999,
                                "gift_card_currency_code": "str",
                                "gift_card_count": 99,
                                "installment": 2,
                                "message_category": "01",
                                "payment_use_case": "01",
                                "payment_account_indicator": "01",
                                "payment_account_age": "2019-08-24",
                                "pre_order_indicator": "01",
                                "pre_order_date": "2019-08-24",
                                "prior_authentication_data": "string",
                                "prior_authentication_method": "01",
                                "prior_authentication_time": "2019-08-24",
                                "prior_authentication_ref": "string",
                                "product_code": "PHY",
                                "recurring_end": "2019-08-24",
                                "recurring_frequency": 9999,
                                "reorder_indicator": "01",
                                "requestor_id": "string",
                                "requestor_name": "string",
                                "shipping_address_usage_indicator": "01",
                                "shipping_address_usage_date": "2019-08-24",
                                "shipping_method_indicator": "01",
                                "shipping_name_indicator": "01",
                                "total_items": "string",
                                "merchant_score": "string",
                                "transaction_count_day": 999,
                                "transaction_count_year": 999,
                                "transaction_mode": "M",
                                "version": "1.0.2"
                            },
                            "authorization_type": "FINAL_AUTH",
                            "shopper_interaction": "ECOMMERCE",
                            "payment_contract_id": "string",
                            "token_preference": {
                                "token_scope": "string",
                                "token_expiry_date": "2019-08-24",
                                "token_type": "REUSE"
                            }
                        }
                    },
                    "klarna": {
                        "capture_now": true
                    },
                    "vipps": {
                        "payment_contract_id": "string",
                        "dynamic_descriptor": "string",
                        "capture_now": true,
                        "is_app": false,
                        "app_phone_number": "string",
                        "card": {
                            "sca_compliance_level": "NONE",
                            "threed_secure": {
                                "account_age_indicator": "01",
                                "account_create_date": "2019-08-24",
                                "account_change_indicator": "01",
                                "account_change_date": "2019-08-24",
                                "account_pwd_change_indicator": "01",
                                "account_pwd_change_date": "2019-08-24",
                                "account_id": "string",
                                "account_purchases": 9999,
                                "acs_window_size": "01",
                                "add_card_attempts": 999,
                                "address_match": "Y",
                                "alternate_authentication_method": "01",
                                "alternate_authentication_date": "2019-08-24",
                                "alternate_authentication_data": "string",
                                "threeds_contract_id": "string",
                                "authentication_indicator": "01",
                                "category_code": 9999,
                                "challenge_indicator": "01",
                                "delivery_email": "string",
                                "delivery_time_frame": "01",
                                "enabled": true,
                                "fraud_activity": "01",
                                "gift_card_amount": 999999999999999,
                                "gift_card_currency_code": "str",
                                "gift_card_count": 99,
                                "installment": 2,
                                "message_category": "01",
                                "payment_use_case": "01",
                                "payment_account_indicator": "01",
                                "payment_account_age": "2019-08-24",
                                "pre_order_indicator": "01",
                                "pre_order_date": "2019-08-24",
                                "prior_authentication_data": "string",
                                "prior_authentication_method": "01",
                                "prior_authentication_time": "2019-08-24",
                                "prior_authentication_ref": "string",
                                "product_code": "PHY",
                                "recurring_end": "2019-08-24",
                                "recurring_frequency": 9999,
                                "reorder_indicator": "01",
                                "requestor_id": "string",
                                "requestor_name": "string",
                                "shipping_address_usage_indicator": "01",
                                "shipping_address_usage_date": "2019-08-24",
                                "shipping_method_indicator": "01",
                                "shipping_name_indicator": "01",
                                "total_items": "string",
                                "merchant_score": "string",
                                "transaction_count_day": 999,
                                "transaction_count_year": 999,
                                "transaction_mode": "M",
                                "version": "1.0.2"
                            },
                            "authorization_type": "FINAL_AUTH"
                        }
                    },
                    "swish": {
                        "app_phone_number": "string",
                        "shopper_interaction": "ECOMMERCE"
                    },
                    "mobile_pay": {
                        "payment_contract_id": "string",
                        "dynamic_descriptor": "string",
                        "capture_now": true,
                        "card": {
                            "sca_compliance_level": "NONE",
                            "threed_secure": {
                                "account_age_indicator": "01",
                                "account_create_date": "2019-08-24",
                                "account_change_indicator": "01",
                                "account_change_date": "2019-08-24",
                                "account_pwd_change_indicator": "01",
                                "account_pwd_change_date": "2019-08-24",
                                "account_id": "string",
                                "account_purchases": 9999,
                                "acs_window_size": "01",
                                "add_card_attempts": 999,
                                "address_match": "Y",
                                "alternate_authentication_method": "01",
                                "alternate_authentication_date": "2019-08-24",
                                "alternate_authentication_data": "string",
                                "threeds_contract_id": "string",
                                "authentication_indicator": "01",
                                "category_code": 9999,
                                "challenge_indicator": "01",
                                "delivery_email": "string",
                                "delivery_time_frame": "01",
                                "enabled": true,
                                "fraud_activity": "01",
                                "gift_card_amount": 999999999999999,
                                "gift_card_currency_code": "str",
                                "gift_card_count": 99,
                                "installment": 2,
                                "message_category": "01",
                                "payment_use_case": "01",
                                "payment_account_indicator": "01",
                                "payment_account_age": "2019-08-24",
                                "pre_order_indicator": "01",
                                "pre_order_date": "2019-08-24",
                                "prior_authentication_data": "string",
                                "prior_authentication_method": "01",
                                "prior_authentication_time": "2019-08-24",
                                "prior_authentication_ref": "string",
                                "product_code": "PHY",
                                "recurring_end": "2019-08-24",
                                "recurring_frequency": 9999,
                                "reorder_indicator": "01",
                                "requestor_id": "string",
                                "requestor_name": "string",
                                "shipping_address_usage_indicator": "01",
                                "shipping_address_usage_date": "2019-08-24",
                                "shipping_method_indicator": "01",
                                "shipping_name_indicator": "01",
                                "total_items": "string",
                                "merchant_score": "string",
                                "transaction_count_day": 999,
                                "transaction_count_year": 999,
                                "transaction_mode": "M",
                                "version": "1.0.2"
                            },
                            "authorization_type": "FINAL_AUTH",
                            "encrypted_card": "string",
                            "card_encryption_key_alias": "string",
                            "return_url": "string"
                        }
                    }
                },
                "expiry_time": "2019-08-24",
                "merchant_reference": "string",
                "return_url": "string",
                "shop_url": "string",
                "i18n": {
                    "default_language": "en",
                    "fallback_language": "en",
                    "show_language_options": true
                },
                "interaction_type": "HPP",
                "notification_methods": {
                    "email": {
                        "email_address": "string"
                    },
                    "sms": {
                        "phone_number": "string"
                    }
                },
                "display_line_items": true,
                "line_items": [
                    {
                        "image_url": "string",
                        "item_url": "string",
                        "name": "string",
                        "quantity": 0,
                        "unit_price": 0,
                        "unit_price_tax": 0,
                        "tax_rate": 0,
                        "total_tax_amount": 0,
                        "total_amount": 0,
                        "sku": "string",
                        "description": "string",
                        "category": "DIGITAL_GOODS"
                    }
                ],
                "theme_id": "string",
                "receipt_type": "INVOICE",
                "sales_description": "string",
                "sales_channel": "ECOMMERCE",
                "customer_details": {
                    "billing": {
                        "address_1": "string",
                        "address_2": "string",
                        "address_3": "string",
                        "city": "string",
                        "country_code": "string",
                        "first_name": "string",
                        "last_name": "string",
                        "phone": "string",
                        "postal_code": "string",
                        "state": "string"
                    },
                    "company_name": "string",
                    "company_registration_number": "string",
                    "email_address": "string",
                    "entity_id": "string",
                    "phone_number": "string",
                    "shipping": {
                        "address_1": "string",
                        "address_2": "string",
                        "address_3": "string",
                        "city": "string",
                        "first_name": "string",
                        "last_name": "string",
                        "phone": "string",
                        "country_code": "string",
                        "postal_code": "string",
                        "state": "string"
                    },
                    "title": "string",
                    "work_phone": "string",
                    "tax": {
                        "identifier": "string"
                    }
                },
                "purchase_order_number": "string",
                "tax_indicator": "TAX_NOT_PROVIDED",
                "tax_amount": 0
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695328697739,
        "lastModifiedTime": 1695328697739,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string",
                    "url": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Timeout error: request was terminated by timeout to third party service",
                    "timestamp": "2019-08-24"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 115622,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateacheckout",
        "executor_version": "v2",
        "executor_display_name": "Update a checkout",
        "executor_description": "Update a checkout",
        "executor_category": "Checkout",
        "executor_category_group": "Checkout",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "{{host}}/v2/checkout/{checkoutId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "checkoutId",
                "value": "",
                "description": "Checkout ID"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "expiry_time": "2019-08-24"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695329894942,
        "lastModifiedTime": 1695329894942,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string",
                    "amount": 9007199254740991,
                    "entity_id": "string",
                    "currency_code": "AED",
                    "customer": "string",
                    "expiry_time": "2019-08-24",
                    "merchant_reference": "string",
                    "return_url": "string",
                    "configurations": {
                        "card": {
                            "dynamic_descriptor": "string",
                            "account_validation": false,
                            "capture_now": true,
                            "cvv_required": false,
                            "authorization_type": "PRE_AUTH",
                            "shopper_interaction": "ECOMMERCE",
                            "payment_contract_id": "string",
                            "token_preference": {
                                "token_scope": "string",
                                "token_expiry_date": "2019-08-24",
                                "token_type": "REUSE"
                            },
                            "threed_secure": {
                                "account_age_indicator": "01",
                                "account_create_date": "2019-08-24",
                                "account_change_indicator": "01",
                                "account_change_date": "2019-08-24",
                                "account_pwd_change_indicator": "01",
                                "account_pwd_change_date": "2019-08-24",
                                "account_id": "string",
                                "account_purchases": 9999,
                                "acs_window_size": "01",
                                "add_card_attempts": 999,
                                "address_match": "Y",
                                "alternate_authentication_method": "01",
                                "alternate_authentication_date": "2019-08-24",
                                "alternate_authentication_data": "string",
                                "threeds_contract_id": "string",
                                "authentication_indicator": "01",
                                "category_code": 9999,
                                "challenge_indicator": "01",
                                "delivery_email": "string",
                                "delivery_time_frame": "01",
                                "enabled": true,
                                "fraud_activity": "01",
                                "gift_card_amount": 999999999999999,
                                "gift_card_currency_code": "str",
                                "gift_card_count": 99,
                                "installment": 2,
                                "message_category": "01",
                                "payment_use_case": "01",
                                "payment_account_indicator": "01",
                                "payment_account_age": "2019-08-24",
                                "pre_order_indicator": "01",
                                "pre_order_date": "2019-08-24",
                                "prior_authentication_data": "string",
                                "prior_authentication_method": "01",
                                "prior_authentication_time": "2019-08-24",
                                "prior_authentication_ref": "string",
                                "product_code": "PHY",
                                "recurring_end": "2019-08-24",
                                "recurring_frequency": 9999,
                                "reorder_indicator": "01",
                                "requestor_id": "string",
                                "requestor_name": "string",
                                "shipping_address_usage_indicator": "01",
                                "shipping_address_usage_date": "2019-08-24",
                                "shipping_method_indicator": "01",
                                "shipping_name_indicator": "01",
                                "total_items": "string",
                                "merchant_score": "string",
                                "transaction_count_day": 999,
                                "transaction_count_year": 999,
                                "transaction_mode": "M",
                                "version": "1.0.2"
                            },
                            "mode": "CARD_CAPTURE",
                            "card_capture_mode": "v2",
                            "card_token": "string",
                            "card_last_four": "stri",
                            "card_expiry_year": "string",
                            "card_expiry_month": "string",
                            "card_brand": [
                                "string"
                            ],
                            "card_encryption_key_alias": "string",
                            "threeds_authentication_id": "string",
                            "token_details": {
                                "reuse_token": "string",
                                "analytics_token": "string"
                            },
                            "credit_term": "DEBIT",
                            "credit_term_used": "DEBIT",
                            "instalment": {
                                "max_number_of_instalments": 1,
                                "down_payment_amount": 9007199254740991
                            },
                            "input_overrides": {
                                "CVV": {
                                    "validation_rule": "NONE",
                                    "usage": "REQUIRED"
                                },
                                "CREDIT_TERM": {
                                    "validation_rule": "NONE",
                                    "usage": "REQUIRED"
                                },
                                "IDENTITY_CARD_NUMBER": {
                                    "validation_rule": "NONE",
                                    "usage": "REQUIRED"
                                }
                            },
                            "instalment_used": {
                                "instalment_amount": 9007199254740991,
                                "down_payment_amount": 9007199254740991,
                                "number_of_instalments": 0
                            },
                            "stored_credential": {
                                "stored_credential_type": "SIGNUP",
                                "first_payment": true,
                                "consent_text": "string",
                                "consent_text_dynamic_values": [
                                    "string"
                                ],
                                "processing_model_details": {
                                    "processing_model": "RECURRING",
                                    "total_payment_number": 9007199254740991,
                                    "total_payment_amount": 9007199254740991,
                                    "first_payment_amount": 9007199254740991,
                                    "payment_frequency": {
                                        "time_unit": "DAY",
                                        "value": 0
                                    },
                                    "merchant_signup_code": "string"
                                },
                                "reference": "string",
                                "scheme_reference": "string"
                            },
                            "reuse_token": "string",
                            "encrypted_card": "string",
                            "additional_business_data": {
                                "addendum1": "string",
                                "addendum2": "string"
                            }
                        },
                        "gpp2": {
                            "payment_contract_id": "string",
                            "shopper_interaction": "ECOMMERCE",
                            "card_encryption_key_alias": "string"
                        },
                        "paypal": {
                            "dynamic_descriptor": "string",
                            "capture_now": true,
                            "payment_contract_id": "string",
                            "description": "string",
                            "application_context": {
                                "landing_page": "BILLING",
                                "brand_name": "string",
                                "locale": "string"
                            }
                        },
                        "google_pay": {
                            "dynamic_descriptor": "string",
                            "capture_now": true,
                            "account_validation": false,
                            "card": {
                                "sca_compliance_level": "NONE",
                                "threed_secure": {
                                    "account_age_indicator": "01",
                                    "account_create_date": "2019-08-24",
                                    "account_change_indicator": "01",
                                    "account_change_date": "2019-08-24",
                                    "account_pwd_change_indicator": "01",
                                    "account_pwd_change_date": "2019-08-24",
                                    "account_id": "string",
                                    "account_purchases": 9999,
                                    "acs_window_size": "01",
                                    "add_card_attempts": 999,
                                    "address_match": "Y",
                                    "alternate_authentication_method": "01",
                                    "alternate_authentication_date": "2019-08-24",
                                    "alternate_authentication_data": "string",
                                    "threeds_contract_id": "string",
                                    "authentication_indicator": "01",
                                    "category_code": 9999,
                                    "challenge_indicator": "01",
                                    "delivery_email": "string",
                                    "delivery_time_frame": "01",
                                    "enabled": true,
                                    "fraud_activity": "01",
                                    "gift_card_amount": 999999999999999,
                                    "gift_card_currency_code": "str",
                                    "gift_card_count": 99,
                                    "installment": 2,
                                    "message_category": "01",
                                    "payment_use_case": "01",
                                    "payment_account_indicator": "01",
                                    "payment_account_age": "2019-08-24",
                                    "pre_order_indicator": "01",
                                    "pre_order_date": "2019-08-24",
                                    "prior_authentication_data": "string",
                                    "prior_authentication_method": "01",
                                    "prior_authentication_time": "2019-08-24",
                                    "prior_authentication_ref": "string",
                                    "product_code": "PHY",
                                    "recurring_end": "2019-08-24",
                                    "recurring_frequency": 9999,
                                    "reorder_indicator": "01",
                                    "requestor_id": "string",
                                    "requestor_name": "string",
                                    "shipping_address_usage_indicator": "01",
                                    "shipping_address_usage_date": "2019-08-24",
                                    "shipping_method_indicator": "01",
                                    "shipping_name_indicator": "01",
                                    "total_items": "string",
                                    "merchant_score": "string",
                                    "transaction_count_day": 999,
                                    "transaction_count_year": 999,
                                    "transaction_mode": "M",
                                    "version": "1.0.2"
                                },
                                "authorization_type": "FINAL_AUTH",
                                "shopper_interaction": "ECOMMERCE",
                                "payment_contract_id": "string",
                                "token_preference": {
                                    "token_scope": "string",
                                    "token_expiry_date": "2019-08-24",
                                    "token_type": "REUSE"
                                },
                                "card_encryption_key_alias": "string",
                                "threeds_authentication_id": "string",
                                "token_details": {
                                    "reuse_token": "string",
                                    "analytics_token": "string"
                                }
                            }
                        },
                        "apple_pay": {
                            "dynamic_descriptor": "string",
                            "capture_now": true,
                            "account_validation": false,
                            "card": {
                                "sca_compliance_level": "NONE",
                                "threed_secure": {
                                    "account_age_indicator": "01",
                                    "account_create_date": "2019-08-24",
                                    "account_change_indicator": "01",
                                    "account_change_date": "2019-08-24",
                                    "account_pwd_change_indicator": "01",
                                    "account_pwd_change_date": "2019-08-24",
                                    "account_id": "string",
                                    "account_purchases": 9999,
                                    "acs_window_size": "01",
                                    "add_card_attempts": 999,
                                    "address_match": "Y",
                                    "alternate_authentication_method": "01",
                                    "alternate_authentication_date": "2019-08-24",
                                    "alternate_authentication_data": "string",
                                    "threeds_contract_id": "string",
                                    "authentication_indicator": "01",
                                    "category_code": 9999,
                                    "challenge_indicator": "01",
                                    "delivery_email": "string",
                                    "delivery_time_frame": "01",
                                    "enabled": true,
                                    "fraud_activity": "01",
                                    "gift_card_amount": 999999999999999,
                                    "gift_card_currency_code": "str",
                                    "gift_card_count": 99,
                                    "installment": 2,
                                    "message_category": "01",
                                    "payment_use_case": "01",
                                    "payment_account_indicator": "01",
                                    "payment_account_age": "2019-08-24",
                                    "pre_order_indicator": "01",
                                    "pre_order_date": "2019-08-24",
                                    "prior_authentication_data": "string",
                                    "prior_authentication_method": "01",
                                    "prior_authentication_time": "2019-08-24",
                                    "prior_authentication_ref": "string",
                                    "product_code": "PHY",
                                    "recurring_end": "2019-08-24",
                                    "recurring_frequency": 9999,
                                    "reorder_indicator": "01",
                                    "requestor_id": "string",
                                    "requestor_name": "string",
                                    "shipping_address_usage_indicator": "01",
                                    "shipping_address_usage_date": "2019-08-24",
                                    "shipping_method_indicator": "01",
                                    "shipping_name_indicator": "01",
                                    "total_items": "string",
                                    "merchant_score": "string",
                                    "transaction_count_day": 999,
                                    "transaction_count_year": 999,
                                    "transaction_mode": "M",
                                    "version": "1.0.2"
                                },
                                "authorization_type": "FINAL_AUTH",
                                "shopper_interaction": "ECOMMERCE",
                                "payment_contract_id": "string",
                                "token_preference": {
                                    "token_scope": "string",
                                    "token_expiry_date": "2019-08-24",
                                    "token_type": "REUSE"
                                }
                            }
                        },
                        "vipps": {
                            "payment_contract_id": "string",
                            "dynamic_descriptor": "string",
                            "capture_now": true,
                            "is_app": false,
                            "app_phone_number": "string",
                            "card": {
                                "sca_compliance_level": "NONE",
                                "threed_secure": {
                                    "account_age_indicator": "01",
                                    "account_create_date": "2019-08-24",
                                    "account_change_indicator": "01",
                                    "account_change_date": "2019-08-24",
                                    "account_pwd_change_indicator": "01",
                                    "account_pwd_change_date": "2019-08-24",
                                    "account_id": "string",
                                    "account_purchases": 9999,
                                    "acs_window_size": "01",
                                    "add_card_attempts": 999,
                                    "address_match": "Y",
                                    "alternate_authentication_method": "01",
                                    "alternate_authentication_date": "2019-08-24",
                                    "alternate_authentication_data": "string",
                                    "threeds_contract_id": "string",
                                    "authentication_indicator": "01",
                                    "category_code": 9999,
                                    "challenge_indicator": "01",
                                    "delivery_email": "string",
                                    "delivery_time_frame": "01",
                                    "enabled": true,
                                    "fraud_activity": "01",
                                    "gift_card_amount": 999999999999999,
                                    "gift_card_currency_code": "str",
                                    "gift_card_count": 99,
                                    "installment": 2,
                                    "message_category": "01",
                                    "payment_use_case": "01",
                                    "payment_account_indicator": "01",
                                    "payment_account_age": "2019-08-24",
                                    "pre_order_indicator": "01",
                                    "pre_order_date": "2019-08-24",
                                    "prior_authentication_data": "string",
                                    "prior_authentication_method": "01",
                                    "prior_authentication_time": "2019-08-24",
                                    "prior_authentication_ref": "string",
                                    "product_code": "PHY",
                                    "recurring_end": "2019-08-24",
                                    "recurring_frequency": 9999,
                                    "reorder_indicator": "01",
                                    "requestor_id": "string",
                                    "requestor_name": "string",
                                    "shipping_address_usage_indicator": "01",
                                    "shipping_address_usage_date": "2019-08-24",
                                    "shipping_method_indicator": "01",
                                    "shipping_name_indicator": "01",
                                    "total_items": "string",
                                    "merchant_score": "string",
                                    "transaction_count_day": 999,
                                    "transaction_count_year": 999,
                                    "transaction_mode": "M",
                                    "version": "1.0.2"
                                },
                                "authorization_type": "FINAL_AUTH",
                                "encrypted_card": "string",
                                "card_encryption_key_alias": "string",
                                "return_url": "string"
                            }
                        },
                        "klarna": {
                            "capture_now": true
                        },
                        "swish": {
                            "app_phone_number": "string",
                            "shopper_interaction": "ECOMMERCE"
                        },
                        "mobile_pay": {
                            "dynamic_descriptor": "string",
                            "capture_now": true,
                            "payment_contract_id": "string",
                            "card": {
                                "sca_compliance_level": "NONE",
                                "threed_secure": {
                                    "account_age_indicator": "01",
                                    "account_create_date": "2019-08-24",
                                    "account_change_indicator": "01",
                                    "account_change_date": "2019-08-24",
                                    "account_pwd_change_indicator": "01",
                                    "account_pwd_change_date": "2019-08-24",
                                    "account_id": "string",
                                    "account_purchases": 9999,
                                    "acs_window_size": "01",
                                    "add_card_attempts": 999,
                                    "address_match": "Y",
                                    "alternate_authentication_method": "01",
                                    "alternate_authentication_date": "2019-08-24",
                                    "alternate_authentication_data": "string",
                                    "threeds_contract_id": "string",
                                    "authentication_indicator": "01",
                                    "category_code": 9999,
                                    "challenge_indicator": "01",
                                    "delivery_email": "string",
                                    "delivery_time_frame": "01",
                                    "enabled": true,
                                    "fraud_activity": "01",
                                    "gift_card_amount": 999999999999999,
                                    "gift_card_currency_code": "str",
                                    "gift_card_count": 99,
                                    "installment": 2,
                                    "message_category": "01",
                                    "payment_use_case": "01",
                                    "payment_account_indicator": "01",
                                    "payment_account_age": "2019-08-24",
                                    "pre_order_indicator": "01",
                                    "pre_order_date": "2019-08-24",
                                    "prior_authentication_data": "string",
                                    "prior_authentication_method": "01",
                                    "prior_authentication_time": "2019-08-24",
                                    "prior_authentication_ref": "string",
                                    "product_code": "PHY",
                                    "recurring_end": "2019-08-24",
                                    "recurring_frequency": 9999,
                                    "reorder_indicator": "01",
                                    "requestor_id": "string",
                                    "requestor_name": "string",
                                    "shipping_address_usage_indicator": "01",
                                    "shipping_address_usage_date": "2019-08-24",
                                    "shipping_method_indicator": "01",
                                    "shipping_name_indicator": "01",
                                    "total_items": "string",
                                    "merchant_score": "string",
                                    "transaction_count_day": 999,
                                    "transaction_count_year": 999,
                                    "transaction_mode": "M",
                                    "version": "1.0.2"
                                },
                                "authorization_type": "PRE_AUTH",
                                "shopper_interaction": "ECOMMERCE",
                                "payment_contract_id": "string",
                                "token_preference": {
                                    "token_scope": "string",
                                    "token_expiry_date": "2019-08-24",
                                    "token_type": "REUSE"
                                },
                                "card_encryption_key_alias": "string",
                                "threeds_authentication_id": "string",
                                "token_details": {
                                    "reuse_token": "string",
                                    "analytics_token": "string"
                                },
                                "encrypted_card": "string",
                                "return_url": "string"
                            }
                        }
                    },
                    "created_at": "2019-08-24",
                    "updated_at": "2019-08-24",
                    "transaction_id": "string",
                    "customer_ip": "string",
                    "user_agent": "string",
                    "i18n": {
                        "default_language": "string",
                        "fallback_language": "string",
                        "show_language_options": true
                    },
                    "events": [
                        {
                            "type": "string",
                            "id": "string",
                            "timestamp": "2019-08-24",
                            "details": {}
                        }
                    ],
                    "status": "string",
                    "notification_methods": {
                        "email": {
                            "email_address": "string"
                        },
                        "sms": {
                            "phone_number": "string"
                        }
                    },
                    "display_line_items": true,
                    "line_items": [
                        {
                            "image_url": "string",
                            "item_url": "string",
                            "image_id": "string",
                            "name": "string",
                            "quantity": 0,
                            "unit_price": 0,
                            "unit_price_tax": 0,
                            "tax_rate": 0,
                            "total_tax_amount": 0,
                            "total_amount": 0,
                            "sku": "string",
                            "description": "string",
                            "category": "DIGITAL_GOODS"
                        }
                    ],
                    "interaction_type": "HPP",
                    "payment_method_used": "card",
                    "url": "string",
                    "theme_id": "string",
                    "receipt_type": "INVOICE",
                    "sales_description": "string",
                    "created_by": "string",
                    "fraud_protection_data": {
                        "fraud_protection_token": "string",
                        "client_side_parameters": {
                            "org_id": "string",
                            "web_session_id": "string"
                        }
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 115629,
        "executor_type": "THIRDPARTY",
        "executor_name": "previewTheme",
        "executor_version": "v2",
        "executor_display_name": "Preview Theme",
        "executor_description": "Preview Theme",
        "executor_category": "Checkout",
        "executor_category_group": "Checkout",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/v2/theme/preview",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "theme_id": "string",
                "logo": "string",
                "base_font_family": "Roboto",
                "text_color": "string",
                "heading_color": "string",
                "background_color": "string",
                "panel_background_color": "string",
                "primary_color": "string",
                "primary_color_inverse": "string",
                "primary_color_disabled": "string",
                "primary_color_inverse_disabled": "string",
                "error_color": "string",
                "error_color_inverse": "string",
                "input_border_radius": 0,
                "input_border_width": 0,
                "hide_verifone_seal": false,
                "response_image_size": {
                    "width": "string",
                    "height": "string"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695330570583,
        "lastModifiedTime": 1695330570583,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "image": "string",
                    "response_image_size": {
                        "width": "string",
                        "height": "string"
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 115642,
        "executor_type": "THIRDPARTY",
        "executor_name": "uploadimage",
        "executor_version": "v2",
        "executor_display_name": "Upload image",
        "executor_description": "Upload image",
        "executor_category": "Checkout",
        "executor_category_group": "Checkout",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/v2/image",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "search",
                "value": "",
                "description": " RSQl Query is composed of one or more expressions, combined to each other with following logical operators:  A filter query in RSQL format to retrieve themes. The returned themes are limited to those that can be retrieved by the user.  Criteria\tDescription\tOperator Used name\tstring\t==, !=, =in=, =out=, =regex=, =contains= created_at\tdate\t==, !=, =in=, =out=, =gt=, =ge=, =lt=, =le= updated_at\tdate\t==, !=, =in=, =out=, =gt=, =ge=, =lt=, =le= entity_id\tstring\t==, !=, =in=, =out=, =regex= is_default\tboolean\t==, != Note:  Operator\tDescription ==\tequal !=\tnot equal =lt=\tless than =le=\tless than and equal to =gt=\tgreater than =ge=\tgreater than and equal to =regex=\tpattern matching =contains=\tcase insensitive substring matching =in=\tmultiple arguments search =out=\texclude ;\tLogical AND ,\tLogical OR Note: Parenthesis can be used to determine the precedence of the operator.  Example for count theme:  /v2/theme/count?search= entity_id==a6b45428-0296-4394-8ddd-0b50b5b20aa9",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "image": "string",
                "entity_id": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695331288471,
        "lastModifiedTime": 1695331288471,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string",
                    "checksum": 0,
                    "created_at": "2019-08-24",
                    "entity_id": "string"
                }
            },
            {
                "statusCode": 413,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Payload content length greater than maximum allowed: 512000",
                    "timestamp": "2019-08-24"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 115636,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteathemebyid",
        "executor_version": "v2",
        "executor_display_name": "Delete a theme by id",
        "executor_description": "Delete a theme by id",
        "executor_category": "Checkout",
        "executor_category_group": "Checkout",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "{{host}}/v2/theme/{themeId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "themeId",
                "value": "",
                "description": "Parameter that was created within the create theme API call that applies the customizations upon the checkout interface. Read Theming for details."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695330999982,
        "lastModifiedTime": 1695330999982,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "no content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 115627,
        "executor_type": "THIRDPARTY",
        "executor_name": "createTheme",
        "executor_version": "v2",
        "executor_display_name": "Create Theme",
        "executor_description": "Create Theme",
        "executor_category": "Checkout",
        "executor_category_group": "Checkout",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/v2/theme",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "logo": "string",
                "entity_id": "string",
                "base_font_family": "Roboto",
                "text_color": "string",
                "heading_color": "string",
                "background_color": "string",
                "panel_background_color": "string",
                "primary_color": "string",
                "primary_color_inverse": "string",
                "primary_color_disabled": "string",
                "primary_color_inverse_disabled": "string",
                "error_color": "string",
                "error_color_inverse": "string",
                "input_border_radius": 0,
                "input_border_width": 0,
                "hide_verifone_seal": false,
                "config": {
                    "is_default": false
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695330497264,
        "lastModifiedTime": 1695330497264,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "logo": "string",
                    "entity_id": "string",
                    "base_font_family": "Roboto",
                    "text_color": "string",
                    "heading_color": "string",
                    "background_color": "string",
                    "panel_background_color": "string",
                    "primary_color": "string",
                    "primary_color_inverse": "string",
                    "primary_color_disabled": "string",
                    "primary_color_inverse_disabled": "string",
                    "error_color": "string",
                    "error_color_inverse": "string",
                    "input_border_radius": 0,
                    "input_border_width": 0,
                    "hide_verifone_seal": true,
                    "config": {
                        "is_default": false
                    },
                    "id": "string",
                    "created_at": "2019-08-24",
                    "updated_at": "2019-08-24"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 115624,
        "executor_type": "THIRDPARTY",
        "executor_name": "countCheckouts",
        "executor_version": "v2",
        "executor_display_name": "Count Checkouts",
        "executor_description": "Count Checkouts",
        "executor_category": "Checkout",
        "executor_category_group": "Checkout",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/v2/checkout/count",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "search",
                "value": "",
                "description": "RSQl Query is composed of one or more expressions, combined to each other with following logical operators:  A filter query in RSQL format to retrieve themes. The returned themes are limited to those that can be retrieved by the user.  Criteria\tDescription\tOperator Used amount\tnumber\t==, !=, =in=, =out=, =gt=, =ge=, =lt=, =le= created_at\tdate\t==, !=, =in=, =out=, =gt=, =ge=, =lt=, =le= currency_code\tstring\t==, !=, =in=, =out=, =regex= customer\tstring\t==, !=, =in=, =out=, =regex= id\tstring\t==, !=, =in=, =out=, =regex= merchant_reference\tstring\t==, !=, =in=, =out=, =regex= entity_id\tstring\t==, !=, =in=, =out=, =regex= updated_at\tdate\t==, !=, =in=, =out=, =gt=, =ge=, =lt=, =le= expiry_time\tdate\t==, !=, =in=, =out=, =gt=, =ge=, =lt=, =le= status\tstring\t==, !=, =in=, =out=, =regex= notification_methods.email.email_address\tstring\t==, !=, =in=, =out=, =regex= configurations.card.token_details.reuse_token\tstring\t==, !=, =in=, =out=, =regex= payment_method_used\tstring\t==, !=, =in=, =out=, =regex= interaction_type\tstring\t==, !=, =in=, =out=, =regex= theme_id\tstring\t==, !=, =in=, =out=, =regex= transaction_id\tstring\t==, !=, =in=, =out=, =regex= created_by\tstring\t==, !=, =in=, =out=, =regex= Note:  Operator\tDescription ==\tequal !=\tnot equal =lt=\tless than =le=\tless than and equal to =gt=\tgreater than =ge=\tgreater than and equal to =regex=\tpattern matching =in=\tmultiple arguments search =out=\texclude ;\tLogical AND ,\tLogical OR Note: Parenthesis can be used to determine the precedence of the operator.  Example for count checkout:  /v2/checkout/count?search= entity_id==a6b45428-0296-4394-8ddd-0b50b5b20aa9& amount==324   /v2/checkout/count?search= entity_id==a6b45428-0296-4394-8ddd-0b50b5b20aa9& status==COMPLETED   /v2/checkout/count?search= entity_id==a6b45428-0296-4394-8ddd-0b50b5b20aa9& amount=in=(100,200)",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695330095641,
        "lastModifiedTime": 1695330095641,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "count": 0
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 115631,
        "executor_type": "THIRDPARTY",
        "executor_name": "getathemebyid",
        "executor_version": "v2",
        "executor_display_name": "Get a theme by id",
        "executor_description": "Get a theme by id",
        "executor_category": "Checkout",
        "executor_category_group": "Checkout",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/v2/theme/{themeId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "themeId",
                "value": "",
                "description": "Parameter that was created within the create theme API call that applies the customizations upon the checkout interface. Read Theming for details."
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695330680092,
        "lastModifiedTime": 1695330680092,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "logo": "string",
                    "entity_id": "string",
                    "base_font_family": "Roboto",
                    "text_color": "string",
                    "heading_color": "string",
                    "background_color": "string",
                    "panel_background_color": "string",
                    "primary_color": "string",
                    "primary_color_inverse": "string",
                    "primary_color_disabled": "string",
                    "primary_color_inverse_disabled": "string",
                    "error_color": "string",
                    "error_color_inverse": "string",
                    "input_border_radius": 0,
                    "input_border_width": 0,
                    "hide_verifone_seal": true,
                    "config": {
                        "is_default": false
                    },
                    "id": "string",
                    "created_at": "2019-08-24",
                    "updated_at": "2019-08-24"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 115640,
        "executor_type": "THIRDPARTY",
        "executor_name": "countThemes",
        "executor_version": "v2",
        "executor_display_name": "Count Themes",
        "executor_description": "Count Themes",
        "executor_category": "Checkout",
        "executor_category_group": "Checkout",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/v2/theme/count",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "search",
                "value": "",
                "description": " RSQl Query is composed of one or more expressions, combined to each other with following logical operators:  A filter query in RSQL format to retrieve themes. The returned themes are limited to those that can be retrieved by the user.  Criteria\tDescription\tOperator Used name\tstring\t==, !=, =in=, =out=, =regex=, =contains= created_at\tdate\t==, !=, =in=, =out=, =gt=, =ge=, =lt=, =le= updated_at\tdate\t==, !=, =in=, =out=, =gt=, =ge=, =lt=, =le= entity_id\tstring\t==, !=, =in=, =out=, =regex= is_default\tboolean\t==, != Note:  Operator\tDescription ==\tequal !=\tnot equal =lt=\tless than =le=\tless than and equal to =gt=\tgreater than =ge=\tgreater than and equal to =regex=\tpattern matching =contains=\tcase insensitive substring matching =in=\tmultiple arguments search =out=\texclude ;\tLogical AND ,\tLogical OR Note: Parenthesis can be used to determine the precedence of the operator.  Example for count theme:  /v2/theme/count?search= entity_id==a6b45428-0296-4394-8ddd-0b50b5b20aa9",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695331202534,
        "lastModifiedTime": 1695331202534,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "count": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 115646,
        "executor_type": "THIRDPARTY",
        "executor_name": "startpaymentsessionforApplePaywallettransactions",
        "executor_version": "v2",
        "executor_display_name": "Start payment session for Apple Pay wallet transactions",
        "executor_description": "Start payment session for Apple Pay wallet transactions",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/api/v2/apple-pay/validation",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "validation_url": "string",
                "domain": "string",
                "payment_provider_contract": "30b8bec8-5042-4e67-939c-5453fbe41711"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1695331723066,
        "lastModifiedTime": 1695332331538,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 115651,
        "executor_type": "THIRDPARTY",
        "executor_name": "initiateanOpOnlinepayment",
        "executor_version": "v2",
        "executor_display_name": "Initiate an Op Online payment",
        "executor_description": "Initiate an Op Online payment",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/api/v2/transactions/op-online-payment",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "amount": 0,
                "merchant_reference": "7a1db7a8-6f24-4bc5-a51b-cef33fc05140",
                "user_agent": "string",
                "currency_code": "EUR",
                "payment_provider_contract": "30b8bec8-5042-4e67-939c-5453fbe41711",
                "bank_id": "string",
                "dynamic_descriptor": "string",
                "line_items": [
                    {
                        "image_url": "string",
                        "name": "string",
                        "quantity": 0,
                        "unit_price": 0,
                        "unit_price_tax": 0,
                        "tax_rate": 15.1,
                        "discount_amount": 0,
                        "total_tax_amount": 0,
                        "total_amount": 0,
                        "sku": "string",
                        "description": "string",
                        "category": "DIGITAL_GOODS"
                    }
                ],
                "language": "string",
                "message_to_customer": "string",
                "return_url": "string",
                "cancel_url": "string",
                "reject_url": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695332404514,
        "lastModifiedTime": 1695332404514,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "amount": 0,
                    "created_at": "2019-08-24T14:15:22Z",
                    "customer": "string",
                    "merchant_reference": "7a1db7a8-6f24-4bc5-a51b-cef33fc05140",
                    "status": "AUTHORIZED",
                    "status_reason": "string",
                    "geo_location": [
                        "52.370216",
                        "4.895168"
                    ],
                    "city": "West Roxbury",
                    "country_code": "US",
                    "id": "string",
                    "payment_url": "string",
                    "processor": "OPONLINEPAYMENT",
                    "payment_product": "OPONLINEPAYMENT",
                    "payment_product_type": "Amex"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 115644,
        "executor_type": "THIRDPARTY",
        "executor_name": "initiateapayment",
        "executor_version": "v2",
        "executor_display_name": "Initiate a payment",
        "executor_description": "Initiate a payment",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/api/v2/transactions/card",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "payment_provider_contract": "30b8bec8-5042-4e67-939c-5453fbe41711",
                "amount": 0,
                "auth_type": "PRE_AUTH",
                "capture_now": false,
                "fraud_protection_contract": "30b8bec8-5042-4e67-939c-5453fbe41711",
                "fraud_protection_token": "N2ExZGI3YTgtNmYyNC00YmM1LWE1MWItY2VmMzNmYzA1MTQwLjQ1bmIzNDViMzRiazUzMi41NjQzNjM2NQ==",
                "customer": "0a57b387-2ba7-4f65-be2f-e176bb49d2ce",
                "customer_ip": "127.0.0.1",
                "dynamic_descriptor": "string",
                "merchant_reference": "7a1db7a8-6f24-4bc5-a51b-cef33fc05140",
                "threed_authentication": {
                    "eci_flag": "02",
                    "enrolled": "Y",
                    "cavv": "stringstringstringstringstri",
                    "cavv_algorithm": "string",
                    "pares_status": "A",
                    "xid": "string",
                    "threeds_version": "1.0.2",
                    "ds_transaction_id": "string",
                    "signature_verification": "Y",
                    "verification": [
                        "DENIED"
                    ],
                    "error_desc": "string",
                    "error_no": "string",
                    "additional_data": {
                        "total_items": 99,
                        "device_channel": "SDK",
                        "status_reason": "string",
                        "challenge_indicator": "01",
                        "challenge_cancel": "01",
                        "acs_url": "string",
                        "acs_operator_id": "string",
                        "network_score": "20",
                        "reason_code": "string",
                        "reason_desc": "string"
                    }
                },
                "stored_credential": {
                    "stored_credential_type": "SIGNUP",
                    "processing_model_details": {
                        "total_payment_number": 0,
                        "total_payment_amount": 0,
                        "first_payment_amount": 0,
                        "payment_frequency": {
                            "time_unit": "DAY",
                            "value": 0
                        },
                        "processing_model": "UNSCHEDULED_CREDENTIAL_ON_FILE",
                        "merchant_signup_code": "string",
                        "current_payment_number": 0,
                        "amount_fixed": false
                    },
                    "first_payment": true,
                    "scheme_reference": "string"
                },
                "shipping_information": {
                    "address": "3732  Metz Lane",
                    "city": "West Roxbury",
                    "country": "US",
                    "postal_code": "1114",
                    "email": "user@example.com",
                    "first_name": "Thelma",
                    "last_name": "Tatro",
                    "phone": 8577532706,
                    "state": "MA"
                },
                "shopper_interaction": "ECOMMERCE",
                "user_agent": "string",
                "sales_description": "string",
                "sca_exemption": "1",
                "currency_code": "AED",
                "card_brand": "string",
                "brand_choice": "MERCHANT",
                "credit_term": "STANDARD",
                "instalment": {
                    "down_payment_amount": 0,
                    "number_of_instalments": 0,
                    "instalment_amount": 0
                },
                "refusal_reason": "ACQUIRER_COMMS_FAILURE",
                "card": "string",
                "purchase_order_number": "string",
                "tax_indicator": "TAX_PROVIDED",
                "detailed_amount": {
                    "tax_amount": "20.50"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1695331461287,
        "lastModifiedTime": 1695332115061,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "76944d4b-89e6-48d2-ac04-675383c3eedf",
                    "payment_provider_contract": "30b8bec8-5042-4e67-939c-5453fbe41711",
                    "amount": 0,
                    "blocked": true,
                    "created_at": "2019-08-24T14:15:22Z",
                    "customer": "string",
                    "merchant_reference": "string",
                    "payment_product": "string",
                    "payment_product_type": "string",
                    "processor_reference": "string",
                    "processor_details": {},
                    "status": "AUTHORIZED",
                    "status_reason": "string",
                    "shipping_information": {
                        "address": "3732  Metz Lane",
                        "city": "West Roxbury",
                        "country": "US",
                        "postal_code": "1114",
                        "email": "user@example.com",
                        "first_name": "Thelma",
                        "last_name": "Tatro",
                        "phone": 8577532706,
                        "state": "MA"
                    },
                    "arn": "string",
                    "authorization_code": "5B1D4C",
                    "avs_result": "A",
                    "card": "string",
                    "created_by": "string",
                    "cvv_present": true,
                    "cvv_result": "1",
                    "cavv_result": "99",
                    "stored_credential": {
                        "reference": "string",
                        "stored_credential_type": "string",
                        "scheme_reference": "string",
                        "processing_model": "UNSCHEDULED_CREDENTIAL_ON_FILE",
                        "details": "UNSCHEDULED_CREDENTIAL_ON_FILE"
                    },
                    "details": {
                        "auto_capture": true,
                        "mid": "363162200000049"
                    },
                    "reason_code": "stri",
                    "rrn": "200211654321",
                    "shopper_interaction": "ECOMMERCE",
                    "stan": "string",
                    "threed_authentication": {
                        "eci_flag": "02",
                        "enrolled": "Y",
                        "cavv": "stringstringstringstringstri",
                        "cavv_algorithm": "string",
                        "pares_status": "A",
                        "xid": "string",
                        "threeds_version": "1.0.2",
                        "ds_transaction_id": "string"
                    },
                    "reversal_status": "NONE",
                    "geo_location": [
                        "52.370216",
                        "4.895168"
                    ],
                    "city": "West Roxbury",
                    "country_code": "US",
                    "additional_data": {
                        "acquirer_response_code": "stri",
                        "initiator_trace_id": "000001"
                    },
                    "token_details": {
                        "reuse_token": "stringstringstri",
                        "reuse_token_type": "CHASE",
                        "analytics_token": "string",
                        "token_expiry_date": "2019-08-24",
                        "token_scope": "0e48425a-f1bc-431a-b7d8-f866de8ba276",
                        "token_status": "DELETED",
                        "created_at": "2019-08-24",
                        "updated_at": "2019-08-24",
                        "variant": "NEW_WORLD",
                        "type": "CREDIT",
                        "issuer_name": "HSBC",
                        "issuer_country": "ZZZ",
                        "brand": "VISA",
                        "expiry_year": 2021,
                        "expiry_month": 12,
                        "card_holder_name": "MR J HOLDER",
                        "last_four": "3127",
                        "bin": "492912",
                        "currency_code": "AED"
                    },
                    "fraud_analysis_results": {
                        "score": 0.21,
                        "reasons": [
                            "string"
                        ]
                    },
                    "promo_code": "string",
                    "purchase_order_number": "string",
                    "issuer_instalment_result": {
                        "instalment_program": "MCINST",
                        "payment_option": "FULL",
                        "payment_plan_option": [
                            {
                                "number_of_instalments": 1,
                                "first_instalment_amount": 0,
                                "instalment_amount": 0,
                                "interest_rate": 0,
                                "annual_percentage_rate": 0,
                                "handling_fee": 0,
                                "total_amount_with_cost": 0
                            }
                        ],
                        "number_of_instalments": 0,
                        "min_number_of_instalments": 0,
                        "max_number_of_instalments": 0,
                        "interest_rate": 0,
                        "annual_percentage_rate": 0,
                        "handling_fee": 0,
                        "down_payment_amount": 0,
                        "instalment_amount": 0,
                        "total_amount_with_cost": 0
                    },
                    "balance_amount": 0
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 115652,
        "executor_type": "THIRDPARTY",
        "executor_name": "getalistofBankssupportedbyOPOnlinePayment",
        "executor_version": "v2",
        "executor_display_name": "Get a list of Banks supported by OP Online Payment",
        "executor_description": "Get a list of Banks supported by OP Online Payment",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/api/v2/get-op-banks",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695332533383,
        "lastModifiedTime": 1695332533383,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "bank_id": "string",
                        "bank_name": "string"
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 115726,
        "executor_type": "THIRDPARTY",
        "executor_name": "voidcapture",
        "executor_version": "v2",
        "executor_display_name": "Void capture",
        "executor_description": "Void capture",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/api/v2/transactions/{id}/void_capture",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Original transaction id to cancel / void the capture."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "payment_provider_contract": "30b8bec8-5042-4e67-939c-5453fbe41711",
                "card_brand": "string",
                "brand_choice": "MERCHANT",
                "amount": 0,
                "detailed_amount": {
                    "tax_amount": "20.50"
                },
                "currency_code": "AED",
                "customer": "0a57b387-2ba7-4f65-be2f-e176bb49d2ce",
                "shopper_interaction": "ECOMMERCE",
                "reason": "string",
                "merchant_reference": "7a1db7a8-6f24-4bc5-a51b-cef33fc05140",
                "line_items": [
                    {
                        "name": "string",
                        "quantity": 0,
                        "unit_price": 0,
                        "unit_price_tax": 0,
                        "tax_rate": "15.10",
                        "total_tax_amount": 0,
                        "total_amount": 0,
                        "image_url": "string",
                        "item_url": "string",
                        "sku": "string",
                        "description": "string",
                        "category": "DIGITAL_GOODS"
                    }
                ],
                "receipt_type": "FULL_RECEIPT",
                "tax_indicator": "TAX_PROVIDED",
                "purchase_order_number": "string",
                "promo_code": "string",
                "encrypted_card": "U3dhZ2dlciByb2Nrcw==",
                "encrypted_svc_access_code": "string",
                "public_key_alias": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695344247108,
        "lastModifiedTime": 1695344247108,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "76944d4b-89e6-48d2-ac04-675383c3eedf",
                    "payment_provider_contract": "30b8bec8-5042-4e67-939c-5453fbe41711",
                    "amount": 0,
                    "blocked": true,
                    "created_at": "2019-08-24T14:15:22Z",
                    "customer": "string",
                    "merchant_reference": "string",
                    "payment_product": "string",
                    "payment_product_type": "string",
                    "processor_reference": "string",
                    "processor_details": {},
                    "status": "AUTHORIZED",
                    "status_reason": "string",
                    "shipping_information": {
                        "address": "3732  Metz Lane",
                        "city": "West Roxbury",
                        "country": "US",
                        "postal_code": "1114",
                        "email": "user@example.com",
                        "first_name": "Thelma",
                        "last_name": "Tatro",
                        "phone": 8577532706,
                        "state": "MA"
                    },
                    "arn": "string",
                    "authorization_code": "5B1D4C",
                    "avs_result": "A",
                    "card": "string",
                    "created_by": "string",
                    "cvv_present": true,
                    "cvv_result": "1",
                    "cavv_result": "99",
                    "stored_credential": {
                        "reference": "string",
                        "stored_credential_type": "string",
                        "scheme_reference": "string",
                        "processing_model": "UNSCHEDULED_CREDENTIAL_ON_FILE",
                        "details": "UNSCHEDULED_CREDENTIAL_ON_FILE"
                    },
                    "details": {
                        "auto_capture": true,
                        "mid": "363162200000049"
                    },
                    "reason_code": "stri",
                    "rrn": "200211654321",
                    "shopper_interaction": "ECOMMERCE",
                    "stan": "string",
                    "reversal_status": "NONE",
                    "geo_location": [
                        "52.370216",
                        "4.895168"
                    ],
                    "city": "West Roxbury",
                    "country_code": "US",
                    "additional_data": {
                        "acquirer_response_code": "stri",
                        "initiator_trace_id": "000001"
                    },
                    "token_details": {
                        "reuse_token": "stringstringstri",
                        "reuse_token_type": "CHASE",
                        "analytics_token": "string",
                        "token_expiry_date": "2019-08-24",
                        "token_scope": "0e48425a-f1bc-431a-b7d8-f866de8ba276",
                        "token_status": "DELETED",
                        "created_at": "2019-08-24",
                        "updated_at": "2019-08-24",
                        "variant": "NEW_WORLD",
                        "type": "CREDIT",
                        "issuer_name": "HSBC",
                        "issuer_country": "ZZZ",
                        "brand": "VISA",
                        "expiry_year": 2021,
                        "expiry_month": 12,
                        "card_holder_name": "MR J HOLDER",
                        "last_four": "3127",
                        "bin": "492912",
                        "currency_code": "AED"
                    },
                    "promo_code": "string",
                    "purchase_order_number": "string",
                    "issuer_instalment_result": {
                        "instalment_program": "MCINST",
                        "payment_option": "FULL",
                        "payment_plan_option": [
                            {
                                "number_of_instalments": 1,
                                "first_instalment_amount": 0,
                                "instalment_amount": 0,
                                "interest_rate": 0,
                                "annual_percentage_rate": 0,
                                "handling_fee": 0,
                                "total_amount_with_cost": 0
                            }
                        ],
                        "number_of_instalments": 0,
                        "min_number_of_instalments": 0,
                        "max_number_of_instalments": 0,
                        "interest_rate": 0,
                        "annual_percentage_rate": 0,
                        "handling_fee": 0,
                        "down_payment_amount": 0,
                        "instalment_amount": 0,
                        "total_amount_with_cost": 0
                    },
                    "balance_amount": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 115645,
        "executor_type": "THIRDPARTY",
        "executor_name": "initiateawalletpaymentusingGooglePayorApplePay",
        "executor_version": "v2",
        "executor_display_name": "Initiate a wallet payment using Google Pay or Apple Pay",
        "executor_description": "Initiate a wallet payment using Google Pay or Apple Pay",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/api/v2/transactions/wallet",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "payment_provider_contract": "30b8bec8-5042-4e67-939c-5453fbe41711",
                "amount": 0,
                "auth_type": "PRE_AUTH",
                "capture_now": false,
                "customer": "0a57b387-2ba7-4f65-be2f-e176bb49d2ce",
                "customer_ip": "127.0.0.1",
                "dynamic_descriptor": "string",
                "merchant_reference": "7a1db7a8-6f24-4bc5-a51b-cef33fc05140",
                "threed_authentication": {
                    "eci_flag": "02",
                    "enrolled": "Y",
                    "cavv": "stringstringstringstringstri",
                    "cavv_algorithm": "string",
                    "pares_status": "A",
                    "xid": "string",
                    "threeds_version": "1.0.2",
                    "ds_transaction_id": "string",
                    "signature_verification": "Y",
                    "verification": [
                        "DENIED"
                    ],
                    "error_desc": "string",
                    "error_no": "string",
                    "additional_data": {
                        "total_items": 99,
                        "device_channel": "SDK",
                        "status_reason": "string",
                        "challenge_indicator": "01",
                        "challenge_cancel": "01",
                        "acs_url": "string",
                        "acs_operator_id": "string",
                        "network_score": "20",
                        "reason_code": "string",
                        "reason_desc": "string"
                    }
                },
                "stored_credential": {
                    "stored_credential_type": "SIGNUP",
                    "processing_model_details": {
                        "total_payment_number": 0,
                        "total_payment_amount": 0,
                        "first_payment_amount": 0,
                        "payment_frequency": {
                            "time_unit": "DAY",
                            "value": 0
                        },
                        "processing_model": "UNSCHEDULED_CREDENTIAL_ON_FILE",
                        "merchant_signup_code": "string",
                        "current_payment_number": 0,
                        "amount_fixed": false
                    },
                    "first_payment": true,
                    "scheme_reference": "string"
                },
                "shipping_information": {
                    "address": "3732  Metz Lane",
                    "city": "West Roxbury",
                    "country": "US",
                    "postal_code": "1114",
                    "email": "user@example.com",
                    "first_name": "Thelma",
                    "last_name": "Tatro",
                    "phone": 8577532706,
                    "state": "MA"
                },
                "shopper_interaction": "ECOMMERCE",
                "user_agent": "string",
                "sales_description": "string",
                "sca_exemption": "1",
                "currency_code": "AED",
                "card_brand": "string",
                "encrypted_cvv": "string",
                "brand_choice": "MERCHANT",
                "refusal_reason": "ACQUIRER_COMMS_FAILURE",
                "token_preference": {
                    "token_scope": "0e48425a-f1bc-431a-b7d8-f866de8ba276",
                    "reuse_token_type": "CHASE",
                    "token_type": "REUSE",
                    "token_expiry_date": "2019-08-24"
                },
                "wallet_type": "APPLE_PAY",
                "wallet_payload": {},
                "sca_compliance_level": "NONE",
                "promo_code": "string",
                "purchase_order_number": "string",
                "tax_indicator": "TAX_PROVIDED",
                "detailed_amount": {
                    "tax_amount": "20.50"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1695331639374,
        "lastModifiedTime": 1695332211851,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "advice": "3DS_REQUIRED",
                    "encrypted_card": "U3dhZ2dlciByb2Nrcw==",
                    "public_key_alias": "KEY00101"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 115647,
        "executor_type": "THIRDPARTY",
        "executor_name": "initiateaVippspayment",
        "executor_version": "v2",
        "executor_display_name": "Initiate a Vipps payment",
        "executor_description": "Initiate a Vipps payment",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/api/v2/transactions/vipps",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "search",
                "value": "",
                "description": " RSQl Query is composed of one or more expressions, combined to each other with following logical operators:  A filter query in RSQL format to retrieve themes. The returned themes are limited to those that can be retrieved by the user.  Criteria\tDescription\tOperator Used name\tstring\t==, !=, =in=, =out=, =regex=, =contains= created_at\tdate\t==, !=, =in=, =out=, =gt=, =ge=, =lt=, =le= updated_at\tdate\t==, !=, =in=, =out=, =gt=, =ge=, =lt=, =le= entity_id\tstring\t==, !=, =in=, =out=, =regex= is_default\tboolean\t==, != Note:  Operator\tDescription ==\tequal !=\tnot equal =lt=\tless than =le=\tless than and equal to =gt=\tgreater than =ge=\tgreater than and equal to =regex=\tpattern matching =contains=\tcase insensitive substring matching =in=\tmultiple arguments search =out=\texclude ;\tLogical AND ,\tLogical OR Note: Parenthesis can be used to determine the precedence of the operator.  Example for count theme:  /v2/theme/count?search= entity_id==a6b45428-0296-4394-8ddd-0b50b5b20aa9",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "payment_provider_contract": "30b8bec8-5042-4e67-939c-5453fbe41711",
                "threed_secure": {
                    "eci_flag": "00",
                    "enrolled": "string",
                    "cavv": "string",
                    "cavv_algorithm": "string",
                    "pares_status": "string",
                    "xid": "string",
                    "ds_transaction_id": "string",
                    "threeds_version": "1.0.2"
                },
                "app_phone_number": "+31-6-11223344",
                "redirect_url": "string",
                "is_app": false,
                "amount": {
                    "amount": 0
                },
                "auth_type": "PRE_AUTH",
                "capture_now": false,
                "customer": "0a57b387-2ba7-4f65-be2f-e176bb49d2ce",
                "customer_ip": "127.0.0.1",
                "dynamic_descriptor": "string",
                "merchant_reference": "7a1db7a8-6f24-4bc5-a51b-cef33fc05140",
                "shipping_information": {
                    "address": "3732  Metz Lane",
                    "city": "West Roxbury",
                    "country": "US",
                    "postal_code": "1114",
                    "email": "user@example.com",
                    "first_name": "Thelma",
                    "last_name": "Tatro",
                    "phone": 8577532706,
                    "state": "MA"
                },
                "user_agent": "string",
                "sales_description": "string",
                "currency_code": "NOK",
                "sca_compliance_level": "NONE",
                "sca_exemption": "1"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695331852226,
        "lastModifiedTime": 1695331852226,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "76944d4b-89e6-48d2-ac04-675383c3eedf",
                    "redirect_url": "string",
                    "amount": {
                        "amount": 0
                    },
                    "blocked": true,
                    "created_at": "2019-08-24T14:15:22Z",
                    "customer": "string",
                    "details": {
                        "auto_capture": true,
                        "mid": "363162200000049"
                    },
                    "merchant_reference": "7a1db7a8-6f24-4bc5-a51b-cef33fc05140",
                    "processor": "NETS",
                    "payment_product": "CARD",
                    "payment_product_type": "string",
                    "shipping_information": {
                        "address": "3732  Metz Lane",
                        "city": "West Roxbury",
                        "country": "US",
                        "postal_code": "1114",
                        "email": "user@example.com",
                        "first_name": "Thelma",
                        "last_name": "Tatro",
                        "phone": 8577532706,
                        "state": "MA"
                    },
                    "status": "AUTHORIZED",
                    "status_reason": "string",
                    "created_by": "string",
                    "shopper_interaction": "ECOMMERCE",
                    "geo_location": [
                        52.370216,
                        4.895168
                    ],
                    "city": "West Roxbury",
                    "country_code": "AU"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116080,
        "executor_type": "THIRDPARTY",
        "executor_name": "generateKeyPair",
        "executor_version": "v2",
        "executor_display_name": "Generate Key Pair",
        "executor_description": "Generate Key Pair",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/api/v2/key",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "public_key": "string",
                "public_key_alias": "string",
                "created_at": "2019-08-24T14:15:22Z"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1695415848908,
        "lastModifiedTime": 1695416024427,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "public_key": "string",
                    "public_key_alias": "string",
                    "created_at": "2019-08-24T14:15:22Z"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116113,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteToken",
        "executor_version": "v2",
        "executor_display_name": "Delete Token",
        "executor_description": "Delete Token",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "{{host}}/api/v2/card/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "The Verifone issued reuse token used to represent the previously stored cardholder data."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695416801520,
        "lastModifiedTime": 1695416801520,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116118,
        "executor_type": "THIRDPARTY",
        "executor_name": "activateToken",
        "executor_version": "v2",
        "executor_display_name": "Activate Token",
        "executor_description": "Activate Token",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "{{host}}/api/v2/card/{id}/activate",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695417125787,
        "lastModifiedTime": 1695417125787,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 115697,
        "executor_type": "THIRDPARTY",
        "executor_name": "captureauthorization",
        "executor_version": "v2",
        "executor_display_name": "Capture authorization",
        "executor_description": "Capture an authorization hold on a payment. Check the documentation in order to verify what payment method allows for this payment modification.",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/api/v2/transactions/{id}/capture",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "amount": 150,
                "purchase_order_number": "string",
                "tax_indicator": "TAX_PROVIDED",
                "multiple_captures": {
                    "final_capture": true,
                    "capture_sequence_number": 1,
                    "capture_sequence_count": 2
                },
                "issuer_instalment": {
                    "instalment_program": "MCINST",
                    "number_of_instalments": 0,
                    "down_payment_amount": 0,
                    "first_instalment_amount": 0,
                    "instalment_amount": 0,
                    "interest_rate": 0,
                    "annual_percentage_rate": 0,
                    "handling_fee": 0,
                    "total_amount_with_cost": 0
                },
                "line_items": [
                    {
                        "name": "string",
                        "quantity": 0,
                        "unit_price": 0,
                        "unit_price_tax": 0,
                        "tax_rate": "15.10",
                        "total_tax_amount": 0,
                        "total_amount": 0,
                        "image_url": "string",
                        "item_url": "string",
                        "sku": "string",
                        "description": "string",
                        "category": "DIGITAL_GOODS"
                    }
                ],
                "receipt_type": "FULL_RECEIPT"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695339682458,
        "lastModifiedTime": 1695339682458,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "76944d4b-89e6-48d2-ac04-675383c3eedf",
                    "payment_provider_contract": "30b8bec8-5042-4e67-939c-5453fbe41711",
                    "amount": 0,
                    "blocked": true,
                    "created_at": "2019-08-24T14:15:22Z",
                    "customer": "string",
                    "merchant_reference": "string",
                    "payment_product": "string",
                    "payment_product_type": "string",
                    "processor_reference": "string",
                    "processor_details": {},
                    "status": "AUTHORIZED",
                    "status_reason": "string",
                    "shipping_information": {
                        "address": "3732  Metz Lane",
                        "city": "West Roxbury",
                        "country": "US",
                        "postal_code": "1114",
                        "email": "user@example.com",
                        "first_name": "Thelma",
                        "last_name": "Tatro",
                        "phone": 8577532706,
                        "state": "MA"
                    },
                    "arn": "string",
                    "authorization_code": "5B1D4C",
                    "avs_result": "A",
                    "card": "string",
                    "created_by": "string",
                    "cvv_present": true,
                    "cvv_result": "1",
                    "cavv_result": "99",
                    "stored_credential": {
                        "reference": "string",
                        "stored_credential_type": "string",
                        "scheme_reference": "string",
                        "processing_model": "UNSCHEDULED_CREDENTIAL_ON_FILE",
                        "details": "UNSCHEDULED_CREDENTIAL_ON_FILE"
                    },
                    "details": {
                        "auto_capture": true,
                        "mid": "363162200000049"
                    },
                    "reason_code": "stri",
                    "rrn": "200211654321",
                    "shopper_interaction": "ECOMMERCE",
                    "stan": "string",
                    "reversal_status": "NONE",
                    "geo_location": [
                        "52.370216",
                        "4.895168"
                    ],
                    "city": "West Roxbury",
                    "country_code": "US",
                    "additional_data": {
                        "acquirer_response_code": "stri",
                        "initiator_trace_id": "000001"
                    },
                    "token_details": {
                        "reuse_token": "stringstringstri",
                        "reuse_token_type": "CHASE",
                        "analytics_token": "string",
                        "token_expiry_date": "2019-08-24",
                        "token_scope": "0e48425a-f1bc-431a-b7d8-f866de8ba276",
                        "token_status": "DELETED",
                        "created_at": "2019-08-24",
                        "updated_at": "2019-08-24",
                        "variant": "NEW_WORLD",
                        "type": "CREDIT",
                        "issuer_name": "HSBC",
                        "issuer_country": "ZZZ",
                        "brand": "VISA",
                        "expiry_year": 2021,
                        "expiry_month": 12,
                        "card_holder_name": "MR J HOLDER",
                        "last_four": "3127",
                        "bin": "492912",
                        "currency_code": "AED"
                    },
                    "promo_code": "string",
                    "purchase_order_number": "string",
                    "issuer_instalment_result": {
                        "instalment_program": "MCINST",
                        "payment_option": "FULL",
                        "payment_plan_option": [
                            {
                                "number_of_instalments": 1,
                                "first_instalment_amount": 0,
                                "instalment_amount": 0,
                                "interest_rate": 0,
                                "annual_percentage_rate": 0,
                                "handling_fee": 0,
                                "total_amount_with_cost": 0
                            }
                        ],
                        "number_of_instalments": 0,
                        "min_number_of_instalments": 0,
                        "max_number_of_instalments": 0,
                        "interest_rate": 0,
                        "annual_percentage_rate": 0,
                        "handling_fee": 0,
                        "down_payment_amount": 0,
                        "instalment_amount": 0,
                        "total_amount_with_cost": 0
                    },
                    "balance_amount": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116053,
        "executor_type": "THIRDPARTY",
        "executor_name": "listtransactions",
        "executor_version": "v2",
        "executor_display_name": "List transactions",
        "executor_description": "List transactions",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/api/v2/transactions",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "amount",
                "value": "",
                "description": "Amount of the transaction.",
                "req": false
            },
            {
                "key": "payment_product_type",
                "value": "",
                "description": "Fees applied to the transaction, based on the payment product. e.g. For card transactions - interchange fees",
                "req": false
            },
            {
                "key": "shopper_interaction",
                "value": "",
                "description": "Determines the point of sale of a customer.",
                "req": false
            },
            {
                "key": "created_at",
                "value": "",
                "description": "The time at which the transaction was created.",
                "req": false
            },
            {
                "key": "created_start",
                "value": "",
                "description": "The start time range for when the transaction was created, specified in UTC. Use this in conjunction with created_end to query for a time range. A maximum range of 1 month of transactions can be queried at a time. Note: If this is not specified it will default to the current date/time - 7 days.",
                "req": false
            },
            {
                "key": "created_end",
                "value": "",
                "description": "The end time range for when a transaction was created, specified in UTC. Use this in conjunction with created_start to query for a time range. A maximum range of 1 month of transactions can be queried at a time. Note: If this is not specified it will default to the current date/time.",
                "req": false
            },
            {
                "key": "country_code\t",
                "value": "",
                "description": "The country code resolved from the customer's ip address.",
                "req": false
            },
            {
                "key": "currency_code",
                "value": "",
                "description": "Three-letter ISO 4217 alphabetical currency code. e.g. USD.",
                "req": false
            },
            {
                "key": "customer",
                "value": "",
                "description": "The ID of a customer.",
                "req": false
            },
            {
                "key": "merchant_reference",
                "value": "",
                "description": "A reference specified by the merchant to identify the transaction.",
                "req": false
            },
            {
                "key": "transaction_type",
                "value": "",
                "description": "Enum: \"AUTHORISATION\" \"BALANCE\" \"CANCEL\" \"CAPTURE\" \"CARD_ACTIVATION\" \"CARD_DEACTIVATION\" \"CARD_VERIFICATION\" \"CASH_ADVANCE\" \"CASH_DEPOSIT\" \"DECLINED\" \"DELAYED_CHARGE\" \"EXTEND\" \"ISSUER_INSTALMENT_SELECTION\" \"LOAD\" \"NO_SHOW\" \"NON_FINANCIAL\" \"PREAUTH\" \"PREAUTH_COMPLETION\" \"PREAUTH_INCREMENT\" \"RATE\" \"REAUTHORISATION\" \"REFUND\" \"SALE\" \"UNLOAD\" \"VOID\" A type indicator for the main operation or service that was performed as part of the transaction event.",
                "req": false
            },
            {
                "key": "transaction_status",
                "value": "",
                "description": "Enum: \"APPROVED\" \"AUTHENTICATING\" \"AUTHORISED\" \"AWAITING_INVOICE\" \"CANCELLED\" \"CONFIRMED\" \"COMPLETED\" \"CUSTOMER_ACCEPTED\" \"DECLINED\" \"DEFERRED\" \"DISPUTED\" \"EXCEPTION\" \"EXPIRED\" \"FAILED\" \"INITIATED\" \"ON_HOLD\" \"PARTIALLY_REFUNDED\" \"RECEIVED\" \"RECONCILED\" \"RECONCILIATION_FAILED\" \"REFUNDED\" \"REJECTED\" \"REPEATING\" \"REVERSED\" \"REVERSE_ERROR\" \"REVERSING\" \"ROUTING\" \"SENT\" \"SETTLED\" \"SETTLEMENT_FAILED\" \"SETTLEMENT_REQUESTED\" \"SUBMITTED\" \"TIMED_OUT\" \"UNMATCHED\" This represents the available states that a transaction may have. At any given point it may only have a single state.",
                "req": false
            },
            {
                "key": "sort",
                "value": "",
                "description": "Enum: \"country_code\" \"created_at\" \"amount\" \"stan\" \"payment_product_type\" \"rrn\" \"_id\" \"currency_code\" \"batch_id\" \"-country_code\" \"-created_at\" \"-amount\" \"-stan\" \"-payment_product_type\" \"-rrn\" \"-id\" \"-currency_code\" \"-batch_id\" Sorts the results by ascending order according to the provided field. If the field is prefixed with dash (e.g. -created_at), the order is descending. Multiple sort also works if provided several times within the same query string.",
                "req": false
            },
            {
                "key": "skip",
                "value": "",
                "description": "Skips a number of results.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "reason_code",
                "value": "",
                "description": "A reason code assigned by the acquiring platform; '00' in case of success.",
                "req": false
            },
            {
                "key": "rrn",
                "value": "",
                "description": "Retrieval Reference Number, is a transaction identifying reference number that is designated by the card acceptor system.",
                "req": false
            },
            {
                "key": "pos_device_id",
                "value": "",
                "description": "Identifier of the POS device used for the transaction.",
                "req": false
            },
            {
                "key": "stan",
                "value": "",
                "description": "System Trace Audit Number.",
                "req": false
            },
            {
                "key": "id",
                "value": "",
                "description": "The ID of the transaction",
                "req": false
            },
            {
                "key": "x-vfi-api-idempotencykey",
                "value": "",
                "description": "Unique transaction identifier",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695415458653,
        "lastModifiedTime": 1695415458653,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": "63bbc548-d2de-4546-b106-880a5018461c",
                        "amount": "string",
                        "currency_code": "AED",
                        "city": "string",
                        "country_code": "string",
                        "created_at": "string",
                        "customer": "string",
                        "customer_ip": "string",
                        "dynamic_descriptor": "string",
                        "geo_location": [
                            "string"
                        ],
                        "payment_product": "string",
                        "payment_product_type": "string",
                        "processor_reference": "string",
                        "status": "REFUND AUTHORIZED",
                        "transaction_type": "AUTHORISATION",
                        "transaction_status": "APPROVED",
                        "parent_id": "63bbc548-d2de-4546-b106-880a5018461c",
                        "reason_code": "stri",
                        "card_brand": "string",
                        "shipping_information": {
                            "address": "3732  Metz Lane",
                            "city": "West Roxbury",
                            "country": "US",
                            "postal_code": "1114",
                            "email": "user@example.com",
                            "first_name": "Thelma",
                            "last_name": "Tatro",
                            "phone": 8577532706,
                            "state": "MA"
                        },
                        "merchant_reference": "string",
                        "user_agent": "string",
                        "arn": "string",
                        "authorization_code": "string",
                        "avs_result": "A",
                        "created_by": "string",
                        "cvv_present": true,
                        "cvv_result": "0",
                        "processor_payer_id": "MLVAJGLDHNZ3G",
                        "pos_device_id": "string",
                        "rrn": "string",
                        "shopper_interaction": "ecommerce",
                        "stan": "string",
                        "threed_authentication": {
                            "eci_flag": "00",
                            "enrolled": "string",
                            "cavv": "string",
                            "cavv_algorithm": "string",
                            "pares_status": "string",
                            "xid": "string",
                            "ds_transaction_id": "string",
                            "threeds_version": "1.0.2"
                        },
                        "masked_card_number": "string",
                        "promo_code": "string",
                        "payment_summary": {
                            "captured_amount": "string"
                        },
                        "token_details": {
                            "reuse_token_type": "CHASE",
                            "reuse_token": "stringstringstri",
                            "analytics_token": "string"
                        }
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 115649,
        "executor_type": "THIRDPARTY",
        "executor_name": "initiateaKlarnapayment",
        "executor_version": "v2",
        "executor_display_name": "Initiate a Klarna payment.",
        "executor_description": "Initiate a Klarna payment.",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/api/v2/transactions/klarna",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "entity_id": "30b8bec8-5042-4e67-939c-5453fbe41711",
                "amount": 150,
                "tax_amount": 0,
                "redirect_url": "string",
                "capture_now": false,
                "customer": "0a57b387-2ba7-4f65-be2f-e176bb49d2ce",
                "customer_ip": "127.0.0.1",
                "dynamic_descriptor": "string",
                "merchant_reference": "7a1db7a8-6f24-4bc5-a51b-cef33fc05140",
                "shipping_information": {
                    "address": "3732  Metz Lane",
                    "city": "West Roxbury",
                    "country": "US",
                    "postal_code": "1114",
                    "email": "user@example.com",
                    "first_name": "Thelma",
                    "last_name": "Tatro",
                    "phone": 8577532706,
                    "state": "MA"
                },
                "line_items": [
                    {
                        "image_url": "string",
                        "name": "string",
                        "quantity": 0,
                        "unit_price": 0,
                        "unit_price_tax": 0,
                        "tax_rate": 15.1,
                        "discount_amount": 0,
                        "total_tax_amount": 0,
                        "total_amount": 0,
                        "sku": "string",
                        "description": "string",
                        "category": "DIGITAL_GOODS"
                    }
                ],
                "user_agent": "string",
                "sales_description": "string",
                "currency_code": "EUR",
                "locale": {
                    "countryCode": "AU",
                    "language": "es-419",
                    "timezoneId": "string"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695332198254,
        "lastModifiedTime": 1695332198254,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "76944d4b-89e6-48d2-ac04-675383c3eedf",
                    "instore_reference": "string",
                    "client_token": "string",
                    "payment_method_categories": [
                        {
                            "identifier": "string",
                            "name": "string",
                            "asset_urls": {
                                "standard": "string",
                                "descriptive": "string"
                            }
                        }
                    ],
                    "amount": {
                        "amount": 0
                    },
                    "blocked": true,
                    "created_by": "string",
                    "created_at": "2019-08-24T14:15:22Z",
                    "customer": "string",
                    "details": {
                        "auto_capture": true,
                        "mid": "363162200000049"
                    },
                    "merchant_reference": "7a1db7a8-6f24-4bc5-a51b-cef33fc05140",
                    "processor": "KLARNA",
                    "payment_product": "KLARNA",
                    "payment_product_type": "string",
                    "shipping_information": {
                        "address": "3732  Metz Lane",
                        "city": "West Roxbury",
                        "country": "US",
                        "postal_code": "1114",
                        "email": "user@example.com",
                        "first_name": "Thelma",
                        "last_name": "Tatro",
                        "phone": 8577532706,
                        "state": "MA"
                    },
                    "status": "AUTHORIZED",
                    "status_reason": "string",
                    "shopper_interaction": "ECOMMERCE",
                    "geo_location": [
                        52.370216,
                        4.895168
                    ],
                    "city": "West Roxbury",
                    "country_code": "AU"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 115721,
        "executor_type": "THIRDPARTY",
        "executor_name": "refundpayment",
        "executor_version": "v2",
        "executor_display_name": "Refund payment",
        "executor_description": "Refund payment",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/api/v2/transactions/{id}/refund",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Original transaction id to refund."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "amount": 150,
                "reason": "string",
                "tax_indicator": "TAX_PROVIDED",
                "detailed_amount": {
                    "tax_amount": "20.50"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695343786322,
        "lastModifiedTime": 1695343786322,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "76944d4b-89e6-48d2-ac04-675383c3eedf",
                    "payment_provider_contract": "30b8bec8-5042-4e67-939c-5453fbe41711",
                    "amount": 0,
                    "blocked": true,
                    "created_at": "2019-08-24T14:15:22Z",
                    "customer": "string",
                    "merchant_reference": "string",
                    "payment_product": "string",
                    "payment_product_type": "string",
                    "processor_reference": "string",
                    "processor_details": {},
                    "status": "AUTHORIZED",
                    "status_reason": "string",
                    "shipping_information": {
                        "address": "3732  Metz Lane",
                        "city": "West Roxbury",
                        "country": "US",
                        "postal_code": "1114",
                        "email": "user@example.com",
                        "first_name": "Thelma",
                        "last_name": "Tatro",
                        "phone": 8577532706,
                        "state": "MA"
                    },
                    "arn": "string",
                    "authorization_code": "5B1D4C",
                    "avs_result": "A",
                    "card": "string",
                    "created_by": "string",
                    "cvv_present": true,
                    "cvv_result": "1",
                    "cavv_result": "99",
                    "stored_credential": {
                        "reference": "string",
                        "stored_credential_type": "string",
                        "scheme_reference": "string",
                        "processing_model": "UNSCHEDULED_CREDENTIAL_ON_FILE",
                        "details": "UNSCHEDULED_CREDENTIAL_ON_FILE"
                    },
                    "details": {
                        "auto_capture": true,
                        "mid": "363162200000049"
                    },
                    "reason_code": "stri",
                    "rrn": "200211654321",
                    "shopper_interaction": "ECOMMERCE",
                    "stan": "string",
                    "reversal_status": "NONE",
                    "geo_location": [
                        "52.370216",
                        "4.895168"
                    ],
                    "city": "West Roxbury",
                    "country_code": "US",
                    "additional_data": {
                        "acquirer_response_code": "stri",
                        "initiator_trace_id": "000001"
                    },
                    "token_details": {
                        "reuse_token": "stringstringstri",
                        "reuse_token_type": "CHASE",
                        "analytics_token": "string",
                        "token_expiry_date": "2019-08-24",
                        "token_scope": "0e48425a-f1bc-431a-b7d8-f866de8ba276",
                        "token_status": "DELETED",
                        "created_at": "2019-08-24",
                        "updated_at": "2019-08-24",
                        "variant": "NEW_WORLD",
                        "type": "CREDIT",
                        "issuer_name": "HSBC",
                        "issuer_country": "ZZZ",
                        "brand": "VISA",
                        "expiry_year": 2021,
                        "expiry_month": 12,
                        "card_holder_name": "MR J HOLDER",
                        "last_four": "3127",
                        "bin": "492912",
                        "currency_code": "AED"
                    },
                    "promo_code": "string",
                    "purchase_order_number": "string",
                    "issuer_instalment_result": {
                        "instalment_program": "MCINST",
                        "payment_option": "FULL",
                        "payment_plan_option": [
                            {
                                "number_of_instalments": 1,
                                "first_instalment_amount": 0,
                                "instalment_amount": 0,
                                "interest_rate": 0,
                                "annual_percentage_rate": 0,
                                "handling_fee": 0,
                                "total_amount_with_cost": 0
                            }
                        ],
                        "number_of_instalments": 0,
                        "min_number_of_instalments": 0,
                        "max_number_of_instalments": 0,
                        "interest_rate": 0,
                        "annual_percentage_rate": 0,
                        "handling_fee": 0,
                        "down_payment_amount": 0,
                        "instalment_amount": 0,
                        "total_amount_with_cost": 0
                    },
                    "balance_amount": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116034,
        "executor_type": "THIRDPARTY",
        "executor_name": "readtransaction",
        "executor_version": "v2",
        "executor_display_name": "Read transaction",
        "executor_description": "Read transaction",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/api/v2/transaction/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "transaction id"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695415062682,
        "lastModifiedTime": 1695415062682,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "63bbc548-d2de-4546-b106-880a5018461c",
                    "amount": "string",
                    "currency_code": "AED",
                    "city": "string",
                    "country_code": "string",
                    "created_at": "string",
                    "customer": "string",
                    "customer_ip": "string",
                    "dynamic_descriptor": "string",
                    "geo_location": [
                        "string"
                    ],
                    "payment_product": "string",
                    "payment_product_type": "string",
                    "processor_reference": "string",
                    "status": "REFUND AUTHORIZED",
                    "transaction_type": "AUTHORISATION",
                    "transaction_status": "APPROVED",
                    "parent_id": "63bbc548-d2de-4546-b106-880a5018461c",
                    "reason_code": "stri",
                    "card_brand": "string",
                    "shipping_information": {
                        "address": "3732  Metz Lane",
                        "city": "West Roxbury",
                        "country": "US",
                        "postal_code": "1114",
                        "email": "user@example.com",
                        "first_name": "Thelma",
                        "last_name": "Tatro",
                        "phone": 8577532706,
                        "state": "MA"
                    },
                    "merchant_reference": "string",
                    "user_agent": "string",
                    "arn": "string",
                    "authorization_code": "string",
                    "avs_result": "A",
                    "created_by": "string",
                    "cvv_present": true,
                    "cvv_result": "0",
                    "processor_payer_id": "MLVAJGLDHNZ3G",
                    "pos_device_id": "string",
                    "rrn": "string",
                    "shopper_interaction": "ecommerce",
                    "stan": "string",
                    "threed_authentication": {
                        "eci_flag": "00",
                        "enrolled": "string",
                        "cavv": "string",
                        "cavv_algorithm": "string",
                        "pares_status": "string",
                        "xid": "string",
                        "ds_transaction_id": "string",
                        "threeds_version": "1.0.2"
                    },
                    "masked_card_number": "string",
                    "promo_code": "string",
                    "payment_summary": {
                        "captured_amount": "string"
                    },
                    "token_details": {
                        "reuse_token_type": "CHASE",
                        "reuse_token": "stringstringstri",
                        "analytics_token": "string"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 115650,
        "executor_type": "THIRDPARTY",
        "executor_name": "initiateaSwishpayment",
        "executor_version": "v2",
        "executor_display_name": "Initiate a Swish payment",
        "executor_description": "Initiate a Swish payment",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/api/v2/transactions/swish",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "entity_id": "30b8bec8-5042-4e67-939c-5453fbe41711",
                "app_phone_number": "+31-6-11223344",
                "amount": 150,
                "customer": "0a57b387-2ba7-4f65-be2f-e176bb49d2ce",
                "customer_ip": "127.0.0.1",
                "dynamic_descriptor": "string",
                "merchant_reference": "7a1db7a8-6f24-4bc5-a51b-cef33fc05140",
                "shipping_information": {
                    "address": "3732  Metz Lane",
                    "city": "West Roxbury",
                    "country": "US",
                    "postal_code": "1114",
                    "email": "user@example.com",
                    "first_name": "Thelma",
                    "last_name": "Tatro",
                    "phone": 8577532706,
                    "state": "MA"
                },
                "user_agent": "string",
                "sales_description": "string",
                "currency_code": "SEK"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695332308474,
        "lastModifiedTime": 1695332308474,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "76944d4b-89e6-48d2-ac04-675383c3eedf",
                    "amount": {
                        "amount": 0
                    },
                    "blocked": true,
                    "created_at": "2019-08-24T14:15:22Z",
                    "customer": "string",
                    "details": {
                        "auto_capture": true,
                        "mid": "363162200000049"
                    },
                    "merchant_reference": "7a1db7a8-6f24-4bc5-a51b-cef33fc05140",
                    "processor": "SWISH",
                    "payment_product": "SWISH",
                    "payment_product_type": "string",
                    "shipping_information": {
                        "address": "3732  Metz Lane",
                        "city": "West Roxbury",
                        "country": "US",
                        "postal_code": "1114",
                        "email": "user@example.com",
                        "first_name": "Thelma",
                        "last_name": "Tatro",
                        "phone": 8577532706,
                        "state": "MA"
                    },
                    "status": "AUTHORIZED",
                    "status_reason": "AUTHORIZED",
                    "created_by": "string",
                    "shopper_interaction": "ECOMMERCE",
                    "geo_location": [
                        52.370216,
                        4.895168
                    ],
                    "city": "West Roxbury",
                    "country_code": "AU",
                    "payment_request_token": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116060,
        "executor_type": "THIRDPARTY",
        "executor_name": "counttransactions",
        "executor_version": "v2",
        "executor_display_name": "Count transactions",
        "executor_description": "Count transactions",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/api/v2/transactions/count",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "amount",
                "value": "",
                "description": "Amount of the transaction.",
                "req": false
            },
            {
                "key": "payment_product_type",
                "value": "",
                "description": "Fees applied to the transaction, based on the payment product. e.g. For card transactions - interchange fees",
                "req": false
            },
            {
                "key": "shopper_interaction",
                "value": "",
                "description": "Determines the point of sale of a customer.",
                "req": false
            },
            {
                "key": "created_at",
                "value": "",
                "description": "The time at which the transaction was created.",
                "req": false
            },
            {
                "key": "created_start",
                "value": "",
                "description": "The start time range for when the transaction was created, specified in UTC. Use this in conjunction with created_end to query for a time range. A maximum range of 1 month of transactions can be queried at a time. Note: If this is not specified it will default to the current date/time - 7 days.",
                "req": false
            },
            {
                "key": "created_end",
                "value": "",
                "description": "The end time range for when a transaction was created, specified in UTC. Use this in conjunction with created_start to query for a time range. A maximum range of 1 month of transactions can be queried at a time. Note: If this is not specified it will default to the current date/time.",
                "req": false
            },
            {
                "key": "country_code\t",
                "value": "",
                "description": "The country code resolved from the customer's ip address.",
                "req": false
            },
            {
                "key": "currency_code",
                "value": "",
                "description": "Three-letter ISO 4217 alphabetical currency code. e.g. USD.",
                "req": false
            },
            {
                "key": "customer",
                "value": "",
                "description": "The ID of a customer.",
                "req": false
            },
            {
                "key": "merchant_reference",
                "value": "",
                "description": "A reference specified by the merchant to identify the transaction.",
                "req": false
            },
            {
                "key": "transaction_type",
                "value": "",
                "description": "Enum: \"AUTHORISATION\" \"BALANCE\" \"CANCEL\" \"CAPTURE\" \"CARD_ACTIVATION\" \"CARD_DEACTIVATION\" \"CARD_VERIFICATION\" \"CASH_ADVANCE\" \"CASH_DEPOSIT\" \"DECLINED\" \"DELAYED_CHARGE\" \"EXTEND\" \"ISSUER_INSTALMENT_SELECTION\" \"LOAD\" \"NO_SHOW\" \"NON_FINANCIAL\" \"PREAUTH\" \"PREAUTH_COMPLETION\" \"PREAUTH_INCREMENT\" \"RATE\" \"REAUTHORISATION\" \"REFUND\" \"SALE\" \"UNLOAD\" \"VOID\" A type indicator for the main operation or service that was performed as part of the transaction event.",
                "req": false
            },
            {
                "key": "transaction_status",
                "value": "",
                "description": "Enum: \"APPROVED\" \"AUTHENTICATING\" \"AUTHORISED\" \"AWAITING_INVOICE\" \"CANCELLED\" \"CONFIRMED\" \"COMPLETED\" \"CUSTOMER_ACCEPTED\" \"DECLINED\" \"DEFERRED\" \"DISPUTED\" \"EXCEPTION\" \"EXPIRED\" \"FAILED\" \"INITIATED\" \"ON_HOLD\" \"PARTIALLY_REFUNDED\" \"RECEIVED\" \"RECONCILED\" \"RECONCILIATION_FAILED\" \"REFUNDED\" \"REJECTED\" \"REPEATING\" \"REVERSED\" \"REVERSE_ERROR\" \"REVERSING\" \"ROUTING\" \"SENT\" \"SETTLED\" \"SETTLEMENT_FAILED\" \"SETTLEMENT_REQUESTED\" \"SUBMITTED\" \"TIMED_OUT\" \"UNMATCHED\" This represents the available states that a transaction may have. At any given point it may only have a single state.",
                "req": false
            },
            {
                "key": "sort",
                "value": "",
                "description": "Enum: \"country_code\" \"created_at\" \"amount\" \"stan\" \"payment_product_type\" \"rrn\" \"_id\" \"currency_code\" \"batch_id\" \"-country_code\" \"-created_at\" \"-amount\" \"-stan\" \"-payment_product_type\" \"-rrn\" \"-id\" \"-currency_code\" \"-batch_id\" Sorts the results by ascending order according to the provided field. If the field is prefixed with dash (e.g. -created_at), the order is descending. Multiple sort also works if provided several times within the same query string.",
                "req": false
            },
            {
                "key": "skip",
                "value": "",
                "description": "Skips a number of results.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "reason_code",
                "value": "",
                "description": "A reason code assigned by the acquiring platform; '00' in case of success.",
                "req": false
            },
            {
                "key": "rrn",
                "value": "",
                "description": "Retrieval Reference Number, is a transaction identifying reference number that is designated by the card acceptor system.",
                "req": false
            },
            {
                "key": "pos_device_id",
                "value": "",
                "description": "Identifier of the POS device used for the transaction.",
                "req": false
            },
            {
                "key": "stan",
                "value": "",
                "description": "System Trace Audit Number.",
                "req": false
            },
            {
                "key": "id",
                "value": "",
                "description": "The ID of the transaction",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1695415570514,
        "lastModifiedTime": 1695415735625,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "count": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116088,
        "executor_type": "THIRDPARTY",
        "executor_name": "listKeyPair",
        "executor_version": "v2",
        "executor_display_name": "List Key Pair",
        "executor_description": "List Key Pair",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/api/v2/key",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695415982312,
        "lastModifiedTime": 1695415982312,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "public_keys": [
                        {
                            "public_key": "string",
                            "public_key_alias": "string",
                            "created_at": "2019-08-24T14:15:22Z"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116110,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTokenDetails",
        "executor_version": "v2",
        "executor_display_name": "Get Token Details",
        "executor_description": "Get Token Details",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/api/v2/card/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "The Verifone issued reuse token used to represent the previously stored cardholder data."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695416660782,
        "lastModifiedTime": 1695416660782,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "reuse_token": "string",
                    "analytics_token": "string",
                    "bin": "492912",
                    "expiry_month": 12,
                    "expiry_year": 2021,
                    "last_four": "3127",
                    "card_holder_name": "MR J HOLDER",
                    "brand": "VISA",
                    "issuer_country": "ZZZ",
                    "issuer_name": "HSBC",
                    "currency": "AED",
                    "type": "CREDIT",
                    "variant": "NEW_WORLD",
                    "updated_at": "2019-08-24",
                    "created_at": "2019-08-24",
                    "token_expiry_date": "2019-08-24",
                    "reuse_token_type": "CHASE",
                    "token_scope": "0e48425a-f1bc-431a-b7d8-f866de8ba276",
                    "token_status": "ACTIVE",
                    "bin_details": {
                        "bin": "492912",
                        "brand": "VISA",
                        "issuer_country": "ZZZ",
                        "issuer_name": "HSBC",
                        "last_four": "3127",
                        "type": "CREDIT",
                        "variant": "NEW_WORLD"
                    },
                    "scheme_token": {
                        "network_token": "stringstring",
                        "status": "DELETED",
                        "expiry_month": "12",
                        "expiry_year": "2021",
                        "payment_account_reference": "string"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116100,
        "executor_type": "THIRDPARTY",
        "executor_name": "deactivateKeyPair",
        "executor_version": "v2",
        "executor_display_name": "Deactivate Key Pair",
        "executor_description": "Deactivate Key Pair",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "{{host}}/api/v2/key/{keyAlias}/deactivate",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "keyAlias",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695416106506,
        "lastModifiedTime": 1695416106506,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "PATCH",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116102,
        "executor_type": "THIRDPARTY",
        "executor_name": "querythebalanceonacard",
        "executor_version": "v2",
        "executor_display_name": "Query the balance on a card",
        "executor_description": "Query the balance on a card",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "{{host}}/api/v2/transactions/balance",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "payment_provider_contract": "30b8bec8-5042-4e67-939c-5453fbe41711",
                "customer": "0a57b387-2ba7-4f65-be2f-e176bb49d2ce",
                "dynamic_descriptor": "string",
                "merchant_reference": "7a1db7a8-6f24-4bc5-a51b-cef33fc05140",
                "shopper_interaction": "ECOMMERCE",
                "currency_code": "AED",
                "card_brand": "string",
                "encrypted_card": "U3dhZ2dlciByb2Nrcw==",
                "public_key_alias": "string",
                "token_preference": {
                    "token_scope": "0e48425a-f1bc-431a-b7d8-f866de8ba276",
                    "reuse_token_type": "CHASE",
                    "token_type": "REUSE",
                    "token_expiry_date": "2019-08-24"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695416252265,
        "lastModifiedTime": 1695416252265,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "PATCH",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string",
                    "balance_amount": 0,
                    "created_at": "2019-08-24T14:15:22Z",
                    "customer": "string",
                    "merchant_reference": "string",
                    "processor": "string",
                    "processor_reference": "string",
                    "processor_details": {},
                    "status": "INITIATED",
                    "status_reason": "string",
                    "reason_code": "stri",
                    "arn": "string",
                    "authorization_code": "5B1D4C",
                    "rrn": "string",
                    "shopper_interaction": "ecommerce",
                    "stan": 0,
                    "token_details": {
                        "reuse_token": "stringstringstri",
                        "reuse_token_type": "CHASE",
                        "analytics_token": "string",
                        "token_expiry_date": "2019-08-24",
                        "token_scope": "0e48425a-f1bc-431a-b7d8-f866de8ba276",
                        "token_status": "DELETED",
                        "created_at": "2019-08-24",
                        "updated_at": "2019-08-24",
                        "variant": "NEW_WORLD",
                        "type": "CREDIT",
                        "issuer_name": "HSBC",
                        "issuer_country": "ZZZ",
                        "brand": "VISA",
                        "expiry_year": 2021,
                        "expiry_month": 12,
                        "card_holder_name": "MR J HOLDER",
                        "last_four": "3127",
                        "bin": "492912",
                        "currency_code": "AED"
                    },
                    "card_details": {
                        "masked_card_number": "520000****1096",
                        "expiry_year": 2024,
                        "expiry_month": 12
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116114,
        "executor_type": "THIRDPARTY",
        "executor_name": "suspendToken",
        "executor_version": "v2",
        "executor_display_name": "Suspend Token",
        "executor_description": "Suspend Token",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "{{host}}/api/v2/card/{id}/suspend",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695416863495,
        "lastModifiedTime": 1695416863495,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 115655,
        "executor_type": "THIRDPARTY",
        "executor_name": "completeaKlarnapayment",
        "executor_version": "v2",
        "executor_display_name": "Complete a Klarna payment",
        "executor_description": "Complete a Klarna payment",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/api/v2/transactions/{id}/klarna_complete",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "authorization_token": "string",
                "refusal_reason": "ACQUIRER_COMMS_FAILURE"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1695332696785,
        "lastModifiedTime": 1695339624370,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "76944d4b-89e6-48d2-ac04-675383c3eedf",
                    "instore_reference": "string",
                    "authorized_payment_method": {
                        "days": 0,
                        "no_of_installments": 0,
                        "payment_type": "INVOICE"
                    },
                    "amount": 150,
                    "blocked": true,
                    "created_at": "2019-08-24T14:15:22Z",
                    "customer": "string",
                    "details": {
                        "auto_capture": true,
                        "mid": "363162200000049"
                    },
                    "merchant_reference": "string",
                    "processor": "KLARNA",
                    "payment_product": "KLARNA",
                    "payment_product_type": "string",
                    "shipping_information": {
                        "address": "3732  Metz Lane",
                        "city": "West Roxbury",
                        "country": "US",
                        "postal_code": "1114",
                        "email": "user@example.com",
                        "first_name": "Thelma",
                        "last_name": "Tatro",
                        "phone": 8577532706,
                        "state": "MA"
                    },
                    "status": "AUTHORIZED",
                    "status_reason": "string",
                    "created_by": "string",
                    "shopper_interaction": "ECOMMERCE",
                    "geo_location": [
                        52.370216,
                        4.895168
                    ],
                    "city": "West Roxbury",
                    "country_code": "AU"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 115727,
        "executor_type": "THIRDPARTY",
        "executor_name": "reverseTransaction",
        "executor_version": "v2",
        "executor_display_name": "Reverse Transaction",
        "executor_description": "Reverse Transaction",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/api/v2/transactions/reverse",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695344456811,
        "lastModifiedTime": 1695344456811,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "76944d4b-89e6-48d2-ac04-675383c3eedf",
                    "status": "REFUNDED"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 115653,
        "executor_type": "THIRDPARTY",
        "executor_name": "voidauthorization",
        "executor_version": "v2",
        "executor_display_name": "Void authorization",
        "executor_description": "Void authorization",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/api/v2/transactions/{id}/void",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695332613920,
        "lastModifiedTime": 1695332613920,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "76944d4b-89e6-48d2-ac04-675383c3eedf",
                    "payment_provider_contract": "30b8bec8-5042-4e67-939c-5453fbe41711",
                    "amount": 0,
                    "blocked": true,
                    "created_at": "2019-08-24T14:15:22Z",
                    "customer": "string",
                    "merchant_reference": "string",
                    "payment_product": "string",
                    "payment_product_type": "string",
                    "processor_reference": "string",
                    "processor_details": {},
                    "status": "AUTHORIZED",
                    "status_reason": "string",
                    "shipping_information": {
                        "address": "3732  Metz Lane",
                        "city": "West Roxbury",
                        "country": "US",
                        "postal_code": "1114",
                        "email": "user@example.com",
                        "first_name": "Thelma",
                        "last_name": "Tatro",
                        "phone": 8577532706,
                        "state": "MA"
                    },
                    "arn": "string",
                    "authorization_code": "5B1D4C",
                    "avs_result": "A",
                    "card": "string",
                    "created_by": "string",
                    "cvv_present": true,
                    "cvv_result": "1",
                    "cavv_result": "99",
                    "stored_credential": {
                        "reference": "string",
                        "stored_credential_type": "string",
                        "scheme_reference": "string",
                        "processing_model": "UNSCHEDULED_CREDENTIAL_ON_FILE",
                        "details": "UNSCHEDULED_CREDENTIAL_ON_FILE"
                    },
                    "details": {
                        "auto_capture": true,
                        "mid": "363162200000049"
                    },
                    "reason_code": "stri",
                    "rrn": "200211654321",
                    "shopper_interaction": "ECOMMERCE",
                    "stan": "string",
                    "reversal_status": "NONE",
                    "geo_location": [
                        "52.370216",
                        "4.895168"
                    ],
                    "city": "West Roxbury",
                    "country_code": "US",
                    "additional_data": {
                        "acquirer_response_code": "stri",
                        "initiator_trace_id": "000001"
                    },
                    "token_details": {
                        "reuse_token": "stringstringstri",
                        "reuse_token_type": "CHASE",
                        "analytics_token": "string",
                        "token_expiry_date": "2019-08-24",
                        "token_scope": "0e48425a-f1bc-431a-b7d8-f866de8ba276",
                        "token_status": "DELETED",
                        "created_at": "2019-08-24",
                        "updated_at": "2019-08-24",
                        "variant": "NEW_WORLD",
                        "type": "CREDIT",
                        "issuer_name": "HSBC",
                        "issuer_country": "ZZZ",
                        "brand": "VISA",
                        "expiry_year": 2021,
                        "expiry_month": 12,
                        "card_holder_name": "MR J HOLDER",
                        "last_four": "3127",
                        "bin": "492912",
                        "currency_code": "AED"
                    },
                    "promo_code": "string",
                    "purchase_order_number": "string",
                    "issuer_instalment_result": {
                        "instalment_program": "MCINST",
                        "payment_option": "FULL",
                        "payment_plan_option": [
                            {
                                "number_of_instalments": 1,
                                "first_instalment_amount": 0,
                                "instalment_amount": 0,
                                "interest_rate": 0,
                                "annual_percentage_rate": 0,
                                "handling_fee": 0,
                                "total_amount_with_cost": 0
                            }
                        ],
                        "number_of_instalments": 0,
                        "min_number_of_instalments": 0,
                        "max_number_of_instalments": 0,
                        "interest_rate": 0,
                        "annual_percentage_rate": 0,
                        "handling_fee": 0,
                        "down_payment_amount": 0,
                        "instalment_amount": 0,
                        "total_amount_with_cost": 0
                    },
                    "balance_amount": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 115751,
        "executor_type": "THIRDPARTY",
        "executor_name": "releasePreAuthorization",
        "executor_version": "v2",
        "executor_display_name": "Release PreAuthorization",
        "executor_description": "Release PreAuthorization",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/api/v2/transactions/{id}/release",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Original preauthorized transaction id to release"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "amount": 0
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695350741568,
        "lastModifiedTime": 1695350741568,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "76944d4b-89e6-48d2-ac04-675383c3eedf",
                    "payment_provider_contract": "30b8bec8-5042-4e67-939c-5453fbe41711",
                    "amount": 0,
                    "blocked": true,
                    "created_at": "2019-08-24T14:15:22Z",
                    "customer": "string",
                    "merchant_reference": "string",
                    "payment_product": "string",
                    "payment_product_type": "string",
                    "processor_reference": "string",
                    "processor_details": {},
                    "status": "AUTHORIZED",
                    "status_reason": "string",
                    "shipping_information": {
                        "address": "3732  Metz Lane",
                        "city": "West Roxbury",
                        "country": "US",
                        "postal_code": "1114",
                        "email": "user@example.com",
                        "first_name": "Thelma",
                        "last_name": "Tatro",
                        "phone": 8577532706,
                        "state": "MA"
                    },
                    "arn": "string",
                    "authorization_code": "5B1D4C",
                    "avs_result": "A",
                    "card": "string",
                    "created_by": "string",
                    "cvv_present": true,
                    "cvv_result": "1",
                    "cavv_result": "99",
                    "stored_credential": {
                        "reference": "string",
                        "stored_credential_type": "string",
                        "scheme_reference": "string",
                        "processing_model": "UNSCHEDULED_CREDENTIAL_ON_FILE",
                        "details": "UNSCHEDULED_CREDENTIAL_ON_FILE"
                    },
                    "details": {
                        "auto_capture": true,
                        "mid": "363162200000049"
                    },
                    "reason_code": "stri",
                    "rrn": "200211654321",
                    "shopper_interaction": "ECOMMERCE",
                    "stan": "string",
                    "reversal_status": "NONE",
                    "geo_location": [
                        "52.370216",
                        "4.895168"
                    ],
                    "city": "West Roxbury",
                    "country_code": "US",
                    "additional_data": {
                        "acquirer_response_code": "stri",
                        "initiator_trace_id": "000001"
                    },
                    "token_details": {
                        "reuse_token": "stringstringstri",
                        "reuse_token_type": "CHASE",
                        "analytics_token": "string",
                        "token_expiry_date": "2019-08-24",
                        "token_scope": "0e48425a-f1bc-431a-b7d8-f866de8ba276",
                        "token_status": "DELETED",
                        "created_at": "2019-08-24",
                        "updated_at": "2019-08-24",
                        "variant": "NEW_WORLD",
                        "type": "CREDIT",
                        "issuer_name": "HSBC",
                        "issuer_country": "ZZZ",
                        "brand": "VISA",
                        "expiry_year": 2021,
                        "expiry_month": 12,
                        "card_holder_name": "MR J HOLDER",
                        "last_four": "3127",
                        "bin": "492912",
                        "currency_code": "AED"
                    },
                    "promo_code": "string",
                    "purchase_order_number": "string",
                    "issuer_instalment_result": {
                        "instalment_program": "MCINST",
                        "payment_option": "FULL",
                        "payment_plan_option": [
                            {
                                "number_of_instalments": 1,
                                "first_instalment_amount": 0,
                                "instalment_amount": 0,
                                "interest_rate": 0,
                                "annual_percentage_rate": 0,
                                "handling_fee": 0,
                                "total_amount_with_cost": 0
                            }
                        ],
                        "number_of_instalments": 0,
                        "min_number_of_instalments": 0,
                        "max_number_of_instalments": 0,
                        "interest_rate": 0,
                        "annual_percentage_rate": 0,
                        "handling_fee": 0,
                        "down_payment_amount": 0,
                        "instalment_amount": 0,
                        "total_amount_with_cost": 0
                    },
                    "balance_amount": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116104,
        "executor_type": "THIRDPARTY",
        "executor_name": "addfundstoacard",
        "executor_version": "v2",
        "executor_display_name": "Add funds to a card",
        "executor_description": "Add funds to a card",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/api/v2/transactions/stored-value-card/load",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "payment_provider_contract": "30b8bec8-5042-4e67-939c-5453fbe41711",
                "customer": "0a57b387-2ba7-4f65-be2f-e176bb49d2ce",
                "dynamic_descriptor": "string",
                "merchant_reference": "7a1db7a8-6f24-4bc5-a51b-cef33fc05140",
                "shopper_interaction": "ECOMMERCE",
                "currency_code": "AED",
                "card_brand": "string",
                "encrypted_card": "U3dhZ2dlciByb2Nrcw==",
                "public_key_alias": "string",
                "token_preference": {
                    "token_scope": "0e48425a-f1bc-431a-b7d8-f866de8ba276",
                    "reuse_token_type": "CHASE",
                    "token_type": "REUSE",
                    "token_expiry_date": "2019-08-24"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695416365005,
        "lastModifiedTime": 1695416365005,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "PATCH",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string",
                    "balance_amount": 0,
                    "created_at": "2019-08-24T14:15:22Z",
                    "customer": "string",
                    "merchant_reference": "string",
                    "processor": "string",
                    "processor_reference": "string",
                    "processor_details": {},
                    "status": "INITIATED",
                    "status_reason": "string",
                    "reason_code": "stri",
                    "arn": "string",
                    "authorization_code": "5B1D4C",
                    "rrn": "string",
                    "shopper_interaction": "ecommerce",
                    "stan": 0,
                    "token_details": {
                        "reuse_token": "stringstringstri",
                        "reuse_token_type": "CHASE",
                        "analytics_token": "string",
                        "token_expiry_date": "2019-08-24",
                        "token_scope": "0e48425a-f1bc-431a-b7d8-f866de8ba276",
                        "token_status": "DELETED",
                        "created_at": "2019-08-24",
                        "updated_at": "2019-08-24",
                        "variant": "NEW_WORLD",
                        "type": "CREDIT",
                        "issuer_name": "HSBC",
                        "issuer_country": "ZZZ",
                        "brand": "VISA",
                        "expiry_year": 2021,
                        "expiry_month": 12,
                        "card_holder_name": "MR J HOLDER",
                        "last_four": "3127",
                        "bin": "492912",
                        "currency_code": "AED"
                    },
                    "card_details": {
                        "masked_card_number": "520000****1096",
                        "expiry_year": 2024,
                        "expiry_month": 12
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116111,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateTokenDetails",
        "executor_version": "v2",
        "executor_display_name": "Update Token Details",
        "executor_description": "Update Token Details",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "{{host}}/api/v2/card/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "encrypted_card": "U3dhZ2dlciByb2Nrcw==",
                "cvv": "MR J HOLDER",
                "card_holder_name": "MR J HOLDER",
                "card_holder_email": "user@example.com",
                "expiry_month": 12,
                "expiry_year": 2021,
                "token_expiry_date": "2019-08-24",
                "public_key_alias": "string",
                "scheme_token_action": "ACTIVATE"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695416727713,
        "lastModifiedTime": 1695416727713,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "bin": "492912",
                    "expiry_month": 12,
                    "expiry_year": 2021,
                    "last_four": "3127",
                    "card_holder_name": "MR J HOLDER",
                    "card_holder_email": "user@example.com",
                    "updated_at": "2019-08-24",
                    "created_at": "2019-08-24",
                    "token_expiry_date": "2019-08-24",
                    "token_status": "ACTIVE",
                    "bin_details": {
                        "bin": "492912",
                        "brand": "VISA",
                        "issuer_country": "ZZZ",
                        "issuer_name": "HSBC",
                        "last_four": "3127",
                        "type": "CREDIT",
                        "variant": "NEW_WORLD"
                    },
                    "scheme_token": {
                        "network_token": "stringstring",
                        "status": "DELETED",
                        "expiry_month": "12",
                        "expiry_year": "2021",
                        "payment_account_reference": "string"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116106,
        "executor_type": "THIRDPARTY",
        "executor_name": "activateagiftcard",
        "executor_version": "v2",
        "executor_display_name": "Activate a gift card",
        "executor_description": "Activate a gift card",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/api/v2/transactions/stored-value-card/activate",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "payment_provider_contract": "30b8bec8-5042-4e67-939c-5453fbe41711",
                "customer": "0a57b387-2ba7-4f65-be2f-e176bb49d2ce",
                "merchant_reference": "7a1db7a8-6f24-4bc5-a51b-cef33fc05140",
                "dynamic_descriptor": "string",
                "shopper_interaction": "ECOMMERCE",
                "currency_code": "AED",
                "card_brand": "string",
                "promo_code": "string",
                "amount": 0,
                "activate_now": true,
                "encrypted_card": "U3dhZ2dlciByb2Nrcw==",
                "token_preference": {
                    "token_scope": "0e48425a-f1bc-431a-b7d8-f866de8ba276",
                    "reuse_token_type": "CHASE",
                    "token_type": "REUSE",
                    "token_expiry_date": "2019-08-24"
                },
                "public_key_alias": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695416454379,
        "lastModifiedTime": 1695416454379,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "PATCH",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string",
                    "balance_amount": 0,
                    "created_at": "2019-08-24T14:15:22Z",
                    "customer": "string",
                    "merchant_reference": "string",
                    "processor": "string",
                    "processor_reference": "string",
                    "processor_details": {},
                    "status": "INITIATED",
                    "status_reason": "string",
                    "arn": "string",
                    "authorization_code": "5B1D4C",
                    "rrn": "string",
                    "reason_code": "stri",
                    "shopper_interaction": "ecommerce",
                    "stan": 0,
                    "promo_code": "string",
                    "token_details": {
                        "reuse_token": "stringstringstri",
                        "reuse_token_type": "CHASE",
                        "analytics_token": "string",
                        "token_expiry_date": "2019-08-24",
                        "token_scope": "0e48425a-f1bc-431a-b7d8-f866de8ba276",
                        "token_status": "DELETED",
                        "created_at": "2019-08-24",
                        "updated_at": "2019-08-24",
                        "variant": "NEW_WORLD",
                        "type": "CREDIT",
                        "issuer_name": "HSBC",
                        "issuer_country": "ZZZ",
                        "brand": "VISA",
                        "expiry_year": 2021,
                        "expiry_month": 12,
                        "card_holder_name": "MR J HOLDER",
                        "last_four": "3127",
                        "bin": "492912",
                        "currency_code": "AED"
                    },
                    "card_details": {
                        "masked_card_number": "520000****1096",
                        "expiry_year": 2024,
                        "expiry_month": 12
                    },
                    "amount": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116107,
        "executor_type": "THIRDPARTY",
        "executor_name": "createUpdateTokenDetails",
        "executor_version": "v2",
        "executor_display_name": "Create/Update Token Details",
        "executor_description": "Create/Update Token Details",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "{{host}}/api/v2/card",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "token_scope": "0e48425a-f1bc-431a-b7d8-f866de8ba276",
                "encrypted_card": "U3dhZ2dlciByb2Nrcw==",
                "token_type": "REUSE",
                "reuse_token_type": "CHASE",
                "token_expiry_date": "2019-08-24",
                "public_key_alias": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695416565016,
        "lastModifiedTime": 1695416565016,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "reuse_token": "string",
                    "analytics_token": "string",
                    "bin": "492912",
                    "expiry_month": 12,
                    "expiry_year": 2021,
                    "last_four": "3127",
                    "card_holder_name": "MR J HOLDER",
                    "bin_details": {
                        "bin": "492912",
                        "brand": "VISA",
                        "issuer_country": "ZZZ",
                        "issuer_name": "HSBC",
                        "last_four": "3127",
                        "type": "CREDIT",
                        "variant": "NEW_WORLD"
                    },
                    "updated_at": "2019-08-24",
                    "created_at": "2019-08-24",
                    "token_expiry_date": "2019-08-24",
                    "reuse_token_type": "CHASE",
                    "token_scope": "0e48425a-f1bc-431a-b7d8-f866de8ba276",
                    "token_status": "ACTIVE"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 115648,
        "executor_type": "THIRDPARTY",
        "executor_name": "initiateaMobilePaypayment",
        "executor_version": "v2",
        "executor_display_name": "Initiate a MobilePay payment",
        "executor_description": "Initiate a MobilePay payment",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/api/v2/transactions/mobilepay",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "payment_provider_contract": "30b8bec8-5042-4e67-939c-5453fbe41711",
                "threed_secure": {
                    "eci_flag": "00",
                    "enrolled": "string",
                    "cavv": "string",
                    "cavv_algorithm": "string",
                    "pares_status": "string",
                    "xid": "string",
                    "ds_transaction_id": "string",
                    "threeds_version": "1.0.2"
                },
                "redirect_url": "string",
                "amount": 0,
                "auth_type": "PRE_AUTH",
                "capture_now": false,
                "customer": "0a57b387-2ba7-4f65-be2f-e176bb49d2ce",
                "customer_ip": "127.0.0.1",
                "dynamic_descriptor": "string",
                "merchant_reference": "7a1db7a8-6f24-4bc5-a51b-cef33fc05140",
                "shipping_information": {
                    "address": "3732  Metz Lane",
                    "city": "West Roxbury",
                    "country": "US",
                    "postal_code": "1114",
                    "email": "user@example.com",
                    "first_name": "Thelma",
                    "last_name": "Tatro",
                    "phone": 8577532706,
                    "state": "MA"
                },
                "user_agent": "string",
                "sales_description": "string",
                "currency_code": "EUR",
                "sca_compliance_level": "NONE",
                "sca_exemption": "1"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695332052089,
        "lastModifiedTime": 1695332052089,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "76944d4b-89e6-48d2-ac04-675383c3eedf",
                    "redirect_url": "string",
                    "amount": {
                        "amount": 0
                    },
                    "blocked": true,
                    "created_at": "2019-08-24T14:15:22Z",
                    "customer": "string",
                    "details": {
                        "auto_capture": true,
                        "mid": "363162200000049"
                    },
                    "merchant_reference": "7a1db7a8-6f24-4bc5-a51b-cef33fc05140",
                    "processor": "NETS",
                    "payment_product": "CARD",
                    "payment_product_type": "string",
                    "shipping_information": {
                        "address": "3732  Metz Lane",
                        "city": "West Roxbury",
                        "country": "US",
                        "postal_code": "1114",
                        "email": "user@example.com",
                        "first_name": "Thelma",
                        "last_name": "Tatro",
                        "phone": 8577532706,
                        "state": "MA"
                    },
                    "status": "AUTHORIZED",
                    "status_reason": "string",
                    "created_by": "string",
                    "shopper_interaction": "ECOMMERCE",
                    "geo_location": [
                        52.370216,
                        4.895168
                    ],
                    "city": "West Roxbury",
                    "country_code": "AU"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 115723,
        "executor_type": "THIRDPARTY",
        "executor_name": "unmatchedrefund",
        "executor_version": "v2",
        "executor_display_name": "Unmatched refund",
        "executor_description": "Unmatched refund",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/api/v2/transactions/refund",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "payment_provider_contract": "30b8bec8-5042-4e67-939c-5453fbe41711",
                "card_brand": "string",
                "brand_choice": "MERCHANT",
                "amount": 0,
                "detailed_amount": {
                    "tax_amount": "20.50"
                },
                "currency_code": "AED",
                "customer": "0a57b387-2ba7-4f65-be2f-e176bb49d2ce",
                "shopper_interaction": "ECOMMERCE",
                "reason": "string",
                "merchant_reference": "7a1db7a8-6f24-4bc5-a51b-cef33fc05140",
                "line_items": [
                    {
                        "name": "string",
                        "quantity": 0,
                        "unit_price": 0,
                        "unit_price_tax": 0,
                        "tax_rate": "15.10",
                        "total_tax_amount": 0,
                        "total_amount": 0,
                        "image_url": "string",
                        "item_url": "string",
                        "sku": "string",
                        "description": "string",
                        "category": "DIGITAL_GOODS"
                    }
                ],
                "receipt_type": "FULL_RECEIPT",
                "tax_indicator": "TAX_PROVIDED",
                "purchase_order_number": "string",
                "promo_code": "string",
                "encrypted_card": "U3dhZ2dlciByb2Nrcw==",
                "encrypted_svc_access_code": "string",
                "public_key_alias": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695343926849,
        "lastModifiedTime": 1695343926849,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator.",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 0,
                    "details": {},
                    "message": "string",
                    "timestamp": "2019-08-24"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "76944d4b-89e6-48d2-ac04-675383c3eedf",
                    "payment_provider_contract": "30b8bec8-5042-4e67-939c-5453fbe41711",
                    "amount": 0,
                    "blocked": true,
                    "created_at": "2019-08-24T14:15:22Z",
                    "customer": "string",
                    "merchant_reference": "string",
                    "payment_product": "string",
                    "payment_product_type": "string",
                    "processor_reference": "string",
                    "processor_details": {},
                    "status": "AUTHORIZED",
                    "status_reason": "string",
                    "shipping_information": {
                        "address": "3732  Metz Lane",
                        "city": "West Roxbury",
                        "country": "US",
                        "postal_code": "1114",
                        "email": "user@example.com",
                        "first_name": "Thelma",
                        "last_name": "Tatro",
                        "phone": 8577532706,
                        "state": "MA"
                    },
                    "arn": "string",
                    "authorization_code": "5B1D4C",
                    "avs_result": "A",
                    "card": "string",
                    "created_by": "string",
                    "cvv_present": true,
                    "cvv_result": "1",
                    "cavv_result": "99",
                    "stored_credential": {
                        "reference": "string",
                        "stored_credential_type": "string",
                        "scheme_reference": "string",
                        "processing_model": "UNSCHEDULED_CREDENTIAL_ON_FILE",
                        "details": "UNSCHEDULED_CREDENTIAL_ON_FILE"
                    },
                    "details": {
                        "auto_capture": true,
                        "mid": "363162200000049"
                    },
                    "reason_code": "stri",
                    "rrn": "200211654321",
                    "shopper_interaction": "ECOMMERCE",
                    "stan": "string",
                    "reversal_status": "NONE",
                    "geo_location": [
                        "52.370216",
                        "4.895168"
                    ],
                    "city": "West Roxbury",
                    "country_code": "US",
                    "additional_data": {
                        "acquirer_response_code": "stri",
                        "initiator_trace_id": "000001"
                    },
                    "token_details": {
                        "reuse_token": "stringstringstri",
                        "reuse_token_type": "CHASE",
                        "analytics_token": "string",
                        "token_expiry_date": "2019-08-24",
                        "token_scope": "0e48425a-f1bc-431a-b7d8-f866de8ba276",
                        "token_status": "DELETED",
                        "created_at": "2019-08-24",
                        "updated_at": "2019-08-24",
                        "variant": "NEW_WORLD",
                        "type": "CREDIT",
                        "issuer_name": "HSBC",
                        "issuer_country": "ZZZ",
                        "brand": "VISA",
                        "expiry_year": 2021,
                        "expiry_month": 12,
                        "card_holder_name": "MR J HOLDER",
                        "last_four": "3127",
                        "bin": "492912",
                        "currency_code": "AED"
                    },
                    "promo_code": "string",
                    "purchase_order_number": "string",
                    "issuer_instalment_result": {
                        "instalment_program": "MCINST",
                        "payment_option": "FULL",
                        "payment_plan_option": [
                            {
                                "number_of_instalments": 1,
                                "first_instalment_amount": 0,
                                "instalment_amount": 0,
                                "interest_rate": 0,
                                "annual_percentage_rate": 0,
                                "handling_fee": 0,
                                "total_amount_with_cost": 0
                            }
                        ],
                        "number_of_instalments": 0,
                        "min_number_of_instalments": 0,
                        "max_number_of_instalments": 0,
                        "interest_rate": 0,
                        "annual_percentage_rate": 0,
                        "handling_fee": 0,
                        "down_payment_amount": 0,
                        "instalment_amount": 0,
                        "total_amount_with_cost": 0
                    },
                    "balance_amount": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116032,
        "executor_type": "THIRDPARTY",
        "executor_name": "issuerInstalmentSelection",
        "executor_version": "v2",
        "executor_display_name": "Issuer Instalment Selection",
        "executor_description": "Confirm selection of instalment option where multiple issuer instalment options proposed.",
        "executor_category": "VerifoneeCommerceAPI",
        "executor_category_group": "VerifoneeCommerceAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/api/v2/transactions/{id}/issuer_instalment_selection",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Original transaction id to apply instalment selection to."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "issuer_instalment": {
                    "instalment_program": "MCINST",
                    "number_of_instalments": 0,
                    "down_payment_amount": 0,
                    "first_instalment_amount": 0,
                    "instalment_amount": 0,
                    "interest_rate": 0,
                    "annual_percentage_rate": 0,
                    "handling_fee": 0,
                    "total_amount_with_cost": 0
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695414941534,
        "lastModifiedTime": 1695414941535,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "76944d4b-89e6-48d2-ac04-675383c3eedf",
                    "payment_provider_contract": "30b8bec8-5042-4e67-939c-5453fbe41711",
                    "amount": 0,
                    "blocked": true,
                    "created_at": "2019-08-24T14:15:22Z",
                    "customer": "string",
                    "merchant_reference": "string",
                    "payment_product": "string",
                    "payment_product_type": "string",
                    "processor_reference": "string",
                    "processor_details": {},
                    "status": "AUTHORIZED",
                    "status_reason": "string",
                    "shipping_information": {
                        "address": "3732  Metz Lane",
                        "city": "West Roxbury",
                        "country": "US",
                        "postal_code": "1114",
                        "email": "user@example.com",
                        "first_name": "Thelma",
                        "last_name": "Tatro",
                        "phone": 8577532706,
                        "state": "MA"
                    },
                    "arn": "string",
                    "authorization_code": "5B1D4C",
                    "avs_result": "A",
                    "card": "string",
                    "created_by": "string",
                    "cvv_present": true,
                    "cvv_result": "1",
                    "cavv_result": "99",
                    "stored_credential": {
                        "reference": "string",
                        "stored_credential_type": "string",
                        "scheme_reference": "string",
                        "processing_model": "UNSCHEDULED_CREDENTIAL_ON_FILE",
                        "details": "UNSCHEDULED_CREDENTIAL_ON_FILE"
                    },
                    "details": {
                        "auto_capture": true,
                        "mid": "363162200000049"
                    },
                    "reason_code": "stri",
                    "rrn": "200211654321",
                    "shopper_interaction": "ECOMMERCE",
                    "stan": "string",
                    "reversal_status": "NONE",
                    "geo_location": [
                        "52.370216",
                        "4.895168"
                    ],
                    "city": "West Roxbury",
                    "country_code": "US",
                    "additional_data": {
                        "acquirer_response_code": "stri",
                        "initiator_trace_id": "000001"
                    },
                    "token_details": {
                        "reuse_token": "stringstringstri",
                        "reuse_token_type": "CHASE",
                        "analytics_token": "string",
                        "token_expiry_date": "2019-08-24",
                        "token_scope": "0e48425a-f1bc-431a-b7d8-f866de8ba276",
                        "token_status": "DELETED",
                        "created_at": "2019-08-24",
                        "updated_at": "2019-08-24",
                        "variant": "NEW_WORLD",
                        "type": "CREDIT",
                        "issuer_name": "HSBC",
                        "issuer_country": "ZZZ",
                        "brand": "VISA",
                        "expiry_year": 2021,
                        "expiry_month": 12,
                        "card_holder_name": "MR J HOLDER",
                        "last_four": "3127",
                        "bin": "492912",
                        "currency_code": "AED"
                    },
                    "promo_code": "string",
                    "purchase_order_number": "string",
                    "issuer_instalment_result": {
                        "instalment_program": "MCINST",
                        "payment_option": "FULL",
                        "payment_plan_option": [
                            {
                                "number_of_instalments": 1,
                                "first_instalment_amount": 0,
                                "instalment_amount": 0,
                                "interest_rate": 0,
                                "annual_percentage_rate": 0,
                                "handling_fee": 0,
                                "total_amount_with_cost": 0
                            }
                        ],
                        "number_of_instalments": 0,
                        "min_number_of_instalments": 0,
                        "max_number_of_instalments": 0,
                        "interest_rate": 0,
                        "annual_percentage_rate": 0,
                        "handling_fee": 0,
                        "down_payment_amount": 0,
                        "instalment_amount": 0,
                        "total_amount_with_cost": 0
                    },
                    "balance_amount": 0
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116167,
        "executor_type": "THIRDPARTY",
        "executor_name": "lookupAPIfromDSecurelookup",
        "executor_version": "v2",
        "executor_display_name": "Lookup API from 3-D Secure lookup",
        "executor_description": "Lookup API from 3-D Secure lookup",
        "executor_category": "threeDSecureAPI",
        "executor_category_group": "threeDSecureAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/v2/lookup",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "account_age_indicator": "01",
                "account_change_date": "2019-08-24",
                "account_change_indicator": "01",
                "account_create_date": "2019-08-24",
                "account_id": "string",
                "account_purchases": 9999,
                "account_pwd_change_date": "2019-08-24",
                "account_pwd_change_indicator": "01",
                "acs_window_size": "01",
                "add_card_attempts": 999,
                "address_match": "Y",
                "alias": "string",
                "alternate_authentication_data": "string",
                "alternate_authentication_date": "2019-08-24",
                "alternate_authentication_method": "01",
                "authentication_indicator": "01",
                "amount": 9007199254740991,
                "billing_first_name": "string",
                "billing_last_name": "string",
                "billing_phone": "string",
                "billing_address_1": "string",
                "billing_address_2": "string",
                "billing_address_3": "string",
                "billing_city": "string",
                "billing_postal_code": "string",
                "billing_state": "string",
                "billing_country_code": "string",
                "card": "string",
                "encrypted_card": "string",
                "public_key_alias": "string",
                "reuse_token": "stringstringstri",
                "currency_code": "str",
                "card_type": "VSA",
                "category_code": 9999,
                "challenge_indicator": "01",
                "device_info_id": "string",
                "delivery_email": "string",
                "delivery_time_frame": "01",
                "device_channel": "SDK",
                "device_data_info": {
                    "browser_java_enabled": true,
                    "browser_header": "string",
                    "browser_language": "string",
                    "browser_color_depth": "st",
                    "browser_screen_height": "string",
                    "browser_screen_width": "string",
                    "browser_time_zone": "strin",
                    "user_agent": "string",
                    "ip_address": "string",
                    "browser_javascript_enabled": true
                },
                "email": "string",
                "fraud_activity": "01",
                "gift_card_amount": 999999999999999,
                "gift_card_count": 99,
                "gift_card_currency_code": "str",
                "installment": 2,
                "merchant_reference": "string",
                "merchant_score": "string",
                "message_category": "01",
                "phone_number": "string",
                "payment_account_age": "2019-08-24",
                "payment_account_indicator": "01",
                "payment_use_case": "01",
                "pre_order_date": "2019-08-24",
                "pre_order_indicator": "01",
                "prior_authentication_data": "string",
                "prior_authentication_method": "01",
                "prior_authentication_ref": "string",
                "prior_authentication_time": "2019-08-24",
                "product_code": "PHY",
                "purchase_date": "2019-08-24",
                "recurring_end": "2019-08-24",
                "recurring_frequency": 9999,
                "reorder_indicator": "01",
                "requestor_id": "string",
                "requestor_name": "string",
                "sdk_max_timeout": 99,
                "shipping_address_1": "string",
                "shipping_address_2": "string",
                "shipping_address_3": "string",
                "shipping_address_usage_date": "2019-08-24",
                "shipping_address_usage_indicator": "01",
                "shipping_city": "string",
                "shipping_country_code": "string",
                "shipping_method_indicator": "01",
                "shipping_name_indicator": "01",
                "shipping_postal_code": "string",
                "shipping_state": "string",
                "threeds_contract_id": "string",
                "three_ri_indicator": "01",
                "threeds_version": "1.0.2",
                "token": "string",
                "transaction_mode": "M",
                "transaction_count_day": 999,
                "transaction_count_year": 999,
                "total_items": "st",
                "work_phone": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1695420711551,
        "lastModifiedTime": 1695421830872,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "acs_rendering_type": "string",
                    "acs_transaction_id": "string",
                    "acs_url": "string",
                    "authentication_id": "string",
                    "authentication_type": "string",
                    "authorization_payload": "string",
                    "cardholder_info": "string",
                    "cavv": "string",
                    "cavv_algorithm": "string",
                    "challenge_required": "string",
                    "card_brand": "string",
                    "ds_transaction_id": "string",
                    "eci_flag": "string",
                    "enrolled": "string",
                    "error_desc": "string",
                    "error_no": "string",
                    "network_score": "st",
                    "order_id": "string",
                    "pares_status": "string",
                    "payload": "string",
                    "reason_code": "string",
                    "reason_desc": "string",
                    "signature_verification": "string",
                    "status_reason": "string",
                    "third_party_token": "string",
                    "threeds_version": "string",
                    "token": "string",
                    "transaction_id": "string",
                    "xid": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116171,
        "executor_type": "THIRDPARTY",
        "executor_name": "validateJWTforDSClientSDK",
        "executor_version": "v2",
        "executor_display_name": "Validate JWT for 3DS Client SDK",
        "executor_description": "Validate JWT for 3DS Client SDK",
        "executor_category": "threeDSecureAPI",
        "executor_category_group": "threeDSecureAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/v2/jwt/validate",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "authentication_id": "string",
                "jwt": "string",
                "threeds_contract_id": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1695420928792,
        "lastModifiedTime": 1695421918538,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "authentication_id": "string",
                    "action_code": "string",
                    "error_no": "string",
                    "error_desc": "string",
                    "validation_result": {
                        "authorization_payload": "string",
                        "cavv": "string",
                        "cavv_algorithm": "string",
                        "eci_flag": "string",
                        "enrolled": "string",
                        "pares_status": "string",
                        "reason_code": "string",
                        "reason_desc": "string",
                        "signature_verification": "string",
                        "xid": "string"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116163,
        "executor_type": "THIRDPARTY",
        "executor_name": "listThreeDSAuthentications",
        "executor_version": "v2",
        "executor_display_name": "List ThreeDSAuthentications.",
        "executor_description": "List ThreeDSAuthentications.",
        "executor_category": "threeDSecureAPI",
        "executor_category_group": "threeDSecureAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/v2/3d",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "limit",
                "value": "",
                "description": "The maximum number of values that can be sent in the response ( maximum: 10000 )",
                "req": false
            },
            {
                "key": "skip",
                "value": "",
                "description": "skip query params",
                "req": false
            },
            {
                "key": "sort",
                "value": "",
                "description": "Items Enum: \"_id\" \"amount\" \"card\" \"created_at\" \"currency_code\" \"entity_id\" \"threeds_contract_id\" \"transaction_id\" \"authentication.acs_rendering_type\" \"authentication.acs_transaction_id\" \"authentication.acs_url\" \"authentication.authentication_type\" \"authentication.authorization_payload\" \"authentication.card_brand\" \"authentication.cardholder_info\" \"authentication.cavv_algorithm\" \"authentication.cavv\" \"authentication.challenge_cancel\" \"authentication.challenge_required\" \"authentication.ds_transaction_id\" \"authentication.eci_flag\" \"authentication.enrolled\" \"authentication.error_desc\" \"authentication.error_no\" \"authentication.network_score\" \"authentication.order_id\" \"authentication.pares_status\" \"authentication.payload\" \"authentication.reason_code\" \"authentication.reason_desc\" \"authentication.signature_verification\" \"authentication.status_reason\" \"authentication.threeds_version\" \"authentication.xid\" \"-_id\" \"-amount\" \"-card\" \"-created_at\" \"-currency_code\" \"-entity_id\" \"-threeds_contract_id\" \"-transaction_id\" \"-authentication.acs_rendering_type\" \"-authentication.acs_transaction_id\" \"-authentication.acs_url\" \"-authentication.authentication_type\" \"-authentication.authorization_payload\" \"-authentication.card_brand\" \"-authentication.cardholder_info\" \"-authentication.cavv_algorithm\" \"-authentication.cavv\" \"-authentication.challenge_cancel\" \"-authentication.challenge_required\" \"-authentication.ds_transaction_id\" \"-authentication.eci_flag\" \"-authentication.enrolled\" \"-authentication.error_desc\" \"-authentication.error_no\" \"-authentication.network_score\" \"-authentication.order_id\" \"-authentication.pares_status\" \"-authentication.payload\" \"-authentication.reason_code\" \"-authentication.reason_desc\" \"-authentication.signature_verification\" \"-authentication.status_reason\" \"-authentication.threeds_version\" \"-authentication.xid\" _sort query params",
                "req": false
            },
            {
                "key": "id",
                "value": "",
                "description": "ThreeDSAuthentication id",
                "req": false
            },
            {
                "key": "amount",
                "value": "",
                "description": "The amount of the transaction.",
                "req": false
            },
            {
                "key": "card",
                "value": "",
                "description": "The ID of the card that is checked for enrollment.",
                "req": false
            },
            {
                "key": "created_at",
                "value": "",
                "description": "The time at which the authentication was created.",
                "req": false
            },
            {
                "key": "currency_code",
                "value": "",
                "description": "Alphabetical ISO 4217 currency code for the sale amount.",
                "req": false
            },
            {
                "key": "entity_id",
                "value": "",
                "description": "The ID of the entity, which this authentication belongs to.",
                "req": false
            },
            {
                "key": "threeds_contract_id",
                "value": "",
                "description": "The ID of the threeDSContractId used.",
                "req": false
            },
            {
                "key": "transaction_id",
                "value": "",
                "description": "To complete the transaction, the value is required to be passed on the Cardinal.Continue().",
                "req": false
            },
            {
                "key": "authentication.acs_rendering_type\t",
                "value": "",
                "description": "Identifies the UI Type the ACS will use to complete the challenge. NOTE: Only available for App transactions using the Cardinal Mobile SDK and is optional for an Issuer to return.",
                "req": false
            },
            {
                "key": "authentication.acs_transaction_id\t",
                "value": "",
                "description": "Unique transaction identifier assigned by the ACS to identify a single transaction.",
                "req": false
            },
            {
                "key": "authentication.acs_url\t",
                "value": "",
                "description": "The fully qualified URL to redirect the Consumer to complete the Consumer Authentication transaction. NOTE: Available if Enrolled = Y",
                "req": false
            },
            {
                "key": "authentication.authentication_type\t",
                "value": "",
                "description": "Indicates the type of authentication that will be used to challenge the card holder. Possible Values: 01 - Static 02 - Dynamic 03 - OOB (Out of Band)",
                "req": false
            },
            {
                "key": "authentication.authorization_payload\t",
                "value": "",
                "description": "The Base64 encoded JSON Payload of CB specific Authorization Values returned in the Frictionless Flow.",
                "req": false
            },
            {
                "key": "authentication.card_brand\t",
                "value": "",
                "description": "Card Brand",
                "req": false
            },
            {
                "key": "authentication.cardholder_info\t",
                "value": "",
                "description": "Additional text provided by the Issuing Bank to the Cardholder during a Frictionless transaction and was not authenticated by the ACS. The Issuing Bank can optionally support this value.",
                "req": false
            },
            {
                "key": "authentication.cavv_algorithm\t",
                "value": "",
                "description": "Indicates the algorithm used to generate the CAVV value. Possible Values: 2 - CVV with ATN 3 - Mastercard SPA algorithm",
                "req": false
            },
            {
                "key": "authentication.cavv\t",
                "value": "",
                "description": "Cardholder Authentication Verification Value (CAVV). This value should be appended to the authorization message signifying that the transaction has been successfully authenticated. It will be encoded according to the Merchant's configuration in either Base64 encoding or Hex encoding. A Base64 encoding Merchant configuration will produce values of 28 or 32 characters. A Hex encoding Merchant configuration will produce values of 40 or 48 characters. The value when decoded will either be 20 bytes for CAVV.",
                "req": false
            },
            {
                "key": "authentication.challenge_cancel",
                "value": "",
                "description": "An indicator as to why the transaction was canceled. Possible Values: 01 - Cardholder selected Cancel 02 - Reserved for future EMVCo use (values invalid until defined by EMVCo). 03 - Transaction Timed Out\u2014Decoupled Authentication 04 - Transaction timed out at ACS\u2014other timeouts 05 - Transaction Timed out at ACS - First CReq not received by ACS 06 - Transaction Error 07 - Unknown 08 = Transaction Timed Out at SDK NOTE: Only present when the Consumer cancels the challenge. Decoupled authentication is not supported at this time.",
                "req": false
            },
            {
                "key": "authentication.challenge_required",
                "value": "",
                "description": "Indicates whether a challenge is required to complete authentication. For example, regional mandates. Possible Values: Y - Challenge Required N - Challenge Not Required",
                "req": false
            },
            {
                "key": "authentication.ds_transaction_id\t",
                "value": "",
                "description": "Unique transaction identifier assigned by the Directory Server (DS) to identify a single transaction. NOTE: Required for Mastercard Identity Check transaction in Authorization - Only available in EMV 3DS (3DS 2.0) transactions",
                "req": false
            },
            {
                "key": "authentication.eci_flag\t",
                "value": "",
                "description": "Electronic Commerce Indicator (ECI). The ECI value is part of the 2 data elements that indicate the transaction was processed electronically. This should be passed on the authorization transaction to the Gateway/Processor. Possible Values: 02 or 05 - Fully Authenticated Transaction 01 or 06 - Attempted Authentication Transaction 00 or 07 - Non 3-D Secure Transaction Mastercard - 02, 01, 00 VISA - 05, 06, 07 AMEX - 05, 06, 07 JCB - 05, 06, 07 DINERS CLUB - 05, 06, 07 NOTE: 3DS 2.0 field",
                "req": false
            },
            {
                "key": "authentication.enrolled\t",
                "value": "",
                "description": "Status of Authentication eligibility. Possible Values: Y - Yes, Bank is participating in 3-D Secure protocol and will return the ACSUrl N - No, Bank is not participating in 3-D Secure protocol U - Unavailable, The DS or ACS is not available for authentication at the time of the request B - Bypass, Merchant authentication rule is triggered to bypass authentication in this use case NOTE: If the Enrolled value is NOT Y, then the Consumer is NOT eligible for Authentication.",
                "req": false
            },
            {
                "key": "authentication.error_desc\t",
                "value": "",
                "description": "Application error description for the associated error number(s). NOTE: Multiple error descriptions are separated by a comma.",
                "req": false
            },
            {
                "key": "authentication.error_no\t",
                "value": "",
                "description": "Application error number(s). A non-zero value represents the error encountered while attempting to process the message request. NOTE: Multiple error numbers are separated by a comma.",
                "req": false
            },
            {
                "key": "authentication.network_score\t",
                "value": "",
                "description": "The global score calculated by the CB Scoring platform",
                "req": false
            },
            {
                "key": "authentication.order_id\t",
                "value": "",
                "description": "3DS server generated order identifier. Used to link multiple actions on a single order to a single identifier. Mod-10 compliant and unique BIN range to 3DS services.",
                "req": false
            },
            {
                "key": "authentication.pares_status\t",
                "value": "",
                "description": "Transactions status result identifier. Possible Values: Y - Successful Authentication N - Failed Authentication U - Unable to Complete Authentication A - Successful Attempts Transaction C - Challenge Required for Authentication R - Authentication Rejected (Merchant must not submit for authorization) NOTE: Statuses of C and R only apply to Consumer Authentication 2.0.,",
                "req": false
            },
            {
                "key": "authentication.payload\t",
                "value": "",
                "description": "The encoded payment request generated by Centinel. NOTE: Available if Enrolled = Y",
                "req": false
            },
            {
                "key": "authentication.reason_code\t",
                "value": "",
                "description": "The error code indicating a problem with this transaction.",
                "req": false
            },
            {
                "key": "authentication.reason_desc\t",
                "value": "",
                "description": "Text and additional detail about the error for this transaction. NOTE: This field concatenates the errorDescription and errorDetail from the authentication response message",
                "req": false
            },
            {
                "key": "authentication.signature_verification\t",
                "value": "",
                "description": "Transaction Signature status identifier. Possible Values: Y - Indicates that the signature of the PARes has been validated successfully and the message contents can be trusted. N - Indicates that the PARes could not be validated. This result could be for a variety of reasons; tampering, certificate expiration, etc., and the result should not be trusted.",
                "req": false
            },
            {
                "key": "authentication.status_reason\t",
                "value": "",
                "description": "Provides additional information as to why the PAResStatus has the specific value. NOTE: Required for Payment (e.g. Authentication Indicator equals 01 on Lookup Request) transactions when PAResStatus is equal to N, U, or R in the Lookup Response",
                "req": false
            },
            {
                "key": "authentication.threeds_version\t",
                "value": "",
                "description": "This field contains the 3DS version that was used to process the transaction. Possible Values: 1.0.2 2.1.0 NOTE: Required for Mastercard Identity Check transactions in Authorization",
                "req": false
            },
            {
                "key": "authentication.xid\t",
                "value": "",
                "description": "Third Party Token that is returned from the token provider after a card number is specified on the request. NOTE: This field is returned if Tokenization is enabled in the Merchant profile setting AND the Merchant is using a third party token provider.",
                "req": false
            },
            {
                "key": "encrypted_card\t",
                "value": "",
                "description": "Client encrypted cardholder data. The cardholder data encrypted using the Verifone provided public key. This needs to be provided in base64 encoded format. The data to encrypt is a JSON with possible tags being cardNumber, sequenceNumber, cardholderName, startMonth, startYear, expiryMonth, expiryYear, cvv. Additionally a tag called captureTime must be presenting indicating the time the card was captured in UTC in format RFC 3339, section 5.6. eg. 2019-08-24T14:15:22Z. Sample JSON to encrypt:",
                "req": false
            },
            {
                "key": "public_key_alias\t",
                "value": "",
                "description": "The alias for the public key used to encrypt this card.",
                "req": false
            },
            {
                "key": "id",
                "value": "",
                "description": "ThreeDSAuthentication id",
                "req": false
            },
            {
                "key": "amount",
                "value": "",
                "description": "The amount of the transaction.",
                "req": false
            },
            {
                "key": "card",
                "value": "",
                "description": "The ID of the card that is checked for enrollment.",
                "req": false
            },
            {
                "key": "created_at",
                "value": "",
                "description": "The time at which the authentication was created.",
                "req": false
            },
            {
                "key": "currency_code",
                "value": "",
                "description": "Alphabetical ISO 4217 currency code for the sale amount.",
                "req": false
            },
            {
                "key": "entity_id",
                "value": "",
                "description": "The ID of the entity, which this authentication belongs to.",
                "req": false
            },
            {
                "key": "threeds_contract_id",
                "value": "",
                "description": "The ID of the threeDSContractId used.",
                "req": false
            },
            {
                "key": "transaction_id",
                "value": "",
                "description": "To complete the transaction, the value is required to be passed on the Cardinal.Continue().",
                "req": false
            },
            {
                "key": "authentication.acs_transaction_id",
                "value": "",
                "description": "Unique transaction identifier assigned by the ACS to identify a single transaction.",
                "req": false
            },
            {
                "key": "authentication.acs_url",
                "value": "",
                "description": "The fully qualified URL to redirect the Consumer to complete the Consumer Authentication transaction. NOTE: Available if Enrolled = Y",
                "req": false
            },
            {
                "key": "authentication.authentication_type",
                "value": "",
                "description": "Indicates the type of authentication that will be used to challenge the card holder. Possible Values: 01 - Static 02 - Dynamic 03 - OOB (Out of Band)",
                "req": false
            },
            {
                "key": "authentication.authorization_payload",
                "value": "",
                "description": "The Base64 encoded JSON Payload of CB specific Authorization Values returned in the Frictionless Flow.",
                "req": false
            },
            {
                "key": "authentication.card_brand",
                "value": "",
                "description": "Card Brand",
                "req": false
            },
            {
                "key": "authentication.cardholder_info",
                "value": "",
                "description": "Additional text provided by the Issuing Bank to the Cardholder during a Frictionless transaction and was not authenticated by the ACS. The Issuing Bank can optionally support this value.",
                "req": false
            },
            {
                "key": "authentication.cavv_algorithm",
                "value": "",
                "description": "Indicates the algorithm used to generate the CAVV value. Possible Values: 2 - CVV with ATN 3 - Mastercard SPA algorithm",
                "req": false
            },
            {
                "key": "authentication.cavv",
                "value": "",
                "description": "Cardholder Authentication Verification Value (CAVV). This value should be appended to the authorization message signifying that the transaction has been successfully authenticated. It will be encoded according to the Merchant's configuration in either Base64 encoding or Hex encoding. A Base64 encoding Merchant configuration will produce values of 28 or 32 characters. A Hex encoding Merchant configuration will produce values of 40 or 48 characters. The value when decoded will either be 20 bytes for CAVV.",
                "req": false
            },
            {
                "key": "authentication.challenge_cancel",
                "value": "",
                "description": "An indicator as to why the transaction was canceled. Possible Values: 01 - Cardholder selected Cancel 02 - Reserved for future EMVCo use (values invalid until defined by EMVCo). 03 - Transaction Timed Out\u2014Decoupled Authentication 04 - Transaction timed out at ACS\u2014other timeouts 05 - Transaction Timed out at ACS - First CReq not received by ACS 06 - Transaction Error 07 - Unknown 08 = Transaction Timed Out at SDK NOTE: Only present when the Consumer cancels the challenge. Decoupled authentication is not supported at this time.",
                "req": false
            },
            {
                "key": "authentication.challenge_required",
                "value": "",
                "description": "Indicates whether a challenge is required to complete authentication. For example, regional mandates. Possible Values: Y - Challenge Required N - Challenge Not Required",
                "req": false
            },
            {
                "key": "authentication.ds_transaction_id",
                "value": "",
                "description": "Unique transaction identifier assigned by the Directory Server (DS) to identify a single transaction. NOTE: Required for Mastercard Identity Check transaction in Authorization - Only available in EMV 3DS (3DS 2.0) transactions",
                "req": false
            },
            {
                "key": "authentication.eci_flag",
                "value": "",
                "description": "Electronic Commerce Indicator (ECI). The ECI value is part of the 2 data elements that indicate the transaction was processed electronically. This should be passed on the authorization transaction to the Gateway/Processor. Possible Values: 02 or 05 - Fully Authenticated Transaction 01 or 06 - Attempted Authentication Transaction 00 or 07 - Non 3-D Secure Transaction Mastercard - 02, 01, 00 VISA - 05, 06, 07 AMEX - 05, 06, 07 JCB - 05, 06, 07 DINERS CLUB - 05, 06, 07 NOTE: 3DS 2.0 field",
                "req": false
            },
            {
                "key": "authentication.enrolled",
                "value": "",
                "description": "Status of Authentication eligibility. Possible Values: Y - Yes, Bank is participating in 3-D Secure protocol and will return the ACSUrl N - No, Bank is not participating in 3-D Secure protocol U - Unavailable, The DS or ACS is not available for authentication at the time of the request B - Bypass, Merchant authentication rule is triggered to bypass authentication in this use case NOTE: If the Enrolled value is NOT Y, then the Consumer is NOT eligible for Authentication.",
                "req": false
            },
            {
                "key": "authentication.error_desc",
                "value": "",
                "description": "Application error description for the associated error number(s). NOTE: Multiple error descriptions are separated by a comma.",
                "req": false
            },
            {
                "key": "authentication.error_no",
                "value": "",
                "description": "Application error number(s). A non-zero value represents the error encountered while attempting to process the message request. NOTE: Multiple error numbers are separated by a comma.",
                "req": false
            },
            {
                "key": "authentication.network_score\t",
                "value": "",
                "description": "The global score calculated by the CB Scoring platform",
                "req": false
            },
            {
                "key": "authentication.order_id",
                "value": "",
                "description": "3DS server generated order identifier. Used to link multiple actions on a single order to a single identifier. Mod-10 compliant and unique BIN range to 3DS services.",
                "req": false
            },
            {
                "key": "authentication.pares_status",
                "value": "",
                "description": "Transactions status result identifier. Possible Values: Y - Successful Authentication N - Failed Authentication U - Unable to Complete Authentication A - Successful Attempts Transaction C - Challenge Required for Authentication R - Authentication Rejected (Merchant must not submit for authorization) NOTE: Statuses of C and R only apply to Consumer Authentication 2.0.,",
                "req": false
            },
            {
                "key": "authentication.payload",
                "value": "",
                "description": "The encoded payment request generated by Centinel. NOTE: Available if Enrolled = Y",
                "req": false
            },
            {
                "key": "authentication.reason_code",
                "value": "",
                "description": "The error code indicating a problem with this transaction.",
                "req": false
            },
            {
                "key": "authentication.reason_desc",
                "value": "",
                "description": "Text and additional detail about the error for this transaction. NOTE: This field concatenates the errorDescription and errorDetail from the authentication response message",
                "req": false
            },
            {
                "key": "authentication.signature_verification",
                "value": "",
                "description": "Transaction Signature status identifier. Possible Values: Y - Indicates that the signature of the PARes has been validated successfully and the message contents can be trusted. N - Indicates that the PARes could not be validated. This result could be for a variety of reasons; tampering, certificate expiration, etc., and the result should not be trusted.",
                "req": false
            },
            {
                "key": "authentication.status_reason",
                "value": "",
                "description": "Provides additional information as to why the PAResStatus has the specific value. NOTE: Required for Payment (e.g. Authentication Indicator equals 01 on Lookup Request) transactions when PAResStatus is equal to N, U, or R in the Lookup Response",
                "req": false
            },
            {
                "key": "authentication.threeds_version",
                "value": "",
                "description": "This field contains the 3DS version that was used to process the transaction. Possible Values: 1.0.2 2.1.0 NOTE: Required for Mastercard Identity Check transactions in Authorization",
                "req": false
            },
            {
                "key": "authentication.xid",
                "value": "",
                "description": "Third Party Token that is returned from the token provider after a card number is specified on the request. NOTE: This field is returned if Tokenization is enabled in the Merchant profile setting AND the Merchant is using a third party token provider.",
                "req": false
            },
            {
                "key": "encrypted_card",
                "value": "",
                "description": "Client encrypted cardholder data. The cardholder data encrypted using the Verifone provided public key. This needs to be provided in base64 encoded format. The data to encrypt is a JSON with possible tags being cardNumber, sequenceNumber, cardholderName, startMonth, startYear, expiryMonth, expiryYear, cvv. Additionally a tag called captureTime must be presenting indicating the time the card was captured in UTC in format RFC 3339, section 5.6. eg. 2019-08-24T14:15:22Z. Sample JSON to encrypt:",
                "req": false
            },
            {
                "key": "public_key_alias",
                "value": "",
                "description": "The alias for the public key used to encrypt this card.",
                "req": false
            },
            {
                "key": "id",
                "value": "",
                "description": "ThreeDSAuthentication id",
                "req": false
            },
            {
                "key": "card",
                "value": "",
                "description": "The ID of the card that is checked for enrollment.",
                "req": false
            },
            {
                "key": "currency_code",
                "value": "",
                "description": "Alphabetical ISO 4217 currency code for the sale amount.",
                "req": false
            },
            {
                "key": "entity_id",
                "value": "",
                "description": "The ID of the entity, which this authentication belongs to.",
                "req": false
            },
            {
                "key": "threeds_contract_id",
                "value": "",
                "description": "The ID of the threeDSContractId used.",
                "req": false
            },
            {
                "key": "transaction_id",
                "value": "",
                "description": "To complete the transaction, the value is required to be passed on the Cardinal.Continue().",
                "req": false
            },
            {
                "key": "authentication.acs_rendering_type",
                "value": "",
                "description": "Identifies the UI Type the ACS will use to complete the challenge. NOTE: Only available for App transactions using the Cardinal Mobile SDK and is optional for an Issuer to return.",
                "req": false
            },
            {
                "key": "authentication.acs_transaction_id",
                "value": "",
                "description": "Unique transaction identifier assigned by the ACS to identify a single transaction.",
                "req": false
            },
            {
                "key": "authentication.acs_url",
                "value": "",
                "description": "The fully qualified URL to redirect the Consumer to complete the Consumer Authentication transaction. NOTE: Available if Enrolled = Y",
                "req": false
            },
            {
                "key": "authentication.authentication_type",
                "value": "",
                "description": "Indicates the type of authentication that will be used to challenge the card holder. Possible Values: 01 - Static 02 - Dynamic 03 - OOB (Out of Band)",
                "req": false
            },
            {
                "key": "authentication.authorization_payload",
                "value": "",
                "description": "The Base64 encoded JSON Payload of CB specific Authorization Values returned in the Frictionless Flow.",
                "req": false
            },
            {
                "key": "authentication.card_brand",
                "value": "",
                "description": "Card Brand",
                "req": false
            },
            {
                "key": "authentication.cardholder_info",
                "value": "",
                "description": "Additional text provided by the Issuing Bank to the Cardholder during a Frictionless transaction and was not authenticated by the ACS. The Issuing Bank can optionally support this value.",
                "req": false
            },
            {
                "key": "authentication.cavv_algorithm",
                "value": "",
                "description": "Indicates the algorithm used to generate the CAVV value. Possible Values: 2 - CVV with ATN 3 - Mastercard SPA algorithm",
                "req": false
            },
            {
                "key": "authentication.cavv",
                "value": "",
                "description": "Cardholder Authentication Verification Value (CAVV). This value should be appended to the authorization message signifying that the transaction has been successfully authenticated. It will be encoded according to the Merchant's configuration in either Base64 encoding or Hex encoding. A Base64 encoding Merchant configuration will produce values of 28 or 32 characters. A Hex encoding Merchant configuration will produce values of 40 or 48 characters. The value when decoded will either be 20 bytes for CAVV.",
                "req": false
            },
            {
                "key": "authentication.challenge_cancel",
                "value": "",
                "description": "Enum: \"01\" \"02\" \"03\" \"04\" \"05\" \"06\" \"07\" 8 An indicator as to why the transaction was canceled. Possible Values: 01 - Cardholder selected Cancel 02 - Reserved for future EMVCo use (values invalid until defined by EMVCo). 03 - Transaction Timed Out\u2014Decoupled Authentication 04 - Transaction timed out at ACS\u2014other timeouts 05 - Transaction Timed out at ACS - First CReq not received by ACS 06 - Transaction Error 07 - Unknown 08 = Transaction Timed Out at SDK NOTE: Only present when the Consumer cancels the challenge. Decoupled authentication is not supported at this time.",
                "req": false
            },
            {
                "key": "authentication.challenge_required",
                "value": "",
                "description": "Indicates whether a challenge is required to complete authentication. For example, regional mandates. Possible Values: Y - Challenge Required N - Challenge Not Required",
                "req": false
            },
            {
                "key": "authentication.ds_transaction_id",
                "value": "",
                "description": "Unique transaction identifier assigned by the Directory Server (DS) to identify a single transaction. NOTE: Required for Mastercard Identity Check transaction in Authorization - Only available in EMV 3DS (3DS 2.0) transactions",
                "req": false
            },
            {
                "key": "authentication.eci_flag",
                "value": "",
                "description": "Electronic Commerce Indicator (ECI). The ECI value is part of the 2 data elements that indicate the transaction was processed electronically. This should be passed on the authorization transaction to the Gateway/Processor. Possible Values: 02 or 05 - Fully Authenticated Transaction 01 or 06 - Attempted Authentication Transaction 00 or 07 - Non 3-D Secure Transaction Mastercard - 02, 01, 00 VISA - 05, 06, 07 AMEX - 05, 06, 07 JCB - 05, 06, 07 DINERS CLUB - 05, 06, 07 NOTE: 3DS 2.0 field",
                "req": false
            },
            {
                "key": "authentication.enrolled",
                "value": "",
                "description": "Status of Authentication eligibility. Possible Values: Y - Yes, Bank is participating in 3-D Secure protocol and will return the ACSUrl N - No, Bank is not participating in 3-D Secure protocol U - Unavailable, The DS or ACS is not available for authentication at the time of the request B - Bypass, Merchant authentication rule is triggered to bypass authentication in this use case NOTE: If the Enrolled value is NOT Y, then the Consumer is NOT eligible for Authentication.",
                "req": false
            },
            {
                "key": "authentication.error_desc",
                "value": "",
                "description": "Application error description for the associated error number(s). NOTE: Multiple error descriptions are separated by a comma.",
                "req": false
            },
            {
                "key": "authentication.error_no",
                "value": "",
                "description": "Application error number(s). A non-zero value represents the error encountered while attempting to process the message request. NOTE: Multiple error numbers are separated by a comma.",
                "req": false
            },
            {
                "key": "authentication.network_score",
                "value": "",
                "description": "The global score calculated by the CB Scoring platform",
                "req": false
            },
            {
                "key": "authentication.order_id",
                "value": "",
                "description": "3DS server generated order identifier. Used to link multiple actions on a single order to a single identifier. Mod-10 compliant and unique BIN range to 3DS services.",
                "req": false
            },
            {
                "key": "authentication.pares_status",
                "value": "",
                "description": "Transactions status result identifier. Possible Values: Y - Successful Authentication N - Failed Authentication U - Unable to Complete Authentication A - Successful Attempts Transaction C - Challenge Required for Authentication R - Authentication Rejected (Merchant must not submit for authorization) NOTE: Statuses of C and R only apply to Consumer Authentication 2.0.,",
                "req": false
            },
            {
                "key": "authentication.payload",
                "value": "",
                "description": "The encoded payment request generated by Centinel. NOTE: Available if Enrolled = Y",
                "req": false
            },
            {
                "key": "authentication.reason_code",
                "value": "",
                "description": "The error code indicating a problem with this transaction.",
                "req": false
            },
            {
                "key": "authentication.reason_desc",
                "value": "",
                "description": "Text and additional detail about the error for this transaction. NOTE: This field concatenates the errorDescription and errorDetail from the authentication response message",
                "req": false
            },
            {
                "key": "authentication.signature_verification",
                "value": "",
                "description": "Transaction Signature status identifier. Possible Values: Y - Indicates that the signature of the PARes has been validated successfully and the message contents can be trusted. N - Indicates that the PARes could not be validated. This result could be for a variety of reasons; tampering, certificate expiration, etc., and the result should not be trusted.",
                "req": false
            },
            {
                "key": "authentication.status_reason",
                "value": "",
                "description": "Provides additional information as to why the PAResStatus has the specific value. NOTE: Required for Payment (e.g. Authentication Indicator equals 01 on Lookup Request) transactions when PAResStatus is equal to N, U, or R in the Lookup Response",
                "req": false
            },
            {
                "key": "authentication.threeds_version",
                "value": "",
                "description": "This field contains the 3DS version that was used to process the transaction. Possible Values: 1.0.2 2.1.0 NOTE: Required for Mastercard Identity Check transactions in Authorization",
                "req": false
            },
            {
                "key": "authentication.xid",
                "value": "",
                "description": "Third Party Token that is returned from the token provider after a card number is specified on the request. NOTE: This field is returned if Tokenization is enabled in the Merchant profile setting AND the Merchant is using a third party token provider.",
                "req": false
            },
            {
                "key": "encrypted_card",
                "value": "",
                "description": "Client encrypted cardholder data. The cardholder data encrypted using the Verifone provided public key. This needs to be provided in base64 encoded format. The data to encrypt is a JSON with possible tags being cardNumber, sequenceNumber, cardholderName, startMonth, startYear, expiryMonth, expiryYear, cvv. Additionally a tag called captureTime must be presenting indicating the time the card was captured in UTC in format RFC 3339, section 5.6. eg. 2019-08-24T14:15:22Z. Sample JSON to encrypt:",
                "req": false
            },
            {
                "key": "public_key_alias\t",
                "value": "",
                "description": "The alias for the public key used to encrypt this card. Note: public_key_alias is required if card or reuse_token is not provided.",
                "req": false
            },
            {
                "key": "amount",
                "value": "",
                "description": "The amount of the transaction.",
                "req": false
            },
            {
                "key": "created_at",
                "value": "",
                "description": "The time at which the authentication was created.",
                "req": false
            },
            {
                "key": "amount",
                "value": "",
                "description": "The amount of the transaction.",
                "req": false
            },
            {
                "key": "created_at",
                "value": "",
                "description": "The time at which the authentication was created.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1695420244134,
        "lastModifiedTime": 1695421971407,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "_id": "string",
                        "amount": 9007199254740991,
                        "threeds_contract_id": "string",
                        "authentication": {
                            "threeds_version": "string",
                            "enrolled": "string",
                            "error_desc": "string",
                            "error_no": "string",
                            "order_id": "string",
                            "eci_flag": "string",
                            "signature_verification": "string",
                            "ds_transaction_id": "string",
                            "acs_url": "string",
                            "card_brand": "string",
                            "network_score": "st",
                            "challenge_cancel": "01",
                            "authorization_payload": "string",
                            "cavv": "string",
                            "cavv_algorithm": "string",
                            "pares_status": "string",
                            "payload": "string",
                            "xid": "string",
                            "reason_code": "string",
                            "reason_desc": "string",
                            "cardholder_info": "string",
                            "acs_rendering_type": "string",
                            "acs_transaction_id": "string",
                            "authentication_type": "string",
                            "challenge_required": "string",
                            "status_reason": "string"
                        },
                        "card": "string",
                        "currency_code": "str",
                        "created_at": "2019-08-24",
                        "entity_id": "string",
                        "transaction_id": "string"
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116165,
        "executor_type": "THIRDPARTY",
        "executor_name": "getThreeDSAuthenticationbyid",
        "executor_version": "v2",
        "executor_display_name": "Get ThreeDSAuthentication by id",
        "executor_description": "Get ThreeDSAuthentication by id",
        "executor_category": "threeDSecureAPI",
        "executor_category_group": "threeDSecureAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/v2/3d/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "ThreeDSAuthentication id"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1695420517860,
        "lastModifiedTime": 1695421795380,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "_id": "string",
                    "amount": 9007199254740991,
                    "threeds_contract_id": "string",
                    "authentication": {
                        "threeds_version": "string",
                        "enrolled": "string",
                        "error_desc": "string",
                        "error_no": "string",
                        "order_id": "string",
                        "eci_flag": "string",
                        "signature_verification": "string",
                        "ds_transaction_id": "string",
                        "acs_url": "string",
                        "card_brand": "string",
                        "network_score": "st",
                        "challenge_cancel": "01",
                        "authorization_payload": "string",
                        "cavv": "string",
                        "cavv_algorithm": "string",
                        "pares_status": "string",
                        "payload": "string",
                        "xid": "string",
                        "reason_code": "string",
                        "reason_desc": "string",
                        "cardholder_info": "string",
                        "acs_rendering_type": "string",
                        "acs_transaction_id": "string",
                        "authentication_type": "string",
                        "challenge_required": "string",
                        "status_reason": "string"
                    },
                    "card": "string",
                    "currency_code": "str",
                    "created_at": "2019-08-24",
                    "entity_id": "string",
                    "transaction_id": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116169,
        "executor_type": "THIRDPARTY",
        "executor_name": "createaJWTtokenforDSClientSDK",
        "executor_version": "v2",
        "executor_display_name": "Create a JWT token for 3DS Client SDK",
        "executor_description": "Create a JWT token for 3DS Client SDK",
        "executor_category": "threeDSecureAPI",
        "executor_category_group": "threeDSecureAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/v2/jwt/create",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "threeds_contract_id": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1695420819901,
        "lastModifiedTime": 1695421883104,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "jwt": "string",
                    "threeds_contract_id": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116164,
        "executor_type": "THIRDPARTY",
        "executor_name": "countThreeDSAuthentication",
        "executor_version": "v2",
        "executor_display_name": "Count ThreeDSAuthentication.",
        "executor_description": "Count ThreeDSAuthentication.",
        "executor_category": "threeDSecureAPI",
        "executor_category_group": "threeDSecureAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/v2/3d/count",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "limit",
                "value": "",
                "description": "The maximum number of values that can be sent in the response ( maximum: 10000 )",
                "req": false
            },
            {
                "key": "skip",
                "value": "",
                "description": "skip query params",
                "req": false
            },
            {
                "key": "sort",
                "value": "",
                "description": "Items Enum: \"_id\" \"amount\" \"card\" \"created_at\" \"currency_code\" \"entity_id\" \"threeds_contract_id\" \"transaction_id\" \"authentication.acs_rendering_type\" \"authentication.acs_transaction_id\" \"authentication.acs_url\" \"authentication.authentication_type\" \"authentication.authorization_payload\" \"authentication.card_brand\" \"authentication.cardholder_info\" \"authentication.cavv_algorithm\" \"authentication.cavv\" \"authentication.challenge_cancel\" \"authentication.challenge_required\" \"authentication.ds_transaction_id\" \"authentication.eci_flag\" \"authentication.enrolled\" \"authentication.error_desc\" \"authentication.error_no\" \"authentication.network_score\" \"authentication.order_id\" \"authentication.pares_status\" \"authentication.payload\" \"authentication.reason_code\" \"authentication.reason_desc\" \"authentication.signature_verification\" \"authentication.status_reason\" \"authentication.threeds_version\" \"authentication.xid\" \"-_id\" \"-amount\" \"-card\" \"-created_at\" \"-currency_code\" \"-entity_id\" \"-threeds_contract_id\" \"-transaction_id\" \"-authentication.acs_rendering_type\" \"-authentication.acs_transaction_id\" \"-authentication.acs_url\" \"-authentication.authentication_type\" \"-authentication.authorization_payload\" \"-authentication.card_brand\" \"-authentication.cardholder_info\" \"-authentication.cavv_algorithm\" \"-authentication.cavv\" \"-authentication.challenge_cancel\" \"-authentication.challenge_required\" \"-authentication.ds_transaction_id\" \"-authentication.eci_flag\" \"-authentication.enrolled\" \"-authentication.error_desc\" \"-authentication.error_no\" \"-authentication.network_score\" \"-authentication.order_id\" \"-authentication.pares_status\" \"-authentication.payload\" \"-authentication.reason_code\" \"-authentication.reason_desc\" \"-authentication.signature_verification\" \"-authentication.status_reason\" \"-authentication.threeds_version\" \"-authentication.xid\" _sort query params",
                "req": false
            },
            {
                "key": "id",
                "value": "",
                "description": "ThreeDSAuthentication id",
                "req": false
            },
            {
                "key": "amount",
                "value": "",
                "description": "The amount of the transaction.",
                "req": false
            },
            {
                "key": "card",
                "value": "",
                "description": "The ID of the card that is checked for enrollment.",
                "req": false
            },
            {
                "key": "created_at",
                "value": "",
                "description": "The time at which the authentication was created.",
                "req": false
            },
            {
                "key": "currency_code",
                "value": "",
                "description": "Alphabetical ISO 4217 currency code for the sale amount.",
                "req": false
            },
            {
                "key": "entity_id",
                "value": "",
                "description": "The ID of the entity, which this authentication belongs to.",
                "req": false
            },
            {
                "key": "threeds_contract_id",
                "value": "",
                "description": "The ID of the threeDSContractId used.",
                "req": false
            },
            {
                "key": "transaction_id",
                "value": "",
                "description": "To complete the transaction, the value is required to be passed on the Cardinal.Continue().",
                "req": false
            },
            {
                "key": "authentication.acs_rendering_type\t",
                "value": "",
                "description": "Identifies the UI Type the ACS will use to complete the challenge. NOTE: Only available for App transactions using the Cardinal Mobile SDK and is optional for an Issuer to return.",
                "req": false
            },
            {
                "key": "authentication.acs_transaction_id\t",
                "value": "",
                "description": "Unique transaction identifier assigned by the ACS to identify a single transaction.",
                "req": false
            },
            {
                "key": "authentication.acs_url\t",
                "value": "",
                "description": "The fully qualified URL to redirect the Consumer to complete the Consumer Authentication transaction. NOTE: Available if Enrolled = Y",
                "req": false
            },
            {
                "key": "authentication.authentication_type\t",
                "value": "",
                "description": "Indicates the type of authentication that will be used to challenge the card holder. Possible Values: 01 - Static 02 - Dynamic 03 - OOB (Out of Band)",
                "req": false
            },
            {
                "key": "authentication.authorization_payload\t",
                "value": "",
                "description": "The Base64 encoded JSON Payload of CB specific Authorization Values returned in the Frictionless Flow.",
                "req": false
            },
            {
                "key": "authentication.card_brand\t",
                "value": "",
                "description": "Card Brand",
                "req": false
            },
            {
                "key": "authentication.cardholder_info\t",
                "value": "",
                "description": "Additional text provided by the Issuing Bank to the Cardholder during a Frictionless transaction and was not authenticated by the ACS. The Issuing Bank can optionally support this value.",
                "req": false
            },
            {
                "key": "authentication.cavv_algorithm\t",
                "value": "",
                "description": "Indicates the algorithm used to generate the CAVV value. Possible Values: 2 - CVV with ATN 3 - Mastercard SPA algorithm",
                "req": false
            },
            {
                "key": "authentication.cavv\t",
                "value": "",
                "description": "Cardholder Authentication Verification Value (CAVV). This value should be appended to the authorization message signifying that the transaction has been successfully authenticated. It will be encoded according to the Merchant's configuration in either Base64 encoding or Hex encoding. A Base64 encoding Merchant configuration will produce values of 28 or 32 characters. A Hex encoding Merchant configuration will produce values of 40 or 48 characters. The value when decoded will either be 20 bytes for CAVV.",
                "req": false
            },
            {
                "key": "authentication.challenge_cancel",
                "value": "",
                "description": "An indicator as to why the transaction was canceled. Possible Values: 01 - Cardholder selected Cancel 02 - Reserved for future EMVCo use (values invalid until defined by EMVCo). 03 - Transaction Timed Out\u2014Decoupled Authentication 04 - Transaction timed out at ACS\u2014other timeouts 05 - Transaction Timed out at ACS - First CReq not received by ACS 06 - Transaction Error 07 - Unknown 08 = Transaction Timed Out at SDK NOTE: Only present when the Consumer cancels the challenge. Decoupled authentication is not supported at this time.",
                "req": false
            },
            {
                "key": "authentication.challenge_required",
                "value": "",
                "description": "Indicates whether a challenge is required to complete authentication. For example, regional mandates. Possible Values: Y - Challenge Required N - Challenge Not Required",
                "req": false
            },
            {
                "key": "authentication.ds_transaction_id\t",
                "value": "",
                "description": "Unique transaction identifier assigned by the Directory Server (DS) to identify a single transaction. NOTE: Required for Mastercard Identity Check transaction in Authorization - Only available in EMV 3DS (3DS 2.0) transactions",
                "req": false
            },
            {
                "key": "authentication.eci_flag\t",
                "value": "",
                "description": "Electronic Commerce Indicator (ECI). The ECI value is part of the 2 data elements that indicate the transaction was processed electronically. This should be passed on the authorization transaction to the Gateway/Processor. Possible Values: 02 or 05 - Fully Authenticated Transaction 01 or 06 - Attempted Authentication Transaction 00 or 07 - Non 3-D Secure Transaction Mastercard - 02, 01, 00 VISA - 05, 06, 07 AMEX - 05, 06, 07 JCB - 05, 06, 07 DINERS CLUB - 05, 06, 07 NOTE: 3DS 2.0 field",
                "req": false
            },
            {
                "key": "authentication.enrolled\t",
                "value": "",
                "description": "Status of Authentication eligibility. Possible Values: Y - Yes, Bank is participating in 3-D Secure protocol and will return the ACSUrl N - No, Bank is not participating in 3-D Secure protocol U - Unavailable, The DS or ACS is not available for authentication at the time of the request B - Bypass, Merchant authentication rule is triggered to bypass authentication in this use case NOTE: If the Enrolled value is NOT Y, then the Consumer is NOT eligible for Authentication.",
                "req": false
            },
            {
                "key": "authentication.error_desc\t",
                "value": "",
                "description": "Application error description for the associated error number(s). NOTE: Multiple error descriptions are separated by a comma.",
                "req": false
            },
            {
                "key": "authentication.error_no\t",
                "value": "",
                "description": "Application error number(s). A non-zero value represents the error encountered while attempting to process the message request. NOTE: Multiple error numbers are separated by a comma.",
                "req": false
            },
            {
                "key": "authentication.network_score\t",
                "value": "",
                "description": "The global score calculated by the CB Scoring platform",
                "req": false
            },
            {
                "key": "authentication.order_id\t",
                "value": "",
                "description": "3DS server generated order identifier. Used to link multiple actions on a single order to a single identifier. Mod-10 compliant and unique BIN range to 3DS services.",
                "req": false
            },
            {
                "key": "authentication.pares_status\t",
                "value": "",
                "description": "Transactions status result identifier. Possible Values: Y - Successful Authentication N - Failed Authentication U - Unable to Complete Authentication A - Successful Attempts Transaction C - Challenge Required for Authentication R - Authentication Rejected (Merchant must not submit for authorization) NOTE: Statuses of C and R only apply to Consumer Authentication 2.0.,",
                "req": false
            },
            {
                "key": "authentication.payload\t",
                "value": "",
                "description": "The encoded payment request generated by Centinel. NOTE: Available if Enrolled = Y",
                "req": false
            },
            {
                "key": "authentication.reason_code\t",
                "value": "",
                "description": "The error code indicating a problem with this transaction.",
                "req": false
            },
            {
                "key": "authentication.reason_desc\t",
                "value": "",
                "description": "Text and additional detail about the error for this transaction. NOTE: This field concatenates the errorDescription and errorDetail from the authentication response message",
                "req": false
            },
            {
                "key": "authentication.signature_verification\t",
                "value": "",
                "description": "Transaction Signature status identifier. Possible Values: Y - Indicates that the signature of the PARes has been validated successfully and the message contents can be trusted. N - Indicates that the PARes could not be validated. This result could be for a variety of reasons; tampering, certificate expiration, etc., and the result should not be trusted.",
                "req": false
            },
            {
                "key": "authentication.status_reason\t",
                "value": "",
                "description": "Provides additional information as to why the PAResStatus has the specific value. NOTE: Required for Payment (e.g. Authentication Indicator equals 01 on Lookup Request) transactions when PAResStatus is equal to N, U, or R in the Lookup Response",
                "req": false
            },
            {
                "key": "authentication.threeds_version\t",
                "value": "",
                "description": "This field contains the 3DS version that was used to process the transaction. Possible Values: 1.0.2 2.1.0 NOTE: Required for Mastercard Identity Check transactions in Authorization",
                "req": false
            },
            {
                "key": "authentication.xid\t",
                "value": "",
                "description": "Third Party Token that is returned from the token provider after a card number is specified on the request. NOTE: This field is returned if Tokenization is enabled in the Merchant profile setting AND the Merchant is using a third party token provider.",
                "req": false
            },
            {
                "key": "encrypted_card\t",
                "value": "",
                "description": "Client encrypted cardholder data. The cardholder data encrypted using the Verifone provided public key. This needs to be provided in base64 encoded format. The data to encrypt is a JSON with possible tags being cardNumber, sequenceNumber, cardholderName, startMonth, startYear, expiryMonth, expiryYear, cvv. Additionally a tag called captureTime must be presenting indicating the time the card was captured in UTC in format RFC 3339, section 5.6. eg. 2019-08-24T14:15:22Z. Sample JSON to encrypt:",
                "req": false
            },
            {
                "key": "public_key_alias\t",
                "value": "",
                "description": "The alias for the public key used to encrypt this card.",
                "req": false
            },
            {
                "key": "id",
                "value": "",
                "description": "ThreeDSAuthentication id",
                "req": false
            },
            {
                "key": "amount",
                "value": "",
                "description": "The amount of the transaction.",
                "req": false
            },
            {
                "key": "card",
                "value": "",
                "description": "The ID of the card that is checked for enrollment.",
                "req": false
            },
            {
                "key": "created_at",
                "value": "",
                "description": "The time at which the authentication was created.",
                "req": false
            },
            {
                "key": "currency_code",
                "value": "",
                "description": "Alphabetical ISO 4217 currency code for the sale amount.",
                "req": false
            },
            {
                "key": "entity_id",
                "value": "",
                "description": "The ID of the entity, which this authentication belongs to.",
                "req": false
            },
            {
                "key": "threeds_contract_id",
                "value": "",
                "description": "The ID of the threeDSContractId used.",
                "req": false
            },
            {
                "key": "transaction_id",
                "value": "",
                "description": "To complete the transaction, the value is required to be passed on the Cardinal.Continue().",
                "req": false
            },
            {
                "key": "authentication.acs_transaction_id",
                "value": "",
                "description": "Unique transaction identifier assigned by the ACS to identify a single transaction.",
                "req": false
            },
            {
                "key": "authentication.acs_url",
                "value": "",
                "description": "The fully qualified URL to redirect the Consumer to complete the Consumer Authentication transaction. NOTE: Available if Enrolled = Y",
                "req": false
            },
            {
                "key": "authentication.authentication_type",
                "value": "",
                "description": "Indicates the type of authentication that will be used to challenge the card holder. Possible Values: 01 - Static 02 - Dynamic 03 - OOB (Out of Band)",
                "req": false
            },
            {
                "key": "authentication.authorization_payload",
                "value": "",
                "description": "The Base64 encoded JSON Payload of CB specific Authorization Values returned in the Frictionless Flow.",
                "req": false
            },
            {
                "key": "authentication.card_brand",
                "value": "",
                "description": "Card Brand",
                "req": false
            },
            {
                "key": "authentication.cardholder_info",
                "value": "",
                "description": "Additional text provided by the Issuing Bank to the Cardholder during a Frictionless transaction and was not authenticated by the ACS. The Issuing Bank can optionally support this value.",
                "req": false
            },
            {
                "key": "authentication.cavv_algorithm",
                "value": "",
                "description": "Indicates the algorithm used to generate the CAVV value. Possible Values: 2 - CVV with ATN 3 - Mastercard SPA algorithm",
                "req": false
            },
            {
                "key": "authentication.cavv",
                "value": "",
                "description": "Cardholder Authentication Verification Value (CAVV). This value should be appended to the authorization message signifying that the transaction has been successfully authenticated. It will be encoded according to the Merchant's configuration in either Base64 encoding or Hex encoding. A Base64 encoding Merchant configuration will produce values of 28 or 32 characters. A Hex encoding Merchant configuration will produce values of 40 or 48 characters. The value when decoded will either be 20 bytes for CAVV.",
                "req": false
            },
            {
                "key": "authentication.challenge_cancel",
                "value": "",
                "description": "An indicator as to why the transaction was canceled. Possible Values: 01 - Cardholder selected Cancel 02 - Reserved for future EMVCo use (values invalid until defined by EMVCo). 03 - Transaction Timed Out\u2014Decoupled Authentication 04 - Transaction timed out at ACS\u2014other timeouts 05 - Transaction Timed out at ACS - First CReq not received by ACS 06 - Transaction Error 07 - Unknown 08 = Transaction Timed Out at SDK NOTE: Only present when the Consumer cancels the challenge. Decoupled authentication is not supported at this time.",
                "req": false
            },
            {
                "key": "authentication.challenge_required",
                "value": "",
                "description": "Indicates whether a challenge is required to complete authentication. For example, regional mandates. Possible Values: Y - Challenge Required N - Challenge Not Required",
                "req": false
            },
            {
                "key": "authentication.ds_transaction_id",
                "value": "",
                "description": "Unique transaction identifier assigned by the Directory Server (DS) to identify a single transaction. NOTE: Required for Mastercard Identity Check transaction in Authorization - Only available in EMV 3DS (3DS 2.0) transactions",
                "req": false
            },
            {
                "key": "authentication.eci_flag",
                "value": "",
                "description": "Electronic Commerce Indicator (ECI). The ECI value is part of the 2 data elements that indicate the transaction was processed electronically. This should be passed on the authorization transaction to the Gateway/Processor. Possible Values: 02 or 05 - Fully Authenticated Transaction 01 or 06 - Attempted Authentication Transaction 00 or 07 - Non 3-D Secure Transaction Mastercard - 02, 01, 00 VISA - 05, 06, 07 AMEX - 05, 06, 07 JCB - 05, 06, 07 DINERS CLUB - 05, 06, 07 NOTE: 3DS 2.0 field",
                "req": false
            },
            {
                "key": "authentication.enrolled",
                "value": "",
                "description": "Status of Authentication eligibility. Possible Values: Y - Yes, Bank is participating in 3-D Secure protocol and will return the ACSUrl N - No, Bank is not participating in 3-D Secure protocol U - Unavailable, The DS or ACS is not available for authentication at the time of the request B - Bypass, Merchant authentication rule is triggered to bypass authentication in this use case NOTE: If the Enrolled value is NOT Y, then the Consumer is NOT eligible for Authentication.",
                "req": false
            },
            {
                "key": "authentication.error_desc",
                "value": "",
                "description": "Application error description for the associated error number(s). NOTE: Multiple error descriptions are separated by a comma.",
                "req": false
            },
            {
                "key": "authentication.error_no",
                "value": "",
                "description": "Application error number(s). A non-zero value represents the error encountered while attempting to process the message request. NOTE: Multiple error numbers are separated by a comma.",
                "req": false
            },
            {
                "key": "authentication.network_score\t",
                "value": "",
                "description": "The global score calculated by the CB Scoring platform",
                "req": false
            },
            {
                "key": "authentication.order_id",
                "value": "",
                "description": "3DS server generated order identifier. Used to link multiple actions on a single order to a single identifier. Mod-10 compliant and unique BIN range to 3DS services.",
                "req": false
            },
            {
                "key": "authentication.pares_status",
                "value": "",
                "description": "Transactions status result identifier. Possible Values: Y - Successful Authentication N - Failed Authentication U - Unable to Complete Authentication A - Successful Attempts Transaction C - Challenge Required for Authentication R - Authentication Rejected (Merchant must not submit for authorization) NOTE: Statuses of C and R only apply to Consumer Authentication 2.0.,",
                "req": false
            },
            {
                "key": "authentication.payload",
                "value": "",
                "description": "The encoded payment request generated by Centinel. NOTE: Available if Enrolled = Y",
                "req": false
            },
            {
                "key": "authentication.reason_code",
                "value": "",
                "description": "The error code indicating a problem with this transaction.",
                "req": false
            },
            {
                "key": "authentication.reason_desc",
                "value": "",
                "description": "Text and additional detail about the error for this transaction. NOTE: This field concatenates the errorDescription and errorDetail from the authentication response message",
                "req": false
            },
            {
                "key": "authentication.signature_verification",
                "value": "",
                "description": "Transaction Signature status identifier. Possible Values: Y - Indicates that the signature of the PARes has been validated successfully and the message contents can be trusted. N - Indicates that the PARes could not be validated. This result could be for a variety of reasons; tampering, certificate expiration, etc., and the result should not be trusted.",
                "req": false
            },
            {
                "key": "authentication.status_reason",
                "value": "",
                "description": "Provides additional information as to why the PAResStatus has the specific value. NOTE: Required for Payment (e.g. Authentication Indicator equals 01 on Lookup Request) transactions when PAResStatus is equal to N, U, or R in the Lookup Response",
                "req": false
            },
            {
                "key": "authentication.threeds_version",
                "value": "",
                "description": "This field contains the 3DS version that was used to process the transaction. Possible Values: 1.0.2 2.1.0 NOTE: Required for Mastercard Identity Check transactions in Authorization",
                "req": false
            },
            {
                "key": "authentication.xid",
                "value": "",
                "description": "Third Party Token that is returned from the token provider after a card number is specified on the request. NOTE: This field is returned if Tokenization is enabled in the Merchant profile setting AND the Merchant is using a third party token provider.",
                "req": false
            },
            {
                "key": "encrypted_card",
                "value": "",
                "description": "Client encrypted cardholder data. The cardholder data encrypted using the Verifone provided public key. This needs to be provided in base64 encoded format. The data to encrypt is a JSON with possible tags being cardNumber, sequenceNumber, cardholderName, startMonth, startYear, expiryMonth, expiryYear, cvv. Additionally a tag called captureTime must be presenting indicating the time the card was captured in UTC in format RFC 3339, section 5.6. eg. 2019-08-24T14:15:22Z. Sample JSON to encrypt:",
                "req": false
            },
            {
                "key": "public_key_alias",
                "value": "",
                "description": "The alias for the public key used to encrypt this card.",
                "req": false
            },
            {
                "key": "id",
                "value": "",
                "description": "ThreeDSAuthentication id",
                "req": false
            },
            {
                "key": "card",
                "value": "",
                "description": "The ID of the card that is checked for enrollment.",
                "req": false
            },
            {
                "key": "currency_code",
                "value": "",
                "description": "Alphabetical ISO 4217 currency code for the sale amount.",
                "req": false
            },
            {
                "key": "entity_id",
                "value": "",
                "description": "The ID of the entity, which this authentication belongs to.",
                "req": false
            },
            {
                "key": "threeds_contract_id",
                "value": "",
                "description": "The ID of the threeDSContractId used.",
                "req": false
            },
            {
                "key": "transaction_id",
                "value": "",
                "description": "To complete the transaction, the value is required to be passed on the Cardinal.Continue().",
                "req": false
            },
            {
                "key": "authentication.acs_rendering_type",
                "value": "",
                "description": "Identifies the UI Type the ACS will use to complete the challenge. NOTE: Only available for App transactions using the Cardinal Mobile SDK and is optional for an Issuer to return.",
                "req": false
            },
            {
                "key": "authentication.acs_transaction_id",
                "value": "",
                "description": "Unique transaction identifier assigned by the ACS to identify a single transaction.",
                "req": false
            },
            {
                "key": "authentication.acs_url",
                "value": "",
                "description": "The fully qualified URL to redirect the Consumer to complete the Consumer Authentication transaction. NOTE: Available if Enrolled = Y",
                "req": false
            },
            {
                "key": "authentication.authentication_type",
                "value": "",
                "description": "Indicates the type of authentication that will be used to challenge the card holder. Possible Values: 01 - Static 02 - Dynamic 03 - OOB (Out of Band)",
                "req": false
            },
            {
                "key": "authentication.authorization_payload",
                "value": "",
                "description": "The Base64 encoded JSON Payload of CB specific Authorization Values returned in the Frictionless Flow.",
                "req": false
            },
            {
                "key": "authentication.card_brand",
                "value": "",
                "description": "Card Brand",
                "req": false
            },
            {
                "key": "authentication.cardholder_info",
                "value": "",
                "description": "Additional text provided by the Issuing Bank to the Cardholder during a Frictionless transaction and was not authenticated by the ACS. The Issuing Bank can optionally support this value.",
                "req": false
            },
            {
                "key": "authentication.cavv_algorithm",
                "value": "",
                "description": "Indicates the algorithm used to generate the CAVV value. Possible Values: 2 - CVV with ATN 3 - Mastercard SPA algorithm",
                "req": false
            },
            {
                "key": "authentication.cavv",
                "value": "",
                "description": "Cardholder Authentication Verification Value (CAVV). This value should be appended to the authorization message signifying that the transaction has been successfully authenticated. It will be encoded according to the Merchant's configuration in either Base64 encoding or Hex encoding. A Base64 encoding Merchant configuration will produce values of 28 or 32 characters. A Hex encoding Merchant configuration will produce values of 40 or 48 characters. The value when decoded will either be 20 bytes for CAVV.",
                "req": false
            },
            {
                "key": "authentication.challenge_cancel",
                "value": "",
                "description": "Enum: \"01\" \"02\" \"03\" \"04\" \"05\" \"06\" \"07\" 8 An indicator as to why the transaction was canceled. Possible Values: 01 - Cardholder selected Cancel 02 - Reserved for future EMVCo use (values invalid until defined by EMVCo). 03 - Transaction Timed Out\u2014Decoupled Authentication 04 - Transaction timed out at ACS\u2014other timeouts 05 - Transaction Timed out at ACS - First CReq not received by ACS 06 - Transaction Error 07 - Unknown 08 = Transaction Timed Out at SDK NOTE: Only present when the Consumer cancels the challenge. Decoupled authentication is not supported at this time.",
                "req": false
            },
            {
                "key": "authentication.challenge_required",
                "value": "",
                "description": "Indicates whether a challenge is required to complete authentication. For example, regional mandates. Possible Values: Y - Challenge Required N - Challenge Not Required",
                "req": false
            },
            {
                "key": "authentication.ds_transaction_id",
                "value": "",
                "description": "Unique transaction identifier assigned by the Directory Server (DS) to identify a single transaction. NOTE: Required for Mastercard Identity Check transaction in Authorization - Only available in EMV 3DS (3DS 2.0) transactions",
                "req": false
            },
            {
                "key": "authentication.eci_flag",
                "value": "",
                "description": "Electronic Commerce Indicator (ECI). The ECI value is part of the 2 data elements that indicate the transaction was processed electronically. This should be passed on the authorization transaction to the Gateway/Processor. Possible Values: 02 or 05 - Fully Authenticated Transaction 01 or 06 - Attempted Authentication Transaction 00 or 07 - Non 3-D Secure Transaction Mastercard - 02, 01, 00 VISA - 05, 06, 07 AMEX - 05, 06, 07 JCB - 05, 06, 07 DINERS CLUB - 05, 06, 07 NOTE: 3DS 2.0 field",
                "req": false
            },
            {
                "key": "authentication.enrolled",
                "value": "",
                "description": "Status of Authentication eligibility. Possible Values: Y - Yes, Bank is participating in 3-D Secure protocol and will return the ACSUrl N - No, Bank is not participating in 3-D Secure protocol U - Unavailable, The DS or ACS is not available for authentication at the time of the request B - Bypass, Merchant authentication rule is triggered to bypass authentication in this use case NOTE: If the Enrolled value is NOT Y, then the Consumer is NOT eligible for Authentication.",
                "req": false
            },
            {
                "key": "authentication.error_desc",
                "value": "",
                "description": "Application error description for the associated error number(s). NOTE: Multiple error descriptions are separated by a comma.",
                "req": false
            },
            {
                "key": "authentication.error_no",
                "value": "",
                "description": "Application error number(s). A non-zero value represents the error encountered while attempting to process the message request. NOTE: Multiple error numbers are separated by a comma.",
                "req": false
            },
            {
                "key": "authentication.network_score",
                "value": "",
                "description": "The global score calculated by the CB Scoring platform",
                "req": false
            },
            {
                "key": "authentication.order_id",
                "value": "",
                "description": "3DS server generated order identifier. Used to link multiple actions on a single order to a single identifier. Mod-10 compliant and unique BIN range to 3DS services.",
                "req": false
            },
            {
                "key": "authentication.pares_status",
                "value": "",
                "description": "Transactions status result identifier. Possible Values: Y - Successful Authentication N - Failed Authentication U - Unable to Complete Authentication A - Successful Attempts Transaction C - Challenge Required for Authentication R - Authentication Rejected (Merchant must not submit for authorization) NOTE: Statuses of C and R only apply to Consumer Authentication 2.0.,",
                "req": false
            },
            {
                "key": "authentication.payload",
                "value": "",
                "description": "The encoded payment request generated by Centinel. NOTE: Available if Enrolled = Y",
                "req": false
            },
            {
                "key": "authentication.reason_code",
                "value": "",
                "description": "The error code indicating a problem with this transaction.",
                "req": false
            },
            {
                "key": "authentication.reason_desc",
                "value": "",
                "description": "Text and additional detail about the error for this transaction. NOTE: This field concatenates the errorDescription and errorDetail from the authentication response message",
                "req": false
            },
            {
                "key": "authentication.signature_verification",
                "value": "",
                "description": "Transaction Signature status identifier. Possible Values: Y - Indicates that the signature of the PARes has been validated successfully and the message contents can be trusted. N - Indicates that the PARes could not be validated. This result could be for a variety of reasons; tampering, certificate expiration, etc., and the result should not be trusted.",
                "req": false
            },
            {
                "key": "authentication.status_reason",
                "value": "",
                "description": "Provides additional information as to why the PAResStatus has the specific value. NOTE: Required for Payment (e.g. Authentication Indicator equals 01 on Lookup Request) transactions when PAResStatus is equal to N, U, or R in the Lookup Response",
                "req": false
            },
            {
                "key": "authentication.threeds_version",
                "value": "",
                "description": "This field contains the 3DS version that was used to process the transaction. Possible Values: 1.0.2 2.1.0 NOTE: Required for Mastercard Identity Check transactions in Authorization",
                "req": false
            },
            {
                "key": "authentication.xid",
                "value": "",
                "description": "Third Party Token that is returned from the token provider after a card number is specified on the request. NOTE: This field is returned if Tokenization is enabled in the Merchant profile setting AND the Merchant is using a third party token provider.",
                "req": false
            },
            {
                "key": "encrypted_card",
                "value": "",
                "description": "Client encrypted cardholder data. The cardholder data encrypted using the Verifone provided public key. This needs to be provided in base64 encoded format. The data to encrypt is a JSON with possible tags being cardNumber, sequenceNumber, cardholderName, startMonth, startYear, expiryMonth, expiryYear, cvv. Additionally a tag called captureTime must be presenting indicating the time the card was captured in UTC in format RFC 3339, section 5.6. eg. 2019-08-24T14:15:22Z. Sample JSON to encrypt:",
                "req": false
            },
            {
                "key": "public_key_alias\t",
                "value": "",
                "description": "The alias for the public key used to encrypt this card. Note: public_key_alias is required if card or reuse_token is not provided.",
                "req": false
            },
            {
                "key": "amount",
                "value": "",
                "description": "The amount of the transaction.",
                "req": false
            },
            {
                "key": "created_at",
                "value": "",
                "description": "The time at which the authentication was created.",
                "req": false
            },
            {
                "key": "amount",
                "value": "",
                "description": "The amount of the transaction.",
                "req": false
            },
            {
                "key": "created_at",
                "value": "",
                "description": "The time at which the authentication was created.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1695420336236,
        "lastModifiedTime": 1695422001938,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "count": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116126,
        "executor_type": "THIRDPARTY",
        "executor_name": "createCustomerverifone",
        "executor_version": "v2",
        "executor_display_name": "Create Customer",
        "executor_description": "Create Customer",
        "executor_category": "CustomerAPI",
        "executor_category_group": "CustomerAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/v2/customer",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695417537103,
        "lastModifiedTime": 1695417537103,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string",
                    "billing": {
                        "address_1": "string",
                        "address_2": "string",
                        "address_3": "string",
                        "city": "string",
                        "country_code": "string",
                        "first_name": "string",
                        "last_name": "string",
                        "phone": "string",
                        "postal_code": "string",
                        "state": "string"
                    },
                    "company_name": "string",
                    "company_registration_number": "string",
                    "email_address": "string",
                    "entity_id": "string",
                    "phone_number": "string",
                    "shipping": {
                        "address_1": "string",
                        "address_2": "string",
                        "address_3": "string",
                        "city": "string",
                        "first_name": "string",
                        "last_name": "string",
                        "phone": "string",
                        "country_code": "string",
                        "postal_code": "string",
                        "state": "string"
                    },
                    "title": "string",
                    "work_phone": "string",
                    "tax": {
                        "identifier": "string"
                    },
                    "language": "string",
                    "created_at": "2019-08-24",
                    "updated_at": "2019-08-24"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116136,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateCustomerverifone",
        "executor_version": "v2",
        "executor_display_name": "Update Customer",
        "executor_description": "Update Customer",
        "executor_category": "CustomerAPI",
        "executor_category_group": "CustomerAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/v2/customer/{customerId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "customerId",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1695417882463,
        "lastModifiedTime": 1695421579639,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string",
                    "billing": {
                        "address_1": "string",
                        "address_2": "string",
                        "address_3": "string",
                        "city": "string",
                        "country_code": "string",
                        "first_name": "string",
                        "last_name": "string",
                        "phone": "string",
                        "postal_code": "string",
                        "state": "string"
                    },
                    "company_name": "string",
                    "company_registration_number": "string",
                    "email_address": "string",
                    "entity_id": "string",
                    "phone_number": "string",
                    "shipping": {
                        "address_1": "string",
                        "address_2": "string",
                        "address_3": "string",
                        "city": "string",
                        "first_name": "string",
                        "last_name": "string",
                        "phone": "string",
                        "country_code": "string",
                        "postal_code": "string",
                        "state": "string"
                    },
                    "title": "string",
                    "work_phone": "string",
                    "tax": {
                        "identifier": "string"
                    },
                    "language": "string",
                    "created_at": "2019-08-24",
                    "updated_at": "2019-08-24"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116122,
        "executor_type": "THIRDPARTY",
        "executor_name": "listCustomersverifone",
        "executor_version": "v2",
        "executor_display_name": "List Customers",
        "executor_description": "List Customers",
        "executor_category": "CustomerAPI",
        "executor_category_group": "CustomerAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/v2/customer",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "search",
                "value": "",
                "description": "RSQl Query is composed of one or more expressions, combined to each other with following logical operators:  A filter query in RSQL format to retrieve customers. The returned customers are limited to those that can be retrieved by the user.  Criteria\tDescription\tOperator Used billing.address_1\tstring\t==, !=, =in=, =out=, =regex= billing.address_2\tstring\t==, !=, =in=, =out=, =regex= billing.address_3\tstring\t==, !=, =in=, =out=, =regex= billing.city\tstring\t==, !=, =in=, =out=, =regex= billing.country_code\tstring\t==, !=, =in=, =out=, =regex= billing.first_name\tstring\t==, !=, =in=, =out=, =regex= billing.last_name\tstring\t==, !=, =in=, =out=, =regex= billing.phone\tstring\t==, !=, =in=, =out=, =regex= billing.postal_code\tstring\t==, !=, =in=, =out=, =regex= billing.state\tstring\t==, !=, =in=, =out=, =regex= company_name\tstring\t==, !=, =in=, =out=, =regex= company_registration_number\tstring\t==, !=, =in=, =out=, =regex= email_address\tstring\t==, !=, =in=, =out=, =regex= entity_id\tstring\t==, !=, =in=, =out=, =regex= id\tstring\t==, !=, =in=, =out=, =regex= phone_number\tstring\t==, !=, =in=, =out=, =regex= shipping.address_1\tstring\t==, !=, =in=, =out=, =regex= shipping.address_2\tstring\t==, !=, =in=, =out=, =regex= shipping.address_3\tstring\t==, !=, =in=, =out=, =regex= shipping.city\tstring\t==, !=, =in=, =out=, =regex= shipping.country_code\tstring\t==, !=, =in=, =out=, =regex= shipping.first_name\tstring\t==, !=, =in=, =out=, =regex= shipping.last_name\tstring\t==, !=, =in=, =out=, =regex= shipping.phone\tnumber\t==, !=, =in=, =out=, =gt=, =ge=, =lt=, =le= shipping.postal_code\tstring\t==, !=, =in=, =out=, =regex= shipping.state\tstring\t==, !=, =in=, =out=, =regex= title\tstring\t==, !=, =in=, =out=, =regex= work_phone\tstring\t==, !=, =in=, =out=, =regex= tax.identifier\tstring\t==, !=, =in=, =out=, =regex= created_at\tdate\t==, !=, =in=, =out=, =gt=, =ge=, =lt=, =le= updated_at\tdate\t==, !=, =in=, =out=, =gt=, =ge=, =lt=, =le= language\tstring\t==, !=, =in=, =out=, =regex= Note:  Operator\tDescription ==\tequal !=\tnot equal =lt=\tless than =le=\tless than and equal to =gt=\tgreater than =ge=\tgreater than and equal to =regex=\tpattern matching =in=\tmultiple arguments search =out=\texclude ;\tLogical AND ,\tLogical OR Note: Logical AND ( ; ) has higher precedence than Logical OR ( , ), whereas a parenthesis () can be used to override the precedence of an operator.  Example:  /v2/customer?search= id==123& order_by=ASC& order_criteria=email_address& page_size=1& page_number=2   /v2/customer?search= id==123435& order_by=DESC& order_criteria=billing.address_1& page_size=10& page_number=1   /v2/customer?search= id==dg373& order_by=ASC& order_criteria=company_name& page_size=1& page_number=2",
                "req": false
            },
            {
                "key": "order_by",
                "value": "",
                "description": "The ordering sequence of the selected customers If not selected then Descending order is the default order.",
                "req": false
            },
            {
                "key": "page_number",
                "value": "",
                "description": "A filter query in RSQL format to retrieve customers based on page number. If not selected then a default pageNumber is 1.",
                "req": false
            },
            {
                "key": "page_size",
                "value": "",
                "description": "A filter query in RSQL format to retrieve customers based on page size. If not selected then a default pageSize is 50",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695417396154,
        "lastModifiedTime": 1695417396154,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": "string",
                        "billing": {
                            "address_1": "string",
                            "address_2": "string",
                            "address_3": "string",
                            "city": "string",
                            "country_code": "string",
                            "first_name": "string",
                            "last_name": "string",
                            "phone": "string",
                            "postal_code": "string",
                            "state": "string"
                        },
                        "company_name": "string",
                        "company_registration_number": "string",
                        "email_address": "string",
                        "entity_id": "string",
                        "phone_number": "string",
                        "shipping": {
                            "address_1": "string",
                            "address_2": "string",
                            "address_3": "string",
                            "city": "string",
                            "first_name": "string",
                            "last_name": "string",
                            "phone": "string",
                            "country_code": "string",
                            "postal_code": "string",
                            "state": "string"
                        },
                        "title": "string",
                        "work_phone": "string",
                        "tax": {
                            "identifier": "string"
                        },
                        "language": "string",
                        "created_at": "2019-08-24",
                        "updated_at": "2019-08-24"
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116138,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteCustomerverifone",
        "executor_version": "v2",
        "executor_display_name": "Delete Customer",
        "executor_description": "Delete Customer",
        "executor_category": "CustomerAPI",
        "executor_category_group": "CustomerAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "{{host}}/v2/customer/{customerId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "customerId",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1695418013955,
        "lastModifiedTime": 1695421494563,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116134,
        "executor_type": "THIRDPARTY",
        "executor_name": "getCustomerverifone",
        "executor_version": "v2",
        "executor_display_name": "Get Customer",
        "executor_description": "Get Customer",
        "executor_category": "CustomerAPI",
        "executor_category_group": "CustomerAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/v2/customer/{customerId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "customerId",
                "value": "",
                "description": "Customers ID"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695417742413,
        "lastModifiedTime": 1695417742413,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string",
                    "billing": {
                        "address_1": "string",
                        "address_2": "string",
                        "address_3": "string",
                        "city": "string",
                        "country_code": "string",
                        "first_name": "string",
                        "last_name": "string",
                        "phone": "string",
                        "postal_code": "string",
                        "state": "string"
                    },
                    "company_name": "string",
                    "company_registration_number": "string",
                    "email_address": "string",
                    "entity_id": "string",
                    "phone_number": "string",
                    "shipping": {
                        "address_1": "string",
                        "address_2": "string",
                        "address_3": "string",
                        "city": "string",
                        "first_name": "string",
                        "last_name": "string",
                        "phone": "string",
                        "country_code": "string",
                        "postal_code": "string",
                        "state": "string"
                    },
                    "title": "string",
                    "work_phone": "string",
                    "tax": {
                        "identifier": "string"
                    },
                    "language": "string",
                    "created_at": "2019-08-24",
                    "updated_at": "2019-08-24"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116182,
        "executor_type": "THIRDPARTY",
        "executor_name": "createtransaction",
        "executor_version": "v2",
        "executor_display_name": "Create transaction",
        "executor_description": "Create transaction",
        "executor_category": "PayPaleCommAPI",
        "executor_category_group": "PayPaleCommAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/transactions",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695422165743,
        "lastModifiedTime": 1695422165743,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string",
                    "createdAt": "2019-08-24",
                    "status": "INITIATED",
                    "orderId": "string",
                    "instoreReference": "string",
                    "approvalUrl": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116191,
        "executor_type": "THIRDPARTY",
        "executor_name": "showtokendetails",
        "executor_version": "v2",
        "executor_display_name": "Show token details",
        "executor_description": "Show token details",
        "executor_category": "PayPaleCommAPI",
        "executor_category_group": "PayPaleCommAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/billingAgreement/token/{tokenId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "tokenId",
                "value": "",
                "description": "The ID of the agreement token for which to show details."
            }
        ],
        "queryParams": [
            {
                "key": "paymentProviderContract",
                "value": "",
                "description": "PayPal Payment Provider Contract UUID",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695422937571,
        "lastModifiedTime": 1695422937571,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "tokenId": "string",
                    "status": "string",
                    "description": "string",
                    "collectShippingAddress": true,
                    "enableAddressChange": true,
                    "payerInfo": {
                        "email": "string",
                        "suffix": "string",
                        "firstName": "string",
                        "lastName": "string",
                        "payerId": "string",
                        "phone": "string",
                        "billingAddress": {
                            "country": "st",
                            "postalCode": "string",
                            "countrySubdivision": "string",
                            "city": "string",
                            "addressLine2": "string",
                            "addressLine1": "string"
                        }
                    },
                    "redirectUrls": {
                        "returnUrl": "string",
                        "cancelUrl": "string"
                    },
                    "experienceId": "string",
                    "externalSelectedFundingInstrumentType": "CREDIT"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116185,
        "executor_type": "THIRDPARTY",
        "executor_name": "settransactioncontext",
        "executor_version": "v2",
        "executor_display_name": "Set transaction context",
        "executor_description": "Set transaction context",
        "executor_category": "PayPaleCommAPI",
        "executor_category_group": "PayPaleCommAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/transactions/risk/context",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695422418204,
        "lastModifiedTime": 1695422418204,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "trackingId": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116196,
        "executor_type": "THIRDPARTY",
        "executor_name": "createproduct",
        "executor_version": "v2",
        "executor_display_name": "Create product",
        "executor_description": "Create product",
        "executor_category": "PayPaleCommAPI",
        "executor_category_group": "PayPaleCommAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/products",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1695423575913,
        "lastModifiedTime": 1695423707463,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string",
                    "name": "string",
                    "description": "string",
                    "type": "PHYSICAL",
                    "category": "AUTO_RENTALS",
                    "imageUrl": "string",
                    "homeUrl": "string",
                    "createdAt": "2019-08-24",
                    "updatedAt": "2019-08-24"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116184,
        "executor_type": "THIRDPARTY",
        "executor_name": "updatetransaction",
        "executor_version": "v2",
        "executor_display_name": "Update transaction",
        "executor_description": "Update transaction",
        "executor_category": "PayPaleCommAPI",
        "executor_category_group": "PayPaleCommAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "{{host}}/transactions/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Transaction UUID from create transaction API"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695422329675,
        "lastModifiedTime": 1695422329675,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "no content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116201,
        "executor_type": "THIRDPARTY",
        "executor_name": "deactivatebillingplans",
        "executor_version": "v2",
        "executor_display_name": "Deactivate billing plans",
        "executor_description": "Deactivate billing plans",
        "executor_category": "PayPaleCommAPI",
        "executor_category_group": "PayPaleCommAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "{{host}}/billingPlans/{planId}/deactivate",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "planId",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695424135863,
        "lastModifiedTime": 1695424135863,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116187,
        "executor_type": "THIRDPARTY",
        "executor_name": "authorizetransaction",
        "executor_version": "v2",
        "executor_display_name": "Authorize transaction",
        "executor_description": "Authorize transaction",
        "executor_category": "PayPaleCommAPI",
        "executor_category_group": "PayPaleCommAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/transactions/{id}/authorize",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Transaction UUID from create transaction API"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695422570970,
        "lastModifiedTime": 1695422570970,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string",
                    "authorizationId": "string",
                    "createdAt": "2019-08-24",
                    "expiresAt": "2019-08-24",
                    "status": "AUTHORISED",
                    "payer": {
                        "payerId": "string",
                        "name": {
                            "firstName": "string",
                            "lastName": "string"
                        },
                        "phoneNumber": {
                            "phoneType": "FAX",
                            "value": "string"
                        },
                        "email": "string",
                        "shippingAddress": {
                            "country": "st",
                            "postalCode": "string",
                            "countrySubdivision": "string",
                            "city": "string",
                            "addressLine2": "string",
                            "addressLine1": "string",
                            "fullName": "string"
                        },
                        "authorizationStatus": "string"
                    },
                    "instoreReference": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116188,
        "executor_type": "THIRDPARTY",
        "executor_name": "capturetransaction",
        "executor_version": "v2",
        "executor_display_name": "Capture transaction",
        "executor_description": "Capture transaction",
        "executor_category": "PayPaleCommAPI",
        "executor_category_group": "PayPaleCommAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/transactions/{id}/capture",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695422639250,
        "lastModifiedTime": 1695422639250,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string",
                    "captureId": "string",
                    "isFinalCapture": true,
                    "instoreReference": "string",
                    "createdAt": "2019-08-24",
                    "status": "AUTHORISED",
                    "payer": {
                        "payerId": "string",
                        "name": {
                            "firstName": "string",
                            "lastName": "string"
                        },
                        "phoneNumber": {
                            "phoneType": "FAX",
                            "value": "string"
                        },
                        "email": "string",
                        "shippingAddress": {
                            "country": "st",
                            "postalCode": "string",
                            "countrySubdivision": "string",
                            "city": "string",
                            "addressLine2": "string",
                            "addressLine1": "string",
                            "fullName": "string"
                        },
                        "paymentStatus": "string"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116195,
        "executor_type": "THIRDPARTY",
        "executor_name": "listproducts",
        "executor_version": "v2",
        "executor_display_name": "List products",
        "executor_description": "List products",
        "executor_category": "PayPaleCommAPI",
        "executor_category_group": "PayPaleCommAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/products",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "paymentProviderContract",
                "value": "",
                "description": "PayPal Payment Provider Contract UUID",
                "req": false
            },
            {
                "key": "pageSize\t",
                "value": "",
                "description": "The number of items to return in the response.",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "A non-zero integer which is the start index of the entire list of items that are returned in the response. So, the combination of page=1 and page_size=20 returns the first 20 items. The combination of page=2 and page_size=20 returns the next 20 items.",
                "req": false
            },
            {
                "key": "totalRequired",
                "value": "",
                "description": "Indicates whether to show the total items and total pages in the response.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695423347698,
        "lastModifiedTime": 1695423347698,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "totalItems": 0,
                    "totalPages": 0,
                    "products": [
                        {
                            "id": "string",
                            "name": "string",
                            "description": "string",
                            "type": "PHYSICAL",
                            "category": "AUTO_RENTALS",
                            "createdAt": "2019-08-24",
                            "updatedAt": "2019-08-24",
                            "imageUrl": "string",
                            "homeUrl": "string"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116211,
        "executor_type": "THIRDPARTY",
        "executor_name": "activatesubscription",
        "executor_version": "v2",
        "executor_display_name": "Activate subscription",
        "executor_description": "Activate subscription",
        "executor_category": "PayPaleCommAPI",
        "executor_category_group": "PayPaleCommAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/subscriptions/{id}/activate",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "x-vfi-api-idempotencyKey\t",
                "value": "",
                "description": "A value you specify that uniquely identifies the transaction. If you're unsure whether a particular transaction succeeded, you can reattempt it with the same idempotency key without worrying about duplicating the transaction.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695425319839,
        "lastModifiedTime": 1695425319839,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116197,
        "executor_type": "THIRDPARTY",
        "executor_name": "getproductdetails",
        "executor_version": "v2",
        "executor_display_name": "Get product details",
        "executor_description": "Get product details",
        "executor_category": "PayPaleCommAPI",
        "executor_category_group": "PayPaleCommAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/products/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "The product ID."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695423648819,
        "lastModifiedTime": 1695423648819,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string",
                    "name": "string",
                    "description": "string",
                    "type": "PHYSICAL",
                    "category": "AUTO_RENTALS",
                    "imageUrl": "string",
                    "homeUrl": "string",
                    "createdAt": "2019-08-24",
                    "updatedAt": "2019-08-24"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116193,
        "executor_type": "THIRDPARTY",
        "executor_name": "initiatebillingagreement",
        "executor_version": "v2",
        "executor_display_name": "Initiate billing agreement",
        "executor_description": "Initiate billing agreement",
        "executor_category": "PayPaleCommAPI",
        "executor_category_group": "PayPaleCommAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/billingAgreement/initiate",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695423130195,
        "lastModifiedTime": 1695423130195,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "approvalUrl": "string",
                    "billingToken": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116192,
        "executor_type": "THIRDPARTY",
        "executor_name": "createbillingagreementusingtoken",
        "executor_version": "v2",
        "executor_display_name": "Create billing agreement using token",
        "executor_description": "Create billing agreement using token",
        "executor_category": "PayPaleCommAPI",
        "executor_category_group": "PayPaleCommAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/billingAgreement/create",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695423030792,
        "lastModifiedTime": 1695423030792,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string",
                    "state": "string",
                    "description": "string",
                    "merchant": {
                        "payeeInfo": {
                            "email": "string"
                        }
                    },
                    "payer": {
                        "payerInfo": {
                            "email": "string",
                            "suffix": "string",
                            "firstName": "string",
                            "lastName": "string",
                            "payerId": "string",
                            "phone": "string",
                            "billingAddress": {
                                "country": "st",
                                "postalCode": "string",
                                "countrySubdivision": "string",
                                "city": "string",
                                "addressLine2": "string",
                                "addressLine1": "string"
                            }
                        }
                    },
                    "plan": {
                        "merchantPreferences": {
                            "collectShippingAddress": "string",
                            "enableAddressChange": "string",
                            "experienceId": "string",
                            "externalSelectedFundingInstrumentType": "string",
                            "allowedCountries": [
                                "st"
                            ]
                        }
                    },
                    "createTime": "string",
                    "updateTime": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116199,
        "executor_type": "THIRDPARTY",
        "executor_name": "listbillingplans",
        "executor_version": "v2",
        "executor_display_name": "List billing plans",
        "executor_description": "List billing plans",
        "executor_category": "PayPaleCommAPI",
        "executor_category_group": "PayPaleCommAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/billingPlans",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "paymentProviderContract",
                "value": "",
                "description": "PayPal Payment Provider Contract UUID",
                "req": false
            },
            {
                "key": "productId",
                "value": "",
                "description": "Filters the response by a Product ID.",
                "req": false
            },
            {
                "key": "ids",
                "value": "",
                "description": "Filters the response by list of plan IDs.",
                "req": false
            },
            {
                "key": "pageSize",
                "value": "",
                "description": "The number of items to return in the response.",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "A non-zero integer which is the start index of the entire list of items to return in the response.",
                "req": false
            },
            {
                "key": "totalRequired",
                "value": "",
                "description": "Indicates whether to show the total count in the response.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695423965476,
        "lastModifiedTime": 1695423965476,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "plans": [
                        {
                            "id": "string",
                            "name": "string",
                            "billingCycles": [
                                {
                                    "pricingScheme": {
                                        "version": 999,
                                        "fixedPrice": {
                                            "currencyCode": "EUR",
                                            "value": 100
                                        },
                                        "pricingModel": "VOLUME",
                                        "tiers": [
                                            {
                                                "startingQuantity": "string",
                                                "endingQuantity": "string",
                                                "amount": {
                                                    "currencyCode": "EUR",
                                                    "value": 100
                                                }
                                            }
                                        ]
                                    },
                                    "frequency": {
                                        "intervalUnit": "DAY",
                                        "intervalCount": 0
                                    },
                                    "tenureType": "REGULAR",
                                    "sequence": 0,
                                    "totalCycles": 0
                                }
                            ],
                            "paymentPreferences": {
                                "autoBillOutstanding": true,
                                "setupFee": {
                                    "currencyCode": "EUR",
                                    "value": 100
                                },
                                "setupFeeFailureAction": "CONTINUE",
                                "paymentFailureThreshold": 0
                            },
                            "status": "ACTIVE",
                            "description": "string",
                            "taxes": {
                                "percentage": "string",
                                "inclusive": true
                            },
                            "quantitySupported": true,
                            "createTime": "2019-08-24",
                            "updateTime": "2019-08-24"
                        }
                    ],
                    "totalItems": 0,
                    "totalPages": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116205,
        "executor_type": "THIRDPARTY",
        "executor_name": "createsubscription",
        "executor_version": "v2",
        "executor_display_name": "Create subscription",
        "executor_description": "Create subscription",
        "executor_category": "PayPaleCommAPI",
        "executor_category_group": "PayPaleCommAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/subscriptions",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            },
            {
                "key": "x-vfi-api-idempotencyKey",
                "value": "",
                "description": "A value you specify that uniquely identifies the transaction. If you're unsure whether a particular transaction succeeded, you can reattempt it with the same idempotency key without worrying about duplicating the transaction.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1695424641046,
        "lastModifiedTime": 1695425408508,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string",
                    "status": "string",
                    "planId": "string",
                    "statusUpdateTime": "2019-08-24",
                    "planOverridden": true,
                    "quantity": "string",
                    "startTime": "2019-08-24",
                    "shippingAmount": {
                        "value": 100,
                        "currencyCode": "EUR"
                    },
                    "subscriber": {
                        "name": {
                            "givenName": "string",
                            "surname": "string"
                        },
                        "payerId": "string",
                        "emailAddress": "string",
                        "phone": {
                            "phoneType": "FAX",
                            "phoneNumber": {
                                "nationalNumber": "string"
                            }
                        },
                        "shippingAddress": {
                            "name": {
                                "fullName": "string"
                            },
                            "address": {
                                "country": "st",
                                "postalCode": "string",
                                "countrySubdivision": "string",
                                "city": "string",
                                "addressLine2": "string",
                                "addressLine1": "string"
                            }
                        }
                    },
                    "applicationContext": {
                        "brandName": "string",
                        "locale": "string",
                        "shippingPreference": "GET_FROM_FILE",
                        "userAction": "CONTINUE",
                        "paymentMethod": {
                            "payerSelected": "string",
                            "payeePreferred": "UNRESTRICTED"
                        },
                        "returnUrl": "string",
                        "cancelUrl": "string"
                    },
                    "createdAt": "2019-08-24",
                    "approvalUrl": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116210,
        "executor_type": "THIRDPARTY",
        "executor_name": "captureauthorizedpaymentonsubscription",
        "executor_version": "v2",
        "executor_display_name": "Capture authorized payment on subscription",
        "executor_description": "Capture authorized payment on subscription",
        "executor_category": "PayPaleCommAPI",
        "executor_category_group": "PayPaleCommAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/subscriptions/{id}/capture",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "x-vfi-api-idempotencyKey\t",
                "value": "",
                "description": "A value you specify that uniquely identifies the transaction. If you're unsure whether a particular transaction succeeded, you can reattempt it with the same idempotency key without worrying about duplicating the transaction.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695425249901,
        "lastModifiedTime": 1695425249901,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 202,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116200,
        "executor_type": "THIRDPARTY",
        "executor_name": "activatebillingplans",
        "executor_version": "v2",
        "executor_display_name": "Activate billing plans",
        "executor_description": "Activate billing plans",
        "executor_category": "PayPaleCommAPI",
        "executor_category_group": "PayPaleCommAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "{{host}}/billingPlans/{planId}/activate",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "planId",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1695424062807,
        "lastModifiedTime": 1695424388877,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116209,
        "executor_type": "THIRDPARTY",
        "executor_name": "cancelsubscription",
        "executor_version": "v2",
        "executor_display_name": "Cancel subscription",
        "executor_description": "Cancel subscription",
        "executor_category": "PayPaleCommAPI",
        "executor_category_group": "PayPaleCommAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/subscriptions/{id}/cancel",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695425109052,
        "lastModifiedTime": 1695425109052,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116186,
        "executor_type": "THIRDPARTY",
        "executor_name": "cancelauthorisation",
        "executor_version": "v2",
        "executor_display_name": "Cancel authorisation",
        "executor_description": "Cancel authorisation",
        "executor_category": "PayPaleCommAPI",
        "executor_category_group": "PayPaleCommAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/transactions/{id}/void",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695422499360,
        "lastModifiedTime": 1695422499360,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "no content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116190,
        "executor_type": "THIRDPARTY",
        "executor_name": "getagreementdetails",
        "executor_version": "v2",
        "executor_display_name": "Get agreement details",
        "executor_description": "Get agreement details",
        "executor_category": "PayPaleCommAPI",
        "executor_category_group": "PayPaleCommAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/billingAgreement/{agreementId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "agreementId",
                "value": "",
                "description": "PayPal billing agreement id"
            }
        ],
        "queryParams": [
            {
                "key": "paymentProviderContract",
                "value": "",
                "description": "PayPal Payment Provider Contract UUID",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695422831205,
        "lastModifiedTime": 1695422831205,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string",
                    "state": "string",
                    "description": "string",
                    "merchant": {
                        "payeeInfo": {
                            "email": "string"
                        }
                    },
                    "payer": {
                        "payerInfo": {
                            "email": "string",
                            "suffix": "string",
                            "firstName": "string",
                            "lastName": "string",
                            "payerId": "string",
                            "phone": "string",
                            "billingAddress": {
                                "country": "st",
                                "postalCode": "string",
                                "countrySubdivision": "string",
                                "city": "string",
                                "addressLine2": "string",
                                "addressLine1": "string"
                            }
                        }
                    },
                    "shippingAddress": {
                        "fullName": "string",
                        "addressLine1": "string",
                        "addressLine2": "string",
                        "city": "string",
                        "countrySubdivision": "string",
                        "country": "st",
                        "postalCode": "string"
                    },
                    "plan": {
                        "merchantPreferences": {
                            "collectShippingAddress": "string",
                            "enableAddressChange": "string",
                            "experienceId": "string",
                            "externalSelectedFundingInstrumentType": "string",
                            "allowedCountries": [
                                "st"
                            ]
                        }
                    },
                    "createTime": "string",
                    "updateTime": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116203,
        "executor_type": "THIRDPARTY",
        "executor_name": "updatebillingplans",
        "executor_version": "v2",
        "executor_display_name": "Update billing plans",
        "executor_description": "Update billing plans",
        "executor_category": "PayPaleCommAPI",
        "executor_category_group": "PayPaleCommAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "{{host}}/billingPlans/{planId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "planId",
                "value": "",
                "description": "PayPal billing plan Id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695424359880,
        "lastModifiedTime": 1695424359880,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116198,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateproduct",
        "executor_version": "v2",
        "executor_display_name": "Update product",
        "executor_description": "Update product",
        "executor_category": "PayPaleCommAPI",
        "executor_category_group": "PayPaleCommAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "{{host}}/products/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "The product ID."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695423790465,
        "lastModifiedTime": 1695423790465,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "PATCH",
                "message": "no content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116208,
        "executor_type": "THIRDPARTY",
        "executor_name": "revisesubscription",
        "executor_version": "v2",
        "executor_display_name": "Revise subscription",
        "executor_description": "Revise subscription",
        "executor_category": "PayPaleCommAPI",
        "executor_category_group": "PayPaleCommAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/subscriptions/{id}/revise",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695425032032,
        "lastModifiedTime": 1695425032032,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PATCH",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116207,
        "executor_type": "THIRDPARTY",
        "executor_name": "updatesubscription",
        "executor_version": "v2",
        "executor_display_name": "Update subscription",
        "executor_description": "Update subscription",
        "executor_category": "PayPaleCommAPI",
        "executor_category_group": "PayPaleCommAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "{{host}}/subscriptions/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695424822574,
        "lastModifiedTime": 1695424822574,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "PATCH",
                "message": "no content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116189,
        "executor_type": "THIRDPARTY",
        "executor_name": "refundtransaction",
        "executor_version": "v2",
        "executor_display_name": "Refund transaction",
        "executor_description": "Refund transaction",
        "executor_category": "PayPaleCommAPI",
        "executor_category_group": "PayPaleCommAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/transactions/{id}/refund",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695422691463,
        "lastModifiedTime": 1695422691463,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string",
                    "refundId": "string",
                    "createdAt": "2019-08-24",
                    "status": "AUTHORISED",
                    "instoreReference": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116204,
        "executor_type": "THIRDPARTY",
        "executor_name": "createbillingplan",
        "executor_version": "v2",
        "executor_display_name": "Create billing plan",
        "executor_description": "Create billing plan",
        "executor_category": "PayPaleCommAPI",
        "executor_category_group": "PayPaleCommAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/billingPlans/create",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695424491524,
        "lastModifiedTime": 1695424491524,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string",
                    "productId": "string",
                    "name": "string",
                    "status": "ACTIVE",
                    "description": "string",
                    "billingCycles": [
                        {
                            "pricingScheme": {
                                "version": 999,
                                "fixedPrice": {
                                    "currencyCode": "EUR",
                                    "value": 100
                                },
                                "pricingModel": "VOLUME",
                                "tiers": [
                                    {
                                        "startingQuantity": "string",
                                        "endingQuantity": "string",
                                        "amount": {
                                            "currencyCode": "EUR",
                                            "value": 100
                                        }
                                    }
                                ]
                            },
                            "frequency": {
                                "intervalUnit": "DAY",
                                "intervalCount": 0
                            },
                            "tenureType": "REGULAR",
                            "sequence": 0,
                            "totalCycles": 0
                        }
                    ],
                    "paymentPreferences": {
                        "autoBillOutstanding": true,
                        "setupFee": {
                            "currencyCode": "EUR",
                            "value": 100
                        },
                        "setupFeeFailureAction": "CONTINUE",
                        "paymentFailureThreshold": 0
                    },
                    "taxes": {
                        "percentage": "string",
                        "inclusive": true
                    },
                    "quantitySupported": true,
                    "createTime": "2019-08-24",
                    "updateTime": "2019-08-24"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116194,
        "executor_type": "THIRDPARTY",
        "executor_name": "cancelagreementdetails",
        "executor_version": "v2",
        "executor_display_name": "Cancel agreement details",
        "executor_description": "Cancel agreement details",
        "executor_category": "PayPaleCommAPI",
        "executor_category_group": "PayPaleCommAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/billingAgreement/{agreementId}/cancel",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "agreementId",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695423212937,
        "lastModifiedTime": 1695423212937,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116202,
        "executor_type": "THIRDPARTY",
        "executor_name": "getbillingplan",
        "executor_version": "v2",
        "executor_display_name": "Get billing plan",
        "executor_description": "Get billing plan",
        "executor_category": "PayPaleCommAPI",
        "executor_category_group": "PayPaleCommAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/billingPlans/{planId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "planId",
                "value": "",
                "description": "PayPal billing plan Id"
            }
        ],
        "queryParams": [
            {
                "key": "paymentProviderContract",
                "value": "",
                "description": "PayPal Payment Provider Contract UUID",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695424239324,
        "lastModifiedTime": 1695424239324,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string",
                    "productId": "string",
                    "name": "string",
                    "billingCycles": [
                        {
                            "pricingScheme": {
                                "version": 999,
                                "fixedPrice": {
                                    "currencyCode": "EUR",
                                    "value": 100
                                },
                                "pricingModel": "VOLUME",
                                "tiers": [
                                    {
                                        "startingQuantity": "string",
                                        "endingQuantity": "string",
                                        "amount": {
                                            "currencyCode": "EUR",
                                            "value": 100
                                        }
                                    }
                                ]
                            },
                            "frequency": {
                                "intervalUnit": "DAY",
                                "intervalCount": 0
                            },
                            "tenureType": "REGULAR",
                            "sequence": 0,
                            "totalCycles": 0
                        }
                    ],
                    "paymentPreferences": {
                        "autoBillOutstanding": true,
                        "setupFee": {
                            "currencyCode": "EUR",
                            "value": 100
                        },
                        "setupFeeFailureAction": "CONTINUE",
                        "paymentFailureThreshold": 0
                    },
                    "status": "ACTIVE",
                    "description": "string",
                    "taxes": {
                        "percentage": "string",
                        "inclusive": true
                    },
                    "quantitySupported": true,
                    "createTime": "2019-08-24",
                    "updateTime": "2019-08-24"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116206,
        "executor_type": "THIRDPARTY",
        "executor_name": "subscriptionDetails",
        "executor_version": "v2",
        "executor_display_name": "Subscription Details",
        "executor_description": "Subscription Details",
        "executor_category": "PayPaleCommAPI",
        "executor_category_group": "PayPaleCommAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/subscriptions/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "PayPal Payment Provider Contract UUID"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695424717298,
        "lastModifiedTime": 1695424717298,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string",
                    "status": "APPROVAL_PENDING",
                    "planId": "string",
                    "planOverridden": true,
                    "statusUpdateTime": "2019-08-24",
                    "statusChangeNote": "string",
                    "startTime": "2019-08-24",
                    "quantity": 0,
                    "customId": "string",
                    "shippingAmount": {
                        "value": 100,
                        "currencyCode": "EUR"
                    },
                    "subscriber": {
                        "name": {
                            "givenName": "string",
                            "surname": "string"
                        },
                        "payerId": "string",
                        "emailAddress": "string",
                        "phone": {
                            "phoneType": "FAX",
                            "phoneNumber": {
                                "nationalNumber": "string"
                            }
                        },
                        "shippingAddress": {
                            "name": {
                                "fullName": "string"
                            },
                            "address": {
                                "country": "st",
                                "postalCode": "string",
                                "countrySubdivision": "string",
                                "city": "string",
                                "addressLine2": "string",
                                "addressLine1": "string"
                            }
                        }
                    },
                    "billingInfo": {
                        "outstandingBalance": {
                            "value": 100,
                            "currencyCode": "EUR"
                        },
                        "cycleExecutions": [
                            {
                                "tenureType": "REGULAR",
                                "sequence": 0,
                                "cyclesCompleted": 0,
                                "cyclesRemaining": 0,
                                "currentPricingSchemeVersion": 0,
                                "totalCycles": 0
                            }
                        ],
                        "lastPayment": {
                            "status": "string",
                            "amount": {
                                "value": 100,
                                "currencyCode": "EUR"
                            },
                            "time": "2019-08-24"
                        },
                        "nextBillingTime": "string",
                        "finalPaymentTime": "string",
                        "failedPaymentsCount": 0,
                        "lastFailedPayment": {
                            "amount": {
                                "value": 100,
                                "currencyCode": "EUR"
                            },
                            "time": "2019-08-24",
                            "reasonCode": "CURRENCY_MISMATCH",
                            "nextPaymentRetryTime": "2019-08-24"
                        }
                    },
                    "createdAt": "2019-08-24",
                    "updatedAt": "2019-08-24"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116212,
        "executor_type": "THIRDPARTY",
        "executor_name": "suspendsubscription",
        "executor_version": "v2",
        "executor_display_name": "Suspend subscription",
        "executor_description": "Suspend subscription",
        "executor_category": "PayPaleCommAPI",
        "executor_category_group": "PayPaleCommAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/subscriptions/{id}/suspend",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695425456642,
        "lastModifiedTime": 1695425456642,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116274,
        "executor_type": "THIRDPARTY",
        "executor_name": "partialUpdateofaTradingaddress",
        "executor_version": "v2",
        "executor_display_name": "Partial Update of a Trading address",
        "executor_description": "Partial Update of a Trading address",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "{{host}}/entities/{entityUid}/tradingAddress",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "entityUid",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "receiverName": "string",
                "addressLine1": "213 Miller Street",
                "addressLine2": "North Sydney",
                "addressLine3": "string",
                "poBox": "K1234",
                "city": "York",
                "countrySubdivision": "Georgia",
                "postCode": "2061",
                "country": "AUS",
                "timeZone": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695674568107,
        "lastModifiedTime": 1695674568107,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PATCH",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "contact": {
                        "contactType": "OWNER",
                        "name": {
                            "firstName": "string",
                            "lastName": "string",
                            "prefix": "string",
                            "alternateFullName": "string",
                            "middleName": "string",
                            "suffix": "string"
                        },
                        "phoneNumbers": [
                            {
                                "callingCode": "string",
                                "value": "string",
                                "extension": "string",
                                "isPrimary": false,
                                "phoneType": "HOME"
                            }
                        ],
                        "email": "user@example.com",
                        "businessTitle": "string"
                    },
                    "vfiSiteId": "string",
                    "storeNumber": "string",
                    "receiverName": "string",
                    "addressLine1": "213 Miller Street",
                    "addressLine2": "North Sydney",
                    "addressLine3": "string",
                    "poBox": "K1234",
                    "city": "York",
                    "countrySubdivision": "Georgia",
                    "postCode": "2061",
                    "country": "AUS",
                    "timeZone": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116281,
        "executor_type": "THIRDPARTY",
        "executor_name": "getmultimerchantparentrecord",
        "executor_version": "v2",
        "executor_display_name": "Get multi merchant parent record.",
        "executor_description": "Get multi merchant parent record.",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/pois/{poiUid}/parentPoi",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "poiUid",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695675432978,
        "lastModifiedTime": 1695675432978,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "estateManagementId": "100112345678",
                    "status": "ACTIVE",
                    "poiUid": "d80fcd67-01ad-47e3-93be-fb073d276c52"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116282,
        "executor_type": "THIRDPARTY",
        "executor_name": "movechildPOIstoanewparent",
        "executor_version": "v2",
        "executor_display_name": "Move child POIs to a new parent",
        "executor_description": "Move child POIs to a new parent.",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/pois/{poiUid}/childPois/move",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "poiUid",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "newParentPoiUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695675558195,
        "lastModifiedTime": 1695675558195,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "estateManagementId": "100112345678",
                    "status": "ACTIVE",
                    "poiUid": "d80fcd67-01ad-47e3-93be-fb073d276c52"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116284,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateorderstatus",
        "executor_version": "v2",
        "executor_display_name": "Update order status",
        "executor_description": "Update order status",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/orders/{orderId}/status",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "orderId",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "newStatus": "DRAFT"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1695675745399,
        "lastModifiedTime": 1695676010217,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116271,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaDraftOrder",
        "executor_version": "v2",
        "executor_display_name": "Delete a Draft Order",
        "executor_description": "Delete a Draft Order",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "{{host}}/orders/drafts/{orderId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "orderId",
                "value": "",
                "description": "Verifone allocated ID for the Order"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695674327042,
        "lastModifiedTime": 1695674327042,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "order deleted",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116280,
        "executor_type": "THIRDPARTY",
        "executor_name": "pOIMaintenanceOrderRequest",
        "executor_version": "v2",
        "executor_display_name": "POI Maintenance Order Request",
        "executor_description": "POI Maintenance Order Request",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/pois/orders/maintenance/{poiUid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "poiUid",
                "value": "",
                "description": "The assigned ID corresponding for the POI."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "orderReference": "ORD-1234",
                "customerEntityUid": "2c5f4b49-7974-4a45-b1fe-1035c9012e7f",
                "requestedDate": "2019-08-24T14:15:22Z",
                "poRef": "85219587",
                "paymentDetails": {
                    "paymentType": "CREDIT"
                },
                "notes": "Current in draft, caller got busy, callback anothertime.",
                "additionalOrderData": [
                    {
                        "variableName": "VAT_ID or BAX_ID",
                        "variableValue": "1234566"
                    }
                ],
                "maintenanceType": "Swapout",
                "deliveryPackage": {
                    "packageBundleId": "PREMIUM-36MONTH",
                    "additionalPackageData": [
                        {
                            "variableName": "VAT_ID or BAX_ID",
                            "variableValue": "1234566"
                        }
                    ]
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1695675299594,
        "lastModifiedTime": 1695675378650,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "PATCH",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "orderReference": "ORD-1234",
                    "customerEntityUid": "2c5f4b49-7974-4a45-b1fe-1035c9012e7f",
                    "requestedDate": "2019-08-24T14:15:22Z",
                    "poRef": "85219587",
                    "paymentDetails": {
                        "paymentType": "CREDIT"
                    },
                    "notes": "Current in draft, caller got busy, callback anothertime.",
                    "additionalOrderData": [
                        {
                            "variableName": "VAT_ID or BAX_ID",
                            "variableValue": "1234566"
                        }
                    ],
                    "maintenanceType": "Swapout",
                    "deliveryPackage": {
                        "packageBundleId": "PREMIUM-36MONTH",
                        "additionalPackageData": [
                            {
                                "variableName": "VAT_ID or BAX_ID",
                                "variableValue": "1234566"
                            }
                        ]
                    },
                    "orderId": "32c480b5-4dfb-4c53-959f-49edf45a0931",
                    "status": "DRAFT",
                    "createdUserUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                    "createdBy": "string",
                    "createdDate": "2019-08-24T14:15:22Z",
                    "modifiedUserUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                    "modifiedBy": "string",
                    "modifiedDate": "2019-08-24T14:15:22Z",
                    "orderType": "POIMaintenanceOrder",
                    "entityUid": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9",
                    "merchantCompanyEntityUid": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9",
                    "merchant": {
                        "merchantName": "string"
                    },
                    "internal": {
                        "oracleOrderNumber": 0,
                        "oracleShippingTrackingReference": "string",
                        "kycReportUid": "c7c0b6d2-7dcc-459f-9263-2cbbc453dfda",
                        "tokenScopeUid": "70357ba0-6aa4-4c15-83c9-22821312dd4e",
                        "extendedDetails": {
                            "status": "DRAFT",
                            "code": "string",
                            "information": "string",
                            "lastChangeTime": "2020-01-06T18:16:14.243Z",
                            "canCancel": true
                        },
                        "orderStats": {
                            "minsSinceCreatedToLastUpdate": 0,
                            "minsSinceLastStatusUpdate": 0
                        },
                        "vmssApplication": {
                            "visaStatus": "NA ",
                            "visaMatches": 0,
                            "mcdStatus": "NA ",
                            "mcdMatches": 0,
                            "mcdTransactionReference": "string"
                        },
                        "salesforceApplicationId": "string",
                        "signingInformation": {
                            "provider": "SIGNICAT",
                            "providerRef": "string",
                            "signedFileUrl": "string",
                            "signingRequests": [
                                {
                                    "providerRef": "string",
                                    "contact": {
                                        "contactType": "OWNER",
                                        "name": {
                                            "firstName": "string",
                                            "lastName": "string",
                                            "prefix": "string",
                                            "alternateFullName": "string",
                                            "middleName": "string",
                                            "suffix": "string"
                                        },
                                        "phoneNumbers": [
                                            {
                                                "callingCode": "string",
                                                "value": "string",
                                                "extension": "string",
                                                "isPrimary": false,
                                                "phoneType": "HOME"
                                            }
                                        ],
                                        "email": "user@example.com",
                                        "businessTitle": "string"
                                    },
                                    "signed": false,
                                    "signedDateTime": "2019-08-24T14:15:22Z"
                                }
                            ]
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116300,
        "executor_type": "THIRDPARTY",
        "executor_name": "addOracleaccount",
        "executor_version": "v2",
        "executor_display_name": "Add Oracle account",
        "executor_description": "Add Oracle account",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/accounts/oracle",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "oracleAccountId": 12031585,
                "userUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                "merchantCompanyEntityUid": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695679778837,
        "lastModifiedTime": 1695679778837,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116305,
        "executor_type": "THIRDPARTY",
        "executor_name": "updatebatchdetails",
        "executor_version": "v2",
        "executor_display_name": "Update batch details",
        "executor_description": "Update batch details",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "{{host}}/orders/batch/{batchId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "batchId",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "processingStatus": "SUCCESS",
                "responseFileSent": false,
                "responseFileName": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695680449113,
        "lastModifiedTime": 1695680449113,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "processingStatus": "SUCCESS",
                    "responseFileSent": false,
                    "responseFileName": "string",
                    "batchId": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9",
                    "fileCreatedDate": "2019-08-24T14:15:22Z",
                    "filePickupDate": "2019-08-24T14:15:22Z",
                    "fileName": "string",
                    "orderType": "POIOrder",
                    "retryCount": 0,
                    "transactions": [
                        {
                            "orderId": "32c480b5-4dfb-4c53-959f-49edf45a0931",
                            "requestId": "string",
                            "entityType": "MERCHANT_COMPANY",
                            "operation": "PARTIAL_UPDATE",
                            "entityLogicalId": "string",
                            "keyValues": "string",
                            "createdDate": "2019-08-24T14:15:22Z",
                            "status": "200",
                            "response": "Merchant Entity Updated Successfully",
                            "orderStatus": "DRAFT"
                        }
                    ],
                    "completionDate": "2019-08-24T14:15:22Z"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116306,
        "executor_type": "THIRDPARTY",
        "executor_name": "listbatches",
        "executor_version": "v2",
        "executor_display_name": "List batches",
        "executor_description": "List batches",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/orders/batch",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "customerEntityUid",
                "value": "",
                "description": "The estate customer entity UUID for the portfolio.",
                "req": false
            },
            {
                "key": "orderId",
                "value": "",
                "description": "Verifone allocated ID for the Order",
                "req": false
            },
            {
                "key": "status",
                "value": "",
                "description": "Batch status for this request",
                "req": false
            },
            {
                "key": "pageNumber\t",
                "value": "",
                "description": "Page number for records.",
                "req": false
            },
            {
                "key": "pageSize",
                "value": "",
                "description": "Page size for returned records.",
                "req": false
            },
            {
                "key": "startTime",
                "value": "",
                "description": "The record date/time to search from.",
                "req": false
            },
            {
                "key": "endTime",
                "value": "",
                "description": "The record date/time to search to.",
                "req": false
            },
            {
                "key": "populateTransactions",
                "value": "",
                "description": "Whether to include transactions",
                "req": false
            },
            {
                "key": "orderBy",
                "value": "",
                "description": "The field to order by.Supports startTime,endTime,status,customerEntityUid",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695680721797,
        "lastModifiedTime": 1695680721798,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "batches": [
                        {
                            "processingStatus": "SUCCESS",
                            "responseFileSent": false,
                            "responseFileName": "string",
                            "batchId": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9",
                            "fileCreatedDate": "2019-08-24T14:15:22Z",
                            "filePickupDate": "2019-08-24T14:15:22Z",
                            "fileName": "string",
                            "orderType": "POIOrder",
                            "retryCount": 0,
                            "transactions": [
                                {
                                    "orderId": "32c480b5-4dfb-4c53-959f-49edf45a0931",
                                    "requestId": "string",
                                    "entityType": "MERCHANT_COMPANY",
                                    "operation": "PARTIAL_UPDATE",
                                    "entityLogicalId": "string",
                                    "keyValues": "string",
                                    "createdDate": "2019-08-24T14:15:22Z",
                                    "status": "200",
                                    "response": "Merchant Entity Updated Successfully",
                                    "orderStatus": "DRAFT"
                                }
                            ],
                            "completionDate": "2019-08-24T14:15:22Z"
                        }
                    ],
                    "metadata": {
                        "totalPages": 1,
                        "pageNumber": 1,
                        "pageSize": 50,
                        "totalItems": 25
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116258,
        "executor_type": "THIRDPARTY",
        "executor_name": "createPOIOrder",
        "executor_version": "v2",
        "executor_display_name": "Create POI Order",
        "executor_description": "Create POI Order",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/orders/pois",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "orderReference": "ORD-1234",
                "customerEntityUid": "2c5f4b49-7974-4a45-b1fe-1035c9012e7f",
                "requestedDate": "2019-08-24T14:15:22Z",
                "poRef": "85219587",
                "paymentDetails": {
                    "paymentType": "CREDIT"
                },
                "notes": "Current in draft, caller got busy, callback anothertime.",
                "additionalOrderData": [
                    {
                        "variableName": "VAT_ID or BAX_ID",
                        "variableValue": "1234566"
                    }
                ],
                "packageDetails": {
                    "portfolioUid": "32c480b5-4dfb-4c53-959f-49edf45a0931",
                    "basePackageBundle": {
                        "packageBundleId": "PREMIUM-36MONTH",
                        "price": "20.50"
                    },
                    "servicePackages": [
                        {
                            "packageBundleId": "PREMIUM-36MONTH",
                            "adjustedPrices": [
                                {
                                    "priceModel": "MONTHLY_FEE",
                                    "price": "20.50"
                                }
                            ],
                            "processorParameters": {
                                "processor": "ABS_ISO",
                                "tidList": [
                                    "1004631982",
                                    "1004631983",
                                    "1004631984"
                                ]
                            },
                            "additionalPackageData": [
                                {
                                    "variableName": "VAT_ID or BAX_ID",
                                    "variableValue": "1234566"
                                }
                            ]
                        }
                    ],
                    "deliveryPackage": {
                        "packageBundleId": "PREMIUM-36MONTH",
                        "adjustedPrices": [
                            {
                                "priceModel": "MONTHLY_FEE",
                                "price": "20.50"
                            }
                        ],
                        "additionalPackageData": [
                            {
                                "variableName": "VAT_ID or BAX_ID",
                                "variableValue": "1234566"
                            }
                        ]
                    }
                },
                "contract": {
                    "brokerId": "string",
                    "legalStructure": "PROPRIETOR_OWN_BEHALF",
                    "contacts": [
                        {
                            "contact": {
                                "contactType": "OWNER",
                                "name": {
                                    "firstName": "string",
                                    "lastName": "string",
                                    "prefix": "string",
                                    "alternateFullName": "string",
                                    "middleName": "string",
                                    "suffix": "string"
                                },
                                "phoneNumbers": [
                                    {
                                        "callingCode": "string",
                                        "value": "string",
                                        "extension": "string",
                                        "isPrimary": false,
                                        "phoneType": "HOME"
                                    }
                                ],
                                "email": "user@example.com",
                                "businessTitle": "string",
                                "passportId": "string",
                                "nationality": "string",
                                "nationalIdentifer": "string"
                            },
                            "addressDetails": {
                                "receiverName": "string",
                                "addressLine1": "213 Miller Street",
                                "addressLine2": "North Sydney",
                                "addressLine3": "string",
                                "poBox": "K1234",
                                "city": "York",
                                "countrySubdivision": "Georgia",
                                "postCode": "2061",
                                "country": "AUS",
                                "timeZone": "string"
                            },
                            "dateOfBirth": "2019-08-24",
                            "placeOfBirth": "string",
                            "isIDCheckRequired": false,
                            "isContractSignatureRequired": false,
                            "isLegalRepresentative": false,
                            "isAuthorizedRepresentative": false,
                            "isBeneficiaryOwner": false,
                            "isPoliticallyExposed": false,
                            "representativeType": "GENERAL_COMMERCIAL_POWER"
                        }
                    ],
                    "settlementAccount": {
                        "currency": "AED",
                        "accountHolderType": "BUSINESS",
                        "description": "Coffee Supreme Trading",
                        "nickname": "Store 1 Account",
                        "country": "AUS",
                        "accountName": "string",
                        "iban": "string",
                        "bic": "CTBAAU2S"
                    },
                    "domesticSettlementAccount": {
                        "currency": "AED",
                        "accountHolderType": "BUSINESS",
                        "description": "Coffee Supreme Trading",
                        "nickname": "Store 1 Account",
                        "accountName": "Coffee Supreme LTD",
                        "sortCode": "301105",
                        "bsb": "022039",
                        "routingTransitNumber": "247484410",
                        "accountNumber": "23008275"
                    },
                    "serviceStartDate": "2019-08-24T14:15:22Z",
                    "proprietorAct": true
                },
                "entityUid": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9",
                "shippingAddress": {
                    "contact": {
                        "contactType": "OWNER",
                        "name": {
                            "firstName": "string",
                            "lastName": "string",
                            "prefix": "string",
                            "alternateFullName": "string",
                            "middleName": "string",
                            "suffix": "string"
                        },
                        "phoneNumbers": [
                            {
                                "callingCode": "string",
                                "value": "string",
                                "extension": "string",
                                "isPrimary": false,
                                "phoneType": "HOME"
                            }
                        ],
                        "email": "user@example.com",
                        "businessTitle": "string"
                    },
                    "vfiSiteId": "string",
                    "storeNumber": "string",
                    "receiverName": "string",
                    "addressLine1": "213 Miller Street",
                    "addressLine2": "North Sydney",
                    "addressLine3": "string",
                    "poBox": "K1234",
                    "city": "York",
                    "countrySubdivision": "Georgia",
                    "postCode": "2061",
                    "country": "AUS",
                    "timeZone": "string"
                },
                "billingAddress": {
                    "contact": {
                        "contactType": "OWNER",
                        "name": {
                            "firstName": "string",
                            "lastName": "string",
                            "prefix": "string",
                            "alternateFullName": "string",
                            "middleName": "string",
                            "suffix": "string"
                        },
                        "phoneNumbers": [
                            {
                                "callingCode": "string",
                                "value": "string",
                                "extension": "string",
                                "isPrimary": false,
                                "phoneType": "HOME"
                            }
                        ],
                        "email": "user@example.com",
                        "businessTitle": "string"
                    },
                    "vfiSiteId": "string",
                    "storeNumber": "string",
                    "receiverName": "string",
                    "addressLine1": "213 Miller Street",
                    "addressLine2": "North Sydney",
                    "addressLine3": "string",
                    "poBox": "K1234",
                    "city": "York",
                    "countrySubdivision": "Georgia",
                    "postCode": "2061",
                    "country": "AUS",
                    "timeZone": "string"
                },
                "requestedDateOfShipment": "2019-08-24T14:15:22Z",
                "pois": [
                    {
                        "type": "UNSPECIFIED",
                        "poiId": "string",
                        "subPoiId": "string",
                        "altVfiPoiId": "1004631982",
                        "estateManagementId": "string",
                        "serialNumber": "string",
                        "name": "string",
                        "description": "string",
                        "status": "ACTIVE",
                        "cutoverTime": "17:00",
                        "poiUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                        "acquirerPoiIds": [
                            {
                                "variableName": "VAT_ID or BAX_ID",
                                "variableValue": "1234566"
                            }
                        ]
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695668637042,
        "lastModifiedTime": 1695668637042,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "orderReference": "ORD-1234",
                    "customerEntityUid": "2c5f4b49-7974-4a45-b1fe-1035c9012e7f",
                    "requestedDate": "2019-08-24T14:15:22Z",
                    "poRef": "85219587",
                    "paymentDetails": {
                        "paymentType": "CREDIT"
                    },
                    "notes": "Current in draft, caller got busy, callback anothertime.",
                    "additionalOrderData": [
                        {
                            "variableName": "VAT_ID or BAX_ID",
                            "variableValue": "1234566"
                        }
                    ],
                    "packageDetails": {
                        "portfolioUid": "32c480b5-4dfb-4c53-959f-49edf45a0931",
                        "basePackageBundle": {
                            "packageBundleId": "PREMIUM-36MONTH",
                            "price": "20.50"
                        },
                        "servicePackages": [
                            {
                                "packageBundleId": "PREMIUM-36MONTH",
                                "adjustedPrices": [
                                    {
                                        "priceModel": "MONTHLY_FEE",
                                        "price": "20.50"
                                    }
                                ],
                                "processorParameters": {
                                    "processor": "ABS_ISO",
                                    "tidList": [
                                        "1004631982",
                                        "1004631983",
                                        "1004631984"
                                    ]
                                },
                                "additionalPackageData": [
                                    {
                                        "variableName": "VAT_ID or BAX_ID",
                                        "variableValue": "1234566"
                                    }
                                ]
                            }
                        ],
                        "deliveryPackage": {
                            "packageBundleId": "PREMIUM-36MONTH",
                            "adjustedPrices": [
                                {
                                    "priceModel": "MONTHLY_FEE",
                                    "price": "20.50"
                                }
                            ],
                            "additionalPackageData": [
                                {
                                    "variableName": "VAT_ID or BAX_ID",
                                    "variableValue": "1234566"
                                }
                            ]
                        }
                    },
                    "contract": {
                        "brokerId": "string",
                        "legalStructure": "PROPRIETOR_OWN_BEHALF",
                        "contacts": [
                            {
                                "contact": {
                                    "contactType": "OWNER",
                                    "name": {
                                        "firstName": "string",
                                        "lastName": "string",
                                        "prefix": "string",
                                        "alternateFullName": "string",
                                        "middleName": "string",
                                        "suffix": "string"
                                    },
                                    "phoneNumbers": [
                                        {
                                            "callingCode": "string",
                                            "value": "string",
                                            "extension": "string",
                                            "isPrimary": false,
                                            "phoneType": "HOME"
                                        }
                                    ],
                                    "email": "user@example.com",
                                    "businessTitle": "string",
                                    "passportId": "string",
                                    "nationality": "string",
                                    "nationalIdentifer": "string"
                                },
                                "addressDetails": {
                                    "receiverName": "string",
                                    "addressLine1": "213 Miller Street",
                                    "addressLine2": "North Sydney",
                                    "addressLine3": "string",
                                    "poBox": "K1234",
                                    "city": "York",
                                    "countrySubdivision": "Georgia",
                                    "postCode": "2061",
                                    "country": "AUS",
                                    "timeZone": "string"
                                },
                                "dateOfBirth": "2019-08-24",
                                "placeOfBirth": "string",
                                "isIDCheckRequired": false,
                                "isContractSignatureRequired": false,
                                "isLegalRepresentative": false,
                                "isAuthorizedRepresentative": false,
                                "isBeneficiaryOwner": false,
                                "isPoliticallyExposed": false,
                                "representativeType": "GENERAL_COMMERCIAL_POWER"
                            }
                        ],
                        "settlementAccount": {
                            "currency": "AED",
                            "accountHolderType": "BUSINESS",
                            "description": "Coffee Supreme Trading",
                            "nickname": "Store 1 Account",
                            "country": "AUS",
                            "accountName": "string",
                            "iban": "string",
                            "bic": "CTBAAU2S"
                        },
                        "domesticSettlementAccount": {
                            "currency": "AED",
                            "accountHolderType": "BUSINESS",
                            "description": "Coffee Supreme Trading",
                            "nickname": "Store 1 Account",
                            "accountName": "Coffee Supreme LTD",
                            "sortCode": "301105",
                            "bsb": "022039",
                            "routingTransitNumber": "247484410",
                            "accountNumber": "23008275"
                        },
                        "serviceStartDate": "2019-08-24T14:15:22Z",
                        "proprietorAct": true
                    },
                    "entityUid": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9",
                    "shippingAddress": {
                        "contact": {
                            "contactType": "OWNER",
                            "name": {
                                "firstName": "string",
                                "lastName": "string",
                                "prefix": "string",
                                "alternateFullName": "string",
                                "middleName": "string",
                                "suffix": "string"
                            },
                            "phoneNumbers": [
                                {
                                    "callingCode": "string",
                                    "value": "string",
                                    "extension": "string",
                                    "isPrimary": false,
                                    "phoneType": "HOME"
                                }
                            ],
                            "email": "user@example.com",
                            "businessTitle": "string"
                        },
                        "vfiSiteId": "string",
                        "storeNumber": "string",
                        "receiverName": "string",
                        "addressLine1": "213 Miller Street",
                        "addressLine2": "North Sydney",
                        "addressLine3": "string",
                        "poBox": "K1234",
                        "city": "York",
                        "countrySubdivision": "Georgia",
                        "postCode": "2061",
                        "country": "AUS",
                        "timeZone": "string"
                    },
                    "billingAddress": {
                        "contact": {
                            "contactType": "OWNER",
                            "name": {
                                "firstName": "string",
                                "lastName": "string",
                                "prefix": "string",
                                "alternateFullName": "string",
                                "middleName": "string",
                                "suffix": "string"
                            },
                            "phoneNumbers": [
                                {
                                    "callingCode": "string",
                                    "value": "string",
                                    "extension": "string",
                                    "isPrimary": false,
                                    "phoneType": "HOME"
                                }
                            ],
                            "email": "user@example.com",
                            "businessTitle": "string"
                        },
                        "vfiSiteId": "string",
                        "storeNumber": "string",
                        "receiverName": "string",
                        "addressLine1": "213 Miller Street",
                        "addressLine2": "North Sydney",
                        "addressLine3": "string",
                        "poBox": "K1234",
                        "city": "York",
                        "countrySubdivision": "Georgia",
                        "postCode": "2061",
                        "country": "AUS",
                        "timeZone": "string"
                    },
                    "requestedDateOfShipment": "2019-08-24T14:15:22Z",
                    "pois": [
                        {
                            "type": "UNSPECIFIED",
                            "poiId": "string",
                            "subPoiId": "string",
                            "altVfiPoiId": "1004631982",
                            "estateManagementId": "string",
                            "serialNumber": "string",
                            "name": "string",
                            "description": "string",
                            "status": "ACTIVE",
                            "cutoverTime": "17:00",
                            "poiUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                            "acquirerPoiIds": [
                                {
                                    "variableName": "VAT_ID or BAX_ID",
                                    "variableValue": "1234566"
                                }
                            ]
                        }
                    ],
                    "orderId": "32c480b5-4dfb-4c53-959f-49edf45a0931",
                    "status": "DRAFT",
                    "createdUserUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                    "createdBy": "string",
                    "createdDate": "2019-08-24T14:15:22Z",
                    "modifiedUserUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                    "modifiedBy": "string",
                    "modifiedDate": "2019-08-24T14:15:22Z",
                    "orderType": "POIOrder",
                    "merchantCompanyEntityUid": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9",
                    "merchant": {
                        "merchantName": "string"
                    },
                    "internal": {
                        "oracleOrderNumber": 0,
                        "oracleShippingTrackingReference": "string",
                        "kycReportUid": "c7c0b6d2-7dcc-459f-9263-2cbbc453dfda",
                        "tokenScopeUid": "70357ba0-6aa4-4c15-83c9-22821312dd4e",
                        "extendedDetails": {
                            "status": "DRAFT",
                            "code": "string",
                            "information": "string",
                            "lastChangeTime": "2020-01-06T18:16:14.243Z",
                            "canCancel": true
                        },
                        "orderStats": {
                            "minsSinceCreatedToLastUpdate": 0,
                            "minsSinceLastStatusUpdate": 0
                        },
                        "vmssApplication": {
                            "visaStatus": "NA ",
                            "visaMatches": 0,
                            "mcdStatus": "NA ",
                            "mcdMatches": 0,
                            "mcdTransactionReference": "string"
                        },
                        "salesforceApplicationId": "string",
                        "signingInformation": {
                            "provider": "SIGNICAT",
                            "providerRef": "string",
                            "signedFileUrl": "string",
                            "signingRequests": [
                                {
                                    "providerRef": "string",
                                    "contact": {
                                        "contactType": "OWNER",
                                        "name": {
                                            "firstName": "string",
                                            "lastName": "string",
                                            "prefix": "string",
                                            "alternateFullName": "string",
                                            "middleName": "string",
                                            "suffix": "string"
                                        },
                                        "phoneNumbers": [
                                            {
                                                "callingCode": "string",
                                                "value": "string",
                                                "extension": "string",
                                                "isPrimary": false,
                                                "phoneType": "HOME"
                                            }
                                        ],
                                        "email": "user@example.com",
                                        "businessTitle": "string"
                                    },
                                    "signed": false,
                                    "signedDateTime": "2019-08-24T14:15:22Z"
                                }
                            ]
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116285,
        "executor_type": "THIRDPARTY",
        "executor_name": "internalMerchantMaintenanceOrderRequest",
        "executor_version": "v2",
        "executor_display_name": "Internal Merchant Maintenance Order Request",
        "executor_description": "Internal Merchant Maintenance Order Request",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/orders/merchantMaintenance",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "orderReference": "ORD-1234",
                "customerEntityUid": "2c5f4b49-7974-4a45-b1fe-1035c9012e7f",
                "requestedDate": "2019-08-24T14:15:22Z",
                "poRef": "85219587",
                "paymentDetails": {
                    "paymentType": "CREDIT"
                },
                "notes": "Current in draft, caller got busy, callback anothertime.",
                "additionalOrderData": [
                    {
                        "variableName": "VAT_ID or BAX_ID",
                        "variableValue": "1234566"
                    }
                ],
                "eventType": "TradingAddressUpdated",
                "itemId": "string",
                "orderId": "32c480b5-4dfb-4c53-959f-49edf45a0931",
                "status": "DRAFT",
                "createdUserUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                "createdBy": "string",
                "createdDate": "2019-08-24T14:15:22Z",
                "modifiedUserUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                "modifiedBy": "string",
                "modifiedDate": "2019-08-24T14:15:22Z",
                "orderType": "MerchantMaintenanceOrder",
                "entityUid": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9",
                "merchant": {
                    "merchantName": "string"
                },
                "content": {}
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1695675895763,
        "lastModifiedTime": 1695676922826,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "orderReference": "ORD-1234",
                    "customerEntityUid": "2c5f4b49-7974-4a45-b1fe-1035c9012e7f",
                    "requestedDate": "2019-08-24T14:15:22Z",
                    "poRef": "85219587",
                    "paymentDetails": {
                        "paymentType": "CREDIT"
                    },
                    "notes": "Current in draft, caller got busy, callback anothertime.",
                    "additionalOrderData": [
                        {
                            "variableName": "VAT_ID or BAX_ID",
                            "variableValue": "1234566"
                        }
                    ],
                    "eventType": "TradingAddressUpdated",
                    "itemId": "string",
                    "orderId": "32c480b5-4dfb-4c53-959f-49edf45a0931",
                    "status": "DRAFT",
                    "createdUserUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                    "createdBy": "string",
                    "createdDate": "2019-08-24T14:15:22Z",
                    "modifiedUserUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                    "modifiedBy": "string",
                    "modifiedDate": "2019-08-24T14:15:22Z",
                    "orderType": "MerchantMaintenanceOrder",
                    "entityUid": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9",
                    "merchant": {
                        "merchantName": "string"
                    },
                    "content": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116292,
        "executor_type": "THIRDPARTY",
        "executor_name": "generateanewVerifoneTerminalIDbasedonRange",
        "executor_version": "v2",
        "executor_display_name": "Generate a new Verifone Terminal ID based on Range",
        "executor_description": "Generate a new Verifone Terminal ID based on Range",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/pois/tid/{rangeId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "rangeId",
                "value": "",
                "description": "Range allocation to be performed from"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "customerType": "NewCustomer",
                "contactType": "OWNER",
                "name": {
                    "firstName": "string",
                    "lastName": "string",
                    "prefix": "string",
                    "alternateFullName": "string",
                    "middleName": "string",
                    "suffix": "string"
                },
                "phoneNumbers": [
                    {
                        "callingCode": "string",
                        "value": "string",
                        "extension": "string",
                        "isPrimary": false,
                        "phoneType": "HOME"
                    }
                ],
                "email": "user@example.com",
                "businessTitle": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695677361655,
        "lastModifiedTime": 1695677361655,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "altVfiPoiId": "1004631982"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116296,
        "executor_type": "THIRDPARTY",
        "executor_name": "patchstatusofTIDsinthepool",
        "executor_version": "v2",
        "executor_display_name": "Patch status of TIDs in the pool",
        "executor_description": "Patch status of TIDs in the pool",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "{{host}}/entities/{entityUid}/purchasedTid",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "entityUid",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": [
                "1004631982"
            ],
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695677681673,
        "lastModifiedTime": 1695677681673,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "PATCH",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116283,
        "executor_type": "THIRDPARTY",
        "executor_name": "getextendedstatus",
        "executor_version": "v2",
        "executor_display_name": "Get extended status",
        "executor_description": "Get extended status",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/orders/{orderId}/status",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "orderId",
                "value": "",
                "description": "Verifone allocated ID for the Order"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695675647651,
        "lastModifiedTime": 1695675647651,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status": "DRAFT",
                    "workflow": {
                        "workflowState": "string",
                        "lastChangeDateTime": "2019-08-24T14:15:22Z",
                        "tasks": [
                            {
                                "name": "string",
                                "state": "string"
                            }
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116290,
        "executor_type": "THIRDPARTY",
        "executor_name": "createanewunapproveduserversiontwo",
        "executor_version": "v2",
        "executor_display_name": "Create a new unapproved user, version 2",
        "executor_description": "Create a new unapproved user, version 2",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/v2/entities/{entityUid}/users",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "entityUid",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "customerType": "NewCustomer",
                "contactType": "OWNER",
                "name": {
                    "firstName": "string",
                    "lastName": "string",
                    "prefix": "string",
                    "alternateFullName": "string",
                    "middleName": "string",
                    "suffix": "string"
                },
                "phoneNumbers": [
                    {
                        "callingCode": "string",
                        "value": "string",
                        "extension": "string",
                        "isPrimary": false,
                        "phoneType": "HOME"
                    }
                ],
                "email": "user@example.com",
                "businessTitle": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1695677094807,
        "lastModifiedTime": 1695677282992,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "userUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116260,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateReplacePOIorder",
        "executor_version": "v2",
        "executor_display_name": "Update/Replace POI order.",
        "executor_description": "Update/Replace POI order.",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "{{host}}/orders/pois/{orderId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "orderId",
                "value": "",
                "description": "Verifone allocated ID for the Order"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "orderReference": "ORD-1234",
                "customerEntityUid": "2c5f4b49-7974-4a45-b1fe-1035c9012e7f",
                "requestedDate": "2019-08-24T14:15:22Z",
                "poRef": "85219587",
                "paymentDetails": {
                    "paymentType": "CREDIT"
                },
                "notes": "Current in draft, caller got busy, callback anothertime.",
                "additionalOrderData": [
                    {
                        "variableName": "VAT_ID or BAX_ID",
                        "variableValue": "1234566"
                    }
                ],
                "packageDetails": {
                    "portfolioUid": "32c480b5-4dfb-4c53-959f-49edf45a0931",
                    "basePackageBundle": {
                        "packageBundleId": "PREMIUM-36MONTH",
                        "price": "20.50"
                    },
                    "servicePackages": [
                        {
                            "packageBundleId": "PREMIUM-36MONTH",
                            "adjustedPrices": [
                                {
                                    "priceModel": "MONTHLY_FEE",
                                    "price": "20.50"
                                }
                            ],
                            "processorParameters": {
                                "processor": "ABS_ISO",
                                "tidList": [
                                    "1004631982",
                                    "1004631983",
                                    "1004631984"
                                ]
                            },
                            "additionalPackageData": [
                                {
                                    "variableName": "VAT_ID or BAX_ID",
                                    "variableValue": "1234566"
                                }
                            ]
                        }
                    ],
                    "deliveryPackage": {
                        "packageBundleId": "PREMIUM-36MONTH",
                        "adjustedPrices": [
                            {
                                "priceModel": "MONTHLY_FEE",
                                "price": "20.50"
                            }
                        ],
                        "additionalPackageData": [
                            {
                                "variableName": "VAT_ID or BAX_ID",
                                "variableValue": "1234566"
                            }
                        ]
                    }
                },
                "contract": {
                    "brokerId": "string",
                    "legalStructure": "PROPRIETOR_OWN_BEHALF",
                    "contacts": [
                        {
                            "contact": {
                                "contactType": "OWNER",
                                "name": {
                                    "firstName": "string",
                                    "lastName": "string",
                                    "prefix": "string",
                                    "alternateFullName": "string",
                                    "middleName": "string",
                                    "suffix": "string"
                                },
                                "phoneNumbers": [
                                    {
                                        "callingCode": "string",
                                        "value": "string",
                                        "extension": "string",
                                        "isPrimary": false,
                                        "phoneType": "HOME"
                                    }
                                ],
                                "email": "user@example.com",
                                "businessTitle": "string",
                                "passportId": "string",
                                "nationality": "string",
                                "nationalIdentifer": "string"
                            },
                            "addressDetails": {
                                "receiverName": "string",
                                "addressLine1": "213 Miller Street",
                                "addressLine2": "North Sydney",
                                "addressLine3": "string",
                                "poBox": "K1234",
                                "city": "York",
                                "countrySubdivision": "Georgia",
                                "postCode": "2061",
                                "country": "AUS",
                                "timeZone": "string"
                            },
                            "dateOfBirth": "2019-08-24",
                            "placeOfBirth": "string",
                            "isIDCheckRequired": false,
                            "isContractSignatureRequired": false,
                            "isLegalRepresentative": false,
                            "isAuthorizedRepresentative": false,
                            "isBeneficiaryOwner": false,
                            "isPoliticallyExposed": false,
                            "representativeType": "GENERAL_COMMERCIAL_POWER"
                        }
                    ],
                    "settlementAccount": {
                        "currency": "AED",
                        "accountHolderType": "BUSINESS",
                        "description": "Coffee Supreme Trading",
                        "nickname": "Store 1 Account",
                        "country": "AUS",
                        "accountName": "string",
                        "iban": "string",
                        "bic": "CTBAAU2S"
                    },
                    "domesticSettlementAccount": {
                        "currency": "AED",
                        "accountHolderType": "BUSINESS",
                        "description": "Coffee Supreme Trading",
                        "nickname": "Store 1 Account",
                        "accountName": "Coffee Supreme LTD",
                        "sortCode": "301105",
                        "bsb": "022039",
                        "routingTransitNumber": "247484410",
                        "accountNumber": "23008275"
                    },
                    "serviceStartDate": "2019-08-24T14:15:22Z",
                    "proprietorAct": true
                },
                "entityUid": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9",
                "shippingAddress": {
                    "contact": {
                        "contactType": "OWNER",
                        "name": {
                            "firstName": "string",
                            "lastName": "string",
                            "prefix": "string",
                            "alternateFullName": "string",
                            "middleName": "string",
                            "suffix": "string"
                        },
                        "phoneNumbers": [
                            {
                                "callingCode": "string",
                                "value": "string",
                                "extension": "string",
                                "isPrimary": false,
                                "phoneType": "HOME"
                            }
                        ],
                        "email": "user@example.com",
                        "businessTitle": "string"
                    },
                    "vfiSiteId": "string",
                    "storeNumber": "string",
                    "receiverName": "string",
                    "addressLine1": "213 Miller Street",
                    "addressLine2": "North Sydney",
                    "addressLine3": "string",
                    "poBox": "K1234",
                    "city": "York",
                    "countrySubdivision": "Georgia",
                    "postCode": "2061",
                    "country": "AUS",
                    "timeZone": "string"
                },
                "billingAddress": {
                    "contact": {
                        "contactType": "OWNER",
                        "name": {
                            "firstName": "string",
                            "lastName": "string",
                            "prefix": "string",
                            "alternateFullName": "string",
                            "middleName": "string",
                            "suffix": "string"
                        },
                        "phoneNumbers": [
                            {
                                "callingCode": "string",
                                "value": "string",
                                "extension": "string",
                                "isPrimary": false,
                                "phoneType": "HOME"
                            }
                        ],
                        "email": "user@example.com",
                        "businessTitle": "string"
                    },
                    "vfiSiteId": "string",
                    "storeNumber": "string",
                    "receiverName": "string",
                    "addressLine1": "213 Miller Street",
                    "addressLine2": "North Sydney",
                    "addressLine3": "string",
                    "poBox": "K1234",
                    "city": "York",
                    "countrySubdivision": "Georgia",
                    "postCode": "2061",
                    "country": "AUS",
                    "timeZone": "string"
                },
                "requestedDateOfShipment": "2019-08-24T14:15:22Z",
                "pois": [
                    {
                        "type": "UNSPECIFIED",
                        "poiId": "string",
                        "subPoiId": "string",
                        "altVfiPoiId": "1004631982",
                        "estateManagementId": "string",
                        "serialNumber": "string",
                        "name": "string",
                        "description": "string",
                        "status": "ACTIVE",
                        "cutoverTime": "17:00",
                        "poiUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                        "acquirerPoiIds": [
                            {
                                "variableName": "VAT_ID or BAX_ID",
                                "variableValue": "1234566"
                            }
                        ]
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695668800944,
        "lastModifiedTime": 1695668800944,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "orderReference": "ORD-1234",
                    "customerEntityUid": "2c5f4b49-7974-4a45-b1fe-1035c9012e7f",
                    "requestedDate": "2019-08-24T14:15:22Z",
                    "poRef": "85219587",
                    "paymentDetails": {
                        "paymentType": "CREDIT"
                    },
                    "notes": "Current in draft, caller got busy, callback anothertime.",
                    "additionalOrderData": [
                        {
                            "variableName": "VAT_ID or BAX_ID",
                            "variableValue": "1234566"
                        }
                    ],
                    "packageDetails": {
                        "portfolioUid": "32c480b5-4dfb-4c53-959f-49edf45a0931",
                        "basePackageBundle": {
                            "packageBundleId": "PREMIUM-36MONTH",
                            "price": "20.50"
                        },
                        "servicePackages": [
                            {
                                "packageBundleId": "PREMIUM-36MONTH",
                                "adjustedPrices": [
                                    {
                                        "priceModel": "MONTHLY_FEE",
                                        "price": "20.50"
                                    }
                                ],
                                "processorParameters": {
                                    "processor": "ABS_ISO",
                                    "tidList": [
                                        "1004631982",
                                        "1004631983",
                                        "1004631984"
                                    ]
                                },
                                "additionalPackageData": [
                                    {
                                        "variableName": "VAT_ID or BAX_ID",
                                        "variableValue": "1234566"
                                    }
                                ]
                            }
                        ],
                        "deliveryPackage": {
                            "packageBundleId": "PREMIUM-36MONTH",
                            "adjustedPrices": [
                                {
                                    "priceModel": "MONTHLY_FEE",
                                    "price": "20.50"
                                }
                            ],
                            "additionalPackageData": [
                                {
                                    "variableName": "VAT_ID or BAX_ID",
                                    "variableValue": "1234566"
                                }
                            ]
                        }
                    },
                    "contract": {
                        "brokerId": "string",
                        "legalStructure": "PROPRIETOR_OWN_BEHALF",
                        "contacts": [
                            {
                                "contact": {
                                    "contactType": "OWNER",
                                    "name": {
                                        "firstName": "string",
                                        "lastName": "string",
                                        "prefix": "string",
                                        "alternateFullName": "string",
                                        "middleName": "string",
                                        "suffix": "string"
                                    },
                                    "phoneNumbers": [
                                        {
                                            "callingCode": "string",
                                            "value": "string",
                                            "extension": "string",
                                            "isPrimary": false,
                                            "phoneType": "HOME"
                                        }
                                    ],
                                    "email": "user@example.com",
                                    "businessTitle": "string",
                                    "passportId": "string",
                                    "nationality": "string",
                                    "nationalIdentifer": "string"
                                },
                                "addressDetails": {
                                    "receiverName": "string",
                                    "addressLine1": "213 Miller Street",
                                    "addressLine2": "North Sydney",
                                    "addressLine3": "string",
                                    "poBox": "K1234",
                                    "city": "York",
                                    "countrySubdivision": "Georgia",
                                    "postCode": "2061",
                                    "country": "AUS",
                                    "timeZone": "string"
                                },
                                "dateOfBirth": "2019-08-24",
                                "placeOfBirth": "string",
                                "isIDCheckRequired": false,
                                "isContractSignatureRequired": false,
                                "isLegalRepresentative": false,
                                "isAuthorizedRepresentative": false,
                                "isBeneficiaryOwner": false,
                                "isPoliticallyExposed": false,
                                "representativeType": "GENERAL_COMMERCIAL_POWER"
                            }
                        ],
                        "settlementAccount": {
                            "currency": "AED",
                            "accountHolderType": "BUSINESS",
                            "description": "Coffee Supreme Trading",
                            "nickname": "Store 1 Account",
                            "country": "AUS",
                            "accountName": "string",
                            "iban": "string",
                            "bic": "CTBAAU2S"
                        },
                        "domesticSettlementAccount": {
                            "currency": "AED",
                            "accountHolderType": "BUSINESS",
                            "description": "Coffee Supreme Trading",
                            "nickname": "Store 1 Account",
                            "accountName": "Coffee Supreme LTD",
                            "sortCode": "301105",
                            "bsb": "022039",
                            "routingTransitNumber": "247484410",
                            "accountNumber": "23008275"
                        },
                        "serviceStartDate": "2019-08-24T14:15:22Z",
                        "proprietorAct": true
                    },
                    "entityUid": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9",
                    "shippingAddress": {
                        "contact": {
                            "contactType": "OWNER",
                            "name": {
                                "firstName": "string",
                                "lastName": "string",
                                "prefix": "string",
                                "alternateFullName": "string",
                                "middleName": "string",
                                "suffix": "string"
                            },
                            "phoneNumbers": [
                                {
                                    "callingCode": "string",
                                    "value": "string",
                                    "extension": "string",
                                    "isPrimary": false,
                                    "phoneType": "HOME"
                                }
                            ],
                            "email": "user@example.com",
                            "businessTitle": "string"
                        },
                        "vfiSiteId": "string",
                        "storeNumber": "string",
                        "receiverName": "string",
                        "addressLine1": "213 Miller Street",
                        "addressLine2": "North Sydney",
                        "addressLine3": "string",
                        "poBox": "K1234",
                        "city": "York",
                        "countrySubdivision": "Georgia",
                        "postCode": "2061",
                        "country": "AUS",
                        "timeZone": "string"
                    },
                    "billingAddress": {
                        "contact": {
                            "contactType": "OWNER",
                            "name": {
                                "firstName": "string",
                                "lastName": "string",
                                "prefix": "string",
                                "alternateFullName": "string",
                                "middleName": "string",
                                "suffix": "string"
                            },
                            "phoneNumbers": [
                                {
                                    "callingCode": "string",
                                    "value": "string",
                                    "extension": "string",
                                    "isPrimary": false,
                                    "phoneType": "HOME"
                                }
                            ],
                            "email": "user@example.com",
                            "businessTitle": "string"
                        },
                        "vfiSiteId": "string",
                        "storeNumber": "string",
                        "receiverName": "string",
                        "addressLine1": "213 Miller Street",
                        "addressLine2": "North Sydney",
                        "addressLine3": "string",
                        "poBox": "K1234",
                        "city": "York",
                        "countrySubdivision": "Georgia",
                        "postCode": "2061",
                        "country": "AUS",
                        "timeZone": "string"
                    },
                    "requestedDateOfShipment": "2019-08-24T14:15:22Z",
                    "pois": [
                        {
                            "type": "UNSPECIFIED",
                            "poiId": "string",
                            "subPoiId": "string",
                            "altVfiPoiId": "1004631982",
                            "estateManagementId": "string",
                            "serialNumber": "string",
                            "name": "string",
                            "description": "string",
                            "status": "ACTIVE",
                            "cutoverTime": "17:00",
                            "poiUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                            "acquirerPoiIds": [
                                {
                                    "variableName": "VAT_ID or BAX_ID",
                                    "variableValue": "1234566"
                                }
                            ]
                        }
                    ],
                    "orderId": "32c480b5-4dfb-4c53-959f-49edf45a0931",
                    "status": "DRAFT",
                    "createdUserUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                    "createdBy": "string",
                    "createdDate": "2019-08-24T14:15:22Z",
                    "modifiedUserUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                    "modifiedBy": "string",
                    "modifiedDate": "2019-08-24T14:15:22Z",
                    "orderType": "POIOrder",
                    "merchantCompanyEntityUid": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9",
                    "merchant": {
                        "merchantName": "string"
                    },
                    "internal": {
                        "oracleOrderNumber": 0,
                        "oracleShippingTrackingReference": "string",
                        "kycReportUid": "c7c0b6d2-7dcc-459f-9263-2cbbc453dfda",
                        "tokenScopeUid": "70357ba0-6aa4-4c15-83c9-22821312dd4e",
                        "extendedDetails": {
                            "status": "DRAFT",
                            "code": "string",
                            "information": "string",
                            "lastChangeTime": "2020-01-06T18:16:14.243Z",
                            "canCancel": true
                        },
                        "orderStats": {
                            "minsSinceCreatedToLastUpdate": 0,
                            "minsSinceLastStatusUpdate": 0
                        },
                        "vmssApplication": {
                            "visaStatus": "NA ",
                            "visaMatches": 0,
                            "mcdStatus": "NA ",
                            "mcdMatches": 0,
                            "mcdTransactionReference": "string"
                        },
                        "salesforceApplicationId": "string",
                        "signingInformation": {
                            "provider": "SIGNICAT",
                            "providerRef": "string",
                            "signedFileUrl": "string",
                            "signingRequests": [
                                {
                                    "providerRef": "string",
                                    "contact": {
                                        "contactType": "OWNER",
                                        "name": {
                                            "firstName": "string",
                                            "lastName": "string",
                                            "prefix": "string",
                                            "alternateFullName": "string",
                                            "middleName": "string",
                                            "suffix": "string"
                                        },
                                        "phoneNumbers": [
                                            {
                                                "callingCode": "string",
                                                "value": "string",
                                                "extension": "string",
                                                "isPrimary": false,
                                                "phoneType": "HOME"
                                            }
                                        ],
                                        "email": "user@example.com",
                                        "businessTitle": "string"
                                    },
                                    "signed": false,
                                    "signedDateTime": "2019-08-24T14:15:22Z"
                                }
                            ]
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116264,
        "executor_type": "THIRDPARTY",
        "executor_name": "getthelistofallorders",
        "executor_version": "v2",
        "executor_display_name": "Get the list of all orders",
        "executor_description": "Get the list of all orders",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/orders",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "orderReference",
                "value": "",
                "description": "Optional search string for looking up order by ID",
                "req": false
            },
            {
                "key": "status\t",
                "value": "",
                "description": "Enum: \"DRAFT\" \"SUBMITTED\" \"INPROGRESS\" \"COMPLETED\" \"CANCELLED\" \"ONHOLD\" pass an optional search string for looking up order by status",
                "req": false
            },
            {
                "key": "orderType",
                "value": "",
                "description": "Enum: \"POIOrder\" \"MerchantOrder\" \"POIMaintenanceOrder\" \"MerchantMaintenanceOrder\" \"POIAccessoryOrder\" \"AdditionalServicesOrder\" pass an optional search string for looking up order by type. Otherwise this will default to MerchantOrder",
                "req": false
            },
            {
                "key": "filterDateType",
                "value": "",
                "description": "Enum: \"createdDate\" \"modifiedDate\" pass an optional search string for filtering based on date type. Otherwise this will default to createdDate",
                "req": false
            },
            {
                "key": "userUids",
                "value": "",
                "description": "List of the User_ID corresponding to the User who created or modified the order.",
                "req": false
            },
            {
                "key": "startTime",
                "value": "",
                "description": "The record date/time to search from.",
                "req": false
            },
            {
                "key": "endTime\t",
                "value": "",
                "description": "The record date/time to search to.",
                "req": false
            },
            {
                "key": "merchantCompany",
                "value": "",
                "description": "The merchant company.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695671016353,
        "lastModifiedTime": 1695671016353,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "creators": [
                        {
                            "userUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                            "name": "John Smith"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116275,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaSingleMerchantEntity",
        "executor_version": "v2",
        "executor_display_name": "Delete a Single Merchant Entity",
        "executor_description": "Delete a Single Merchant Entity",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "{{host}}/entities/{entityUid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "entityUid",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1695674699504,
        "lastModifiedTime": 1695674827219,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "PATCH",
                "message": "no content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116279,
        "executor_type": "THIRDPARTY",
        "executor_name": "partialUpdateofaPOI",
        "executor_version": "v2",
        "executor_display_name": "Partial Update of a POI",
        "executor_description": "Partial Update of a POI",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "{{host}}/pois/{poiUid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "poiUid",
                "value": "",
                "description": "The assigned ID corresponding for the POI."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "status": "ACTIVE"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695675203206,
        "lastModifiedTime": 1695675203206,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "PATCH",
                "message": "no content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116288,
        "executor_type": "THIRDPARTY",
        "executor_name": "createanewunapproveduser",
        "executor_version": "v2",
        "executor_display_name": "Create a new unapproved user",
        "executor_description": "Create a new unapproved user",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/entities/{entityUid}/users",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "entityUid",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "contactType": "OWNER",
                "name": {
                    "firstName": "string",
                    "lastName": "string",
                    "prefix": "string",
                    "alternateFullName": "string",
                    "middleName": "string",
                    "suffix": "string"
                },
                "phoneNumbers": [
                    {
                        "callingCode": "string",
                        "value": "string",
                        "extension": "string",
                        "isPrimary": false,
                        "phoneType": "HOME"
                    }
                ],
                "email": "user@example.com",
                "businessTitle": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1695677001224,
        "lastModifiedTime": 1695677246818,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "userUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116257,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateAdditionalServicesOrder",
        "executor_version": "v2",
        "executor_display_name": "Update Additional Services Order",
        "executor_description": "Updates an existing add-on services order, provided the order has not yet been submitted",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "{{host}}/orders/merchant/additionalServices",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "orderReference": "ORD-1234",
                "customerEntityUid": "2c5f4b49-7974-4a45-b1fe-1035c9012e7f",
                "requestedDate": "2019-08-24T14:15:22Z",
                "poRef": "85219587",
                "paymentDetails": {
                    "paymentType": "CREDIT"
                },
                "notes": "Current in draft, caller got busy, callback anothertime.",
                "additionalOrderData": [
                    {
                        "variableName": "VAT_ID or BAX_ID",
                        "variableValue": "1234566"
                    }
                ],
                "contract": {
                    "brokerId": "string",
                    "legalStructure": "PROPRIETOR_OWN_BEHALF",
                    "contacts": [
                        {
                            "contact": {
                                "contactType": "OWNER",
                                "name": {
                                    "firstName": "string",
                                    "lastName": "string",
                                    "prefix": "string",
                                    "alternateFullName": "string",
                                    "middleName": "string",
                                    "suffix": "string"
                                },
                                "phoneNumbers": [
                                    {
                                        "callingCode": "string",
                                        "value": "string",
                                        "extension": "string",
                                        "isPrimary": false,
                                        "phoneType": "HOME"
                                    }
                                ],
                                "email": "user@example.com",
                                "businessTitle": "string",
                                "passportId": "string",
                                "nationality": "string",
                                "nationalIdentifer": "string"
                            },
                            "addressDetails": {
                                "receiverName": "string",
                                "addressLine1": "213 Miller Street",
                                "addressLine2": "North Sydney",
                                "addressLine3": "string",
                                "poBox": "K1234",
                                "city": "York",
                                "countrySubdivision": "Georgia",
                                "postCode": "2061",
                                "country": "AUS",
                                "timeZone": "string"
                            },
                            "dateOfBirth": "2019-08-24",
                            "placeOfBirth": "string",
                            "isIDCheckRequired": false,
                            "isContractSignatureRequired": false,
                            "isLegalRepresentative": false,
                            "isAuthorizedRepresentative": false,
                            "isBeneficiaryOwner": false,
                            "isPoliticallyExposed": false,
                            "representativeType": "GENERAL_COMMERCIAL_POWER"
                        }
                    ],
                    "settlementAccount": {
                        "currency": "AED",
                        "accountHolderType": "BUSINESS",
                        "description": "Coffee Supreme Trading",
                        "nickname": "Store 1 Account",
                        "country": "AUS",
                        "accountName": "string",
                        "iban": "string",
                        "bic": "CTBAAU2S"
                    },
                    "domesticSettlementAccount": {
                        "currency": "AED",
                        "accountHolderType": "BUSINESS",
                        "description": "Coffee Supreme Trading",
                        "nickname": "Store 1 Account",
                        "accountName": "Coffee Supreme LTD",
                        "sortCode": "301105",
                        "bsb": "022039",
                        "routingTransitNumber": "247484410",
                        "accountNumber": "23008275"
                    },
                    "serviceStartDate": "2019-08-24T14:15:22Z",
                    "proprietorAct": true
                },
                "servicePackages": [
                    {
                        "packageBundleId": "PREMIUM-36MONTH",
                        "adjustedPrices": [
                            {
                                "priceModel": "MONTHLY_FEE",
                                "price": "20.50"
                            }
                        ],
                        "processorParameters": {
                            "processor": "ABS_ISO",
                            "tidList": [
                                "1004631982",
                                "1004631983",
                                "1004631984"
                            ]
                        },
                        "additionalPackageData": [
                            {
                                "variableName": "VAT_ID or BAX_ID",
                                "variableValue": "1234566"
                            }
                        ],
                        "contractUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1"
                    }
                ],
                "shippingAddress": {
                    "contact": {
                        "contactType": "OWNER",
                        "name": {
                            "firstName": "string",
                            "lastName": "string",
                            "prefix": "string",
                            "alternateFullName": "string",
                            "middleName": "string",
                            "suffix": "string"
                        },
                        "phoneNumbers": [
                            {
                                "callingCode": "string",
                                "value": "string",
                                "extension": "string",
                                "isPrimary": false,
                                "phoneType": "HOME"
                            }
                        ],
                        "email": "user@example.com",
                        "businessTitle": "string"
                    },
                    "vfiSiteId": "string",
                    "storeNumber": "string",
                    "receiverName": "string",
                    "addressLine1": "213 Miller Street",
                    "addressLine2": "North Sydney",
                    "addressLine3": "string",
                    "poBox": "K1234",
                    "city": "York",
                    "countrySubdivision": "Georgia",
                    "postCode": "2061",
                    "country": "AUS",
                    "timeZone": "string"
                },
                "billingAddress": {
                    "contact": {
                        "contactType": "OWNER",
                        "name": {
                            "firstName": "string",
                            "lastName": "string",
                            "prefix": "string",
                            "alternateFullName": "string",
                            "middleName": "string",
                            "suffix": "string"
                        },
                        "phoneNumbers": [
                            {
                                "callingCode": "string",
                                "value": "string",
                                "extension": "string",
                                "isPrimary": false,
                                "phoneType": "HOME"
                            }
                        ],
                        "email": "user@example.com",
                        "businessTitle": "string"
                    },
                    "vfiSiteId": "string",
                    "storeNumber": "string",
                    "receiverName": "string",
                    "addressLine1": "213 Miller Street",
                    "addressLine2": "North Sydney",
                    "addressLine3": "string",
                    "poBox": "K1234",
                    "city": "York",
                    "countrySubdivision": "Georgia",
                    "postCode": "2061",
                    "country": "AUS",
                    "timeZone": "string"
                },
                "serviceTarget": {
                    "targetType": "SiteAndPois"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695668533106,
        "lastModifiedTime": 1695668533106,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "orderReference": "ORD-1234",
                    "customerEntityUid": "2c5f4b49-7974-4a45-b1fe-1035c9012e7f",
                    "requestedDate": "2019-08-24T14:15:22Z",
                    "poRef": "85219587",
                    "paymentDetails": {
                        "paymentType": "CREDIT"
                    },
                    "notes": "Current in draft, caller got busy, callback anothertime.",
                    "additionalOrderData": [
                        {
                            "variableName": "VAT_ID or BAX_ID",
                            "variableValue": "1234566"
                        }
                    ],
                    "contract": {
                        "brokerId": "string",
                        "legalStructure": "PROPRIETOR_OWN_BEHALF",
                        "contacts": [
                            {
                                "contact": {
                                    "contactType": "OWNER",
                                    "name": {
                                        "firstName": "string",
                                        "lastName": "string",
                                        "prefix": "string",
                                        "alternateFullName": "string",
                                        "middleName": "string",
                                        "suffix": "string"
                                    },
                                    "phoneNumbers": [
                                        {
                                            "callingCode": "string",
                                            "value": "string",
                                            "extension": "string",
                                            "isPrimary": false,
                                            "phoneType": "HOME"
                                        }
                                    ],
                                    "email": "user@example.com",
                                    "businessTitle": "string",
                                    "passportId": "string",
                                    "nationality": "string",
                                    "nationalIdentifer": "string"
                                },
                                "addressDetails": {
                                    "receiverName": "string",
                                    "addressLine1": "213 Miller Street",
                                    "addressLine2": "North Sydney",
                                    "addressLine3": "string",
                                    "poBox": "K1234",
                                    "city": "York",
                                    "countrySubdivision": "Georgia",
                                    "postCode": "2061",
                                    "country": "AUS",
                                    "timeZone": "string"
                                },
                                "dateOfBirth": "2019-08-24",
                                "placeOfBirth": "string",
                                "isIDCheckRequired": false,
                                "isContractSignatureRequired": false,
                                "isLegalRepresentative": false,
                                "isAuthorizedRepresentative": false,
                                "isBeneficiaryOwner": false,
                                "isPoliticallyExposed": false,
                                "representativeType": "GENERAL_COMMERCIAL_POWER"
                            }
                        ],
                        "settlementAccount": {
                            "currency": "AED",
                            "accountHolderType": "BUSINESS",
                            "description": "Coffee Supreme Trading",
                            "nickname": "Store 1 Account",
                            "country": "AUS",
                            "accountName": "string",
                            "iban": "string",
                            "bic": "CTBAAU2S"
                        },
                        "domesticSettlementAccount": {
                            "currency": "AED",
                            "accountHolderType": "BUSINESS",
                            "description": "Coffee Supreme Trading",
                            "nickname": "Store 1 Account",
                            "accountName": "Coffee Supreme LTD",
                            "sortCode": "301105",
                            "bsb": "022039",
                            "routingTransitNumber": "247484410",
                            "accountNumber": "23008275"
                        },
                        "serviceStartDate": "2019-08-24T14:15:22Z",
                        "proprietorAct": true
                    },
                    "servicePackages": [
                        {
                            "packageBundleId": "PREMIUM-36MONTH",
                            "adjustedPrices": [
                                {
                                    "priceModel": "MONTHLY_FEE",
                                    "price": "20.50"
                                }
                            ],
                            "processorParameters": {
                                "processor": "ABS_ISO",
                                "tidList": [
                                    "1004631982",
                                    "1004631983",
                                    "1004631984"
                                ]
                            },
                            "additionalPackageData": [
                                {
                                    "variableName": "VAT_ID or BAX_ID",
                                    "variableValue": "1234566"
                                }
                            ],
                            "contractUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1"
                        }
                    ],
                    "shippingAddress": {
                        "contact": {
                            "contactType": "OWNER",
                            "name": {
                                "firstName": "string",
                                "lastName": "string",
                                "prefix": "string",
                                "alternateFullName": "string",
                                "middleName": "string",
                                "suffix": "string"
                            },
                            "phoneNumbers": [
                                {
                                    "callingCode": "string",
                                    "value": "string",
                                    "extension": "string",
                                    "isPrimary": false,
                                    "phoneType": "HOME"
                                }
                            ],
                            "email": "user@example.com",
                            "businessTitle": "string"
                        },
                        "vfiSiteId": "string",
                        "storeNumber": "string",
                        "receiverName": "string",
                        "addressLine1": "213 Miller Street",
                        "addressLine2": "North Sydney",
                        "addressLine3": "string",
                        "poBox": "K1234",
                        "city": "York",
                        "countrySubdivision": "Georgia",
                        "postCode": "2061",
                        "country": "AUS",
                        "timeZone": "string"
                    },
                    "billingAddress": {
                        "contact": {
                            "contactType": "OWNER",
                            "name": {
                                "firstName": "string",
                                "lastName": "string",
                                "prefix": "string",
                                "alternateFullName": "string",
                                "middleName": "string",
                                "suffix": "string"
                            },
                            "phoneNumbers": [
                                {
                                    "callingCode": "string",
                                    "value": "string",
                                    "extension": "string",
                                    "isPrimary": false,
                                    "phoneType": "HOME"
                                }
                            ],
                            "email": "user@example.com",
                            "businessTitle": "string"
                        },
                        "vfiSiteId": "string",
                        "storeNumber": "string",
                        "receiverName": "string",
                        "addressLine1": "213 Miller Street",
                        "addressLine2": "North Sydney",
                        "addressLine3": "string",
                        "poBox": "K1234",
                        "city": "York",
                        "countrySubdivision": "Georgia",
                        "postCode": "2061",
                        "country": "AUS",
                        "timeZone": "string"
                    },
                    "serviceTarget": {
                        "targetType": "SiteAndPois"
                    },
                    "orderType": "AdditionalServicesOrder",
                    "orderId": "32c480b5-4dfb-4c53-959f-49edf45a0931",
                    "status": "DRAFT",
                    "createdUserUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                    "createdBy": "string",
                    "createdDate": "2019-08-24T14:15:22Z",
                    "modifiedUserUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                    "modifiedBy": "string",
                    "modifiedDate": "2019-08-24T14:15:22Z",
                    "entityUid": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9",
                    "merchantCompanyEntityUid": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9",
                    "merchant": {
                        "merchantName": "string"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116277,
        "executor_type": "THIRDPARTY",
        "executor_name": "partialUpdateofaMerchantEntity",
        "executor_version": "v2",
        "executor_display_name": "Partial Update of a Merchant Entity",
        "executor_description": "Partial Update of a Merchant Entity",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "{{host}}/entities/{entityUid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "entityUid",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "Merchant Name",
                "status": "ACTIVE"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695674944132,
        "lastModifiedTime": 1695674944132,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "PATCH",
                "message": "no content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116266,
        "executor_type": "THIRDPARTY",
        "executor_name": "getthelistofthecreatorsfortheorders",
        "executor_version": "v2",
        "executor_display_name": "Get the list of the creators for the orders",
        "executor_description": "Get the list of the creators for the orders",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/orders/creators",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "orderReference",
                "value": "",
                "description": "Optional search string for looking up order by ID",
                "req": false
            },
            {
                "key": "status\t",
                "value": "",
                "description": "Enum: \"DRAFT\" \"SUBMITTED\" \"INPROGRESS\" \"COMPLETED\" \"CANCELLED\" \"ONHOLD\" pass an optional search string for looking up order by status",
                "req": false
            },
            {
                "key": "orderType",
                "value": "",
                "description": "Enum: \"POIOrder\" \"MerchantOrder\" \"POIMaintenanceOrder\" \"MerchantMaintenanceOrder\" \"POIAccessoryOrder\" \"AdditionalServicesOrder\" pass an optional search string for looking up order by type. Otherwise this will default to MerchantOrder",
                "req": false
            },
            {
                "key": "filterDateType",
                "value": "",
                "description": "Enum: \"createdDate\" \"modifiedDate\" pass an optional search string for filtering based on date type. Otherwise this will default to createdDate",
                "req": false
            },
            {
                "key": "userUids",
                "value": "",
                "description": "List of the User_ID corresponding to the User who created or modified the order.",
                "req": false
            },
            {
                "key": "startTime",
                "value": "",
                "description": "The record date/time to search from.",
                "req": false
            },
            {
                "key": "endTime\t",
                "value": "",
                "description": "The record date/time to search to.",
                "req": false
            },
            {
                "key": "merchantCompany",
                "value": "",
                "description": "The merchant company.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695671160490,
        "lastModifiedTime": 1695671160490,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "creators": [
                        {
                            "userUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                            "name": "John Smith"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116278,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaSinglePOI",
        "executor_version": "v2",
        "executor_display_name": "Delete a Single POI",
        "executor_description": "Delete a Single POI",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "{{host}}/pois/{poiUid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "poiUid",
                "value": "",
                "description": "The assigned ID corresponding for the POI."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695675118153,
        "lastModifiedTime": 1695675118153,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "PATCH",
                "message": "no content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116291,
        "executor_type": "THIRDPARTY",
        "executor_name": "generateanewVerifoneMerchantIDbasedonRange",
        "executor_version": "v2",
        "executor_display_name": "Generate a new Verifone Merchant ID based on Range",
        "executor_description": "Generate a new Verifone Merchant ID based on Range",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/entities/mid/{rangeId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "rangeId",
                "value": "",
                "description": "Range allocation to be performed from"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "customerType": "NewCustomer",
                "contactType": "OWNER",
                "name": {
                    "firstName": "string",
                    "lastName": "string",
                    "prefix": "string",
                    "alternateFullName": "string",
                    "middleName": "string",
                    "suffix": "string"
                },
                "phoneNumbers": [
                    {
                        "callingCode": "string",
                        "value": "string",
                        "extension": "string",
                        "isPrimary": false,
                        "phoneType": "HOME"
                    }
                ],
                "email": "user@example.com",
                "businessTitle": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695677219588,
        "lastModifiedTime": 1695677219588,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "altVfiEntityId": "1003933752"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116299,
        "executor_type": "THIRDPARTY",
        "executor_name": "getthelistofalloracleaccounts",
        "executor_version": "v2",
        "executor_display_name": "Get the list of all oracle accounts",
        "executor_description": "Get the list of all oracle accounts",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/accounts/oracle",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "oracleAccountId\t",
                "value": "",
                "description": "The oracle Account Id.",
                "req": false
            },
            {
                "key": "userUid",
                "value": "",
                "description": "The User_ID corresponding to the User who created or modified the order.",
                "req": false
            },
            {
                "key": "merchantCompanyEntityUid\t",
                "value": "",
                "description": "The Verifone assigned ID corresponding to the Merchant Company.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695679441639,
        "lastModifiedTime": 1695679441639,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "accounts": [
                        {
                            "oracleAccountId": 12031585,
                            "userUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                            "merchantCompanyEntityUid": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116303,
        "executor_type": "THIRDPARTY",
        "executor_name": "getsinglebatchdetails",
        "executor_version": "v2",
        "executor_display_name": "Get single batch details",
        "executor_description": "Get single batch details",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/orders/batch/{batchId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "batchId",
                "value": "",
                "description": "Batch id for this request"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695680219487,
        "lastModifiedTime": 1695680219487,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "processingStatus": "SUCCESS",
                    "responseFileSent": false,
                    "responseFileName": "string",
                    "batchId": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9",
                    "fileCreatedDate": "2019-08-24T14:15:22Z",
                    "filePickupDate": "2019-08-24T14:15:22Z",
                    "fileName": "string",
                    "orderType": "POIOrder",
                    "retryCount": 0,
                    "transactions": [
                        {
                            "orderId": "32c480b5-4dfb-4c53-959f-49edf45a0931",
                            "requestId": "string",
                            "entityType": "MERCHANT_COMPANY",
                            "operation": "PARTIAL_UPDATE",
                            "entityLogicalId": "string",
                            "keyValues": "string",
                            "createdDate": "2019-08-24T14:15:22Z",
                            "status": "200",
                            "response": "Merchant Entity Updated Successfully",
                            "orderStatus": "DRAFT"
                        }
                    ],
                    "completionDate": "2019-08-24T14:15:22Z"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116304,
        "executor_type": "THIRDPARTY",
        "executor_name": "triggerbatchoperations",
        "executor_version": "v2",
        "executor_display_name": "Trigger batch operations",
        "executor_description": "Trigger batch operations",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/orders/batch/{batchId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "batchId",
                "value": "",
                "description": "Batch id for this request"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695680305237,
        "lastModifiedTime": 1695680305237,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "processingStatus": "SUCCESS",
                    "responseFileSent": false,
                    "responseFileName": "string",
                    "batchId": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9",
                    "fileCreatedDate": "2019-08-24T14:15:22Z",
                    "filePickupDate": "2019-08-24T14:15:22Z",
                    "fileName": "string",
                    "orderType": "POIOrder",
                    "retryCount": 0,
                    "transactions": [
                        {
                            "orderId": "32c480b5-4dfb-4c53-959f-49edf45a0931",
                            "requestId": "string",
                            "entityType": "MERCHANT_COMPANY",
                            "operation": "PARTIAL_UPDATE",
                            "entityLogicalId": "string",
                            "keyValues": "string",
                            "createdDate": "2019-08-24T14:15:22Z",
                            "status": "200",
                            "response": "Merchant Entity Updated Successfully",
                            "orderStatus": "DRAFT"
                        }
                    ],
                    "completionDate": "2019-08-24T14:15:22Z"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116256,
        "executor_type": "THIRDPARTY",
        "executor_name": "createAdditionalServicesOrder",
        "executor_version": "v2",
        "executor_display_name": "Create Additional Services Order",
        "executor_description": "Create Additional Services Order",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/orders/merchant/additionalServices",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "orderReference": "ORD-1234",
                "customerEntityUid": "2c5f4b49-7974-4a45-b1fe-1035c9012e7f",
                "requestedDate": "2019-08-24T14:15:22Z",
                "poRef": "85219587",
                "paymentDetails": {
                    "paymentType": "CREDIT"
                },
                "notes": "Current in draft, caller got busy, callback anothertime.",
                "additionalOrderData": [
                    {
                        "variableName": "VAT_ID or BAX_ID",
                        "variableValue": "1234566"
                    }
                ],
                "contract": {
                    "brokerId": "string",
                    "legalStructure": "PROPRIETOR_OWN_BEHALF",
                    "contacts": [
                        {
                            "contact": {
                                "contactType": "OWNER",
                                "name": {
                                    "firstName": "string",
                                    "lastName": "string",
                                    "prefix": "string",
                                    "alternateFullName": "string",
                                    "middleName": "string",
                                    "suffix": "string"
                                },
                                "phoneNumbers": [
                                    {
                                        "callingCode": "string",
                                        "value": "string",
                                        "extension": "string",
                                        "isPrimary": false,
                                        "phoneType": "HOME"
                                    }
                                ],
                                "email": "user@example.com",
                                "businessTitle": "string",
                                "passportId": "string",
                                "nationality": "string",
                                "nationalIdentifer": "string"
                            },
                            "addressDetails": {
                                "receiverName": "string",
                                "addressLine1": "213 Miller Street",
                                "addressLine2": "North Sydney",
                                "addressLine3": "string",
                                "poBox": "K1234",
                                "city": "York",
                                "countrySubdivision": "Georgia",
                                "postCode": "2061",
                                "country": "AUS",
                                "timeZone": "string"
                            },
                            "dateOfBirth": "2019-08-24",
                            "placeOfBirth": "string",
                            "isIDCheckRequired": false,
                            "isContractSignatureRequired": false,
                            "isLegalRepresentative": false,
                            "isAuthorizedRepresentative": false,
                            "isBeneficiaryOwner": false,
                            "isPoliticallyExposed": false,
                            "representativeType": "GENERAL_COMMERCIAL_POWER"
                        }
                    ],
                    "settlementAccount": {
                        "currency": "AED",
                        "accountHolderType": "BUSINESS",
                        "description": "Coffee Supreme Trading",
                        "nickname": "Store 1 Account",
                        "country": "AUS",
                        "accountName": "string",
                        "iban": "string",
                        "bic": "CTBAAU2S"
                    },
                    "domesticSettlementAccount": {
                        "currency": "AED",
                        "accountHolderType": "BUSINESS",
                        "description": "Coffee Supreme Trading",
                        "nickname": "Store 1 Account",
                        "accountName": "Coffee Supreme LTD",
                        "sortCode": "301105",
                        "bsb": "022039",
                        "routingTransitNumber": "247484410",
                        "accountNumber": "23008275"
                    },
                    "serviceStartDate": "2019-08-24T14:15:22Z",
                    "proprietorAct": true
                },
                "servicePackages": [
                    {
                        "packageBundleId": "PREMIUM-36MONTH",
                        "adjustedPrices": [
                            {
                                "priceModel": "MONTHLY_FEE",
                                "price": "20.50"
                            }
                        ],
                        "processorParameters": {
                            "processor": "ABS_ISO",
                            "tidList": [
                                "1004631982",
                                "1004631983",
                                "1004631984"
                            ]
                        },
                        "additionalPackageData": [
                            {
                                "variableName": "VAT_ID or BAX_ID",
                                "variableValue": "1234566"
                            }
                        ],
                        "contractUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1"
                    }
                ],
                "shippingAddress": {
                    "contact": {
                        "contactType": "OWNER",
                        "name": {
                            "firstName": "string",
                            "lastName": "string",
                            "prefix": "string",
                            "alternateFullName": "string",
                            "middleName": "string",
                            "suffix": "string"
                        },
                        "phoneNumbers": [
                            {
                                "callingCode": "string",
                                "value": "string",
                                "extension": "string",
                                "isPrimary": false,
                                "phoneType": "HOME"
                            }
                        ],
                        "email": "user@example.com",
                        "businessTitle": "string"
                    },
                    "vfiSiteId": "string",
                    "storeNumber": "string",
                    "receiverName": "string",
                    "addressLine1": "213 Miller Street",
                    "addressLine2": "North Sydney",
                    "addressLine3": "string",
                    "poBox": "K1234",
                    "city": "York",
                    "countrySubdivision": "Georgia",
                    "postCode": "2061",
                    "country": "AUS",
                    "timeZone": "string"
                },
                "billingAddress": {
                    "contact": {
                        "contactType": "OWNER",
                        "name": {
                            "firstName": "string",
                            "lastName": "string",
                            "prefix": "string",
                            "alternateFullName": "string",
                            "middleName": "string",
                            "suffix": "string"
                        },
                        "phoneNumbers": [
                            {
                                "callingCode": "string",
                                "value": "string",
                                "extension": "string",
                                "isPrimary": false,
                                "phoneType": "HOME"
                            }
                        ],
                        "email": "user@example.com",
                        "businessTitle": "string"
                    },
                    "vfiSiteId": "string",
                    "storeNumber": "string",
                    "receiverName": "string",
                    "addressLine1": "213 Miller Street",
                    "addressLine2": "North Sydney",
                    "addressLine3": "string",
                    "poBox": "K1234",
                    "city": "York",
                    "countrySubdivision": "Georgia",
                    "postCode": "2061",
                    "country": "AUS",
                    "timeZone": "string"
                },
                "serviceTarget": {
                    "targetType": "SiteAndPois"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695668418260,
        "lastModifiedTime": 1695668418260,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "orderReference": "ORD-1234",
                    "customerEntityUid": "2c5f4b49-7974-4a45-b1fe-1035c9012e7f",
                    "requestedDate": "2019-08-24T14:15:22Z",
                    "poRef": "85219587",
                    "paymentDetails": {
                        "paymentType": "CREDIT"
                    },
                    "notes": "Current in draft, caller got busy, callback anothertime.",
                    "additionalOrderData": [
                        {
                            "variableName": "VAT_ID or BAX_ID",
                            "variableValue": "1234566"
                        }
                    ],
                    "contract": {
                        "brokerId": "string",
                        "legalStructure": "PROPRIETOR_OWN_BEHALF",
                        "contacts": [
                            {
                                "contact": {
                                    "contactType": "OWNER",
                                    "name": {
                                        "firstName": "string",
                                        "lastName": "string",
                                        "prefix": "string",
                                        "alternateFullName": "string",
                                        "middleName": "string",
                                        "suffix": "string"
                                    },
                                    "phoneNumbers": [
                                        {
                                            "callingCode": "string",
                                            "value": "string",
                                            "extension": "string",
                                            "isPrimary": false,
                                            "phoneType": "HOME"
                                        }
                                    ],
                                    "email": "user@example.com",
                                    "businessTitle": "string",
                                    "passportId": "string",
                                    "nationality": "string",
                                    "nationalIdentifer": "string"
                                },
                                "addressDetails": {
                                    "receiverName": "string",
                                    "addressLine1": "213 Miller Street",
                                    "addressLine2": "North Sydney",
                                    "addressLine3": "string",
                                    "poBox": "K1234",
                                    "city": "York",
                                    "countrySubdivision": "Georgia",
                                    "postCode": "2061",
                                    "country": "AUS",
                                    "timeZone": "string"
                                },
                                "dateOfBirth": "2019-08-24",
                                "placeOfBirth": "string",
                                "isIDCheckRequired": false,
                                "isContractSignatureRequired": false,
                                "isLegalRepresentative": false,
                                "isAuthorizedRepresentative": false,
                                "isBeneficiaryOwner": false,
                                "isPoliticallyExposed": false,
                                "representativeType": "GENERAL_COMMERCIAL_POWER"
                            }
                        ],
                        "settlementAccount": {
                            "currency": "AED",
                            "accountHolderType": "BUSINESS",
                            "description": "Coffee Supreme Trading",
                            "nickname": "Store 1 Account",
                            "country": "AUS",
                            "accountName": "string",
                            "iban": "string",
                            "bic": "CTBAAU2S"
                        },
                        "domesticSettlementAccount": {
                            "currency": "AED",
                            "accountHolderType": "BUSINESS",
                            "description": "Coffee Supreme Trading",
                            "nickname": "Store 1 Account",
                            "accountName": "Coffee Supreme LTD",
                            "sortCode": "301105",
                            "bsb": "022039",
                            "routingTransitNumber": "247484410",
                            "accountNumber": "23008275"
                        },
                        "serviceStartDate": "2019-08-24T14:15:22Z",
                        "proprietorAct": true
                    },
                    "servicePackages": [
                        {
                            "packageBundleId": "PREMIUM-36MONTH",
                            "adjustedPrices": [
                                {
                                    "priceModel": "MONTHLY_FEE",
                                    "price": "20.50"
                                }
                            ],
                            "processorParameters": {
                                "processor": "ABS_ISO",
                                "tidList": [
                                    "1004631982",
                                    "1004631983",
                                    "1004631984"
                                ]
                            },
                            "additionalPackageData": [
                                {
                                    "variableName": "VAT_ID or BAX_ID",
                                    "variableValue": "1234566"
                                }
                            ],
                            "contractUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1"
                        }
                    ],
                    "shippingAddress": {
                        "contact": {
                            "contactType": "OWNER",
                            "name": {
                                "firstName": "string",
                                "lastName": "string",
                                "prefix": "string",
                                "alternateFullName": "string",
                                "middleName": "string",
                                "suffix": "string"
                            },
                            "phoneNumbers": [
                                {
                                    "callingCode": "string",
                                    "value": "string",
                                    "extension": "string",
                                    "isPrimary": false,
                                    "phoneType": "HOME"
                                }
                            ],
                            "email": "user@example.com",
                            "businessTitle": "string"
                        },
                        "vfiSiteId": "string",
                        "storeNumber": "string",
                        "receiverName": "string",
                        "addressLine1": "213 Miller Street",
                        "addressLine2": "North Sydney",
                        "addressLine3": "string",
                        "poBox": "K1234",
                        "city": "York",
                        "countrySubdivision": "Georgia",
                        "postCode": "2061",
                        "country": "AUS",
                        "timeZone": "string"
                    },
                    "billingAddress": {
                        "contact": {
                            "contactType": "OWNER",
                            "name": {
                                "firstName": "string",
                                "lastName": "string",
                                "prefix": "string",
                                "alternateFullName": "string",
                                "middleName": "string",
                                "suffix": "string"
                            },
                            "phoneNumbers": [
                                {
                                    "callingCode": "string",
                                    "value": "string",
                                    "extension": "string",
                                    "isPrimary": false,
                                    "phoneType": "HOME"
                                }
                            ],
                            "email": "user@example.com",
                            "businessTitle": "string"
                        },
                        "vfiSiteId": "string",
                        "storeNumber": "string",
                        "receiverName": "string",
                        "addressLine1": "213 Miller Street",
                        "addressLine2": "North Sydney",
                        "addressLine3": "string",
                        "poBox": "K1234",
                        "city": "York",
                        "countrySubdivision": "Georgia",
                        "postCode": "2061",
                        "country": "AUS",
                        "timeZone": "string"
                    },
                    "serviceTarget": {
                        "targetType": "SiteAndPois"
                    },
                    "orderType": "AdditionalServicesOrder",
                    "orderId": "32c480b5-4dfb-4c53-959f-49edf45a0931",
                    "status": "DRAFT",
                    "createdUserUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                    "createdBy": "string",
                    "createdDate": "2019-08-24T14:15:22Z",
                    "modifiedUserUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                    "modifiedBy": "string",
                    "modifiedDate": "2019-08-24T14:15:22Z",
                    "entityUid": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9",
                    "merchantCompanyEntityUid": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9",
                    "merchant": {
                        "merchantName": "string"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116270,
        "executor_type": "THIRDPARTY",
        "executor_name": "submitDraftOrderforprocessing",
        "executor_version": "v2",
        "executor_display_name": "Submit Draft Order for processing",
        "executor_description": "Submit Draft Order for processing",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/orders/drafts/{orderId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "orderId",
                "value": "",
                "description": "Verifone allocated ID for the Order"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "reversalStatus": "NONE",
                "code": "400",
                "title": "Bad Request",
                "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                "timestamp": "2017-04-05T10:43:07Z",
                "type": "INVALID_REQUEST_ERROR",
                "param": "string",
                "additionalProperties": {
                    "property1": {},
                    "property2": {}
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695674242572,
        "lastModifiedTime": 1695674242573,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "order cancellation request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116295,
        "executor_type": "THIRDPARTY",
        "executor_name": "insertTIDsintopool",
        "executor_version": "v2",
        "executor_display_name": "Insert TIDs into pool",
        "executor_description": "Insert TIDs into pool",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "{{host}}/entities/{entityUid}/purchasedTid",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "entityUid",
                "value": "",
                "description": "The Verifone assigned ID corresponding to the entity."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": [
                "1004631982"
            ],
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695677598699,
        "lastModifiedTime": 1695677598700,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "tids": [
                        {
                            "altVfiPoiId": "1004631982",
                            "createdDate": "2019-08-24T14:15:22Z",
                            "modifiedDate": "2019-08-24T14:15:22Z",
                            "reference": "string",
                            "status": "ALLOCATED"
                        }
                    ],
                    "metadata": {
                        "totalPages": 1,
                        "pageNumber": 1,
                        "pageSize": 50,
                        "totalItems": 25
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116255,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateReplaceMerchantOrder",
        "executor_version": "v2",
        "executor_display_name": "Update/Replace Merchant Order.",
        "executor_description": "Update/Replace Merchant Order.",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "{{host}}/orders/merchant/{orderId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "orderId",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "orderReference": "ORD-1234",
                "customerEntityUid": "2c5f4b49-7974-4a45-b1fe-1035c9012e7f",
                "requestedDate": "2019-08-24T14:15:22Z",
                "poRef": "85219587",
                "paymentDetails": {
                    "paymentType": "CREDIT"
                },
                "notes": "Current in draft, caller got busy, callback anothertime.",
                "additionalOrderData": [
                    {
                        "variableName": "VAT_ID or BAX_ID",
                        "variableValue": "1234566"
                    }
                ],
                "packageDetails": {
                    "portfolioUid": "32c480b5-4dfb-4c53-959f-49edf45a0931",
                    "basePackageBundle": {
                        "packageBundleId": "PREMIUM-36MONTH",
                        "price": "20.50"
                    },
                    "servicePackages": [
                        {
                            "packageBundleId": "PREMIUM-36MONTH",
                            "adjustedPrices": [
                                {
                                    "priceModel": "MONTHLY_FEE",
                                    "price": "20.50"
                                }
                            ],
                            "processorParameters": {
                                "processor": "ABS_ISO",
                                "tidList": [
                                    "1004631982",
                                    "1004631983",
                                    "1004631984"
                                ]
                            },
                            "additionalPackageData": [
                                {
                                    "variableName": "VAT_ID or BAX_ID",
                                    "variableValue": "1234566"
                                }
                            ]
                        }
                    ],
                    "deliveryPackage": {
                        "packageBundleId": "PREMIUM-36MONTH",
                        "adjustedPrices": [
                            {
                                "priceModel": "MONTHLY_FEE",
                                "price": "20.50"
                            }
                        ],
                        "additionalPackageData": [
                            {
                                "variableName": "VAT_ID or BAX_ID",
                                "variableValue": "1234566"
                            }
                        ]
                    }
                },
                "contract": {
                    "brokerId": "string",
                    "legalStructure": "PROPRIETOR_OWN_BEHALF",
                    "contacts": [
                        {
                            "contact": {
                                "contactType": "OWNER",
                                "name": {
                                    "firstName": "string",
                                    "lastName": "string",
                                    "prefix": "string",
                                    "alternateFullName": "string",
                                    "middleName": "string",
                                    "suffix": "string"
                                },
                                "phoneNumbers": [
                                    {
                                        "callingCode": "string",
                                        "value": "string",
                                        "extension": "string",
                                        "isPrimary": false,
                                        "phoneType": "HOME"
                                    }
                                ],
                                "email": "user@example.com",
                                "businessTitle": "string",
                                "passportId": "string",
                                "nationality": "string",
                                "nationalIdentifer": "string"
                            },
                            "addressDetails": {
                                "receiverName": "string",
                                "addressLine1": "213 Miller Street",
                                "addressLine2": "North Sydney",
                                "addressLine3": "string",
                                "poBox": "K1234",
                                "city": "York",
                                "countrySubdivision": "Georgia",
                                "postCode": "2061",
                                "country": "AUS",
                                "timeZone": "string"
                            },
                            "dateOfBirth": "2019-08-24",
                            "placeOfBirth": "string",
                            "isIDCheckRequired": false,
                            "isContractSignatureRequired": false,
                            "isLegalRepresentative": false,
                            "isAuthorizedRepresentative": false,
                            "isBeneficiaryOwner": false,
                            "isPoliticallyExposed": false,
                            "representativeType": "GENERAL_COMMERCIAL_POWER"
                        }
                    ],
                    "settlementAccount": {
                        "currency": "AED",
                        "accountHolderType": "BUSINESS",
                        "description": "Coffee Supreme Trading",
                        "nickname": "Store 1 Account",
                        "country": "AUS",
                        "accountName": "string",
                        "iban": "string",
                        "bic": "CTBAAU2S"
                    },
                    "domesticSettlementAccount": {
                        "currency": "AED",
                        "accountHolderType": "BUSINESS",
                        "description": "Coffee Supreme Trading",
                        "nickname": "Store 1 Account",
                        "accountName": "Coffee Supreme LTD",
                        "sortCode": "301105",
                        "bsb": "022039",
                        "routingTransitNumber": "247484410",
                        "accountNumber": "23008275"
                    },
                    "serviceStartDate": "2019-08-24T14:15:22Z",
                    "proprietorAct": true
                },
                "merchant": {
                    "merchantType": "string",
                    "merchantName": "string",
                    "merchantId": "string",
                    "merchantLogoUrl": "string",
                    "altVfiEntityId": "1003933752",
                    "parentEntityUid": "c10e40be-9f80-4a58-b24b-2f9bea666183",
                    "industry": "AIRLINE",
                    "primaryContact": {
                        "contactType": "OWNER",
                        "name": {
                            "firstName": "string",
                            "lastName": "string",
                            "prefix": "string",
                            "alternateFullName": "string",
                            "middleName": "string",
                            "suffix": "string"
                        },
                        "phoneNumbers": [
                            {
                                "callingCode": "string",
                                "value": "string",
                                "extension": "string",
                                "isPrimary": false,
                                "phoneType": "HOME"
                            }
                        ],
                        "email": "user@example.com",
                        "businessTitle": "string"
                    },
                    "requestedDateOfShipment": "2019-08-24T14:15:22Z",
                    "mcc": "5411",
                    "parameters": {
                        "transactionOptions": {
                            "purchaseEnabled": true,
                            "purchaseWithCashoutEnabled": true,
                            "cashoutEnabled": true,
                            "refundEnabled": true,
                            "preauthEnabled": true,
                            "balanceEnquiryEnabled": true,
                            "motoPaymentEnabled": true,
                            "motoTipEnabled": true,
                            "motoRefundEnabled": true,
                            "motoPreauthEnabled": true,
                            "motoSeparationEnabled": true,
                            "cashoutAmounts": "string"
                        },
                        "limits": {
                            "maxAmountPurchase": "20.50",
                            "maxAmountRefundCashier": "20.50",
                            "maxAmountRefundManager": "20.50",
                            "maxAmountRefundPerSettlement": "20.50",
                            "maxAmountCashout": "20.50"
                        },
                        "receiptOptions": {
                            "printMerchantReceipt": "NEVER",
                            "printCustomerReceipt": "NEVER",
                            "showEmailReceipts": true,
                            "showEmailTermsAndConditions": true,
                            "greeting": "string",
                            "footer": "string"
                        },
                        "tipOptions": {
                            "tipEnabled": true,
                            "tipLimit": 50,
                            "tipPercentages": "string"
                        }
                    },
                    "paymentAppParameters": {
                        "AllowDisableMerchantPreferredAppSelection": "0",
                        "PurchaseEnabled": "1",
                        "PurchaseAndCashoutEnabled": "1",
                        "PurchaseSurchargeEnabled": "0",
                        "ContactlessSurchargeEnabled": "0",
                        "CashOutOnlySurchargeEnabled": "0",
                        "PreauthCompletionSurchargeType": "0",
                        "MotoSurchargeEnabled": "0",
                        "ManualPurchaseEnabled": "1",
                        "ManualRefundEnabled": "1",
                        "ManualPreAuthEnabled": "0",
                        "CashoutOnlyEnabled": "1",
                        "RefundEnabled": "1",
                        "EbtEnabled": "1",
                        "VoidEnabled": "1",
                        "SplitPaymentsEnabled": "1",
                        "PreAuthEnabled": "0",
                        "BalanceEnquiryEnabled": "1",
                        "MotoPaymentEnabled": "0",
                        "MotoTipEnabled": "0",
                        "MotoRefundEnabled": "0",
                        "MotoPreAuthEnabled": "0",
                        "MotoSeparationEnabled": "0",
                        "CashbackAmounts": "10,20,40,60",
                        "MaxPurchaseAmount": "1000000",
                        "MaxCashierRefundAmount": "0",
                        "MaxManagerRefundAmount": "0",
                        "MaxRefundTotalAmountPerSettlement": "0",
                        "ForceOfflineEnabled": "0",
                        "CashbackCeiling": "200",
                        "PrintMerchantReceipt": "1",
                        "PrintCustomerReceipt": "1",
                        "ShowEmailReceiptOption": "0",
                        "ShowEmailTermsAndConditions": "0",
                        "ReceiptGreeting": "",
                        "ReceiptFooter": "",
                        "TipEnabled": "1",
                        "TipLimit": "50",
                        "TipPercentages": "5,10,15",
                        "AutoSettlementEnabled": "0",
                        "AutoSettlementTime": "1:30",
                        "SAFEnabled": "1",
                        "MaxSAFAccumulativeAmount": "1000",
                        "MaxSAFTransactionAmount": "1000",
                        "MerchantSurcharge": [
                            {
                                "ProductId": "string",
                                "SurchargeType": "0",
                                "SurchargeValue": "0",
                                "MaxSurchargeAdjAmount": "50.00",
                                "MinSurchargeAdjAmount": "0",
                                "MaxSurchargeableAmount": "0",
                                "MinSurchargeableAmount": "0",
                                "UseDomesticConfigForInternational": "1"
                            }
                        ],
                        "RegionalParameters": {
                            "parameterSchema": "string"
                        },
                        "CardHolderPresent": "Always",
                        "MaxContactlessTransactionAmount": 45,
                        "CommsFailFloorLimit": 85,
                        "VoiceAuthRefferalLimit": 48,
                        "VoiceAuthRefferalCode": "Th!s!sTh3C0d3"
                    },
                    "settlement": {
                        "settlementTime": "string"
                    },
                    "entityUid": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9",
                    "tradingAddress": {
                        "contact": {
                            "contactType": "OWNER",
                            "name": {
                                "firstName": "string",
                                "lastName": "string",
                                "prefix": "string",
                                "alternateFullName": "string",
                                "middleName": "string",
                                "suffix": "string"
                            },
                            "phoneNumbers": [
                                {
                                    "callingCode": "string",
                                    "value": "string",
                                    "extension": "string",
                                    "isPrimary": false,
                                    "phoneType": "HOME"
                                }
                            ],
                            "email": "user@example.com",
                            "businessTitle": "string"
                        },
                        "vfiSiteId": "string",
                        "storeNumber": "string",
                        "receiverName": "string",
                        "addressLine1": "213 Miller Street",
                        "addressLine2": "North Sydney",
                        "addressLine3": "string",
                        "poBox": "K1234",
                        "city": "York",
                        "countrySubdivision": "Georgia",
                        "postCode": "2061",
                        "country": "AUS",
                        "timeZone": "string"
                    },
                    "shippingAddress": {
                        "contact": {
                            "contactType": "OWNER",
                            "name": {
                                "firstName": "string",
                                "lastName": "string",
                                "prefix": "string",
                                "alternateFullName": "string",
                                "middleName": "string",
                                "suffix": "string"
                            },
                            "phoneNumbers": [
                                {
                                    "callingCode": "string",
                                    "value": "string",
                                    "extension": "string",
                                    "isPrimary": false,
                                    "phoneType": "HOME"
                                }
                            ],
                            "email": "user@example.com",
                            "businessTitle": "string"
                        },
                        "vfiSiteId": "string",
                        "storeNumber": "string",
                        "receiverName": "string",
                        "addressLine1": "213 Miller Street",
                        "addressLine2": "North Sydney",
                        "addressLine3": "string",
                        "poBox": "K1234",
                        "city": "York",
                        "countrySubdivision": "Georgia",
                        "postCode": "2061",
                        "country": "AUS",
                        "timeZone": "string"
                    },
                    "billingAddress": {
                        "contact": {
                            "contactType": "OWNER",
                            "name": {
                                "firstName": "string",
                                "lastName": "string",
                                "prefix": "string",
                                "alternateFullName": "string",
                                "middleName": "string",
                                "suffix": "string"
                            },
                            "phoneNumbers": [
                                {
                                    "callingCode": "string",
                                    "value": "string",
                                    "extension": "string",
                                    "isPrimary": false,
                                    "phoneType": "HOME"
                                }
                            ],
                            "email": "user@example.com",
                            "businessTitle": "string"
                        },
                        "vfiSiteId": "string",
                        "storeNumber": "string",
                        "receiverName": "string",
                        "addressLine1": "213 Miller Street",
                        "addressLine2": "North Sydney",
                        "addressLine3": "string",
                        "poBox": "K1234",
                        "city": "York",
                        "countrySubdivision": "Georgia",
                        "postCode": "2061",
                        "country": "AUS",
                        "timeZone": "string"
                    }
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695668207897,
        "lastModifiedTime": 1695668207897,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "orderReference": "ORD-1234",
                        "customerEntityUid": "2c5f4b49-7974-4a45-b1fe-1035c9012e7f",
                        "requestedDate": "2019-08-24T14:15:22Z",
                        "poRef": "85219587",
                        "paymentDetails": {
                            "paymentType": "CREDIT"
                        },
                        "notes": "Current in draft, caller got busy, callback anothertime.",
                        "additionalOrderData": [
                            {
                                "variableName": "VAT_ID or BAX_ID",
                                "variableValue": "1234566"
                            }
                        ],
                        "packageDetails": {
                            "portfolioUid": "32c480b5-4dfb-4c53-959f-49edf45a0931",
                            "basePackageBundle": {
                                "packageBundleId": "PREMIUM-36MONTH",
                                "price": "20.50"
                            },
                            "servicePackages": [
                                {
                                    "packageBundleId": "PREMIUM-36MONTH",
                                    "adjustedPrices": [
                                        {
                                            "priceModel": "MONTHLY_FEE",
                                            "price": "20.50"
                                        }
                                    ],
                                    "processorParameters": {
                                        "processor": "ABS_ISO",
                                        "tidList": [
                                            "1004631982",
                                            "1004631983",
                                            "1004631984"
                                        ]
                                    },
                                    "additionalPackageData": [
                                        {
                                            "variableName": "VAT_ID or BAX_ID",
                                            "variableValue": "1234566"
                                        }
                                    ]
                                }
                            ],
                            "deliveryPackage": {
                                "packageBundleId": "PREMIUM-36MONTH",
                                "adjustedPrices": [
                                    {
                                        "priceModel": "MONTHLY_FEE",
                                        "price": "20.50"
                                    }
                                ],
                                "additionalPackageData": [
                                    {
                                        "variableName": "VAT_ID or BAX_ID",
                                        "variableValue": "1234566"
                                    }
                                ]
                            }
                        },
                        "contract": {
                            "brokerId": "string",
                            "legalStructure": "PROPRIETOR_OWN_BEHALF",
                            "contacts": [
                                {
                                    "contact": {
                                        "contactType": "OWNER",
                                        "name": {
                                            "firstName": "string",
                                            "lastName": "string",
                                            "prefix": "string",
                                            "alternateFullName": "string",
                                            "middleName": "string",
                                            "suffix": "string"
                                        },
                                        "phoneNumbers": [
                                            {
                                                "callingCode": "string",
                                                "value": "string",
                                                "extension": "string",
                                                "isPrimary": false,
                                                "phoneType": "HOME"
                                            }
                                        ],
                                        "email": "user@example.com",
                                        "businessTitle": "string",
                                        "passportId": "string",
                                        "nationality": "string",
                                        "nationalIdentifer": "string"
                                    },
                                    "addressDetails": {
                                        "receiverName": "string",
                                        "addressLine1": "213 Miller Street",
                                        "addressLine2": "North Sydney",
                                        "addressLine3": "string",
                                        "poBox": "K1234",
                                        "city": "York",
                                        "countrySubdivision": "Georgia",
                                        "postCode": "2061",
                                        "country": "AUS",
                                        "timeZone": "string"
                                    },
                                    "dateOfBirth": "2019-08-24",
                                    "placeOfBirth": "string",
                                    "isIDCheckRequired": false,
                                    "isContractSignatureRequired": false,
                                    "isLegalRepresentative": false,
                                    "isAuthorizedRepresentative": false,
                                    "isBeneficiaryOwner": false,
                                    "isPoliticallyExposed": false,
                                    "representativeType": "GENERAL_COMMERCIAL_POWER"
                                }
                            ],
                            "settlementAccount": {
                                "currency": "AED",
                                "accountHolderType": "BUSINESS",
                                "description": "Coffee Supreme Trading",
                                "nickname": "Store 1 Account",
                                "country": "AUS",
                                "accountName": "string",
                                "iban": "string",
                                "bic": "CTBAAU2S"
                            },
                            "domesticSettlementAccount": {
                                "currency": "AED",
                                "accountHolderType": "BUSINESS",
                                "description": "Coffee Supreme Trading",
                                "nickname": "Store 1 Account",
                                "accountName": "Coffee Supreme LTD",
                                "sortCode": "301105",
                                "bsb": "022039",
                                "routingTransitNumber": "247484410",
                                "accountNumber": "23008275"
                            },
                            "serviceStartDate": "2019-08-24T14:15:22Z",
                            "proprietorAct": true
                        },
                        "merchant": {
                            "merchantType": "string",
                            "merchantName": "string",
                            "merchantId": "string",
                            "merchantLogoUrl": "string",
                            "altVfiEntityId": "1003933752",
                            "parentEntityUid": "c10e40be-9f80-4a58-b24b-2f9bea666183",
                            "industry": "AIRLINE",
                            "primaryContact": {
                                "contactType": "OWNER",
                                "name": {
                                    "firstName": "string",
                                    "lastName": "string",
                                    "prefix": "string",
                                    "alternateFullName": "string",
                                    "middleName": "string",
                                    "suffix": "string"
                                },
                                "phoneNumbers": [
                                    {
                                        "callingCode": "string",
                                        "value": "string",
                                        "extension": "string",
                                        "isPrimary": false,
                                        "phoneType": "HOME"
                                    }
                                ],
                                "email": "user@example.com",
                                "businessTitle": "string"
                            },
                            "requestedDateOfShipment": "2019-08-24T14:15:22Z",
                            "mcc": "5411",
                            "parameters": {
                                "transactionOptions": {
                                    "purchaseEnabled": true,
                                    "purchaseWithCashoutEnabled": true,
                                    "cashoutEnabled": true,
                                    "refundEnabled": true,
                                    "preauthEnabled": true,
                                    "balanceEnquiryEnabled": true,
                                    "motoPaymentEnabled": true,
                                    "motoTipEnabled": true,
                                    "motoRefundEnabled": true,
                                    "motoPreauthEnabled": true,
                                    "motoSeparationEnabled": true,
                                    "cashoutAmounts": "string"
                                },
                                "limits": {
                                    "maxAmountPurchase": "20.50",
                                    "maxAmountRefundCashier": "20.50",
                                    "maxAmountRefundManager": "20.50",
                                    "maxAmountRefundPerSettlement": "20.50",
                                    "maxAmountCashout": "20.50"
                                },
                                "receiptOptions": {
                                    "printMerchantReceipt": "NEVER",
                                    "printCustomerReceipt": "NEVER",
                                    "showEmailReceipts": true,
                                    "showEmailTermsAndConditions": true,
                                    "greeting": "string",
                                    "footer": "string"
                                },
                                "tipOptions": {
                                    "tipEnabled": true,
                                    "tipLimit": 50,
                                    "tipPercentages": "string"
                                }
                            },
                            "paymentAppParameters": {
                                "AllowDisableMerchantPreferredAppSelection": "0",
                                "PurchaseEnabled": "1",
                                "PurchaseAndCashoutEnabled": "1",
                                "PurchaseSurchargeEnabled": "0",
                                "ContactlessSurchargeEnabled": "0",
                                "CashOutOnlySurchargeEnabled": "0",
                                "PreauthCompletionSurchargeType": "0",
                                "MotoSurchargeEnabled": "0",
                                "ManualPurchaseEnabled": "1",
                                "ManualRefundEnabled": "1",
                                "ManualPreAuthEnabled": "0",
                                "CashoutOnlyEnabled": "1",
                                "RefundEnabled": "1",
                                "EbtEnabled": "1",
                                "VoidEnabled": "1",
                                "SplitPaymentsEnabled": "1",
                                "PreAuthEnabled": "0",
                                "BalanceEnquiryEnabled": "1",
                                "MotoPaymentEnabled": "0",
                                "MotoTipEnabled": "0",
                                "MotoRefundEnabled": "0",
                                "MotoPreAuthEnabled": "0",
                                "MotoSeparationEnabled": "0",
                                "CashbackAmounts": "10,20,40,60",
                                "MaxPurchaseAmount": "1000000",
                                "MaxCashierRefundAmount": "0",
                                "MaxManagerRefundAmount": "0",
                                "MaxRefundTotalAmountPerSettlement": "0",
                                "ForceOfflineEnabled": "0",
                                "CashbackCeiling": "200",
                                "PrintMerchantReceipt": "1",
                                "PrintCustomerReceipt": "1",
                                "ShowEmailReceiptOption": "0",
                                "ShowEmailTermsAndConditions": "0",
                                "ReceiptGreeting": "",
                                "ReceiptFooter": "",
                                "TipEnabled": "1",
                                "TipLimit": "50",
                                "TipPercentages": "5,10,15",
                                "AutoSettlementEnabled": "0",
                                "AutoSettlementTime": "1:30",
                                "SAFEnabled": "1",
                                "MaxSAFAccumulativeAmount": "1000",
                                "MaxSAFTransactionAmount": "1000",
                                "MerchantSurcharge": [
                                    {
                                        "ProductId": "string",
                                        "SurchargeType": "0",
                                        "SurchargeValue": "0",
                                        "MaxSurchargeAdjAmount": "50.00",
                                        "MinSurchargeAdjAmount": "0",
                                        "MaxSurchargeableAmount": "0",
                                        "MinSurchargeableAmount": "0",
                                        "UseDomesticConfigForInternational": "1"
                                    }
                                ],
                                "RegionalParameters": {
                                    "parameterSchema": "string"
                                },
                                "CardHolderPresent": "Always",
                                "MaxContactlessTransactionAmount": 45,
                                "CommsFailFloorLimit": 85,
                                "VoiceAuthRefferalLimit": 48,
                                "VoiceAuthRefferalCode": "Th!s!sTh3C0d3"
                            },
                            "settlement": {
                                "settlementTime": "string"
                            },
                            "entityUid": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9",
                            "tradingAddress": {
                                "contact": {
                                    "contactType": "OWNER",
                                    "name": {
                                        "firstName": "string",
                                        "lastName": "string",
                                        "prefix": "string",
                                        "alternateFullName": "string",
                                        "middleName": "string",
                                        "suffix": "string"
                                    },
                                    "phoneNumbers": [
                                        {
                                            "callingCode": "string",
                                            "value": "string",
                                            "extension": "string",
                                            "isPrimary": false,
                                            "phoneType": "HOME"
                                        }
                                    ],
                                    "email": "user@example.com",
                                    "businessTitle": "string"
                                },
                                "vfiSiteId": "string",
                                "storeNumber": "string",
                                "receiverName": "string",
                                "addressLine1": "213 Miller Street",
                                "addressLine2": "North Sydney",
                                "addressLine3": "string",
                                "poBox": "K1234",
                                "city": "York",
                                "countrySubdivision": "Georgia",
                                "postCode": "2061",
                                "country": "AUS",
                                "timeZone": "string"
                            },
                            "shippingAddress": {
                                "contact": {
                                    "contactType": "OWNER",
                                    "name": {
                                        "firstName": "string",
                                        "lastName": "string",
                                        "prefix": "string",
                                        "alternateFullName": "string",
                                        "middleName": "string",
                                        "suffix": "string"
                                    },
                                    "phoneNumbers": [
                                        {
                                            "callingCode": "string",
                                            "value": "string",
                                            "extension": "string",
                                            "isPrimary": false,
                                            "phoneType": "HOME"
                                        }
                                    ],
                                    "email": "user@example.com",
                                    "businessTitle": "string"
                                },
                                "vfiSiteId": "string",
                                "storeNumber": "string",
                                "receiverName": "string",
                                "addressLine1": "213 Miller Street",
                                "addressLine2": "North Sydney",
                                "addressLine3": "string",
                                "poBox": "K1234",
                                "city": "York",
                                "countrySubdivision": "Georgia",
                                "postCode": "2061",
                                "country": "AUS",
                                "timeZone": "string"
                            },
                            "billingAddress": {
                                "contact": {
                                    "contactType": "OWNER",
                                    "name": {
                                        "firstName": "string",
                                        "lastName": "string",
                                        "prefix": "string",
                                        "alternateFullName": "string",
                                        "middleName": "string",
                                        "suffix": "string"
                                    },
                                    "phoneNumbers": [
                                        {
                                            "callingCode": "string",
                                            "value": "string",
                                            "extension": "string",
                                            "isPrimary": false,
                                            "phoneType": "HOME"
                                        }
                                    ],
                                    "email": "user@example.com",
                                    "businessTitle": "string"
                                },
                                "vfiSiteId": "string",
                                "storeNumber": "string",
                                "receiverName": "string",
                                "addressLine1": "213 Miller Street",
                                "addressLine2": "North Sydney",
                                "addressLine3": "string",
                                "poBox": "K1234",
                                "city": "York",
                                "countrySubdivision": "Georgia",
                                "postCode": "2061",
                                "country": "AUS",
                                "timeZone": "string"
                            }
                        },
                        "orderId": "32c480b5-4dfb-4c53-959f-49edf45a0931",
                        "status": "DRAFT",
                        "createdUserUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                        "createdBy": "string",
                        "createdDate": "2019-08-24T14:15:22Z",
                        "modifiedUserUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                        "modifiedBy": "string",
                        "modifiedDate": "2019-08-24T14:15:22Z",
                        "orderType": "MerchantOrder",
                        "entityUid": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9",
                        "merchantCompanyEntityUid": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9",
                        "internal": {
                            "oracleOrderNumber": 0,
                            "oracleShippingTrackingReference": "string",
                            "kycReportUid": "c7c0b6d2-7dcc-459f-9263-2cbbc453dfda",
                            "tokenScopeUid": "70357ba0-6aa4-4c15-83c9-22821312dd4e",
                            "extendedDetails": {
                                "status": "DRAFT",
                                "code": "string",
                                "information": "string",
                                "lastChangeTime": "2020-01-06T18:16:14.243Z",
                                "canCancel": true
                            },
                            "orderStats": {
                                "minsSinceCreatedToLastUpdate": 0,
                                "minsSinceLastStatusUpdate": 0
                            },
                            "vmssApplication": {
                                "visaStatus": "NA ",
                                "visaMatches": 0,
                                "mcdStatus": "NA ",
                                "mcdMatches": 0,
                                "mcdTransactionReference": "string"
                            },
                            "salesforceApplicationId": "string",
                            "signingInformation": {
                                "provider": "SIGNICAT",
                                "providerRef": "string",
                                "signedFileUrl": "string",
                                "signingRequests": [
                                    {
                                        "providerRef": "string",
                                        "contact": {
                                            "contactType": "OWNER",
                                            "name": {
                                                "firstName": "string",
                                                "lastName": "string",
                                                "prefix": "string",
                                                "alternateFullName": "string",
                                                "middleName": "string",
                                                "suffix": "string"
                                            },
                                            "phoneNumbers": [
                                                {
                                                    "callingCode": "string",
                                                    "value": "string",
                                                    "extension": "string",
                                                    "isPrimary": false,
                                                    "phoneType": "HOME"
                                                }
                                            ],
                                            "email": "user@example.com",
                                            "businessTitle": "string"
                                        },
                                        "signed": false,
                                        "signedDateTime": "2019-08-24T14:15:22Z"
                                    }
                                ]
                            },
                            "ecomSiteEntityUid": "1487f403-7102-410c-a6d5-32eb411bb15c"
                        }
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116261,
        "executor_type": "THIRDPARTY",
        "executor_name": "createPOIAccessoryOrder",
        "executor_version": "v2",
        "executor_display_name": "Create POI Accessory Order",
        "executor_description": "Create POI Accessory Order",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/pois/orders/accessories/{poiUid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "poiUid",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "orderReference": "ORD-1234",
                "customerEntityUid": "2c5f4b49-7974-4a45-b1fe-1035c9012e7f",
                "requestedDate": "2019-08-24T14:15:22Z",
                "poRef": "85219587",
                "paymentDetails": {
                    "paymentType": "CREDIT"
                },
                "notes": "Current in draft, caller got busy, callback anothertime.",
                "additionalOrderData": [
                    {
                        "variableName": "VAT_ID or BAX_ID",
                        "variableValue": "1234566"
                    }
                ],
                "accessory": {
                    "accessoryType": "CONSUMABLES"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695668898503,
        "lastModifiedTime": 1695668898503,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "orderReference": "ORD-1234",
                    "customerEntityUid": "2c5f4b49-7974-4a45-b1fe-1035c9012e7f",
                    "requestedDate": "2019-08-24T14:15:22Z",
                    "poRef": "85219587",
                    "paymentDetails": {
                        "paymentType": "CREDIT"
                    },
                    "notes": "Current in draft, caller got busy, callback anothertime.",
                    "additionalOrderData": [
                        {
                            "variableName": "VAT_ID or BAX_ID",
                            "variableValue": "1234566"
                        }
                    ],
                    "accessory": {
                        "accessoryType": "CONSUMABLES"
                    },
                    "orderType": "POIAccessoryOrder",
                    "orderId": "32c480b5-4dfb-4c53-959f-49edf45a0931",
                    "status": "DRAFT",
                    "createdUserUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                    "createdBy": "string",
                    "createdDate": "2019-08-24T14:15:22Z",
                    "modifiedUserUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                    "modifiedBy": "string",
                    "modifiedDate": "2019-08-24T14:15:22Z",
                    "entityUid": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9",
                    "merchantCompanyEntityUid": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9",
                    "merchant": {
                        "merchantName": "string"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116267,
        "executor_type": "THIRDPARTY",
        "executor_name": "getasingleorder",
        "executor_version": "v2",
        "executor_display_name": "Get a single order",
        "executor_description": "Get a single order",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/orders/{orderId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "orderId",
                "value": "",
                "description": "Verifone allocated ID for the Order"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695671248231,
        "lastModifiedTime": 1695671248232,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116302,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateOracleaccount",
        "executor_version": "v2",
        "executor_display_name": "Update Oracle account",
        "executor_description": "Update Oracle account",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "{{host}}/accounts/oracle/{oracleAccountId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "oracleAccountId",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "oracleAccountId": 12031585,
                "userUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                "merchantCompanyEntityUid": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695680118432,
        "lastModifiedTime": 1695680118432,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "no content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116268,
        "executor_type": "THIRDPARTY",
        "executor_name": "requestOrdertobecancelled",
        "executor_version": "v2",
        "executor_display_name": "Request Order to be cancelled",
        "executor_description": "Request Order to be cancelled",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/orders/{orderId}/cancel",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "orderId",
                "value": "",
                "description": "Verifone allocated ID for the Order"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "cancelReasonEnum": "ADMIN_REASON",
                "cancelAdditionalReason": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695671429092,
        "lastModifiedTime": 1695671429092,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "order cancellation request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116297,
        "executor_type": "THIRDPARTY",
        "executor_name": "reserveTIDsfromthepool",
        "executor_version": "v2",
        "executor_display_name": "Reserve TIDs from the pool",
        "executor_description": "Reserve TIDs from the pool",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/entities/{entityUid}/purchasedTid/reserve",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "entityUid",
                "value": "",
                "description": "The Verifone assigned ID corresponding to the entity."
            }
        ],
        "queryParams": [
            {
                "key": "count",
                "value": "",
                "description": "Count of TIDs required from pool",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695677778581,
        "lastModifiedTime": 1695677778581,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    "1004631982"
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116293,
        "executor_type": "THIRDPARTY",
        "executor_name": "listTIDsinthepool",
        "executor_version": "v2",
        "executor_display_name": "List TIDs in the pool",
        "executor_description": "List TIDs in the pool",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/entities/{entityUid}/purchasedTid",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "entityUid",
                "value": "",
                "description": "The Verifone assigned ID corresponding to the entity."
            }
        ],
        "queryParams": [
            {
                "key": "status",
                "value": "",
                "description": "Allocation status of the purchased TID .",
                "req": false
            },
            {
                "key": "pageNumber",
                "value": "",
                "description": "Page number for records.",
                "req": false
            },
            {
                "key": "pageSize\t",
                "value": "",
                "description": "Page size for returned records.",
                "req": false
            },
            {
                "key": "orderBy\t",
                "value": "",
                "description": "The field to order by. Valid fields are: createdDate, modifiedDate, status",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695677508937,
        "lastModifiedTime": 1695677508937,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "tids": [
                        {
                            "altVfiPoiId": "1004631982",
                            "createdDate": "2019-08-24T14:15:22Z",
                            "modifiedDate": "2019-08-24T14:15:22Z",
                            "reference": "string",
                            "status": "ALLOCATED"
                        }
                    ],
                    "metadata": {
                        "totalPages": 1,
                        "pageNumber": 1,
                        "pageSize": 50,
                        "totalItems": 25
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116254,
        "executor_type": "THIRDPARTY",
        "executor_name": "createMerchantOrder",
        "executor_version": "v2",
        "executor_display_name": "Create Merchant Order",
        "executor_description": "Create Merchant Order",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{{host}}/orders/merchant",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "orderReference": "ORD-1234",
                "customerEntityUid": "2c5f4b49-7974-4a45-b1fe-1035c9012e7f",
                "requestedDate": "2019-08-24T14:15:22Z",
                "poRef": "85219587",
                "paymentDetails": {
                    "paymentType": "CREDIT"
                },
                "notes": "Current in draft, caller got busy, callback anothertime.",
                "additionalOrderData": [
                    {
                        "variableName": "VAT_ID or BAX_ID",
                        "variableValue": "1234566"
                    }
                ],
                "packageDetails": {
                    "portfolioUid": "32c480b5-4dfb-4c53-959f-49edf45a0931",
                    "basePackageBundle": {
                        "packageBundleId": "PREMIUM-36MONTH",
                        "price": "20.50"
                    },
                    "servicePackages": [
                        {
                            "packageBundleId": "PREMIUM-36MONTH",
                            "adjustedPrices": [
                                {
                                    "priceModel": "MONTHLY_FEE",
                                    "price": "20.50"
                                }
                            ],
                            "processorParameters": {
                                "processor": "ABS_ISO",
                                "tidList": [
                                    "1004631982",
                                    "1004631983",
                                    "1004631984"
                                ]
                            },
                            "additionalPackageData": [
                                {
                                    "variableName": "VAT_ID or BAX_ID",
                                    "variableValue": "1234566"
                                }
                            ]
                        }
                    ],
                    "deliveryPackage": {
                        "packageBundleId": "PREMIUM-36MONTH",
                        "adjustedPrices": [
                            {
                                "priceModel": "MONTHLY_FEE",
                                "price": "20.50"
                            }
                        ],
                        "additionalPackageData": [
                            {
                                "variableName": "VAT_ID or BAX_ID",
                                "variableValue": "1234566"
                            }
                        ]
                    }
                },
                "contract": {
                    "brokerId": "string",
                    "legalStructure": "PROPRIETOR_OWN_BEHALF",
                    "contacts": [
                        {
                            "contact": {
                                "contactType": "OWNER",
                                "name": {
                                    "firstName": "string",
                                    "lastName": "string",
                                    "prefix": "string",
                                    "alternateFullName": "string",
                                    "middleName": "string",
                                    "suffix": "string"
                                },
                                "phoneNumbers": [
                                    {
                                        "callingCode": "string",
                                        "value": "string",
                                        "extension": "string",
                                        "isPrimary": false,
                                        "phoneType": "HOME"
                                    }
                                ],
                                "email": "user@example.com",
                                "businessTitle": "string",
                                "passportId": "string",
                                "nationality": "string",
                                "nationalIdentifer": "string"
                            },
                            "addressDetails": {
                                "receiverName": "string",
                                "addressLine1": "213 Miller Street",
                                "addressLine2": "North Sydney",
                                "addressLine3": "string",
                                "poBox": "K1234",
                                "city": "York",
                                "countrySubdivision": "Georgia",
                                "postCode": "2061",
                                "country": "AUS",
                                "timeZone": "string"
                            },
                            "dateOfBirth": "2019-08-24",
                            "placeOfBirth": "string",
                            "isIDCheckRequired": false,
                            "isContractSignatureRequired": false,
                            "isLegalRepresentative": false,
                            "isAuthorizedRepresentative": false,
                            "isBeneficiaryOwner": false,
                            "isPoliticallyExposed": false,
                            "representativeType": "GENERAL_COMMERCIAL_POWER"
                        }
                    ],
                    "settlementAccount": {
                        "currency": "AED",
                        "accountHolderType": "BUSINESS",
                        "description": "Coffee Supreme Trading",
                        "nickname": "Store 1 Account",
                        "country": "AUS",
                        "accountName": "string",
                        "iban": "string",
                        "bic": "CTBAAU2S"
                    },
                    "domesticSettlementAccount": {
                        "currency": "AED",
                        "accountHolderType": "BUSINESS",
                        "description": "Coffee Supreme Trading",
                        "nickname": "Store 1 Account",
                        "accountName": "Coffee Supreme LTD",
                        "sortCode": "301105",
                        "bsb": "022039",
                        "routingTransitNumber": "247484410",
                        "accountNumber": "23008275"
                    },
                    "serviceStartDate": "2019-08-24T14:15:22Z",
                    "proprietorAct": true
                },
                "merchant": {
                    "merchantType": "string",
                    "merchantName": "string",
                    "merchantId": "string",
                    "merchantLogoUrl": "string",
                    "altVfiEntityId": "1003933752",
                    "parentEntityUid": "c10e40be-9f80-4a58-b24b-2f9bea666183",
                    "industry": "AIRLINE",
                    "primaryContact": {
                        "contactType": "OWNER",
                        "name": {
                            "firstName": "string",
                            "lastName": "string",
                            "prefix": "string",
                            "alternateFullName": "string",
                            "middleName": "string",
                            "suffix": "string"
                        },
                        "phoneNumbers": [
                            {
                                "callingCode": "string",
                                "value": "string",
                                "extension": "string",
                                "isPrimary": false,
                                "phoneType": "HOME"
                            }
                        ],
                        "email": "user@example.com",
                        "businessTitle": "string"
                    },
                    "requestedDateOfShipment": "2019-08-24T14:15:22Z",
                    "mcc": "5411",
                    "parameters": {
                        "transactionOptions": {
                            "purchaseEnabled": true,
                            "purchaseWithCashoutEnabled": true,
                            "cashoutEnabled": true,
                            "refundEnabled": true,
                            "preauthEnabled": true,
                            "balanceEnquiryEnabled": true,
                            "motoPaymentEnabled": true,
                            "motoTipEnabled": true,
                            "motoRefundEnabled": true,
                            "motoPreauthEnabled": true,
                            "motoSeparationEnabled": true,
                            "cashoutAmounts": "string"
                        },
                        "limits": {
                            "maxAmountPurchase": "20.50",
                            "maxAmountRefundCashier": "20.50",
                            "maxAmountRefundManager": "20.50",
                            "maxAmountRefundPerSettlement": "20.50",
                            "maxAmountCashout": "20.50"
                        },
                        "receiptOptions": {
                            "printMerchantReceipt": "NEVER",
                            "printCustomerReceipt": "NEVER",
                            "showEmailReceipts": true,
                            "showEmailTermsAndConditions": true,
                            "greeting": "string",
                            "footer": "string"
                        },
                        "tipOptions": {
                            "tipEnabled": true,
                            "tipLimit": 50,
                            "tipPercentages": "string"
                        }
                    },
                    "paymentAppParameters": {
                        "AllowDisableMerchantPreferredAppSelection": "0",
                        "PurchaseEnabled": "1",
                        "PurchaseAndCashoutEnabled": "1",
                        "PurchaseSurchargeEnabled": "0",
                        "ContactlessSurchargeEnabled": "0",
                        "CashOutOnlySurchargeEnabled": "0",
                        "PreauthCompletionSurchargeType": "0",
                        "MotoSurchargeEnabled": "0",
                        "ManualPurchaseEnabled": "1",
                        "ManualRefundEnabled": "1",
                        "ManualPreAuthEnabled": "0",
                        "CashoutOnlyEnabled": "1",
                        "RefundEnabled": "1",
                        "EbtEnabled": "1",
                        "VoidEnabled": "1",
                        "SplitPaymentsEnabled": "1",
                        "PreAuthEnabled": "0",
                        "BalanceEnquiryEnabled": "1",
                        "MotoPaymentEnabled": "0",
                        "MotoTipEnabled": "0",
                        "MotoRefundEnabled": "0",
                        "MotoPreAuthEnabled": "0",
                        "MotoSeparationEnabled": "0",
                        "CashbackAmounts": "10,20,40,60",
                        "MaxPurchaseAmount": "1000000",
                        "MaxCashierRefundAmount": "0",
                        "MaxManagerRefundAmount": "0",
                        "MaxRefundTotalAmountPerSettlement": "0",
                        "ForceOfflineEnabled": "0",
                        "CashbackCeiling": "200",
                        "PrintMerchantReceipt": "1",
                        "PrintCustomerReceipt": "1",
                        "ShowEmailReceiptOption": "0",
                        "ShowEmailTermsAndConditions": "0",
                        "ReceiptGreeting": "",
                        "ReceiptFooter": "",
                        "TipEnabled": "1",
                        "TipLimit": "50",
                        "TipPercentages": "5,10,15",
                        "AutoSettlementEnabled": "0",
                        "AutoSettlementTime": "1:30",
                        "SAFEnabled": "1",
                        "MaxSAFAccumulativeAmount": "1000",
                        "MaxSAFTransactionAmount": "1000",
                        "MerchantSurcharge": [
                            {
                                "ProductId": "string",
                                "SurchargeType": "0",
                                "SurchargeValue": "0",
                                "MaxSurchargeAdjAmount": "50.00",
                                "MinSurchargeAdjAmount": "0",
                                "MaxSurchargeableAmount": "0",
                                "MinSurchargeableAmount": "0",
                                "UseDomesticConfigForInternational": "1"
                            }
                        ],
                        "RegionalParameters": {
                            "parameterSchema": "string"
                        },
                        "CardHolderPresent": "Always",
                        "MaxContactlessTransactionAmount": 45,
                        "CommsFailFloorLimit": 85,
                        "VoiceAuthRefferalLimit": 48,
                        "VoiceAuthRefferalCode": "Th!s!sTh3C0d3"
                    },
                    "settlement": {
                        "settlementTime": "string"
                    },
                    "entityUid": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9",
                    "tradingAddress": {
                        "contact": {
                            "contactType": "OWNER",
                            "name": {
                                "firstName": "string",
                                "lastName": "string",
                                "prefix": "string",
                                "alternateFullName": "string",
                                "middleName": "string",
                                "suffix": "string"
                            },
                            "phoneNumbers": [
                                {
                                    "callingCode": "string",
                                    "value": "string",
                                    "extension": "string",
                                    "isPrimary": false,
                                    "phoneType": "HOME"
                                }
                            ],
                            "email": "user@example.com",
                            "businessTitle": "string"
                        },
                        "vfiSiteId": "string",
                        "storeNumber": "string",
                        "receiverName": "string",
                        "addressLine1": "213 Miller Street",
                        "addressLine2": "North Sydney",
                        "addressLine3": "string",
                        "poBox": "K1234",
                        "city": "York",
                        "countrySubdivision": "Georgia",
                        "postCode": "2061",
                        "country": "AUS",
                        "timeZone": "string"
                    },
                    "shippingAddress": {
                        "contact": {
                            "contactType": "OWNER",
                            "name": {
                                "firstName": "string",
                                "lastName": "string",
                                "prefix": "string",
                                "alternateFullName": "string",
                                "middleName": "string",
                                "suffix": "string"
                            },
                            "phoneNumbers": [
                                {
                                    "callingCode": "string",
                                    "value": "string",
                                    "extension": "string",
                                    "isPrimary": false,
                                    "phoneType": "HOME"
                                }
                            ],
                            "email": "user@example.com",
                            "businessTitle": "string"
                        },
                        "vfiSiteId": "string",
                        "storeNumber": "string",
                        "receiverName": "string",
                        "addressLine1": "213 Miller Street",
                        "addressLine2": "North Sydney",
                        "addressLine3": "string",
                        "poBox": "K1234",
                        "city": "York",
                        "countrySubdivision": "Georgia",
                        "postCode": "2061",
                        "country": "AUS",
                        "timeZone": "string"
                    },
                    "billingAddress": {
                        "contact": {
                            "contactType": "OWNER",
                            "name": {
                                "firstName": "string",
                                "lastName": "string",
                                "prefix": "string",
                                "alternateFullName": "string",
                                "middleName": "string",
                                "suffix": "string"
                            },
                            "phoneNumbers": [
                                {
                                    "callingCode": "string",
                                    "value": "string",
                                    "extension": "string",
                                    "isPrimary": false,
                                    "phoneType": "HOME"
                                }
                            ],
                            "email": "user@example.com",
                            "businessTitle": "string"
                        },
                        "vfiSiteId": "string",
                        "storeNumber": "string",
                        "receiverName": "string",
                        "addressLine1": "213 Miller Street",
                        "addressLine2": "North Sydney",
                        "addressLine3": "string",
                        "poBox": "K1234",
                        "city": "York",
                        "countrySubdivision": "Georgia",
                        "postCode": "2061",
                        "country": "AUS",
                        "timeZone": "string"
                    }
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695668096694,
        "lastModifiedTime": 1695668096694,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "orderReference": "ORD-1234",
                    "customerEntityUid": "2c5f4b49-7974-4a45-b1fe-1035c9012e7f",
                    "requestedDate": "2019-08-24T14:15:22Z",
                    "poRef": "85219587",
                    "paymentDetails": {
                        "paymentType": "CREDIT"
                    },
                    "notes": "Current in draft, caller got busy, callback anothertime.",
                    "additionalOrderData": [
                        {
                            "variableName": "VAT_ID or BAX_ID",
                            "variableValue": "1234566"
                        }
                    ],
                    "packageDetails": {
                        "portfolioUid": "32c480b5-4dfb-4c53-959f-49edf45a0931",
                        "basePackageBundle": {
                            "packageBundleId": "PREMIUM-36MONTH",
                            "price": "20.50"
                        },
                        "servicePackages": [
                            {
                                "packageBundleId": "PREMIUM-36MONTH",
                                "adjustedPrices": [
                                    {
                                        "priceModel": "MONTHLY_FEE",
                                        "price": "20.50"
                                    }
                                ],
                                "processorParameters": {
                                    "processor": "ABS_ISO",
                                    "tidList": [
                                        "1004631982",
                                        "1004631983",
                                        "1004631984"
                                    ]
                                },
                                "additionalPackageData": [
                                    {
                                        "variableName": "VAT_ID or BAX_ID",
                                        "variableValue": "1234566"
                                    }
                                ]
                            }
                        ],
                        "deliveryPackage": {
                            "packageBundleId": "PREMIUM-36MONTH",
                            "adjustedPrices": [
                                {
                                    "priceModel": "MONTHLY_FEE",
                                    "price": "20.50"
                                }
                            ],
                            "additionalPackageData": [
                                {
                                    "variableName": "VAT_ID or BAX_ID",
                                    "variableValue": "1234566"
                                }
                            ]
                        }
                    },
                    "contract": {
                        "brokerId": "string",
                        "legalStructure": "PROPRIETOR_OWN_BEHALF",
                        "contacts": [
                            {
                                "contact": {
                                    "contactType": "OWNER",
                                    "name": {
                                        "firstName": "string",
                                        "lastName": "string",
                                        "prefix": "string",
                                        "alternateFullName": "string",
                                        "middleName": "string",
                                        "suffix": "string"
                                    },
                                    "phoneNumbers": [
                                        {
                                            "callingCode": "string",
                                            "value": "string",
                                            "extension": "string",
                                            "isPrimary": false,
                                            "phoneType": "HOME"
                                        }
                                    ],
                                    "email": "user@example.com",
                                    "businessTitle": "string",
                                    "passportId": "string",
                                    "nationality": "string",
                                    "nationalIdentifer": "string"
                                },
                                "addressDetails": {
                                    "receiverName": "string",
                                    "addressLine1": "213 Miller Street",
                                    "addressLine2": "North Sydney",
                                    "addressLine3": "string",
                                    "poBox": "K1234",
                                    "city": "York",
                                    "countrySubdivision": "Georgia",
                                    "postCode": "2061",
                                    "country": "AUS",
                                    "timeZone": "string"
                                },
                                "dateOfBirth": "2019-08-24",
                                "placeOfBirth": "string",
                                "isIDCheckRequired": false,
                                "isContractSignatureRequired": false,
                                "isLegalRepresentative": false,
                                "isAuthorizedRepresentative": false,
                                "isBeneficiaryOwner": false,
                                "isPoliticallyExposed": false,
                                "representativeType": "GENERAL_COMMERCIAL_POWER"
                            }
                        ],
                        "settlementAccount": {
                            "currency": "AED",
                            "accountHolderType": "BUSINESS",
                            "description": "Coffee Supreme Trading",
                            "nickname": "Store 1 Account",
                            "country": "AUS",
                            "accountName": "string",
                            "iban": "string",
                            "bic": "CTBAAU2S"
                        },
                        "domesticSettlementAccount": {
                            "currency": "AED",
                            "accountHolderType": "BUSINESS",
                            "description": "Coffee Supreme Trading",
                            "nickname": "Store 1 Account",
                            "accountName": "Coffee Supreme LTD",
                            "sortCode": "301105",
                            "bsb": "022039",
                            "routingTransitNumber": "247484410",
                            "accountNumber": "23008275"
                        },
                        "serviceStartDate": "2019-08-24T14:15:22Z",
                        "proprietorAct": true
                    },
                    "merchant": {
                        "merchantType": "string",
                        "merchantName": "string",
                        "merchantId": "string",
                        "merchantLogoUrl": "string",
                        "altVfiEntityId": "1003933752",
                        "parentEntityUid": "c10e40be-9f80-4a58-b24b-2f9bea666183",
                        "industry": "AIRLINE",
                        "primaryContact": {
                            "contactType": "OWNER",
                            "name": {
                                "firstName": "string",
                                "lastName": "string",
                                "prefix": "string",
                                "alternateFullName": "string",
                                "middleName": "string",
                                "suffix": "string"
                            },
                            "phoneNumbers": [
                                {
                                    "callingCode": "string",
                                    "value": "string",
                                    "extension": "string",
                                    "isPrimary": false,
                                    "phoneType": "HOME"
                                }
                            ],
                            "email": "user@example.com",
                            "businessTitle": "string"
                        },
                        "requestedDateOfShipment": "2019-08-24T14:15:22Z",
                        "mcc": "5411",
                        "parameters": {
                            "transactionOptions": {
                                "purchaseEnabled": true,
                                "purchaseWithCashoutEnabled": true,
                                "cashoutEnabled": true,
                                "refundEnabled": true,
                                "preauthEnabled": true,
                                "balanceEnquiryEnabled": true,
                                "motoPaymentEnabled": true,
                                "motoTipEnabled": true,
                                "motoRefundEnabled": true,
                                "motoPreauthEnabled": true,
                                "motoSeparationEnabled": true,
                                "cashoutAmounts": "string"
                            },
                            "limits": {
                                "maxAmountPurchase": "20.50",
                                "maxAmountRefundCashier": "20.50",
                                "maxAmountRefundManager": "20.50",
                                "maxAmountRefundPerSettlement": "20.50",
                                "maxAmountCashout": "20.50"
                            },
                            "receiptOptions": {
                                "printMerchantReceipt": "NEVER",
                                "printCustomerReceipt": "NEVER",
                                "showEmailReceipts": true,
                                "showEmailTermsAndConditions": true,
                                "greeting": "string",
                                "footer": "string"
                            },
                            "tipOptions": {
                                "tipEnabled": true,
                                "tipLimit": 50,
                                "tipPercentages": "string"
                            }
                        },
                        "paymentAppParameters": {
                            "AllowDisableMerchantPreferredAppSelection": "0",
                            "PurchaseEnabled": "1",
                            "PurchaseAndCashoutEnabled": "1",
                            "PurchaseSurchargeEnabled": "0",
                            "ContactlessSurchargeEnabled": "0",
                            "CashOutOnlySurchargeEnabled": "0",
                            "PreauthCompletionSurchargeType": "0",
                            "MotoSurchargeEnabled": "0",
                            "ManualPurchaseEnabled": "1",
                            "ManualRefundEnabled": "1",
                            "ManualPreAuthEnabled": "0",
                            "CashoutOnlyEnabled": "1",
                            "RefundEnabled": "1",
                            "EbtEnabled": "1",
                            "VoidEnabled": "1",
                            "SplitPaymentsEnabled": "1",
                            "PreAuthEnabled": "0",
                            "BalanceEnquiryEnabled": "1",
                            "MotoPaymentEnabled": "0",
                            "MotoTipEnabled": "0",
                            "MotoRefundEnabled": "0",
                            "MotoPreAuthEnabled": "0",
                            "MotoSeparationEnabled": "0",
                            "CashbackAmounts": "10,20,40,60",
                            "MaxPurchaseAmount": "1000000",
                            "MaxCashierRefundAmount": "0",
                            "MaxManagerRefundAmount": "0",
                            "MaxRefundTotalAmountPerSettlement": "0",
                            "ForceOfflineEnabled": "0",
                            "CashbackCeiling": "200",
                            "PrintMerchantReceipt": "1",
                            "PrintCustomerReceipt": "1",
                            "ShowEmailReceiptOption": "0",
                            "ShowEmailTermsAndConditions": "0",
                            "ReceiptGreeting": "",
                            "ReceiptFooter": "",
                            "TipEnabled": "1",
                            "TipLimit": "50",
                            "TipPercentages": "5,10,15",
                            "AutoSettlementEnabled": "0",
                            "AutoSettlementTime": "1:30",
                            "SAFEnabled": "1",
                            "MaxSAFAccumulativeAmount": "1000",
                            "MaxSAFTransactionAmount": "1000",
                            "MerchantSurcharge": [
                                {
                                    "ProductId": "string",
                                    "SurchargeType": "0",
                                    "SurchargeValue": "0",
                                    "MaxSurchargeAdjAmount": "50.00",
                                    "MinSurchargeAdjAmount": "0",
                                    "MaxSurchargeableAmount": "0",
                                    "MinSurchargeableAmount": "0",
                                    "UseDomesticConfigForInternational": "1"
                                }
                            ],
                            "RegionalParameters": {
                                "parameterSchema": "string"
                            },
                            "CardHolderPresent": "Always",
                            "MaxContactlessTransactionAmount": 45,
                            "CommsFailFloorLimit": 85,
                            "VoiceAuthRefferalLimit": 48,
                            "VoiceAuthRefferalCode": "Th!s!sTh3C0d3"
                        },
                        "settlement": {
                            "settlementTime": "string"
                        },
                        "entityUid": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9",
                        "tradingAddress": {
                            "contact": {
                                "contactType": "OWNER",
                                "name": {
                                    "firstName": "string",
                                    "lastName": "string",
                                    "prefix": "string",
                                    "alternateFullName": "string",
                                    "middleName": "string",
                                    "suffix": "string"
                                },
                                "phoneNumbers": [
                                    {
                                        "callingCode": "string",
                                        "value": "string",
                                        "extension": "string",
                                        "isPrimary": false,
                                        "phoneType": "HOME"
                                    }
                                ],
                                "email": "user@example.com",
                                "businessTitle": "string"
                            },
                            "vfiSiteId": "string",
                            "storeNumber": "string",
                            "receiverName": "string",
                            "addressLine1": "213 Miller Street",
                            "addressLine2": "North Sydney",
                            "addressLine3": "string",
                            "poBox": "K1234",
                            "city": "York",
                            "countrySubdivision": "Georgia",
                            "postCode": "2061",
                            "country": "AUS",
                            "timeZone": "string"
                        },
                        "shippingAddress": {
                            "contact": {
                                "contactType": "OWNER",
                                "name": {
                                    "firstName": "string",
                                    "lastName": "string",
                                    "prefix": "string",
                                    "alternateFullName": "string",
                                    "middleName": "string",
                                    "suffix": "string"
                                },
                                "phoneNumbers": [
                                    {
                                        "callingCode": "string",
                                        "value": "string",
                                        "extension": "string",
                                        "isPrimary": false,
                                        "phoneType": "HOME"
                                    }
                                ],
                                "email": "user@example.com",
                                "businessTitle": "string"
                            },
                            "vfiSiteId": "string",
                            "storeNumber": "string",
                            "receiverName": "string",
                            "addressLine1": "213 Miller Street",
                            "addressLine2": "North Sydney",
                            "addressLine3": "string",
                            "poBox": "K1234",
                            "city": "York",
                            "countrySubdivision": "Georgia",
                            "postCode": "2061",
                            "country": "AUS",
                            "timeZone": "string"
                        },
                        "billingAddress": {
                            "contact": {
                                "contactType": "OWNER",
                                "name": {
                                    "firstName": "string",
                                    "lastName": "string",
                                    "prefix": "string",
                                    "alternateFullName": "string",
                                    "middleName": "string",
                                    "suffix": "string"
                                },
                                "phoneNumbers": [
                                    {
                                        "callingCode": "string",
                                        "value": "string",
                                        "extension": "string",
                                        "isPrimary": false,
                                        "phoneType": "HOME"
                                    }
                                ],
                                "email": "user@example.com",
                                "businessTitle": "string"
                            },
                            "vfiSiteId": "string",
                            "storeNumber": "string",
                            "receiverName": "string",
                            "addressLine1": "213 Miller Street",
                            "addressLine2": "North Sydney",
                            "addressLine3": "string",
                            "poBox": "K1234",
                            "city": "York",
                            "countrySubdivision": "Georgia",
                            "postCode": "2061",
                            "country": "AUS",
                            "timeZone": "string"
                        }
                    },
                    "orderId": "32c480b5-4dfb-4c53-959f-49edf45a0931",
                    "status": "DRAFT",
                    "createdUserUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                    "createdBy": "string",
                    "createdDate": "2019-08-24T14:15:22Z",
                    "modifiedUserUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                    "modifiedBy": "string",
                    "modifiedDate": "2019-08-24T14:15:22Z",
                    "orderType": "MerchantOrder",
                    "entityUid": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9",
                    "merchantCompanyEntityUid": "14f5ea24-cc4f-11e8-a8d5-f2801f1b9fd9",
                    "internal": {
                        "oracleOrderNumber": 0,
                        "oracleShippingTrackingReference": "string",
                        "kycReportUid": "c7c0b6d2-7dcc-459f-9263-2cbbc453dfda",
                        "tokenScopeUid": "70357ba0-6aa4-4c15-83c9-22821312dd4e",
                        "extendedDetails": {
                            "status": "DRAFT",
                            "code": "string",
                            "information": "string",
                            "lastChangeTime": "2020-01-06T18:16:14.243Z",
                            "canCancel": true
                        },
                        "orderStats": {
                            "minsSinceCreatedToLastUpdate": 0,
                            "minsSinceLastStatusUpdate": 0
                        },
                        "vmssApplication": {
                            "visaStatus": "NA ",
                            "visaMatches": 0,
                            "mcdStatus": "NA ",
                            "mcdMatches": 0,
                            "mcdTransactionReference": "string"
                        },
                        "salesforceApplicationId": "string",
                        "signingInformation": {
                            "provider": "SIGNICAT",
                            "providerRef": "string",
                            "signedFileUrl": "string",
                            "signingRequests": [
                                {
                                    "providerRef": "string",
                                    "contact": {
                                        "contactType": "OWNER",
                                        "name": {
                                            "firstName": "string",
                                            "lastName": "string",
                                            "prefix": "string",
                                            "alternateFullName": "string",
                                            "middleName": "string",
                                            "suffix": "string"
                                        },
                                        "phoneNumbers": [
                                            {
                                                "callingCode": "string",
                                                "value": "string",
                                                "extension": "string",
                                                "isPrimary": false,
                                                "phoneType": "HOME"
                                            }
                                        ],
                                        "email": "user@example.com",
                                        "businessTitle": "string"
                                    },
                                    "signed": false,
                                    "signedDateTime": "2019-08-24T14:15:22Z"
                                }
                            ]
                        },
                        "ecomSiteEntityUid": "1487f403-7102-410c-a6d5-32eb411bb15c"
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116301,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteOracleaccount",
        "executor_version": "v2",
        "executor_display_name": "Delete Oracle account",
        "executor_description": "Delete Oracle account",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "{{host}}/accounts/oracle/{oracleAccountId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "oracleAccountId",
                "value": "",
                "description": "The oracle Account Id."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695680031862,
        "lastModifiedTime": 1695680031862,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "no content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116286,
        "executor_type": "THIRDPARTY",
        "executor_name": "getthelistofallVerifoneSitesinBillingEngine",
        "executor_version": "v2",
        "executor_display_name": "Get the list of all Verifone Sites in Billing Engine",
        "executor_description": "Get the list of all Verifone Sites in Billing Engine",
        "executor_category": "verifoneGlobalServiceConnector",
        "executor_category_group": "verifoneGlobalServiceConnector",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/accounts/sites",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "customerEntityUid",
                "value": "",
                "description": "The estate customer entity UUID for the portfolio.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695676246404,
        "lastModifiedTime": 1695676246404,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "sites": [
                        {
                            "contact": {
                                "contactType": "OWNER",
                                "name": {
                                    "firstName": "string",
                                    "lastName": "string",
                                    "prefix": "string",
                                    "alternateFullName": "string",
                                    "middleName": "string",
                                    "suffix": "string"
                                },
                                "phoneNumbers": [
                                    {
                                        "callingCode": "string",
                                        "value": "string",
                                        "extension": "string",
                                        "isPrimary": false,
                                        "phoneType": "HOME"
                                    }
                                ],
                                "email": "user@example.com",
                                "businessTitle": "string"
                            },
                            "vfiSiteId": "string",
                            "storeNumber": "string",
                            "receiverName": "string",
                            "addressLine1": "213 Miller Street",
                            "addressLine2": "North Sydney",
                            "addressLine3": "string",
                            "poBox": "K1234",
                            "city": "York",
                            "countrySubdivision": "Georgia",
                            "postCode": "2061",
                            "country": "AUS",
                            "timeZone": "string",
                            "sitePurpose": "BILL",
                            "groupNumber": "string",
                            "activeBank": "2061",
                            "customerId": "28792600010001, BK00045",
                            "linkedSites": [
                                {
                                    "contact": {
                                        "contactType": "OWNER",
                                        "name": {
                                            "firstName": "string",
                                            "lastName": "string",
                                            "prefix": "string",
                                            "alternateFullName": "string",
                                            "middleName": "string",
                                            "suffix": "string"
                                        },
                                        "phoneNumbers": [
                                            {
                                                "callingCode": "string",
                                                "value": "string",
                                                "extension": "string",
                                                "isPrimary": false,
                                                "phoneType": "HOME"
                                            }
                                        ],
                                        "email": "user@example.com",
                                        "businessTitle": "string"
                                    },
                                    "vfiSiteId": "string",
                                    "storeNumber": "string",
                                    "receiverName": "string",
                                    "addressLine1": "213 Miller Street",
                                    "addressLine2": "North Sydney",
                                    "addressLine3": "string",
                                    "poBox": "K1234",
                                    "city": "York",
                                    "countrySubdivision": "Georgia",
                                    "postCode": "2061",
                                    "country": "AUS",
                                    "timeZone": "string",
                                    "sitePurpose": "BILL",
                                    "groupNumber": "string",
                                    "activeBank": "2061",
                                    "customerId": "28792600010001, BK00045"
                                }
                            ]
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116252,
        "executor_type": "THIRDPARTY",
        "executor_name": "getthelistofallreports",
        "executor_version": "v2",
        "executor_display_name": "Get the list of all reports v1",
        "executor_description": "Get the list of all reports",
        "executor_category": "ReportingAPI",
        "executor_category_group": "ReportingAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/v1/reports",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "pageNumber",
                "value": "",
                "description": "Page number for records.",
                "req": false
            },
            {
                "key": "pageSize",
                "value": "",
                "description": "Page size for returned records.",
                "req": false
            },
            {
                "key": "orderBy",
                "value": "",
                "description": "The ordering sequence of the selected records. If this parameter is not provided, descending order will be chosen.",
                "req": false
            },
            {
                "key": "orderCriteria",
                "value": "",
                "description": "The ordering criteria of the selected records.  If this parameter not provided, the result will be ordered by createdOn.  Value\tDescription createdOn\tDate & Time modifiedOn\tDate & Time status\tReport status mimeType\tMime type reportType\tReport type reportUid\tReport identifier",
                "req": false
            },
            {
                "key": "search",
                "value": "",
                "description": "A filter query in RSQL format.  The returned reports are limited to those that can be retrieved by the user. Please note that if reportEntityUid is not provided as a search criteria, only records will be returned for the current reportEntityUid assigend to that user (and does not include descendants).  Criteria\tDescription\tOperator Used createdOn\tThe date and time the report was created (Date & Time)\t==,=lt=,=le=,=gt=,=ge=,=in=,=out= modifiedOn\tDate & Time\t==,=lt=,=le=,=gt=,=ge=,=in=,=out= status\tReport status\t==,=in=,=out= mimeType\tMime type\t==,=in=,=out= reportType\tReport type\t==,=in=,=out= reportUid\tReport identifier\t==,=regex=,=in=,=out= reportEntityUid\tReport entity UUID\t==,=in= reportParameter.batchUUID\tThe unique identifier of the settlement batch this report is related to. Mapped to PDSP's transaction.context.paymentContext.batchUUID.\t==,=in= reportParameter.settlementBatchFileNumber\tThe identifier of the settlement batch file this report is related to. Mapped to PDSP's transaction.settlementContext.settlementBatchFileNumber.\t==,=regex=,=in=,=out= reportParameter.clearingEntityUid\tClearing entity UUID\t==,=in= reportParameter.clearingAccountUid\tclearingAccountUid\t==,=in= reportParameter.clearingDate\tclearingDate (Date & Time)\t==,=lt=,=le=,=gt=,=ge=,=in=,=out= reportParameter.clearingMerchantName\tclearingMerchantName\t==,=regex=,=in=,=out= reportParameter.clearingUid\tclearingUid\t==,=in= reportParameter.clearingBankAccount\tclearingBankAccount\t==,=in= reportParameter.bankingPartner\tbankingPartner\t==,=regex=,=in=,=out= reportParameter.clearingBankCode\tclearingBankCode\t==,=regex=,=in=,=out= reportParameter.clearingMerchantId\tclearingMerchantId\t==,=regex=,=in=,=out= reportParameter.clearingReference\tclearingReference\t==,=regex=,=in=,=out= reportParameter.generatedOn (deprecated)\tgeneratedOn\t==,=lt=,=le=,=gt=,=ge=,=in=,=out= reportParameter.invoicePeriodFrom\tinvoicePeriodFrom\t==,=lt=,=le=,=gt=,=ge=,=in=,=out= reportParameter.invoicePeriodTo\tinvoicePeriodTo\t==,=lt=,=le=,=gt=,=ge=,=in=,=out= reportParameter.invoiceNumber\tinvoiceNumber\t==,=regex=,=in=,=out= reportParameter.reportDescription\treportDescription\t==,=regex=,=in=,=out= reportParameter.reportableDay\treportableDay\t==,=lt=,=le=,=gt=,=ge=,=in=,=out= RSQL Operators RSQL Query is composed of one or more expressions, combined to each other with following logical operators:  Operator\tSyntax Logical AND\t; or & Logical OR\t, RSQL Comparators  Comparator\tDescription ==\tequal !=\tnot equal =lt=\tless than =le=\tless than and equal to =gt=\tgreater than =ge=\tgreater than and equal to =regex=\tpattern matching =in=\tmultiple arguments search =out=\texclude Examples  /reports?search=reportType=in=(MERCHANT_SETTLEMENT_REPORT,DAILY_TRANSACTION_REPORT);createdOn=gt=2020-09-20T00:00:00.000Z  /reports?search=reportEntityUid=in=(2cbc7ec7-49dd-4e70-be98-dd751cf8640b,0d7e19f7-94d5-49ad-890d-1ce636912fb7,a3ca2522-2810-4db1-b535-6e449c3cea6c)  /reports?search=reportParameter.clearingReference==12345",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695667753285,
        "lastModifiedTime": 1695667753285,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "totals": 0,
                    "reports": [
                        {
                            "reportType": "ABS_SETTLEMENT_RESPONSE_REPORT",
                            "reportParameter": {
                                "batchUUID": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                                "settlementBatchFileNumber": "string",
                                "correlationId": "48fb4cd3-2ef6-4479-bea1-7c92721b988c",
                                "clearingEntityUid": "9210bda3-e9a4-4fa6-93c6-ae56e50af493",
                                "clearingAccountUid": "e67f0e02-bbb9-402a-b7f8-25020cb8e7ab",
                                "clearingDate": "2019-08-24T14:15:22Z",
                                "clearingMerchantName": "string",
                                "clearingUid": "d25c64aa-0c39-4e43-9f1f-a72d97a31266",
                                "clearingBankAccount": "string",
                                "bankingPartner": "DESJARDINS",
                                "clearingBankCode": "string",
                                "clearingMerchantId": "string",
                                "clearingReference": "string",
                                "generatedOn": "2019-08-24T14:15:22Z",
                                "invoicePeriodFrom": "2019-08-24",
                                "invoicePeriodTo": "2019-08-24",
                                "invoiceNumber": "string",
                                "reportDescription": "string",
                                "reportableDay": "2019-08-24"
                            },
                            "mimeType": "application/pdf",
                            "reportEntityUid": "03f2dc18-ac4f-11e8-a8d5-d7341f1b9fc3",
                            "fileName": "string",
                            "reportUid": "04f5ea24-cc4f-11e8-a8d5-f2801f1b9fd1",
                            "createdOn": "2019-08-24T14:15:22Z",
                            "modifiedOn": "2019-08-24T14:15:22Z",
                            "status": "INITIATED"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "title": "Bad Request",
                    "message": "The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "401",
                    "title": "Unauthorised",
                    "message": "The request requires client authentication.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "title": "Forbidden",
                    "message": "The request requires client authorisation to access resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "AUTHENTICATION_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "404",
                    "title": "Not Found",
                    "message": "The server cannot find the requested resource.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "INVALID_REQUEST_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "title": "Internal Server Error",
                    "message": "The server encountered an unexpected condition which prevented it from fulfilling the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 116213,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadspecificreport",
        "executor_version": "v2",
        "executor_display_name": "Download specific report",
        "executor_description": "Download specific report",
        "executor_category": "ReportingAPI",
        "executor_category_group": "ReportingAPI",
        "service_provider": "verifone",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{{host}}/api/v1/reports/{reportUid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "host",
                "value": "",
                "description": ""
            },
            {
                "key": "reportUid",
                "value": "",
                "description": "The unique identifier of that specific report."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1695425716236,
        "lastModifiedTime": 1695425716236,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 400,
                    "message": "At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the requests body, query for parameters appended to the requests URL, and params for templated parameters of the requests URL."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 401,
                    "message": "Access is restricted to authenticated users only. The query can't be made without a valid JWT token (check the Authorization header of your request)."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 403,
                    "message": "Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 404,
                    "message": "The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "details": {
                        "property1": {},
                        "property2": {}
                    },
                    "timestamp": 1596467016700,
                    "reversal_status": "NONE",
                    "code": 500,
                    "message": "Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "429",
                    "title": "Too Many Requests",
                    "message": "The number of requests from this client is restricted to a specified quota.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "RATE_LIMIT_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "503",
                    "title": "Service Unavailable",
                    "message": "The server is not ready to handle the request. If specified please check the <strong>Retry-After</strong> for the time period specified for recovery/re-attempt of request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "504",
                    "title": "Gateway Timeout",
                    "message": "The server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
                    "timestamp": "2017-04-05T10:43:07Z",
                    "type": "API_ERROR",
                    "param": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    }
]