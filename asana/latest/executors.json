[
    {
        "id": 99269,
        "executor_type": "THIRDPARTY",
        "executor_name": "onactionchangecallback",
        "executor_version": "v1",
        "executor_display_name": "On action change callback",
        "executor_description": "The callback request made to an app server when a watched field's value changes within an action form. The request is subject to a 10-second timeout if no response is received from the app server.",
        "executor_category": "Ruleactions",
        "executor_category_group": "Ruleactions",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{siteUrl}/action.on_change_callback_path_placeholder",
        "dataroot": null,
        "pathParams": [
            {
                "key": "siteUrl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687089164968,
        "lastModifiedTime": 1687089164968,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully returned the new state of the form.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": "Something was wrong with the form data.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99268,
        "executor_type": "THIRDPARTY",
        "executor_name": "getactionmetadata",
        "executor_version": "v1",
        "executor_display_name": "Get action metadata",
        "executor_description": "When a user has navigated to the custom rule builder UI and selected a rule action (either through the sidebar or via a rule preset), Asana will make a request to the app to get the configuration form definition for the chosen rule action. This will initiate the flow to configure a new rule action or edit the configuration of an existing rule action. This is the endpoint and schema for updating rule actions; app triggers (V2) will be analogous.",
        "executor_category": "Ruleactions",
        "executor_category_group": "Ruleactions",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{siteUrl}/action.metadata_url_path_placeholder",
        "dataroot": null,
        "pathParams": [
            {
                "key": "siteUrl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "action",
                "value": "",
                "description": "The ID of an existing rule action that is being edited. Should be omitted when configuring a new rule action.",
                "req": false
            },
            {
                "key": "action_type",
                "value": "",
                "description": "The ID of the configuration used to create the rule action.",
                "req": false
            },
            {
                "key": "project",
                "value": "",
                "description": "The project GID this hook is coming from.",
                "req": false
            },
            {
                "key": "workspace",
                "value": "",
                "description": "The workspace GID this hook is coming from.",
                "req": false
            },
            {
                "key": "user",
                "value": "",
                "description": "The user GID this hook is coming from.",
                "req": false
            },
            {
                "key": "expires_at",
                "value": "",
                "description": "The time (in ISO 8601 date format) when the request should expire.",
                "req": false
            },
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687089018542,
        "lastModifiedTime": 1687089018542,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully retrieved the metadata for a single action.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad request",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99264,
        "executor_type": "THIRDPARTY",
        "executor_name": "getruleactiontypeaheadresults",
        "executor_version": "v1",
        "executor_display_name": "Get rule action typeahead results",
        "executor_description": "In a rule action typeahead form field, this operation gets typeahead results to render as a dropdown list. Typeahead results are limited to 50 items.  When the user types into a rule action form field, Asana will send a request containing the entered string to the application's typeahead_url. The list of TypeaheadItems in the response will then be rendered in a dropdown list.",
        "executor_category": "Ruleactions",
        "executor_category_group": "Ruleactions",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{siteUrl}/rule_action_typeahead_url_path_placeholder",
        "dataroot": null,
        "pathParams": [
            {
                "key": "siteUrl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687088641780,
        "lastModifiedTime": 1687088641780,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully retrieved typeahead results.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad request",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99270,
        "executor_type": "THIRDPARTY",
        "executor_name": "onactionsubmitcallback",
        "executor_version": "v1",
        "executor_display_name": "On action submit callback",
        "executor_description": "The form is submitted when the user chooses to create their rule. Asana will create the rule action data model object and make a signed request to the on_submit_callback specified in the form metadata returned from the fetch/update rule action form endpoints. Information about the created rule action should be included in the response if it was successfully created. This is the endpoint and schema for updating rule actions; app triggers (V2) will be analogous.  The request is subject to a 10-second timeout if no response is received from the app server.",
        "executor_category": "Ruleactions",
        "executor_category_group": "Ruleactions",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{siteUrl}/action.on_submit_callback_path_placeholder",
        "dataroot": null,
        "pathParams": [
            {
                "key": "siteUrl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687089258553,
        "lastModifiedTime": 1687089258553,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully handled form submission.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": "Something was wrong with the form data.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99266,
        "executor_type": "THIRDPARTY",
        "executor_name": "runaction",
        "executor_version": "v1",
        "executor_display_name": "Run action",
        "executor_description": "The request made when an action is triggered. Rule actions in rules containing a \"Task added to this project\" trigger have a 2 minute delay for newly created tasks in that project. This is to provide time for the creating user to fill out task details (name, description, etc.) before the rule action is triggered.  An app server must be hosted in order for rule actions to function. For a brief list of popular hosting options, see hosting.",
        "executor_category": "Ruleactions",
        "executor_category_group": "Ruleactions",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{siteUrl}/run_action_url_path_placeholder",
        "dataroot": null,
        "pathParams": [
            {
                "key": "siteUrl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687088785255,
        "lastModifiedTime": 1687088785255,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully attached the resource created by the form.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad request",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99233,
        "executor_type": "THIRDPARTY",
        "executor_name": "getausertasklist",
        "executor_version": "v1",
        "executor_display_name": "Get a user task list",
        "executor_description": "Returns the full record for a user task list.",
        "executor_category": "Usertasklists",
        "executor_category_group": "Usertasklists",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/user_task_lists/{user_task_list_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "user_task_list_gid",
                "value": "",
                "description": "Globally unique identifier for the user task list."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687082482111,
        "lastModifiedTime": 1687082482111,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the user task list.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "My Tasks in My Workspace",
                        "owner": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99234,
        "executor_type": "THIRDPARTY",
        "executor_name": "getauserstasklist",
        "executor_version": "v1",
        "executor_display_name": "Get a user's task list",
        "executor_description": "Returns the full record for a user's task list.",
        "executor_category": "Usertasklists",
        "executor_category_group": "Usertasklists",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/users/{user_gid}/user_task_list",
        "dataroot": null,
        "pathParams": [
            {
                "key": "user_gid",
                "value": "",
                "description": "A string identifying a user. This can either be the string \"me\", an email, or the gid of a user."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "workspace",
                "value": "",
                "description": "The workspace in which to get the user task list.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687082778433,
        "lastModifiedTime": 1687082778433,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the user's task list.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "My Tasks in My Workspace",
                        "owner": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99238,
        "executor_type": "THIRDPARTY",
        "executor_name": "getusersinateam",
        "executor_version": "v1",
        "executor_display_name": "Get users in a team",
        "executor_description": "Returns the compact records for all users that are members of the team. Results are sorted alphabetically and limited to 2000. For more results use the /users endpoint.",
        "executor_category": "Users",
        "executor_category_group": "Users",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/teams/{team_gid}/users",
        "dataroot": null,
        "pathParams": [
            {
                "key": "team_gid",
                "value": "",
                "description": "Globally unique identifier for the team."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687083359902,
        "lastModifiedTime": 1687083359902,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Returns the user records for all the members of the team, including guests and limited access users",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99239,
        "executor_type": "THIRDPARTY",
        "executor_name": "getusersinaworkspaceororganization",
        "executor_version": "v1",
        "executor_display_name": "Get users in a workspace or organization",
        "executor_description": "Returns the compact records for all users in the specified workspace or organization. Results are sorted alphabetically and limited to 2000. For more results use the /users endpoint.",
        "executor_category": "Users",
        "executor_category_group": "Users",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/workspaces/{workspace_gid}/users",
        "dataroot": null,
        "pathParams": [
            {
                "key": "workspace_gid",
                "value": "",
                "description": "Globally unique identifier for the workspace or organization."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687083481944,
        "lastModifiedTime": 1687083481944,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Return the users in the specified workspace or org.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99235,
        "executor_type": "THIRDPARTY",
        "executor_name": "getmultipleusers",
        "executor_version": "v1",
        "executor_display_name": "Get multiple users",
        "executor_description": "Returns the user records for all users in all workspaces and organizations accessible to the authenticated user. Accepts an optional workspace ID parameter. Results are sorted by user ID.",
        "executor_category": "Users",
        "executor_category_group": "Users",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/users",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "workspace",
                "value": "",
                "description": "The workspace or organization ID to filter users on.",
                "req": false
            },
            {
                "key": "team",
                "value": "",
                "description": "The team ID to filter users on.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687082997014,
        "lastModifiedTime": 1687082997014,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the requested user records.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99237,
        "executor_type": "THIRDPARTY",
        "executor_name": "getausersfavorites",
        "executor_version": "v1",
        "executor_display_name": "Get a user's favorites",
        "executor_description": "Returns all of a user's favorites in the given workspace, of the given type. Results are given in order (The same order as Asana's sidebar).",
        "executor_category": "Users",
        "executor_category_group": "Users",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/users/{user_gid}/favorites",
        "dataroot": null,
        "pathParams": [
            {
                "key": "user_gid",
                "value": "",
                "description": "A string identifying a user. This can either be the string \"me\", an email, or the gid of a user."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "resource_type",
                "value": "",
                "description": "The resource type of favorites to be returned.",
                "req": false
            },
            {
                "key": "workspace",
                "value": "",
                "description": "The workspace in which to get favorites.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687083252838,
        "lastModifiedTime": 1687083252838,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Returns the specified user's favorites.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99236,
        "executor_type": "THIRDPARTY",
        "executor_name": "getauser",
        "executor_version": "v1",
        "executor_display_name": "Get a user",
        "executor_description": "Returns the full user record for the single user with the provided ID.",
        "executor_category": "Users",
        "executor_category_group": "Users",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/users/{user_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "user_gid",
                "value": "",
                "description": "A string identifying a user. This can either be the string \"me\", an email, or the gid of a user."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687083127027,
        "lastModifiedTime": 1687083127027,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Returns the user specified.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Greg Sanchez",
                        "email": "gsanchez@example.com",
                        "photo": {
                            "image_21x21": "https://...",
                            "image_27x27": "https://...",
                            "image_36x36": "https://...",
                            "image_60x60": "https://...",
                            "image_128x128": "https://...",
                            "image_1024x1024": "https://..."
                        },
                        "workspaces": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "My Company Workspace"
                            }
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99242,
        "executor_type": "THIRDPARTY",
        "executor_name": "getawebhooks",
        "executor_version": "v1",
        "executor_display_name": "Get a webhook",
        "executor_description": "Returns the full record for the given webhook.",
        "executor_category": "Webhooks",
        "executor_category_group": "Webhooks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/webhooks/{webhook_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "webhook_gid",
                "value": "",
                "description": "Globally unique identifier for the webhook."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687084570061,
        "lastModifiedTime": 1687084570061,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the requested webhook.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "active": false,
                        "resource": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task"
                        },
                        "target": "https://example.com/receive-webhook/7654",
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "last_failure_at": "2012-02-22T02:06:58.147Z",
                        "last_failure_content": "500 Server Error\\n\\nCould not complete the request",
                        "last_success_at": "2012-02-22T02:06:58.147Z",
                        "filters": [
                            {
                                "resource_type": "task",
                                "resource_subtype": "milestone",
                                "action": "changed",
                                "fields": [
                                    "due_at",
                                    "due_on",
                                    "dependencies"
                                ]
                            }
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99240,
        "executor_type": "THIRDPARTY",
        "executor_name": "getmultiplewebhooks",
        "executor_version": "v1",
        "executor_display_name": "Get multiple webhooks",
        "executor_description": "Get the compact representation of all webhooks your app has registered for the authenticated user in the given workspace.",
        "executor_category": "Webhooks",
        "executor_category_group": "Webhooks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/webhooks",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            },
            {
                "key": "workspace",
                "value": "",
                "description": "The workspace to query for webhooks in.",
                "req": false
            },
            {
                "key": "resource",
                "value": "",
                "description": "Only return webhooks for the given resource.",
                "req": false
            },
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687083679016,
        "lastModifiedTime": 1687083679016,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the requested webhooks.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "active": false,
                            "resource": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Bug Task"
                            },
                            "target": "https://example.com/receive-webhook/7654",
                            "created_at": "2012-02-22T02:06:58.147Z",
                            "last_failure_at": "2012-02-22T02:06:58.147Z",
                            "last_failure_content": "500 Server Error\\n\\nCould not complete the request",
                            "last_success_at": "2012-02-22T02:06:58.147Z",
                            "filters": [
                                {
                                    "resource_type": "task",
                                    "resource_subtype": "milestone",
                                    "action": "changed",
                                    "fields": [
                                        "due_at",
                                        "due_on",
                                        "dependencies"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99243,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateawebhooks",
        "executor_version": "v1",
        "executor_display_name": "Update a webhook",
        "executor_description": "An existing webhook's filters can be updated by making a PUT request on the URL for that webhook. Note that the webhook's previous filters array will be completely overwritten by the filters sent in the PUT request.",
        "executor_category": "Webhooks",
        "executor_category_group": "Webhooks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://app.asana.com/api/1.0/webhooks/{webhook_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "webhook_gid",
                "value": "",
                "description": "Globally unique identifier for the webhook."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "filters": [
                        {
                            "resource_type": "task",
                            "resource_subtype": "milestone",
                            "action": "changed",
                            "fields": [
                                "due_at",
                                "due_on",
                                "dependencies"
                            ]
                        }
                    ]
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687084919176,
        "lastModifiedTime": 1687084919176,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully updated the webhook.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "active": false,
                        "resource": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task"
                        },
                        "target": "https://example.com/receive-webhook/7654",
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "last_failure_at": "2012-02-22T02:06:58.147Z",
                        "last_failure_content": "500 Server Error\\n\\nCould not complete the request",
                        "last_success_at": "2012-02-22T02:06:58.147Z",
                        "filters": [
                            {
                                "resource_type": "task",
                                "resource_subtype": "milestone",
                                "action": "changed",
                                "fields": [
                                    "due_at",
                                    "due_on",
                                    "dependencies"
                                ]
                            }
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99247,
        "executor_type": "THIRDPARTY",
        "executor_name": "gettheworkspacemembershipsforaworkspace",
        "executor_version": "v1",
        "executor_display_name": "Get the workspace memberships for a workspace",
        "executor_description": "Returns the compact workspace membership records for the workspace.",
        "executor_category": "Webhooks",
        "executor_category_group": "Webhooks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/workspaces/{workspace_gid}/workspace_memberships",
        "dataroot": null,
        "pathParams": [
            {
                "key": "workspace_gid",
                "value": "",
                "description": "Globally unique identifier for the workspace or organization."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "user",
                "value": "",
                "description": "A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687085646678,
        "lastModifiedTime": 1687085646678,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the requested workspace's memberships.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "user": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "workspace": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "My Company Workspace"
                            }
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99245,
        "executor_type": "THIRDPARTY",
        "executor_name": "workspacememberships",
        "executor_version": "v1",
        "executor_display_name": "Workspace memberships",
        "executor_description": "Returns the complete workspace record for a single workspace membership.",
        "executor_category": "Webhooks",
        "executor_category_group": "Webhooks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/workspace_memberships/{workspace_membership_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "workspace_membership_gid",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687085240090,
        "lastModifiedTime": 1687085240090,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the requested workspace membership.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "user": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "user_task_list": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Tasks in My Workspace",
                            "owner": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "workspace": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "My Company Workspace"
                            }
                        },
                        "is_active": true,
                        "is_admin": true,
                        "is_guest": true,
                        "vacation_dates": {
                            "start_on": "2022-11-05",
                            "end_on": "2022-11-07"
                        },
                        "created_at": "2012-02-22T02:06:58.147Z"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99241,
        "executor_type": "THIRDPARTY",
        "executor_name": "establishawebhook",
        "executor_version": "v1",
        "executor_display_name": "Establish a webhook",
        "executor_description": "Establishing a webhook is a two-part process. First, a simple HTTP POST request initiates the creation similar to creating any other resource.  Next, in the middle of this request comes the confirmation handshake. When a webhook is created, we will send a test POST to the target with an X-Hook-Secret header. The target must respond with a 200 OK or 204 No Content and a matching X-Hook-Secret header to confirm that this webhook subscription is indeed expected. We strongly recommend storing this secret to be used to verify future webhook event signatures.  The POST request to create the webhook will then return with the status of the request. If you do not acknowledge the webhook\u2019s confirmation handshake it will fail to setup, and you will receive an error in response to your attempt to create it. This means you need to be able to receive and complete the webhook while the POST request is in-flight (in other words, have a server that can handle requests asynchronously).",
        "executor_category": "Webhooks",
        "executor_category_group": "Webhooks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/webhooks",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "resource": "12345",
                    "target": "https://example.com/receive-webhook/7654?app_specific_param=app_specific_value",
                    "filters": [
                        {
                            "resource_type": "task",
                            "resource_subtype": "milestone",
                            "action": "changed",
                            "fields": [
                                "due_at",
                                "due_on",
                                "dependencies"
                            ]
                        }
                    ]
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687084077555,
        "lastModifiedTime": 1687084077555,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully created the requested webhook.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "active": false,
                        "resource": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task"
                        },
                        "target": "https://example.com/receive-webhook/7654",
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "last_failure_at": "2012-02-22T02:06:58.147Z",
                        "last_failure_content": "500 Server Error\\n\\nCould not complete the request",
                        "last_success_at": "2012-02-22T02:06:58.147Z",
                        "filters": [
                            {
                                "resource_type": "task",
                                "resource_subtype": "milestone",
                                "action": "changed",
                                "fields": [
                                    "due_at",
                                    "due_on",
                                    "dependencies"
                                ]
                            }
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99246,
        "executor_type": "THIRDPARTY",
        "executor_name": "getworkspacemembershipsforauser",
        "executor_version": "v1",
        "executor_display_name": "Get workspace memberships for a user",
        "executor_description": "Returns the compact workspace membership records for the user.",
        "executor_category": "Webhooks",
        "executor_category_group": "Webhooks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/users/{user_gid}/workspace_memberships",
        "dataroot": null,
        "pathParams": [
            {
                "key": "user_gid",
                "value": "",
                "description": "A string identifying a user. This can either be the string \"me\", an email, or the gid of a user."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687085392926,
        "lastModifiedTime": 1687085392926,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the requested user's workspace memberships.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "user": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "workspace": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "My Company Workspace"
                            }
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99244,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteawebhooks",
        "executor_version": "v1",
        "executor_display_name": "Delete a webhook",
        "executor_description": "This method permanently removes a webhook. Note that it may be possible to receive a request that was already in flight after deleting the webhook, but no further requests will be issued.",
        "executor_category": "Webhooks",
        "executor_category_group": "Webhooks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://app.asana.com/api/1.0/webhooks/{webhook_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "webhook_gid",
                "value": "",
                "description": "Globally unique identifier for the webhook."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687085065820,
        "lastModifiedTime": 1687085065821,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the requested webhook.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99248,
        "executor_type": "THIRDPARTY",
        "executor_name": "getmultipleworkspaces",
        "executor_version": "v1",
        "executor_display_name": "Get multiple workspaces",
        "executor_description": "Returns the compact records for all workspaces visible to the authorized user.",
        "executor_category": "Workspaces",
        "executor_category_group": "Workspaces",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/workspaces",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687085801670,
        "lastModifiedTime": 1687085801670,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Return all workspaces visible to the authorized user.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99252,
        "executor_type": "THIRDPARTY",
        "executor_name": "removeauserfromaworkspaceororganization",
        "executor_version": "v1",
        "executor_display_name": "Remove a user from a workspace or organization",
        "executor_description": "Remove a user from a workspace or organization. The user making this call must be an admin in the workspace. The user can be referenced by their globally unique user ID or their email address. Returns an empty data record.",
        "executor_category": "Workspaces",
        "executor_category_group": "Workspaces",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/workspaces/{workspace_gid}/removeUser",
        "dataroot": null,
        "pathParams": [
            {
                "key": "workspace_gid",
                "value": "",
                "description": "Globally unique identifier for the workspace or organization."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "user": "12345"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687086630261,
        "lastModifiedTime": 1687086630261,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "The user was removed successfully to the workspace or organization.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99251,
        "executor_type": "THIRDPARTY",
        "executor_name": "addausertoaworkspaceororganization",
        "executor_version": "v1",
        "executor_display_name": "Add a user to a workspace or organization",
        "executor_description": "Add a user to a workspace or organization. The user can be referenced by their globally unique user ID or their email address. Returns the full user record for the invited user.",
        "executor_category": "Workspaces",
        "executor_category_group": "Workspaces",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/workspaces/{workspace_gid}/addUser",
        "dataroot": null,
        "pathParams": [
            {
                "key": "workspace_gid",
                "value": "",
                "description": "Globally unique identifier for the workspace or organization."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "user": "12345"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687086430197,
        "lastModifiedTime": 1687086430197,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The user was added successfully to the workspace or organization.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Greg Sanchez",
                        "email": "gsanchez@example.com",
                        "photo": {
                            "image_21x21": "https://...",
                            "image_27x27": "https://...",
                            "image_36x36": "https://...",
                            "image_60x60": "https://...",
                            "image_128x128": "https://...",
                            "image_1024x1024": "https://..."
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99249,
        "executor_type": "THIRDPARTY",
        "executor_name": "getaworkspace",
        "executor_version": "v1",
        "executor_display_name": "Get a workspace",
        "executor_description": "Returns the full workspace record for a single workspace.",
        "executor_category": "Workspaces",
        "executor_category_group": "Workspaces",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/workspaces/{workspace_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "workspace_gid",
                "value": "",
                "description": "Globally unique identifier for the workspace or organization."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687086031852,
        "lastModifiedTime": 1687086031852,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Return the full workspace record.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "My Company Workspace",
                        "email_domains": [
                            "asana.com"
                        ],
                        "is_organization": false
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99250,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateaworkspace",
        "executor_version": "v1",
        "executor_display_name": "Update a workspace",
        "executor_description": "A specific, existing workspace can be updated by making a PUT request on the URL for that workspace. Only the fields provided in the data block will be updated; any unspecified fields will remain unchanged. Currently the only field that can be modified for a workspace is its name. Returns the complete, updated workspace record.",
        "executor_category": "Workspaces",
        "executor_category_group": "Workspaces",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://app.asana.com/api/1.0/workspaces/{workspace_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "workspace_gid",
                "value": "",
                "description": "Globally unique identifier for the workspace or organization."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "name": "My Company Workspace"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687086238728,
        "lastModifiedTime": 1687086238728,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Update for the workspace was successful.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "My Company Workspace",
                        "email_domains": [
                            "asana.com"
                        ],
                        "is_organization": false
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99228,
        "executor_type": "THIRDPARTY",
        "executor_name": "createatimetrackingentry",
        "executor_version": "v1",
        "executor_display_name": "Create a time tracking entry",
        "executor_description": "Creates a time tracking entry on a given task.  Returns the record of the newly created time tracking entry.https://app.asana.com/api/1.0/tasks/{task_gid}/time_tracking_entries",
        "executor_category": "Timetrackingentries",
        "executor_category_group": "Timetrackingentries",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/tasks/{task_gid}/time_tracking_entries",
        "dataroot": null,
        "pathParams": [
            {
                "key": "task_gid",
                "value": "",
                "description": "The task to operate on."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "duration_minutes": 12,
                    "entered_on": "2023-03-19"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687080465761,
        "lastModifiedTime": 1687080465761,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully created a time tracking entry for the task.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "duration_minutes": 12,
                        "entered_on": "2015-03-14",
                        "created_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "task": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        },
                        "created_at": "2012-02-22T02:06:58.147Z"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99229,
        "executor_type": "THIRDPARTY",
        "executor_name": "getatimetrackingentry",
        "executor_version": "v1",
        "executor_display_name": "Get a time tracking entry",
        "executor_description": "Returns the complete time tracking entry record for a single time tracking entry.",
        "executor_category": "Timetrackingentries",
        "executor_category_group": "Timetrackingentries",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/time_tracking_entries/{time_tracking_entry_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "time_tracking_entry_gid",
                "value": "",
                "description": "Globally unique identifier for the time tracking entry."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687081617523,
        "lastModifiedTime": 1687081617523,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the requested time tracking entry.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "duration_minutes": 12,
                        "entered_on": "2015-03-14",
                        "created_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "task": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        },
                        "created_at": "2012-02-22T02:06:58.147Z"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99231,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteatimetrackingentry",
        "executor_version": "v1",
        "executor_display_name": "Delete a time tracking entry",
        "executor_description": "A specific, existing time tracking entry can be deleted by making a DELETE request on the URL for that time tracking entry.  Returns an empty data record.",
        "executor_category": "Timetrackingentries",
        "executor_category_group": "Timetrackingentries",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://app.asana.com/api/1.0/time_tracking_entries/{time_tracking_entry_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "time_tracking_entry_gid",
                "value": "",
                "description": "Globally unique identifier for the time tracking entry."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687082128835,
        "lastModifiedTime": 1687082128835,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully deleted the specified time tracking entry.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99227,
        "executor_type": "THIRDPARTY",
        "executor_name": "gettimetrackingentriesforatask",
        "executor_version": "v1",
        "executor_display_name": "Get time tracking entries for a task",
        "executor_description": "Returns time tracking entries for a given task.",
        "executor_category": "Timetrackingentries",
        "executor_category_group": "Timetrackingentries",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/tasks/{task_gid}/time_tracking_entries",
        "dataroot": null,
        "pathParams": [
            {
                "key": "task_gid",
                "value": "",
                "description": "The task to operate on."
            }
        ],
        "queryParams": [
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            },
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687079404357,
        "lastModifiedTime": 1687079404357,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the requested time tracking entries.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "duration_minutes": 12,
                            "entered_on": "2015-03-14",
                            "created_by": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99230,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateatimetrackingentry",
        "executor_version": "v1",
        "executor_display_name": "Update a time tracking entry",
        "executor_description": "A specific, existing time tracking entry can be updated by making a PUT request on the URL for that time tracking entry. Only the fields provided in the data block will be updated; any unspecified fields will remain unchanged.  When using this method, it is best to specify only those fields you wish to change, or else you may overwrite changes made by another user since you last retrieved the task.  Returns the complete updated time tracking entry record.",
        "executor_category": "Timetrackingentries",
        "executor_category_group": "Timetrackingentries",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://app.asana.com/api/1.0/time_tracking_entries/{time_tracking_entry_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "time_tracking_entry_gid",
                "value": "",
                "description": "Globally unique identifier for the time tracking entry."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "duration_minutes": 12,
                    "entered_on": "2023-03-19"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687081903473,
        "lastModifiedTime": 1687081903473,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully updated the time tracking entry.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "duration_minutes": 12,
                        "entered_on": "2015-03-14",
                        "created_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "task": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        },
                        "created_at": "2012-02-22T02:06:58.147Z"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99256,
        "executor_type": "THIRDPARTY",
        "executor_name": "getformmetadata",
        "executor_version": "v1",
        "executor_display_name": "Get form metadata",
        "executor_description": "Get the metadata from the app server to render a form.",
        "executor_category": "Modalforms",
        "executor_category_group": "Modalforms",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{siteUrl}/form_metadata_url_path_placeholder",
        "dataroot": null,
        "pathParams": [
            {
                "key": "siteUrl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1687087741754,
        "lastModifiedTime": 1687088311854,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully retrieved typeahead results.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Bad request",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99258,
        "executor_type": "THIRDPARTY",
        "executor_name": "onchangecallback",
        "executor_version": "v1",
        "executor_display_name": "On change callback",
        "executor_description": "The callback request made to an app server when a watched field's value changes within a form. The request is subject to a 10-second timeout if no response is received from the app server.",
        "executor_category": "Modalforms",
        "executor_category_group": "Modalforms",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{siteUrl}/on_change_callback_path_placeholder",
        "dataroot": null,
        "pathParams": [
            {
                "key": "siteUrl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "workspace",
                "value": "",
                "description": "The workspace GID this hook is coming from.",
                "req": false
            },
            {
                "key": "task",
                "value": "",
                "description": "The task GID this hook is coming from.",
                "req": false
            },
            {
                "key": "user",
                "value": "",
                "description": "The user GID this hook is coming from.",
                "req": false
            },
            {
                "key": "expires_at",
                "value": "",
                "description": "The time (in ISO 8601 date format) when the request should expire.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687088058917,
        "lastModifiedTime": 1687088058917,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully retrieved typeahead results.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": "Something was wrong with the form data.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99257,
        "executor_type": "THIRDPARTY",
        "executor_name": "getmodalformtypeaheadresults",
        "executor_version": "v1",
        "executor_display_name": "Get modal form typeahead results",
        "executor_description": "If a modal form field is of type typehead, this operation gets typeahead results to render as a dropdown list.  When the user types into a modal form form field, Asana will send a request containing the entered string to the application's typeahead_url. The list of TypeaheadItems in the response will then be rendered in a dropdown list.",
        "executor_category": "Modalforms",
        "executor_category_group": "Modalforms",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{siteUrl}/modal_form_typeahead_url_path_placeholder",
        "dataroot": null,
        "pathParams": [
            {
                "key": "siteUrl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1687087914426,
        "lastModifiedTime": 1687088296463,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully retrieved typeahead results.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Bad request",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99260,
        "executor_type": "THIRDPARTY",
        "executor_name": "onsubmitcallback",
        "executor_version": "v1",
        "executor_display_name": "On submit callback",
        "executor_description": "The callback request made to an app server when a form is submitted. The request is subject to a 10-second timeout if no response is received from the app server.",
        "executor_category": "Modalforms",
        "executor_category_group": "Modalforms",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{siteUrl}/on_submit_callback_path_placeholder",
        "dataroot": null,
        "pathParams": [
            {
                "key": "siteUrl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687088155116,
        "lastModifiedTime": 1687088155116,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully retrieved typeahead results.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": "Something was wrong with the form data.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99232,
        "executor_type": "THIRDPARTY",
        "executor_name": "getobjectsviatypeahead",
        "executor_version": "v1",
        "executor_display_name": "Get objects via typeahead",
        "executor_description": "Retrieves objects in the workspace based via an auto-completion/typeahead search algorithm. This feature is meant to provide results quickly, so do not rely on this API to provide extremely accurate search results. The result set is limited to a single page of results with a maximum size, so you won\u2019t be able to fetch large numbers of results.  The typeahead search API provides search for objects from a single workspace. This endpoint should be used to query for objects when creating an auto-completion/typeahead search feature. This API is meant to provide results quickly and should not be relied upon for accurate or exhaustive search results. The results sets are limited in size and cannot be paginated.  Queries return a compact representation of each object which is typically the gid and name fields. Interested in a specific set of fields or all of the fields?! Of course you are. Use field selectors to manipulate what data is included in a response.  Resources with type user are returned in order of most contacted to least contacted. This is determined by task assignments, adding the user to projects, and adding the user as a follower to tasks, messages, etc.  Resources with type project are returned in order of recency. This is determined when the user visits the project, is added to the project, and completes tasks in the project.  Resources with type task are returned with priority placed on tasks the user is following, but no guarantee on the order of those tasks.  Resources with type project_template are returned with priority placed on favorited project templates.  Leaving the query string empty or omitted will give you results, still following the resource ordering above. This could be used to list users or projects that are relevant for the requesting user's api token.",
        "executor_category": "Typeahead",
        "executor_category_group": "Typeahead",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/workspaces/{workspace_gid}/typeahead",
        "dataroot": null,
        "pathParams": [
            {
                "key": "workspace_gid",
                "value": "",
                "description": "Globally unique identifier for the workspace or organization."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "resource_type",
                "value": "",
                "description": "The type of values the typeahead should return. You can choose from one of the following: custom_field, project, project_template, portfolio, tag, task, and user. Note that unlike in the names of endpoints, the types listed here are in singular form (e.g. task). Using multiple types is not yet supported.",
                "req": false
            },
            {
                "key": "type",
                "value": "",
                "description": "Deprecated: new integrations should prefer the resource_type field.",
                "req": false
            },
            {
                "key": "query",
                "value": "",
                "description": "The string that will be used to search for relevant objects. If an empty string is passed in, the API will return results.",
                "req": false
            },
            {
                "key": "count",
                "value": "",
                "description": "The number of results to return. The default is 20 if this parameter is omitted, with a minimum of 1 and a maximum of 100. If there are fewer results found than requested, all will be returned.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687082351477,
        "lastModifiedTime": 1687082351477,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved objects via a typeahead search algorithm.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99253,
        "executor_type": "THIRDPARTY",
        "executor_name": "getwidgetmetadata",
        "executor_version": "v1",
        "executor_display_name": "Get widget metadata",
        "executor_description": "Get the metadata from the app server to render a widget.",
        "executor_category": "Widgets",
        "executor_category_group": "Widgets",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{siteUrl}/widget_metadata_url_path_placeholder",
        "dataroot": null,
        "pathParams": [
            {
                "key": "siteUrl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "resource_url",
                "value": "",
                "description": "The URL of the URL attachment on the task (i.e., Jira issue, GitHub pull request)",
                "req": false
            },
            {
                "key": "workspace",
                "value": "",
                "description": "The workspace GID this hook is coming from.",
                "req": false
            },
            {
                "key": "task",
                "value": "",
                "description": "The task GID this hook is coming from.",
                "req": false
            },
            {
                "key": "user",
                "value": "",
                "description": "The user GID this hook is coming from.",
                "req": false
            },
            {
                "key": "attachment",
                "value": "",
                "description": "The attachment ID of the URL attachment.",
                "req": false
            },
            {
                "key": "expires_at",
                "value": "",
                "description": "The time (in ISO 8601 date format) when the request should expire.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1687086908263,
        "lastModifiedTime": 1687087452123,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully retrieved the metadata for a single widget.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 418,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99226,
        "executor_type": "THIRDPARTY",
        "executor_name": "gettimeperiods",
        "executor_version": "v1",
        "executor_display_name": "Get time periods",
        "executor_description": "Returns compact time period records.",
        "executor_category": "Timeperiods",
        "executor_category_group": "Timeperiods",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/time_periods",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "start_on",
                "value": "",
                "description": "ISO 8601 date string",
                "req": false
            },
            {
                "key": "end_on",
                "value": "",
                "description": "ISO 8601 date string",
                "req": false
            },
            {
                "key": "workspace",
                "value": "",
                "description": "Globally unique identifier for the workspace.",
                "req": false
            },
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687078859668,
        "lastModifiedTime": 1687078859668,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the requested time periods.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "end_on": "2019-09-14",
                            "start_on": "2019-09-13",
                            "period": "Q1",
                            "display_name": "Q1 FY22"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99225,
        "executor_type": "THIRDPARTY",
        "executor_name": "getatimeperiod",
        "executor_version": "v1",
        "executor_display_name": "Get a time period",
        "executor_description": "Returns the full record for a single time period.",
        "executor_category": "Timeperiods",
        "executor_category_group": "Timeperiods",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/time_periods/{time_period_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "time_period_gid",
                "value": "",
                "description": "Globally unique identifier for the time period."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687078437366,
        "lastModifiedTime": 1687078437366,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the record for a single time period.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "end_on": "2019-09-14",
                        "start_on": "2019-09-13",
                        "period": "Q1",
                        "display_name": "Q1 FY22",
                        "parent": {
                            "gid": "12345",
                            "resource_type": "task",
                            "end_on": "2019-09-14",
                            "start_on": "2019-09-13",
                            "period": "Q1",
                            "display_name": "Q1 FY22"
                        }
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99254,
        "executor_type": "THIRDPARTY",
        "executor_name": "attachresource",
        "executor_version": "v1",
        "executor_display_name": "Attach resource",
        "executor_description": "When the user attaches a resource URL to a task, Asana will make a signed request to the specified resource_attach_url in the app configuration. Information about the attached resource should be included in the response.",
        "executor_category": "Lookups",
        "executor_category_group": "Lookups",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{siteUrl}/widget_metadata_url_path_placeholder",
        "dataroot": null,
        "pathParams": [
            {
                "key": "siteUrl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1687087472129,
        "lastModifiedTime": 1687087850623,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully attached the resource to the given object.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Bad request",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99255,
        "executor_type": "THIRDPARTY",
        "executor_name": "getlookuptypeaheadresults",
        "executor_version": "v1",
        "executor_display_name": "Get lookup typeahead results",
        "executor_description": "Gets typeahead results to render as a dropdown list in the resource lookup input field.  When the user types into the lookup input field, Asana will send a request containing the entered string to the application's typeahead_url. The list of TypeaheadItems in the response will then be rendered in a dropdown list. When the user selects an item from the list, Asana will send a resource attach request to the app server, then process the response and render the attached resource in the widget.",
        "executor_category": "Lookups",
        "executor_category_group": "Lookups",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{siteUrl}/resource_typeahead_url_path_placeholder",
        "dataroot": null,
        "pathParams": [
            {
                "key": "siteUrl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1687087592532,
        "lastModifiedTime": 1687087869199,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully retrieved typeahead results.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Bad request",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98775,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteanattachment",
        "executor_version": "v1",
        "executor_display_name": "Delete an attachment",
        "executor_description": "Deletes a specific, existing attachment.  Returns an empty data record.",
        "executor_category": "Attachments",
        "executor_category_group": "Attachments",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://app.asana.com/api/1.0/attachments/{attachment_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "attachment_gid",
                "value": "",
                "description": "Globally unique identifier for the attachment."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1686823948773,
        "lastModifiedTime": 1686824390071,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully deleted the specified attachment.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98776,
        "executor_type": "THIRDPARTY",
        "executor_name": "getattachmentsfromanobject",
        "executor_version": "v1",
        "executor_display_name": "Get attachments from an object",
        "executor_description": "Returns the compact records for all attachments on the object.  There are three possible parent values for this request: project, project_brief, and task. For a project, an attachment refers to a file uploaded to the \"Key resources\" section in the project Overview. For a project brief, an attachment refers to inline files in the project brief itself. For a task, an attachment refers to a file directly associated to that task.",
        "executor_category": "Attachments",
        "executor_category_group": "Attachments",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/attachments",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            },
            {
                "key": "parent",
                "value": "",
                "description": "Globally unique identifier for object to fetch statuses from. Must be a GID for a project, project_brief, or task.",
                "req": false
            },
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686824218741,
        "lastModifiedTime": 1686824218742,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the specified object's attachments.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Screenshot.png",
                            "resource_subtype": "dropbox"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98778,
        "executor_type": "THIRDPARTY",
        "executor_name": "uploadanAttachment",
        "executor_version": "v1",
        "executor_display_name": "Upload an attachment",
        "executor_description": "Upload an attachment.  This method uploads an attachment on an object and returns the compact record for the created attachment object. This is possible by either:  Providing the URL of the external resource being attached, or Downloading the file content first and then uploading it as any other attachment. Note that it is not possible to attach files from third party services such as Dropbox, Box, Vimeo & Google Drive via the API The 100MB size limit on attachments in Asana is enforced on this endpoint.  This endpoint expects a multipart/form-data encoded request containing the full contents of the file to be uploaded.  Requests made should follow the HTTP/1.1 specification that line terminators are of the form CRLF or \\r\\n outlined here in order for the server to reliably and properly handle the request.",
        "executor_category": "Attachments",
        "executor_category_group": "Attachments",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/attachments",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686824548566,
        "lastModifiedTime": 1686824548566,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully uploaded the attachment to the parent object.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Screenshot.png",
                        "resource_subtype": "dropbox",
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "download_url": "https://s3.amazonaws.com/assets/123/Screenshot.png",
                        "permanent_url": "https://s3.amazonaws.com/assets/123/Screenshot.png",
                        "host": "dropbox",
                        "parent": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        },
                        "size": 12345,
                        "view_url": "https://www.dropbox.com/s/123/Screenshot.png",
                        "connected_to_app": true
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98768,
        "executor_type": "THIRDPARTY",
        "executor_name": "getanattachment",
        "executor_version": "v1",
        "executor_display_name": "Get an attachment",
        "executor_description": "Get the full record for a single attachment.",
        "executor_category": "Attachments",
        "executor_category_group": "Attachments",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/attachments/{attachment_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "attachment_gid",
                "value": "",
                "description": "Globally unique identifier for the attachment."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686822935918,
        "lastModifiedTime": 1686822935918,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the record for a single attachment.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Screenshot.png",
                        "resource_subtype": "dropbox",
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "download_url": "https://s3.amazonaws.com/assets/123/Screenshot.png",
                        "permanent_url": "https://s3.amazonaws.com/assets/123/Screenshot.png",
                        "host": "dropbox",
                        "parent": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        },
                        "size": 12345,
                        "view_url": "https://www.dropbox.com/s/123/Screenshot.png",
                        "connected_to_app": true
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The request was valid, but the queried object or object mutation specified in the request is above your current premium level.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 424,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "You have exceeded one of the enforced rate limits in the API. See the documentation on rate limiting for more information.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 501,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There is an issue between the load balancers and Asana's API.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the upstream service is unavailable to the API, or the API has been intentionally shut off.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 504,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This request took too long to complete.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98781,
        "executor_type": "THIRDPARTY",
        "executor_name": "getauditlogevents",
        "executor_version": "v1",
        "executor_display_name": "Get audit log events",
        "executor_description": "Retrieve the audit log events that have been captured in your domain.  This endpoint will return a list of AuditLogEvent objects, sorted by creation time in ascending order. Note that the Audit Log API captures events from October 8th, 2021 and later. Queries for events before this date will not return results.  There are a number of query parameters (below) that can be used to filter the set of AuditLogEvent objects that are returned in the response. Any combination of query parameters is valid. When no filters are provided, all of the events that have been captured in your domain will match.  The list of events will always be paginated. The default limit is 1000 events. The next set of events can be retrieved using the offset from the previous response. If there are no events that match the provided filters in your domain, the endpoint will return null for the next_page field. Querying again with the same filters may return new events if they were captured after the last request. Once a response includes a next_page with an offset, subsequent requests can be made with the latest offset to poll for new events that match the provided filters.",
        "executor_category": "AuditlogAPI",
        "executor_category_group": "AuditlogAPI",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/workspaces/{workspace_gid}/audit_log_events",
        "dataroot": null,
        "pathParams": [
            {
                "key": "workspace_gid",
                "value": "",
                "description": "Globally unique identifier for the workspace or organization."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "start_at",
                "value": "",
                "description": "Filter to events created after this time (inclusive).",
                "req": false
            },
            {
                "key": "end_at",
                "value": "",
                "description": "Filter to events created before this time (exclusive).",
                "req": false
            },
            {
                "key": "event_type",
                "value": "",
                "description": "Filter to events of this type. Refer to the supported audit log events for a full list of values.",
                "req": false
            },
            {
                "key": "actor_type",
                "value": "",
                "description": "Filter to events with an actor of this type. This only needs to be included if querying for actor types without an ID. If actor_gid is included, this should be excluded.",
                "req": false
            },
            {
                "key": "actor_gid",
                "value": "",
                "description": "Filter to events triggered by the actor with this ID.",
                "req": false
            },
            {
                "key": "resource_gid",
                "value": "",
                "description": "Filter to events with this resource ID.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686824909685,
        "lastModifiedTime": 1686824909685,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "AuditLogEvents were successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "created_at": "2021-01-01T00:00:00.000Z",
                            "event_type": "task_deleted",
                            "event_category": "deletion",
                            "actor": {
                                "actor_type": "user",
                                "gid": "1111",
                                "name": "Greg Sanchez",
                                "email": "gregsanchez@example.com"
                            },
                            "resource": {
                                "resource_type": "task",
                                "resource_subtype": "milestone",
                                "gid": "1111",
                                "name": "Example Task",
                                "email": "string"
                            },
                            "details": {},
                            "context": {
                                "context_type": "web",
                                "api_authentication_method": "cookie",
                                "client_ip_address": "1.1.1.1",
                                "user_agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36",
                                "oauth_app_name": "string"
                            }
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98783,
        "executor_type": "THIRDPARTY",
        "executor_name": "submitparallelrequests",
        "executor_version": "v1",
        "executor_display_name": "Submit parallel requests",
        "executor_description": "Make multiple requests in parallel to Asana's API.",
        "executor_category": "BatchAPI",
        "executor_category_group": "BatchAPI",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/batch",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "actions": [
                        {
                            "relative_path": "/tasks/123",
                            "method": "get",
                            "data": {
                                "assignee": "me",
                                "workspace": "1337"
                            },
                            "options": {
                                "limit": 3,
                                "fields": [
                                    "name",
                                    "notes",
                                    "completed"
                                ]
                            }
                        }
                    ]
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1686825210736,
        "lastModifiedTime": 1686827447429,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully completed the requested batch API operations.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "status_code": 200,
                            "headers": {
                                "location": "/tasks/1234"
                            },
                            "body": {
                                "data": {
                                    "gid": "1967",
                                    "completed": false,
                                    "name": "Hello, world!",
                                    "notes": "How are you today?"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98818,
        "executor_type": "THIRDPARTY",
        "executor_name": "reorderacustomfieldsenum",
        "executor_version": "v1",
        "executor_display_name": "Reorder a custom field's enum",
        "executor_description": "Moves a particular enum option to be either before or after another specified enum option in the custom field. Locked custom fields can only be reordered by the user who locked the field.",
        "executor_category": "Customfields",
        "executor_category_group": "Customfields",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/custom_fields/{custom_field_gid}/enum_options/insert",
        "dataroot": null,
        "pathParams": [
            {
                "key": "custom_field_gid",
                "value": "",
                "description": "Globally unique identifier for the custom field."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "enum_option": "97285",
                    "before_enum_option": "12345",
                    "after_enum_option": "12345"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686828733103,
        "lastModifiedTime": 1686828733103,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Custom field enum option successfully reordered.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Low",
                        "enabled": true,
                        "color": "blue"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98810,
        "executor_type": "THIRDPARTY",
        "executor_name": "getacustomfield",
        "executor_version": "v1",
        "executor_display_name": "Get a custom field",
        "executor_description": "Get the complete definition of a custom field\u2019s metadata.  Since custom fields can be defined for one of a number of types, and these types have different data and behaviors, there are fields that are relevant to a particular type. For instance, as noted above, enum_options is only relevant for the enum type and defines the set of choices that the enum could represent. The examples below show some of these type-specific custom field definitions.",
        "executor_category": "Customfields",
        "executor_category_group": "Customfields",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/custom_fields/{custom_field_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "custom_field_gid",
                "value": "",
                "description": "Globally unique identifier for the custom field."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686826811784,
        "lastModifiedTime": 1686826811784,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the complete definition of a custom field\u2019s metadata.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Status",
                        "resource_subtype": "text",
                        "type": "text",
                        "enum_options": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Low",
                                "enabled": true,
                                "color": "blue"
                            }
                        ],
                        "enabled": true,
                        "is_formula_field": false,
                        "date_value": {
                            "date": "2024-08-23",
                            "date_time": "2024-08-23T22:00:00.000Z"
                        },
                        "enum_value": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Low",
                            "enabled": true,
                            "color": "blue"
                        },
                        "multi_enum_values": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Low",
                                "enabled": true,
                                "color": "blue"
                            }
                        ],
                        "number_value": 5.2,
                        "text_value": "Some Value",
                        "display_value": "blue",
                        "description": "Development team priority",
                        "precision": 2,
                        "format": "custom",
                        "currency_code": "EUR",
                        "custom_label": "gold pieces",
                        "custom_label_position": "suffix",
                        "is_global_to_workspace": true,
                        "has_notifications_enabled": true,
                        "asana_created_field": "priority",
                        "is_value_read_only": false,
                        "created_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "people_value": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98819,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateanenumoption",
        "executor_version": "v1",
        "executor_display_name": "Update an enum option",
        "executor_description": "Updates an existing enum option. Enum custom fields require at least one enabled enum option. Locked custom fields can only be updated by the user who locked the field. Returns the full record of the updated enum option.",
        "executor_category": "Customfields",
        "executor_category_group": "Customfields",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://app.asana.com/api/1.0/enum_options/{enum_option_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "enum_option_gid",
                "value": "",
                "description": "Globally unique identifier for the enum option."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "enum_option": "97285",
                    "before_enum_option": "12345",
                    "after_enum_option": "12345"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686828861514,
        "lastModifiedTime": 1686828861514,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully updated the specified custom field enum.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Low",
                        "enabled": true,
                        "color": "blue"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98817,
        "executor_type": "THIRDPARTY",
        "executor_name": "createanenumoption",
        "executor_version": "v1",
        "executor_display_name": "Create an enum option",
        "executor_description": "reates an enum option and adds it to this custom field\u2019s list of enum options. A custom field can have at most 500 enum options (including disabled options). By default new enum options are inserted at the end of a custom field\u2019s list. Locked custom fields can only have enum options added by the user who locked the field. Returns the full record of the newly created enum option.",
        "executor_category": "Customfields",
        "executor_category_group": "Customfields",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/custom_fields/{custom_field_gid}/enum_options",
        "dataroot": null,
        "pathParams": [
            {
                "key": "custom_field_gid",
                "value": "",
                "description": "Globally unique identifier for the custom field."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "name": "Low",
                    "enabled": true,
                    "color": "blue",
                    "insert_before": "12345",
                    "insert_after": "12345"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686828163680,
        "lastModifiedTime": 1686828163680,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Custom field enum option successfully created.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Low",
                        "enabled": true,
                        "color": "blue"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98801,
        "executor_type": "THIRDPARTY",
        "executor_name": "postCreateacustomfield",
        "executor_version": "v1",
        "executor_display_name": "Create a custom field",
        "executor_description": "Creates a new custom field in a workspace. Every custom field is required to be created in a specific workspace, and this workspace cannot be changed once set.  A custom field\u2019s name must be unique within a workspace and not conflict with names of existing task properties such as Due Date or Assignee. A custom field\u2019s type must be one of text, enum, multi_enum, number, date, or people.  Returns the full record of the newly created custom field.",
        "executor_category": "Customfields",
        "executor_category_group": "Customfields",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/custom_fields",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "name": "Status",
                    "enum_options": [
                        {
                            "name": "Low",
                            "enabled": true,
                            "color": "blue"
                        }
                    ],
                    "is_formula_field": false,
                    "date_value": {
                        "date": "2024-08-23",
                        "date_time": "2024-08-23T22:00:00.000Z"
                    },
                    "enum_value": {
                        "name": "Low",
                        "enabled": true,
                        "color": "blue"
                    },
                    "multi_enum_values": [
                        {
                            "name": "Low",
                            "enabled": true,
                            "color": "blue"
                        }
                    ],
                    "number_value": 5.2,
                    "text_value": "Some Value",
                    "description": "Development team priority",
                    "precision": 2,
                    "format": "custom",
                    "currency_code": "EUR",
                    "custom_label": "gold pieces",
                    "custom_label_position": "suffix",
                    "has_notifications_enabled": true,
                    "workspace": "1331",
                    "owned_by_app": true,
                    "people_value": [
                        "12345"
                    ]
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1686826523069,
        "lastModifiedTime": 1686827405444,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Custom field successfully created.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Status",
                        "resource_subtype": "text",
                        "type": "text",
                        "enum_options": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Low",
                                "enabled": true,
                                "color": "blue"
                            }
                        ],
                        "enabled": true,
                        "is_formula_field": false,
                        "date_value": {
                            "date": "2024-08-23",
                            "date_time": "2024-08-23T22:00:00.000Z"
                        },
                        "enum_value": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Low",
                            "enabled": true,
                            "color": "blue"
                        },
                        "multi_enum_values": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Low",
                                "enabled": true,
                                "color": "blue"
                            }
                        ],
                        "number_value": 5.2,
                        "text_value": "Some Value",
                        "display_value": "blue",
                        "description": "Development team priority",
                        "precision": 2,
                        "format": "custom",
                        "currency_code": "EUR",
                        "custom_label": "gold pieces",
                        "custom_label_position": "suffix",
                        "is_global_to_workspace": true,
                        "has_notifications_enabled": true,
                        "asana_created_field": "priority",
                        "is_value_read_only": false,
                        "created_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "people_value": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98812,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateacustomfield",
        "executor_version": "v1",
        "executor_display_name": "Update a custom field",
        "executor_description": "A specific, existing custom field can be updated by making a PUT request on the URL for that custom field. Only the fields provided in the data block will be updated; any unspecified fields will remain unchanged When using this method, it is best to specify only those fields you wish to change, or else you may overwrite changes made by another user since you last retrieved the custom field. A custom field\u2019s type cannot be updated. An enum custom field\u2019s enum_options cannot be updated with this endpoint. Instead see \u201cWork With Enum Options\u201d for information on how to update enum_options. Locked custom fields can only be updated by the user who locked the field. Returns the complete updated custom field record.",
        "executor_category": "Customfields",
        "executor_category_group": "Customfields",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://app.asana.com/api/1.0/custom_fields/{custom_field_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "custom_field_gid",
                "value": "",
                "description": "Globally unique identifier for the custom field."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "name": "Status",
                    "enum_options": [
                        {
                            "name": "Low",
                            "enabled": true,
                            "color": "blue"
                        }
                    ],
                    "is_formula_field": false,
                    "date_value": {
                        "date": "2024-08-23",
                        "date_time": "2024-08-23T22:00:00.000Z"
                    },
                    "enum_value": {
                        "name": "Low",
                        "enabled": true,
                        "color": "blue"
                    },
                    "multi_enum_values": [
                        {
                            "name": "Low",
                            "enabled": true,
                            "color": "blue"
                        }
                    ],
                    "number_value": 5.2,
                    "text_value": "Some Value",
                    "description": "Development team priority",
                    "precision": 2,
                    "format": "custom",
                    "currency_code": "EUR",
                    "custom_label": "gold pieces",
                    "custom_label_position": "suffix",
                    "has_notifications_enabled": true,
                    "workspace": "1331",
                    "owned_by_app": true,
                    "people_value": [
                        "12345"
                    ]
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1686827062541,
        "lastModifiedTime": 1686827372719,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The custom field was successfully updated.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Status",
                        "resource_subtype": "text",
                        "type": "text",
                        "enum_options": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Low",
                                "enabled": true,
                                "color": "blue"
                            }
                        ],
                        "enabled": true,
                        "is_formula_field": false,
                        "date_value": {
                            "date": "2024-08-23",
                            "date_time": "2024-08-23T22:00:00.000Z"
                        },
                        "enum_value": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Low",
                            "enabled": true,
                            "color": "blue"
                        },
                        "multi_enum_values": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Low",
                                "enabled": true,
                                "color": "blue"
                            }
                        ],
                        "number_value": 5.2,
                        "text_value": "Some Value",
                        "display_value": "blue",
                        "description": "Development team priority",
                        "precision": 2,
                        "format": "custom",
                        "currency_code": "EUR",
                        "custom_label": "gold pieces",
                        "custom_label_position": "suffix",
                        "is_global_to_workspace": true,
                        "has_notifications_enabled": true,
                        "asana_created_field": "priority",
                        "is_value_read_only": false,
                        "created_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "people_value": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98816,
        "executor_type": "THIRDPARTY",
        "executor_name": "getaworkspacescustomfields",
        "executor_version": "v1",
        "executor_display_name": "Get a workspace's custom fields",
        "executor_description": "Returns a list of the compact representation of all of the custom fields in a workspace.",
        "executor_category": "Customfields",
        "executor_category_group": "Customfields",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/workspaces/{workspace_gid}/custom_fields",
        "dataroot": null,
        "pathParams": [
            {
                "key": "workspace_gid",
                "value": "",
                "description": "Globally unique identifier for the workspace or organization."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686827669505,
        "lastModifiedTime": 1686827669505,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved all custom fields for the given workspace.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Status",
                            "resource_subtype": "text",
                            "type": "text",
                            "enum_options": [
                                {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                }
                            ],
                            "enabled": true,
                            "is_formula_field": false,
                            "date_value": {
                                "date": "2024-08-23",
                                "date_time": "2024-08-23T22:00:00.000Z"
                            },
                            "enum_value": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Low",
                                "enabled": true,
                                "color": "blue"
                            },
                            "multi_enum_values": [
                                {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                }
                            ],
                            "number_value": 5.2,
                            "text_value": "Some Value",
                            "display_value": "blue",
                            "description": "Development team priority",
                            "precision": 2,
                            "format": "custom",
                            "currency_code": "EUR",
                            "custom_label": "gold pieces",
                            "custom_label_position": "suffix",
                            "is_global_to_workspace": true,
                            "has_notifications_enabled": true,
                            "asana_created_field": "priority",
                            "is_value_read_only": false,
                            "created_by": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "people_value": [
                                {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            ]
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98814,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteacustomfield",
        "executor_version": "v1",
        "executor_display_name": "Delete a custom field",
        "executor_description": "A specific, existing custom field can be deleted by making a DELETE request on the URL for that custom field. Locked custom fields can only be deleted by the user who locked the field. Returns an empty data record.",
        "executor_category": "Customfields",
        "executor_category_group": "Customfields",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://app.asana.com/api/1.0/custom_fields/{custom_field_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "custom_field_gid",
                "value": "",
                "description": "Globally unique identifier for the custom field."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686827313239,
        "lastModifiedTime": 1686827313239,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The custom field was successfully deleted.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98831,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateagoal",
        "executor_version": "v1",
        "executor_display_name": "Update a goal",
        "executor_description": "An existing goal can be updated by making a PUT request on the URL for that goal. Only the fields provided in the data block will be updated; any unspecified fields will remain unchanged.  Returns the complete updated goal record.",
        "executor_category": "Goals",
        "executor_category_group": "Goals",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://app.asana.com/api/1.0/goals/{goal_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "goal_gid",
                "value": "",
                "description": "Globally unique identifier for the goal."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "name": "Grow web traffic by 30%",
                    "html_notes": "<body>Start building brand awareness.</body>",
                    "notes": "Start building brand awareness.",
                    "due_on": "2019-09-15",
                    "start_on": "2019-09-14",
                    "is_workspace_level": true,
                    "liked": false,
                    "team": "12345",
                    "workspace": "12345",
                    "time_period": "12345",
                    "owner": "12345",
                    "status": "green"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686831021115,
        "lastModifiedTime": 1686831021115,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully updated the goal.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Grow web traffic by 30%",
                        "html_notes": "<body>Start building brand awareness.</body>",
                        "notes": "Start building brand awareness.",
                        "due_on": "2019-09-15",
                        "start_on": "2019-09-14",
                        "is_workspace_level": true,
                        "liked": false,
                        "likes": [
                            {
                                "gid": "12345",
                                "user": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            }
                        ],
                        "num_likes": 5,
                        "team": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Marketing"
                        },
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "followers": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "time_period": {
                            "gid": "12345",
                            "resource_type": "task",
                            "end_on": "2019-09-14",
                            "start_on": "2019-09-13",
                            "period": "Q1",
                            "display_name": "Q1 FY22"
                        },
                        "metric": {
                            "gid": "12345",
                            "resource_type": "task",
                            "resource_subtype": "number",
                            "precision": 2,
                            "unit": "none",
                            "currency_code": "EUR",
                            "initial_number_value": 5.2,
                            "target_number_value": 10.2,
                            "current_number_value": 8.12,
                            "current_display_value": "8.12",
                            "progress_source": "manual",
                            "can_manage": true
                        },
                        "owner": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "current_status_update": {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "resource_subtype": "project_status_update"
                        },
                        "status": "green"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98832,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteagoal",
        "executor_version": "v1",
        "executor_display_name": "Delete a goal",
        "executor_description": "A specific, existing goal can be deleted by making a DELETE request on the URL for that goal.  Returns an empty data record.",
        "executor_category": "Goals",
        "executor_category_group": "Goals",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://app.asana.com/api/1.0/goals/{goal_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "goal_gid",
                "value": "",
                "description": "Globally unique identifier for the goal."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686831610429,
        "lastModifiedTime": 1686831610429,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully deleted the specified goal.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98830,
        "executor_type": "THIRDPARTY",
        "executor_name": "getagoal",
        "executor_version": "v1",
        "executor_display_name": "Get a goal",
        "executor_description": "Returns the complete goal record for a single goal.",
        "executor_category": "Goals",
        "executor_category_group": "Goals",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/goals/{goal_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "goal_gid",
                "value": "",
                "description": "Globally unique identifier for the goal."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686830773512,
        "lastModifiedTime": 1686830773512,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully retrieved the record for a single goal.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Grow web traffic by 30%",
                        "html_notes": "<body>Start building brand awareness.</body>",
                        "notes": "Start building brand awareness.",
                        "due_on": "2019-09-15",
                        "start_on": "2019-09-14",
                        "is_workspace_level": true,
                        "liked": false,
                        "likes": [
                            {
                                "gid": "12345",
                                "user": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            }
                        ],
                        "num_likes": 5,
                        "team": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Marketing"
                        },
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "followers": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "time_period": {
                            "gid": "12345",
                            "resource_type": "task",
                            "end_on": "2019-09-14",
                            "start_on": "2019-09-13",
                            "period": "Q1",
                            "display_name": "Q1 FY22"
                        },
                        "metric": {
                            "gid": "12345",
                            "resource_type": "task",
                            "resource_subtype": "number",
                            "precision": 2,
                            "unit": "none",
                            "currency_code": "EUR",
                            "initial_number_value": 5.2,
                            "target_number_value": 10.2,
                            "current_number_value": 8.12,
                            "current_display_value": "8.12",
                            "progress_source": "manual",
                            "can_manage": true
                        },
                        "owner": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "current_status_update": {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "resource_subtype": "project_status_update"
                        },
                        "status": "green"
                    }
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The request was valid, but the queried object or object mutation specified in the request is above your current premium level.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98833,
        "executor_type": "THIRDPARTY",
        "executor_name": "getgoals",
        "executor_version": "v1",
        "executor_display_name": "Get goals",
        "executor_description": "Returns compact goal records.",
        "executor_category": "Goals",
        "executor_category_group": "Goals",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/goals",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "portfolio",
                "value": "",
                "description": "Globally unique identifier for supporting portfolio.",
                "req": false
            },
            {
                "key": "project",
                "value": "",
                "description": "Globally unique identifier for supporting project.",
                "req": false
            },
            {
                "key": "is_workspace_level",
                "value": "",
                "description": "Filter to goals with is_workspace_level set to query value. Must be used with the workspace parameter.",
                "req": false
            },
            {
                "key": "team",
                "value": "",
                "description": "Globally unique identifier for the team.",
                "req": false
            },
            {
                "key": "workspace",
                "value": "",
                "description": "Globally unique identifier for the workspace.",
                "req": false
            },
            {
                "key": "time_periods",
                "value": "",
                "description": "Globally unique identifiers for the time periods.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            },
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686832165428,
        "lastModifiedTime": 1686832165428,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully retrieved the requested goals.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Grow web traffic by 30%",
                            "owner": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98849,
        "executor_type": "THIRDPARTY",
        "executor_name": "createagoal",
        "executor_version": "v1",
        "executor_display_name": "Create a goal",
        "executor_description": "Creates a new goal in a workspace or team.  Returns the full record of the newly created goal.",
        "executor_category": "Goals",
        "executor_category_group": "Goals",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/goals",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "name": "Grow web traffic by 30%",
                    "html_notes": "<body>Start building brand awareness.</body>",
                    "notes": "Start building brand awareness.",
                    "due_on": "2019-09-15",
                    "start_on": "2019-09-14",
                    "is_workspace_level": true,
                    "liked": false,
                    "team": "12345",
                    "workspace": "12345",
                    "time_period": "12345",
                    "owner": "12345",
                    "followers": [
                        "12345"
                    ]
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1686889597538,
        "lastModifiedTime": 1686890212279,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully created a new goal.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Grow web traffic by 30%",
                        "html_notes": "<body>Start building brand awareness.</body>",
                        "notes": "Start building brand awareness.",
                        "due_on": "2019-09-15",
                        "start_on": "2019-09-14",
                        "is_workspace_level": true,
                        "liked": false,
                        "likes": [
                            {
                                "gid": "12345",
                                "user": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            }
                        ],
                        "num_likes": 5,
                        "team": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Marketing"
                        },
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "followers": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "time_period": {
                            "gid": "12345",
                            "resource_type": "task",
                            "end_on": "2019-09-14",
                            "start_on": "2019-09-13",
                            "period": "Q1",
                            "display_name": "Q1 FY22"
                        },
                        "metric": {
                            "gid": "12345",
                            "resource_type": "task",
                            "resource_subtype": "number",
                            "precision": 2,
                            "unit": "none",
                            "currency_code": "EUR",
                            "initial_number_value": 5.2,
                            "target_number_value": 10.2,
                            "current_number_value": 8.12,
                            "current_display_value": "8.12",
                            "progress_source": "manual",
                            "can_manage": true
                        },
                        "owner": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "current_status_update": {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "resource_subtype": "project_status_update"
                        },
                        "status": "green"
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The request was valid, but the queried object or object mutation specified in the request is above your current premium level.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98853,
        "executor_type": "THIRDPARTY",
        "executor_name": "createagoalmetric",
        "executor_version": "v1",
        "executor_display_name": "Create a goal metric",
        "executor_description": "Creates and adds a goal metric to a specified goal. Note that this replaces an existing goal metric if one already exists.",
        "executor_category": "Goals",
        "executor_category_group": "Goals",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/goals/{goal_gid}/setMetric",
        "dataroot": null,
        "pathParams": [
            {
                "key": "goal_gid",
                "value": "",
                "description": "Globally unique identifier for the goal."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "precision": 2,
                    "unit": "none",
                    "currency_code": "EUR",
                    "initial_number_value": 5.2,
                    "target_number_value": 10.2,
                    "current_number_value": 8.12,
                    "progress_source": "manual"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1686889863231,
        "lastModifiedTime": 1686890153722,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully created a new goal metric.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Grow web traffic by 30%",
                        "html_notes": "<body>Start building brand awareness.</body>",
                        "notes": "Start building brand awareness.",
                        "due_on": "2019-09-15",
                        "start_on": "2019-09-14",
                        "is_workspace_level": true,
                        "liked": false,
                        "likes": [
                            {
                                "gid": "12345",
                                "user": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            }
                        ],
                        "num_likes": 5,
                        "team": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Marketing"
                        },
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "followers": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "time_period": {
                            "gid": "12345",
                            "resource_type": "task",
                            "end_on": "2019-09-14",
                            "start_on": "2019-09-13",
                            "period": "Q1",
                            "display_name": "Q1 FY22"
                        },
                        "metric": {
                            "gid": "12345",
                            "resource_type": "task",
                            "resource_subtype": "number",
                            "precision": 2,
                            "unit": "none",
                            "currency_code": "EUR",
                            "initial_number_value": 5.2,
                            "target_number_value": 10.2,
                            "current_number_value": 8.12,
                            "current_display_value": "8.12",
                            "progress_source": "manual",
                            "can_manage": true
                        },
                        "owner": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "current_status_update": {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "resource_subtype": "project_status_update"
                        },
                        "status": "green"
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The request was valid, but the queried object or object mutation specified in the request is above your current premium level.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98858,
        "executor_type": "THIRDPARTY",
        "executor_name": "removeacollaboratorfromagoal",
        "executor_version": "v1",
        "executor_display_name": "Remove a collaborator from a goal",
        "executor_description": "Removes followers from a goal. Returns the goal the followers were removed from. Each goal can be associated with zero or more followers in the system. Requests to add/remove followers, if successful, will return the complete updated goal record, described above.",
        "executor_category": "Goals",
        "executor_category_group": "Goals",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/goals/{goal_gid}/removeFollowers",
        "dataroot": null,
        "pathParams": [
            {
                "key": "goal_gid",
                "value": "",
                "description": "Globally unique identifier for the goal."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "followers": [
                        "13579",
                        "321654"
                    ]
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686891484389,
        "lastModifiedTime": 1686891484389,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully removed users as collaborators.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Grow web traffic by 30%",
                        "html_notes": "<body>Start building brand awareness.</body>",
                        "notes": "Start building brand awareness.",
                        "due_on": "2019-09-15",
                        "start_on": "2019-09-14",
                        "is_workspace_level": true,
                        "liked": false,
                        "likes": [
                            {
                                "gid": "12345",
                                "user": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            }
                        ],
                        "num_likes": 5,
                        "team": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Marketing"
                        },
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "followers": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "time_period": {
                            "gid": "12345",
                            "resource_type": "task",
                            "end_on": "2019-09-14",
                            "start_on": "2019-09-13",
                            "period": "Q1",
                            "display_name": "Q1 FY22"
                        },
                        "metric": {
                            "gid": "12345",
                            "resource_type": "task",
                            "resource_subtype": "number",
                            "precision": 2,
                            "unit": "none",
                            "currency_code": "EUR",
                            "initial_number_value": 5.2,
                            "target_number_value": 10.2,
                            "current_number_value": 8.12,
                            "current_display_value": "8.12",
                            "progress_source": "manual",
                            "can_manage": true
                        },
                        "owner": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "current_status_update": {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "resource_subtype": "project_status_update"
                        },
                        "status": "green"
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The request was valid, but the queried object or object mutation specified in the request is above your current premium level.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98860,
        "executor_type": "THIRDPARTY",
        "executor_name": "getparentgoalsfromagoal",
        "executor_version": "v1",
        "executor_display_name": "Get parent goals from a goal",
        "executor_description": "Returns a compact representation of all of the parent goals of a goal.",
        "executor_category": "Goals",
        "executor_category_group": "Goals",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/goals/{goal_gid}/parentGoals",
        "dataroot": null,
        "pathParams": [
            {
                "key": "goal_gid",
                "value": "",
                "description": "Globally unique identifier for the goal."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686891601354,
        "lastModifiedTime": 1686891601354,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the specified goal's parent goals.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Grow web traffic by 30%",
                            "owner": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The request was valid, but the queried object or object mutation specified in the request is above your current premium level.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98855,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateagoalmetric",
        "executor_version": "v1",
        "executor_display_name": "Update a goal metric",
        "executor_description": "Updates a goal's existing metric's current_number_value if one exists, otherwise responds with a 400 status code.  Returns the complete updated goal metric record.",
        "executor_category": "Goals",
        "executor_category_group": "Goals",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/goals/{goal_gid}/setMetricCurrentValue",
        "dataroot": null,
        "pathParams": [
            {
                "key": "goal_gid",
                "value": "",
                "description": "Globally unique identifier for the goal."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "current_number_value": 8.12
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686890043823,
        "lastModifiedTime": 1686890043823,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully updated the goal metric.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Grow web traffic by 30%",
                        "html_notes": "<body>Start building brand awareness.</body>",
                        "notes": "Start building brand awareness.",
                        "due_on": "2019-09-15",
                        "start_on": "2019-09-14",
                        "is_workspace_level": true,
                        "liked": false,
                        "likes": [
                            {
                                "gid": "12345",
                                "user": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            }
                        ],
                        "num_likes": 5,
                        "team": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Marketing"
                        },
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "followers": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "time_period": {
                            "gid": "12345",
                            "resource_type": "task",
                            "end_on": "2019-09-14",
                            "start_on": "2019-09-13",
                            "period": "Q1",
                            "display_name": "Q1 FY22"
                        },
                        "metric": {
                            "gid": "12345",
                            "resource_type": "task",
                            "resource_subtype": "number",
                            "precision": 2,
                            "unit": "none",
                            "currency_code": "EUR",
                            "initial_number_value": 5.2,
                            "target_number_value": 10.2,
                            "current_number_value": 8.12,
                            "current_display_value": "8.12",
                            "progress_source": "manual",
                            "can_manage": true
                        },
                        "owner": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "current_status_update": {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "resource_subtype": "project_status_update"
                        },
                        "status": "green"
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The request was valid, but the queried object or object mutation specified in the request is above your current premium level.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98856,
        "executor_type": "THIRDPARTY",
        "executor_name": "addacollaboratortoagoal",
        "executor_version": "v1",
        "executor_display_name": "Add a collaborator to a goal",
        "executor_description": "Adds followers to a goal. Returns the goal the followers were added to. Each goal can be associated with zero or more followers in the system. Requests to add/remove followers, if successful, will return the complete updated goal record, described above.",
        "executor_category": "Goals",
        "executor_category_group": "Goals",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/goals/{goal_gid}/addFollowers",
        "dataroot": null,
        "pathParams": [
            {
                "key": "goal_gid",
                "value": "",
                "description": "Globally unique identifier for the goal."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "followers": [
                        "13579",
                        "321654"
                    ]
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686891201822,
        "lastModifiedTime": 1686891201822,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully added users as collaborators.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Grow web traffic by 30%",
                        "html_notes": "<body>Start building brand awareness.</body>",
                        "notes": "Start building brand awareness.",
                        "due_on": "2019-09-15",
                        "start_on": "2019-09-14",
                        "is_workspace_level": true,
                        "liked": false,
                        "likes": [
                            {
                                "gid": "12345",
                                "user": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            }
                        ],
                        "num_likes": 5,
                        "team": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Marketing"
                        },
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "followers": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "time_period": {
                            "gid": "12345",
                            "resource_type": "task",
                            "end_on": "2019-09-14",
                            "start_on": "2019-09-13",
                            "period": "Q1",
                            "display_name": "Q1 FY22"
                        },
                        "metric": {
                            "gid": "12345",
                            "resource_type": "task",
                            "resource_subtype": "number",
                            "precision": 2,
                            "unit": "none",
                            "currency_code": "EUR",
                            "initial_number_value": 5.2,
                            "target_number_value": 10.2,
                            "current_number_value": 8.12,
                            "current_display_value": "8.12",
                            "progress_source": "manual",
                            "can_manage": true
                        },
                        "owner": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "current_status_update": {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "resource_subtype": "project_status_update"
                        },
                        "status": "green"
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The request was valid, but the queried object or object mutation specified in the request is above your current premium level.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98822,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateagoalrelationship",
        "executor_version": "v1",
        "executor_display_name": "Update a goal relationship",
        "executor_description": "An existing goal relationship can be updated by making a PUT request on the URL for that goal relationship. Only the fields provided in the data block will be updated; any unspecified fields will remain unchanged.  Returns the complete updated goal relationship record.",
        "executor_category": "Goalrelationships",
        "executor_category_group": "Goalrelationships",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://app.asana.com/api/1.0/goal_relationships/{goal_relationship_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "goal_relationship_gid",
                "value": "",
                "description": "Globally unique identifier for the goal relationship."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "contribution_weight": 1
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686829677508,
        "lastModifiedTime": 1686829677508,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully updated the goal relationship.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "resource_subtype": "subgoal",
                        "supporting_resource": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        },
                        "contribution_weight": 1,
                        "supported_goal": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Grow web traffic by 30%",
                            "owner": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98821,
        "executor_type": "THIRDPARTY",
        "executor_name": "getagoalrelationship",
        "executor_version": "v1",
        "executor_display_name": "Get a goal relationship",
        "executor_description": "Returns the complete updated goal relationship record for a single goal relationship.",
        "executor_category": "Goalrelationships",
        "executor_category_group": "Goalrelationships",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/goal_relationships/{goal_relationship_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "goal_relationship_gid",
                "value": "",
                "description": "Globally unique identifier for the goal relationship."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686829464418,
        "lastModifiedTime": 1686829464418,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully retrieved the record for the goal relationship.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "resource_subtype": "subgoal",
                        "supporting_resource": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        },
                        "contribution_weight": 1,
                        "supported_goal": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Grow web traffic by 30%",
                            "owner": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98824,
        "executor_type": "THIRDPARTY",
        "executor_name": "getgoalrelationships",
        "executor_version": "v1",
        "executor_display_name": "Get goal relationships",
        "executor_description": "Returns compact goal relationship records.",
        "executor_category": "Goalrelationships",
        "executor_category_group": "Goalrelationships",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/goal_relationships",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "supported_goal",
                "value": "",
                "description": "Globally unique identifier for the supported goal in the goal relationship.",
                "req": false
            },
            {
                "key": "resource_subtype",
                "value": "",
                "description": "If provided, filter to goal relationships with a given resource_subtype.",
                "req": false
            },
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686829903379,
        "lastModifiedTime": 1686829903379,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully retrieved the requested goal relationships.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "resource_subtype": "subgoal",
                            "supporting_resource": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Stuff to buy"
                            },
                            "contribution_weight": 1
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98825,
        "executor_type": "THIRDPARTY",
        "executor_name": "addasupportinggoalrelationship",
        "executor_version": "v1",
        "executor_display_name": "Add a supporting goal relationship",
        "executor_description": "Creates a goal relationship by adding a supporting resource to a given goal.  Returns the newly created goal relationship record.",
        "executor_category": "Goalrelationships",
        "executor_category_group": "Goalrelationships",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/goals/{goal_gid}/addSupportingRelationship",
        "dataroot": null,
        "pathParams": [
            {
                "key": "goal_gid",
                "value": "",
                "description": "Globally unique identifier for the goal."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "supporting_resource": "12345",
                    "insert_before": "1331",
                    "insert_after": "1331",
                    "contribution_weight": 1
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686830181572,
        "lastModifiedTime": 1686830181572,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully created the goal relationship.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "resource_subtype": "subgoal",
                        "supporting_resource": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        },
                        "contribution_weight": 1,
                        "supported_goal": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Grow web traffic by 30%",
                            "owner": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98828,
        "executor_type": "THIRDPARTY",
        "executor_name": "removesasupportinggoalrelationship",
        "executor_version": "v1",
        "executor_display_name": "Removes a supporting goal relationship",
        "executor_description": "Removes a goal relationship for a given parent goal.",
        "executor_category": "Goalrelationships",
        "executor_category_group": "Goalrelationships",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/goals/{goal_gid}/removeSupportingRelationship",
        "dataroot": null,
        "pathParams": [
            {
                "key": "goal_gid",
                "value": "",
                "description": "Globally unique identifier for the goal."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "supporting_resource": "12345",
                    "insert_before": "1331",
                    "insert_after": "1331",
                    "contribution_weight": 1
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686830530974,
        "lastModifiedTime": 1686830530974,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully removed the goal relationship.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98820,
        "executor_type": "THIRDPARTY",
        "executor_name": "geteventsonaresource",
        "executor_version": "v1",
        "executor_display_name": "Get events on a resource",
        "executor_description": "Returns the full record for all events that have occurred since the sync token was created.  A GET request to the endpoint /[path_to_resource]/events can be made in lieu of including the resource ID in the data for the request.  Asana limits a single sync token to 100 events. If more than 100 events exist for a given resource, has_more: true will be returned in the response, indicating that there are more events to pull.",
        "executor_category": "Events",
        "executor_category_group": "Events",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/events",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "resource",
                "value": "",
                "description": "A resource ID to subscribe to. The resource can be a task or project.",
                "req": false
            },
            {
                "key": "sync",
                "value": "",
                "description": "A sync token received from the last request, or none on first sync. Events will be returned from the point in time that the sync token was generated. Note: On your first request, omit the sync token. The response will be the same as for an expired sync token, and will include a new valid sync token.If the sync token is too old (which may happen from time to time) the API will return a 412 Precondition Failed error, and include a fresh sync token in the response.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686829291551,
        "lastModifiedTime": 1686829291551,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully retrieved events.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "user": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "resource": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Bug Task"
                            },
                            "type": "task",
                            "action": "changed",
                            "parent": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Bug Task"
                            },
                            "created_at": "2012-02-22T02:06:58.147Z",
                            "change": {
                                "field": "assignee",
                                "action": "changed",
                                "new_value": {
                                    "gid": "12345",
                                    "resource_type": "user"
                                },
                                "added_value": {
                                    "gid": "12345",
                                    "resource_type": "user"
                                },
                                "removed_value": {
                                    "gid": "12345",
                                    "resource_type": "user"
                                }
                            }
                        }
                    ],
                    "sync": "de4774f6915eae04714ca93bb2f5ee81",
                    "has_more": true
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98787,
        "executor_type": "THIRDPARTY",
        "executor_name": "getaprojectscustomfields",
        "executor_version": "v1",
        "executor_display_name": "Get a project's custom fields",
        "executor_description": "Returns a list of all of the custom fields settings on a project, in compact form. Note that, as in all queries to collections which return compact representation, opt_fields can be used to include more data than is returned in the compact representation. See the documentation for input/output options for more information.",
        "executor_category": "Customfieldsettings",
        "executor_category_group": "Customfieldsettings",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/projects/{project_gid}/custom_field_settings",
        "dataroot": null,
        "pathParams": [
            {
                "key": "project_gid",
                "value": "",
                "description": "Globally unique identifier for the project."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686825767813,
        "lastModifiedTime": 1686825767813,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved custom field settings objects for a project.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "project": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Stuff to buy"
                            },
                            "is_important": false,
                            "parent": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Stuff to buy"
                            },
                            "custom_field": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Status",
                                "resource_subtype": "text",
                                "type": "text",
                                "enum_options": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "enabled": true,
                                "is_formula_field": false,
                                "date_value": {
                                    "date": "2024-08-23",
                                    "date_time": "2024-08-23T22:00:00.000Z"
                                },
                                "enum_value": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                },
                                "multi_enum_values": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "number_value": 5.2,
                                "text_value": "Some Value",
                                "display_value": "blue",
                                "description": "Development team priority",
                                "precision": 2,
                                "format": "custom",
                                "currency_code": "EUR",
                                "custom_label": "gold pieces",
                                "custom_label_position": "suffix",
                                "is_global_to_workspace": true,
                                "has_notifications_enabled": true,
                                "asana_created_field": "priority",
                                "is_value_read_only": false,
                                "created_by": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                },
                                "people_value": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Greg Sanchez"
                                    }
                                ]
                            }
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98796,
        "executor_type": "THIRDPARTY",
        "executor_name": "getaportfolioscustomfields",
        "executor_version": "v1",
        "executor_display_name": "Get a portfolio's custom fields",
        "executor_description": "Returns a list of all of the custom fields settings on a portfolio, in compact form.",
        "executor_category": "Customfieldsettings",
        "executor_category_group": "Customfieldsettings",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/portfolios/{portfolio_gid}/custom_field_settings",
        "dataroot": null,
        "pathParams": [
            {
                "key": "portfolio_gid",
                "value": "",
                "description": "Globally unique identifier for the portfolio."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686826055883,
        "lastModifiedTime": 1686826055883,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved custom field settings objects for a portfolio.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "project": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Stuff to buy"
                            },
                            "is_important": false,
                            "parent": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Stuff to buy"
                            },
                            "custom_field": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Status",
                                "resource_subtype": "text",
                                "type": "text",
                                "enum_options": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "enabled": true,
                                "is_formula_field": false,
                                "date_value": {
                                    "date": "2024-08-23",
                                    "date_time": "2024-08-23T22:00:00.000Z"
                                },
                                "enum_value": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                },
                                "multi_enum_values": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "number_value": 5.2,
                                "text_value": "Some Value",
                                "display_value": "blue",
                                "description": "Development team priority",
                                "precision": 2,
                                "format": "custom",
                                "currency_code": "EUR",
                                "custom_label": "gold pieces",
                                "custom_label_position": "suffix",
                                "is_global_to_workspace": true,
                                "has_notifications_enabled": true,
                                "asana_created_field": "priority",
                                "is_value_read_only": false,
                                "created_by": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                },
                                "people_value": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Greg Sanchez"
                                    }
                                ]
                            }
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98899,
        "executor_type": "THIRDPARTY",
        "executor_name": "getdetailsonanorgexportrequest",
        "executor_version": "v1",
        "executor_display_name": "Get details on an org export request",
        "executor_description": "Returns details of a previously-requested Organization export.",
        "executor_category": "Organizationexports",
        "executor_category_group": "Organizationexports",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/organization_exports/{organization_export_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "organization_export_gid",
                "value": "",
                "description": "Globally unique identifier for the organization export."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686895067042,
        "lastModifiedTime": 1686895067042,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved organization export object.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "download_url": "https://asana-export-us-east-1.s3.us-east-1.amazonaws.com/2563645399633793/domain_export/7588024658887731/download/ domain_export_2563645399633793_7588024658887731_2023018-201726.json.gz?X-Amz-Algorithm=AWS4-HMAC-SHA256& X-Amz-Content-Sha256=xxxxxxxx&X-Amz-Date=xxxxxxxx&X-Amz-Expires=300&X-Amz-Security-Token=xxxxxxxx& X-Amz-Signature=xxxxxxxx&X-Amz-SignedHeaders=host&x-id=GetObject#_=_",
                        "state": "started",
                        "organization": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98895,
        "executor_type": "THIRDPARTY",
        "executor_name": "createanorganizationexportrequest",
        "executor_version": "v1",
        "executor_display_name": "Create an organization export request",
        "executor_description": "This method creates a request to export an Organization. Asana will complete the export at some point after you create the request.",
        "executor_category": "Organizationexports",
        "executor_category_group": "Organizationexports",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/organization_exports",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "organization": "1331"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686894866171,
        "lastModifiedTime": 1686894866171,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully created organization export request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "download_url": "https://asana-export-us-east-1.s3.us-east-1.amazonaws.com/2563645399633793/domain_export/7588024658887731/download/ domain_export_2563645399633793_7588024658887731_2023018-201726.json.gz?X-Amz-Algorithm=AWS4-HMAC-SHA256& X-Amz-Content-Sha256=xxxxxxxx&X-Amz-Date=xxxxxxxx&X-Amz-Expires=300&X-Amz-Security-Token=xxxxxxxx& X-Amz-Signature=xxxxxxxx&X-Amz-SignedHeaders=host&x-id=GetObject#_=_",
                        "state": "started",
                        "organization": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98876,
        "executor_type": "THIRDPARTY",
        "executor_name": "getajobbyid",
        "executor_version": "v1",
        "executor_display_name": "Get a job by id",
        "executor_description": "Returns the full record for a job.",
        "executor_category": "Jobs",
        "executor_category_group": "Jobs",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/jobs/{job_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "job_gid",
                "value": "",
                "description": "Globally unique identifier for the job."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1686893272441,
        "lastModifiedTime": 1686894072658,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved Job.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "resource_subtype": "duplicate_task",
                        "status": "in_progress",
                        "new_project": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        },
                        "new_task": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        },
                        "new_project_template": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Packing list"
                        }
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98903,
        "executor_type": "THIRDPARTY",
        "executor_name": "getmultipleportfoliomemberships",
        "executor_version": "v1",
        "executor_display_name": "Get multiple portfolio memberships",
        "executor_description": "Returns a list of portfolio memberships in compact representation. You must specify portfolio, portfolio and user, or workspace and user.",
        "executor_category": "Portfoliomemberships",
        "executor_category_group": "Portfoliomemberships",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/portfolio_memberships",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "portfolio",
                "value": "",
                "description": "The portfolio to filter results on.",
                "req": false
            },
            {
                "key": "workspace",
                "value": "",
                "description": "The workspace to filter results on.",
                "req": false
            },
            {
                "key": "user",
                "value": "",
                "description": "A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686895370831,
        "lastModifiedTime": 1686895370831,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved portfolio memberships.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "portfolio": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Bug Portfolio"
                            },
                            "user": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98910,
        "executor_type": "THIRDPARTY",
        "executor_name": "getaportfoliomembership",
        "executor_version": "v1",
        "executor_display_name": "Get a portfolio membership",
        "executor_description": "Returns the complete portfolio record for a single portfolio membership.",
        "executor_category": "Portfoliomemberships",
        "executor_category_group": "Portfoliomemberships",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/portfolio_memberships/{portfolio_membership_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "portfolio_membership_gid",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686895715344,
        "lastModifiedTime": 1686895715344,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the requested portfolio membership.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "portfolio": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Portfolio"
                        },
                        "user": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98915,
        "executor_type": "THIRDPARTY",
        "executor_name": "getmembershipsfromaportfolio",
        "executor_version": "v1",
        "executor_display_name": "Get memberships from a portfolio",
        "executor_description": "Returns the compact portfolio membership records for the portfolio.",
        "executor_category": "Portfoliomemberships",
        "executor_category_group": "Portfoliomemberships",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/portfolios/{portfolio_gid}/portfolio_memberships",
        "dataroot": null,
        "pathParams": [
            {
                "key": "portfolio_gid",
                "value": "",
                "description": "Globally unique identifier for the portfolio."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "user",
                "value": "",
                "description": "A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686895951234,
        "lastModifiedTime": 1686895951234,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the requested portfolio's memberships.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "portfolio": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Bug Portfolio"
                            },
                            "user": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98885,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteamembership",
        "executor_version": "v1",
        "executor_display_name": "Delete a membership",
        "executor_description": "A specific, existing membership can be deleted by making a DELETE request on the URL for that membership.  Returns an empty data record.",
        "executor_category": "Memberships",
        "executor_category_group": "Memberships",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://app.asana.com/api/1.0/memberships/{membership_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "membership_gid",
                "value": "",
                "description": "Globally unique identifier for the membership."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686894251855,
        "lastModifiedTime": 1686894251855,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully deleted the requested membership.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98887,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateamembership",
        "executor_version": "v1",
        "executor_display_name": "Update a membership",
        "executor_description": "An existing membership can be updated by making a PUT request on the URL for that goal. Only the fields provided in the data block will be updated; any unspecified fields will remain unchanged. Memberships on project, portfolio, team, and goals can be updated.",
        "executor_category": "Memberships",
        "executor_category_group": "Memberships",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://app.asana.com/api/1.0/memberships/{membership_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "membership_gid",
                "value": "",
                "description": "Globally unique identifier for the membership."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686894521018,
        "lastModifiedTime": 1686894521018,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully updated the requested membership.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "member": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "goal": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Grow web traffic by 30%",
                            "owner": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        },
                        "is_commenter": false,
                        "is_editor": false
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98882,
        "executor_type": "THIRDPARTY",
        "executor_name": "createamembership",
        "executor_version": "v1",
        "executor_display_name": "Create a membership",
        "executor_description": "Creates a new membership in a goal. Teams or users can be a member of goals.  Returns the full record of the newly created membership.",
        "executor_category": "Memberships",
        "executor_category_group": "Memberships",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/memberships",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "is_active": true,
                    "member": 12345,
                    "parent": "987654"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686893938721,
        "lastModifiedTime": 1686893938721,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully created the requested membership.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "member": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "goal": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Grow web traffic by 30%",
                            "owner": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        },
                        "is_commenter": false,
                        "is_editor": false
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98880,
        "executor_type": "THIRDPARTY",
        "executor_name": "getmultiplememberships",
        "executor_version": "v1",
        "executor_display_name": "Get multiple memberships",
        "executor_description": "Returns compact goal_membership records. The possible types for parent in this request are goal. An additional member (user GID or team GID) can be passed in to filter to a specific membership.",
        "executor_category": "Memberships",
        "executor_category_group": "Memberships",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/memberships",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "parent",
                "value": "",
                "description": "Globally unique identifier for goal.",
                "req": false
            },
            {
                "key": "member",
                "value": "",
                "description": "Globally unique identifier for team or user.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Pagination limit for the request.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1686893734545,
        "lastModifiedTime": 1686893997021,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the requested membership.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "member": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "goal": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Grow web traffic by 30%",
                                "owner": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            },
                            "is_commenter": false,
                            "is_editor": false
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98918,
        "executor_type": "THIRDPARTY",
        "executor_name": "getmultipleportfolios",
        "executor_version": "v1",
        "executor_display_name": "Get multiple portfolios",
        "executor_description": "Returns a list of the portfolios in compact representation that are owned by the current API user.",
        "executor_category": "Portfolios",
        "executor_category_group": "Portfolios",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/portfolios",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            },
            {
                "key": "workspace",
                "value": "",
                "description": "The workspace or organization to filter portfolios on.",
                "req": false
            },
            {
                "key": "owner",
                "value": "",
                "description": "The user who owns the portfolio. Currently, API users can only get a list of portfolios that they themselves own, unless the request is made from a Service Account. In the case of a Service Account, if this parameter is specified, then all portfolios owned by this parameter are returned. Otherwise, all portfolios across the workspace are returned.",
                "req": false
            },
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686896301829,
        "lastModifiedTime": 1686896301829,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved portfolios.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Portfolio"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98922,
        "executor_type": "THIRDPARTY",
        "executor_name": "createaportfolio",
        "executor_version": "v1",
        "executor_display_name": "Create a portfolio",
        "executor_description": "Creates a new portfolio in the given workspace with the supplied name.",
        "executor_category": "Portfolios",
        "executor_category_group": "Portfolios",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/portfolios",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "name": "Bug Portfolio",
                    "color": "light-green",
                    "workspace": "167589",
                    "public": false
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686896507888,
        "lastModifiedTime": 1686896507888,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully created portfolio.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Bug Portfolio",
                        "color": "light-green",
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "created_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "custom_field_settings": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "project": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "is_important": false,
                                "parent": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "custom_field": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Status",
                                    "resource_subtype": "text",
                                    "type": "text",
                                    "enum_options": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Low",
                                            "enabled": true,
                                            "color": "blue"
                                        }
                                    ],
                                    "enabled": true,
                                    "is_formula_field": false,
                                    "date_value": {
                                        "date": "2024-08-23",
                                        "date_time": "2024-08-23T22:00:00.000Z"
                                    },
                                    "enum_value": {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    },
                                    "multi_enum_values": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Low",
                                            "enabled": true,
                                            "color": "blue"
                                        }
                                    ],
                                    "number_value": 5.2,
                                    "text_value": "Some Value",
                                    "display_value": "blue",
                                    "description": "Development team priority",
                                    "precision": 2,
                                    "format": "custom",
                                    "currency_code": "EUR",
                                    "custom_label": "gold pieces",
                                    "custom_label_position": "suffix",
                                    "is_global_to_workspace": true,
                                    "has_notifications_enabled": true,
                                    "asana_created_field": "priority",
                                    "is_value_read_only": false,
                                    "created_by": {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Greg Sanchez"
                                    },
                                    "people_value": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Greg Sanchez"
                                        }
                                    ]
                                }
                            }
                        ],
                        "current_status_update": {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "resource_subtype": "project_status_update"
                        },
                        "due_on": "2019-09-15",
                        "custom_fields": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Status",
                                "resource_subtype": "text",
                                "type": "text",
                                "enum_options": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "enabled": true,
                                "is_formula_field": false,
                                "date_value": {
                                    "date": "2024-08-23",
                                    "date_time": "2024-08-23T22:00:00.000Z"
                                },
                                "enum_value": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                },
                                "multi_enum_values": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "number_value": 5.2,
                                "text_value": "Some Value",
                                "display_value": "blue"
                            }
                        ],
                        "members": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "owner": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "start_on": "2019-09-14",
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "permalink_url": "https://app.asana.com/0/resource/123456789/list",
                        "public": false,
                        "project_templates": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Packing list"
                            }
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98927,
        "executor_type": "THIRDPARTY",
        "executor_name": "getaportfolio",
        "executor_version": "v1",
        "executor_display_name": "Get a portfolio",
        "executor_description": "Returns the complete portfolio record for a single portfolio.",
        "executor_category": "Portfolios",
        "executor_category_group": "Portfolios",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/portfolios/{portfolio_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "portfolio_gid",
                "value": "",
                "description": "Globally unique identifier for the portfolio."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686896746150,
        "lastModifiedTime": 1686896746150,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the requested portfolio.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Bug Portfolio",
                        "color": "light-green",
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "created_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "custom_field_settings": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "project": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "is_important": false,
                                "parent": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "custom_field": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Status",
                                    "resource_subtype": "text",
                                    "type": "text",
                                    "enum_options": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Low",
                                            "enabled": true,
                                            "color": "blue"
                                        }
                                    ],
                                    "enabled": true,
                                    "is_formula_field": false,
                                    "date_value": {
                                        "date": "2024-08-23",
                                        "date_time": "2024-08-23T22:00:00.000Z"
                                    },
                                    "enum_value": {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    },
                                    "multi_enum_values": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Low",
                                            "enabled": true,
                                            "color": "blue"
                                        }
                                    ],
                                    "number_value": 5.2,
                                    "text_value": "Some Value",
                                    "display_value": "blue",
                                    "description": "Development team priority",
                                    "precision": 2,
                                    "format": "custom",
                                    "currency_code": "EUR",
                                    "custom_label": "gold pieces",
                                    "custom_label_position": "suffix",
                                    "is_global_to_workspace": true,
                                    "has_notifications_enabled": true,
                                    "asana_created_field": "priority",
                                    "is_value_read_only": false,
                                    "created_by": {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Greg Sanchez"
                                    },
                                    "people_value": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Greg Sanchez"
                                        }
                                    ]
                                }
                            }
                        ],
                        "current_status_update": {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "resource_subtype": "project_status_update"
                        },
                        "due_on": "2019-09-15",
                        "custom_fields": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Status",
                                "resource_subtype": "text",
                                "type": "text",
                                "enum_options": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "enabled": true,
                                "is_formula_field": false,
                                "date_value": {
                                    "date": "2024-08-23",
                                    "date_time": "2024-08-23T22:00:00.000Z"
                                },
                                "enum_value": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                },
                                "multi_enum_values": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "number_value": 5.2,
                                "text_value": "Some Value",
                                "display_value": "blue"
                            }
                        ],
                        "members": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "owner": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "start_on": "2019-09-14",
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "permalink_url": "https://app.asana.com/0/resource/123456789/list",
                        "public": false,
                        "project_templates": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Packing list"
                            }
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98929,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaPortfolio",
        "executor_version": "v1",
        "executor_display_name": "Delete a portfolio",
        "executor_description": "An existing portfolio can be deleted by making a DELETE request on the URL for that portfolio.  Returns an empty data record.",
        "executor_category": "Portfolios",
        "executor_category_group": "Portfolios",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://app.asana.com/api/1.0/portfolios/{portfolio_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "portfolio_gid",
                "value": "",
                "description": "Globally unique identifier for the portfolio."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686897432273,
        "lastModifiedTime": 1686897432273,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully deleted the specified portfolio.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98956,
        "executor_type": "THIRDPARTY",
        "executor_name": "removeusersfromaportfolio",
        "executor_version": "v1",
        "executor_display_name": "Remove users from a portfolio",
        "executor_description": "Removes the specified list of users from members of the portfolio. Returns the updated portfolio record.",
        "executor_category": "Portfolios",
        "executor_category_group": "Portfolios",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/portfolios/{portfolio_gid}/removeMembers",
        "dataroot": null,
        "pathParams": [
            {
                "key": "portfolio_gid",
                "value": "",
                "description": "Globally unique identifier for the portfolio."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "members": "521621,621373"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686899989656,
        "lastModifiedTime": 1686899989656,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully removed the members from the portfolio.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Bug Portfolio",
                        "color": "light-green",
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "created_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "custom_field_settings": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "project": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "is_important": false,
                                "parent": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "custom_field": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Status",
                                    "resource_subtype": "text",
                                    "type": "text",
                                    "enum_options": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Low",
                                            "enabled": true,
                                            "color": "blue"
                                        }
                                    ],
                                    "enabled": true,
                                    "is_formula_field": false,
                                    "date_value": {
                                        "date": "2024-08-23",
                                        "date_time": "2024-08-23T22:00:00.000Z"
                                    },
                                    "enum_value": {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    },
                                    "multi_enum_values": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Low",
                                            "enabled": true,
                                            "color": "blue"
                                        }
                                    ],
                                    "number_value": 5.2,
                                    "text_value": "Some Value",
                                    "display_value": "blue",
                                    "description": "Development team priority",
                                    "precision": 2,
                                    "format": "custom",
                                    "currency_code": "EUR",
                                    "custom_label": "gold pieces",
                                    "custom_label_position": "suffix",
                                    "is_global_to_workspace": true,
                                    "has_notifications_enabled": true,
                                    "asana_created_field": "priority",
                                    "is_value_read_only": false,
                                    "created_by": {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Greg Sanchez"
                                    },
                                    "people_value": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Greg Sanchez"
                                        }
                                    ]
                                }
                            }
                        ],
                        "current_status_update": {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "resource_subtype": "project_status_update"
                        },
                        "due_on": "2019-09-15",
                        "custom_fields": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Status",
                                "resource_subtype": "text",
                                "type": "text",
                                "enum_options": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "enabled": true,
                                "is_formula_field": false,
                                "date_value": {
                                    "date": "2024-08-23",
                                    "date_time": "2024-08-23T22:00:00.000Z"
                                },
                                "enum_value": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                },
                                "multi_enum_values": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "number_value": 5.2,
                                "text_value": "Some Value",
                                "display_value": "blue"
                            }
                        ],
                        "members": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "owner": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "start_on": "2019-09-14",
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "permalink_url": "https://app.asana.com/0/resource/123456789/list",
                        "public": false,
                        "project_templates": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Packing list"
                            }
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98954,
        "executor_type": "THIRDPARTY",
        "executor_name": "adduserstoaportfolio",
        "executor_version": "v1",
        "executor_display_name": "Add users to a portfolio",
        "executor_description": "Adds the specified list of users as members of the portfolio. Returns the updated portfolio record.",
        "executor_category": "Portfolios",
        "executor_category_group": "Portfolios",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/portfolios/{portfolio_gid}/addMembers",
        "dataroot": null,
        "pathParams": [
            {
                "key": "portfolio_gid",
                "value": "",
                "description": "Globally unique identifier for the portfolio."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "members": "521621,621373"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1686899493718,
        "lastModifiedTime": 1686899838358,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully added members to the portfolio.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Bug Portfolio",
                        "color": "light-green",
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "created_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "custom_field_settings": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "project": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "is_important": false,
                                "parent": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "custom_field": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Status",
                                    "resource_subtype": "text",
                                    "type": "text",
                                    "enum_options": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Low",
                                            "enabled": true,
                                            "color": "blue"
                                        }
                                    ],
                                    "enabled": true,
                                    "is_formula_field": false,
                                    "date_value": {
                                        "date": "2024-08-23",
                                        "date_time": "2024-08-23T22:00:00.000Z"
                                    },
                                    "enum_value": {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    },
                                    "multi_enum_values": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Low",
                                            "enabled": true,
                                            "color": "blue"
                                        }
                                    ],
                                    "number_value": 5.2,
                                    "text_value": "Some Value",
                                    "display_value": "blue",
                                    "description": "Development team priority",
                                    "precision": 2,
                                    "format": "custom",
                                    "currency_code": "EUR",
                                    "custom_label": "gold pieces",
                                    "custom_label_position": "suffix",
                                    "is_global_to_workspace": true,
                                    "has_notifications_enabled": true,
                                    "asana_created_field": "priority",
                                    "is_value_read_only": false,
                                    "created_by": {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Greg Sanchez"
                                    },
                                    "people_value": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Greg Sanchez"
                                        }
                                    ]
                                }
                            }
                        ],
                        "current_status_update": {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "resource_subtype": "project_status_update"
                        },
                        "due_on": "2019-09-15",
                        "custom_fields": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Status",
                                "resource_subtype": "text",
                                "type": "text",
                                "enum_options": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "enabled": true,
                                "is_formula_field": false,
                                "date_value": {
                                    "date": "2024-08-23",
                                    "date_time": "2024-08-23T22:00:00.000Z"
                                },
                                "enum_value": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                },
                                "multi_enum_values": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "number_value": 5.2,
                                "text_value": "Some Value",
                                "display_value": "blue"
                            }
                        ],
                        "members": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "owner": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "start_on": "2019-09-14",
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "permalink_url": "https://app.asana.com/0/resource/123456789/list",
                        "public": false,
                        "project_templates": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Packing list"
                            }
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98950,
        "executor_type": "THIRDPARTY",
        "executor_name": "removeacustomfieldfromaportfolio",
        "executor_version": "v1",
        "executor_display_name": "Remove a custom field from a portfolio",
        "executor_description": "Removes a custom field setting from a portfolio.",
        "executor_category": "Portfolios",
        "executor_category_group": "Portfolios",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/portfolios/{portfolio_gid}/removeCustomFieldSetting",
        "dataroot": null,
        "pathParams": [
            {
                "key": "portfolio_gid",
                "value": "",
                "description": "Globally unique identifier for the portfolio."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "custom_field": "14916"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686899145613,
        "lastModifiedTime": 1686899145613,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully removed the custom field from the portfolio.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98928,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateaportfolio",
        "executor_version": "v1",
        "executor_display_name": "Update a portfolio",
        "executor_description": "An existing portfolio can be updated by making a PUT request on the URL for that portfolio. Only the fields provided in the data block will be updated; any unspecified fields will remain unchanged.  Returns the complete updated portfolio record.",
        "executor_category": "Portfolios",
        "executor_category_group": "Portfolios",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://app.asana.com/api/1.0/portfolios/{portfolio_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "portfolio_gid",
                "value": "",
                "description": "Globally unique identifier for the portfolio."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "name": "Bug Portfolio",
                    "color": "light-green",
                    "workspace": "167589",
                    "public": false
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1686896957030,
        "lastModifiedTime": 1686897100781,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully updated the portfolio.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Bug Portfolio",
                        "color": "light-green",
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "created_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "custom_field_settings": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "project": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "is_important": false,
                                "parent": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "custom_field": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Status",
                                    "resource_subtype": "text",
                                    "type": "text",
                                    "enum_options": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Low",
                                            "enabled": true,
                                            "color": "blue"
                                        }
                                    ],
                                    "enabled": true,
                                    "is_formula_field": false,
                                    "date_value": {
                                        "date": "2024-08-23",
                                        "date_time": "2024-08-23T22:00:00.000Z"
                                    },
                                    "enum_value": {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    },
                                    "multi_enum_values": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Low",
                                            "enabled": true,
                                            "color": "blue"
                                        }
                                    ],
                                    "number_value": 5.2,
                                    "text_value": "Some Value",
                                    "display_value": "blue",
                                    "description": "Development team priority",
                                    "precision": 2,
                                    "format": "custom",
                                    "currency_code": "EUR",
                                    "custom_label": "gold pieces",
                                    "custom_label_position": "suffix",
                                    "is_global_to_workspace": true,
                                    "has_notifications_enabled": true,
                                    "asana_created_field": "priority",
                                    "is_value_read_only": false,
                                    "created_by": {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Greg Sanchez"
                                    },
                                    "people_value": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Greg Sanchez"
                                        }
                                    ]
                                }
                            }
                        ],
                        "current_status_update": {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "resource_subtype": "project_status_update"
                        },
                        "due_on": "2019-09-15",
                        "custom_fields": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Status",
                                "resource_subtype": "text",
                                "type": "text",
                                "enum_options": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "enabled": true,
                                "is_formula_field": false,
                                "date_value": {
                                    "date": "2024-08-23",
                                    "date_time": "2024-08-23T22:00:00.000Z"
                                },
                                "enum_value": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                },
                                "multi_enum_values": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "number_value": 5.2,
                                "text_value": "Some Value",
                                "display_value": "blue"
                            }
                        ],
                        "members": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "owner": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "start_on": "2019-09-14",
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "permalink_url": "https://app.asana.com/0/resource/123456789/list",
                        "public": false,
                        "project_templates": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Packing list"
                            }
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98944,
        "executor_type": "THIRDPARTY",
        "executor_name": "addacustomfieldtoaportfolio",
        "executor_version": "v1",
        "executor_display_name": "Add a custom field to a portfolio",
        "executor_description": "Custom fields are associated with portfolios by way of custom field settings. This method creates a setting for the portfolio.",
        "executor_category": "Portfolios",
        "executor_category_group": "Portfolios",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/portfolios/{portfolio_gid}/addCustomFieldSetting",
        "dataroot": null,
        "pathParams": [
            {
                "key": "portfolio_gid",
                "value": "",
                "description": "Globally unique identifier for the portfolio."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "custom_field": "14916",
                    "is_important": true,
                    "insert_before": "1331",
                    "insert_after": "1331"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686898567133,
        "lastModifiedTime": 1686898567133,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully added the custom field to the portfolio.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "project": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        },
                        "is_important": false,
                        "parent": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        },
                        "custom_field": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Status",
                            "resource_subtype": "text",
                            "type": "text",
                            "enum_options": [
                                {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                }
                            ],
                            "enabled": true,
                            "is_formula_field": false,
                            "date_value": {
                                "date": "2024-08-23",
                                "date_time": "2024-08-23T22:00:00.000Z"
                            },
                            "enum_value": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Low",
                                "enabled": true,
                                "color": "blue"
                            },
                            "multi_enum_values": [
                                {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                }
                            ],
                            "number_value": 5.2,
                            "text_value": "Some Value",
                            "display_value": "blue",
                            "description": "Development team priority",
                            "precision": 2,
                            "format": "custom",
                            "currency_code": "EUR",
                            "custom_label": "gold pieces",
                            "custom_label_position": "suffix",
                            "is_global_to_workspace": true,
                            "has_notifications_enabled": true,
                            "asana_created_field": "priority",
                            "is_value_read_only": false,
                            "created_by": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "people_value": [
                                {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            ]
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98941,
        "executor_type": "THIRDPARTY",
        "executor_name": "removeaportfolioitem",
        "executor_version": "v1",
        "executor_display_name": "Remove a portfolio item",
        "executor_description": "Remove an item from a portfolio. Returns an empty data block.",
        "executor_category": "Portfolios",
        "executor_category_group": "Portfolios",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/portfolios/{portfolio_gid}/removeItem",
        "dataroot": null,
        "pathParams": [
            {
                "key": "portfolio_gid",
                "value": "",
                "description": "Globally unique identifier for the portfolio."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686898349264,
        "lastModifiedTime": 1686898349264,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully removed the item from the portfolio.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98932,
        "executor_type": "THIRDPARTY",
        "executor_name": "getportfolioitems",
        "executor_version": "v1",
        "executor_display_name": "Get portfolio items",
        "executor_description": "Get a list of the items in compact form in a portfolio.",
        "executor_category": "Portfolios",
        "executor_category_group": "Portfolios",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/portfolios/{portfolio_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "portfolio_gid",
                "value": "",
                "description": "Globally unique identifier for the portfolio."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686897778645,
        "lastModifiedTime": 1686897778645,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the requested portfolio's items.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98937,
        "executor_type": "THIRDPARTY",
        "executor_name": "addaportfolioitem",
        "executor_version": "v1",
        "executor_display_name": "Add a portfolio item",
        "executor_description": "Add an item to a portfolio. Returns an empty data block.",
        "executor_category": "Portfolios",
        "executor_category_group": "Portfolios",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/portfolios/{portfolio_gid}/addItem",
        "dataroot": null,
        "pathParams": [
            {
                "key": "portfolio_gid",
                "value": "",
                "description": "Globally unique identifier for the portfolio."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "item": "1331",
                    "insert_before": "1331",
                    "insert_after": "1331"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686898165829,
        "lastModifiedTime": 1686898165829,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully added the item to the portfolio.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98965,
        "executor_type": "THIRDPARTY",
        "executor_name": "getmembershipsfromaproject",
        "executor_version": "v1",
        "executor_display_name": "Get memberships from a project",
        "executor_description": "Returns the compact project membership records for the project.",
        "executor_category": "Projectmemberships",
        "executor_category_group": "Projectmemberships",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/projects/{project_gid}/project_memberships",
        "dataroot": null,
        "pathParams": [
            {
                "key": "project_gid",
                "value": "",
                "description": "Globally unique identifier for the project."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "user",
                "value": "",
                "description": "A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686901504083,
        "lastModifiedTime": 1686901504083,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the requested project's memberships.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "user": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98963,
        "executor_type": "THIRDPARTY",
        "executor_name": "getaprojectmembership",
        "executor_version": "v1",
        "executor_display_name": "Get a project membership",
        "executor_description": "Returns the complete project record for a single project membership.",
        "executor_category": "Projectmemberships",
        "executor_category_group": "Projectmemberships",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/project_memberships/{project_membership_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "project_membership_gid",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686901270505,
        "lastModifiedTime": 1686901270505,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the requested project membership.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "user": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "project": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        },
                        "member": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "write_access": "full_write"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98959,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateaprojectbrief",
        "executor_version": "v1",
        "executor_display_name": "Update a project brief",
        "executor_description": "An existing project brief can be updated by making a PUT request on the URL for that project brief. Only the fields provided in the data block will be updated; any unspecified fields will remain unchanged.  Returns the complete updated project brief record.",
        "executor_category": "Projectbriefs",
        "executor_category_group": "Projectbriefs",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://app.asana.com/api/1.0/project_briefs/{project_brief_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "project_brief_gid",
                "value": "",
                "description": "Globally unique identifier for the project brief."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "title": "Stuff to buy \u2014 Project Brief",
                    "html_text": "<body>This is a <strong>project brief</strong>.</body>",
                    "text": "This is a project brief."
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686900555018,
        "lastModifiedTime": 1686900555018,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully updated the project brief.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "title": "Stuff to buy \u2014 Project Brief",
                        "html_text": "<body>This is a <strong>project brief</strong>.</body>",
                        "text": "This is a project brief.",
                        "permalink_url": "https://app.asana.com/0/11111111/22222222",
                        "project": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98960,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaprojectbrief",
        "executor_version": "v1",
        "executor_display_name": "Delete a project brief",
        "executor_description": "Deletes a specific, existing project brief.  Returns an empty data record.",
        "executor_category": "Projectbriefs",
        "executor_category_group": "Projectbriefs",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://app.asana.com/api/1.0/project_briefs/{project_brief_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "project_brief_gid",
                "value": "",
                "description": "Globally unique identifier for the project brief."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "title": "Stuff to buy \u2014 Project Brief",
                    "html_text": "<body>This is a <strong>project brief</strong>.</body>",
                    "text": "This is a project brief."
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686900682858,
        "lastModifiedTime": 1686900682858,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully deleted the specified project brief.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98962,
        "executor_type": "THIRDPARTY",
        "executor_name": "createaprojectbrief",
        "executor_version": "v1",
        "executor_display_name": "Create a project brief",
        "executor_description": "Creates a new project brief.  Returns the full record of the newly created project brief.",
        "executor_category": "Projectbriefs",
        "executor_category_group": "Projectbriefs",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/projects/{project_gid}/project_briefs",
        "dataroot": null,
        "pathParams": [
            {
                "key": "project_gid",
                "value": "",
                "description": "Globally unique identifier for the project."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "title": "Stuff to buy \u2014 Project Brief",
                    "html_text": "<body>This is a <strong>project brief</strong>.</body>",
                    "text": "This is a project brief."
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686901081023,
        "lastModifiedTime": 1686901081023,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully created a new project brief.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "title": "Stuff to buy \u2014 Project Brief",
                        "html_text": "<body>This is a <strong>project brief</strong>.</body>",
                        "text": "This is a project brief.",
                        "permalink_url": "https://app.asana.com/0/11111111/22222222",
                        "project": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98958,
        "executor_type": "THIRDPARTY",
        "executor_name": "getaprojectbrief",
        "executor_version": "v1",
        "executor_display_name": "Get a project brief",
        "executor_description": "Get the full record for a project brief.",
        "executor_category": "Projectbriefs",
        "executor_category_group": "Projectbriefs",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/project_briefs/{project_brief_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "project_brief_gid",
                "value": "",
                "description": "Globally unique identifier for the project brief."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "members": "521621,621373"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686900385388,
        "lastModifiedTime": 1686900385388,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the record for a project brief.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "title": "Stuff to buy \u2014 Project Brief",
                        "html_text": "<body>This is a <strong>project brief</strong>.</body>",
                        "text": "This is a project brief.",
                        "permalink_url": "https://app.asana.com/0/11111111/22222222",
                        "project": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98975,
        "executor_type": "THIRDPARTY",
        "executor_name": "getmultipleprojecttemplates",
        "executor_version": "v1",
        "executor_display_name": "Get multiple project templates",
        "executor_description": "Returns the compact project template records for all project templates in the given team or workspace.",
        "executor_category": "Projecttemplates",
        "executor_category_group": "Projecttemplates",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/project_templates",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "workspace",
                "value": "",
                "description": "The workspace to filter results on.",
                "req": false
            },
            {
                "key": "team",
                "value": "",
                "description": "The team to filter projects on.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            },
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686902780738,
        "lastModifiedTime": 1686902780738,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the requested team's or workspace's project templates.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Packing list"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98976,
        "executor_type": "THIRDPARTY",
        "executor_name": "getateamsprojecttemplates",
        "executor_version": "v1",
        "executor_display_name": "Get a team's project templates",
        "executor_description": "Returns the compact project template records for all project templates in the team.",
        "executor_category": "Projecttemplates",
        "executor_category_group": "Projecttemplates",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/teams/{team_gid}/project_templates",
        "dataroot": null,
        "pathParams": [
            {
                "key": "team_gid",
                "value": "",
                "description": "Globally unique identifier for the team."
            }
        ],
        "queryParams": [
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            },
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686902960600,
        "lastModifiedTime": 1686902960600,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the requested team's project templates.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Packing list"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98973,
        "executor_type": "THIRDPARTY",
        "executor_name": "getaprojecttemplate",
        "executor_version": "v1",
        "executor_display_name": "Get a project template",
        "executor_description": "Returns the complete project template record for a single project template.",
        "executor_category": "Projecttemplates",
        "executor_category_group": "Projecttemplates",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/project_templates/{project_template_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "project_template_gid",
                "value": "",
                "description": "Globally unique identifier for the project template."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686902560356,
        "lastModifiedTime": 1686902560356,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the requested project template.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Packing list",
                        "description": "These are things we need to pack for a trip.",
                        "html_description": "<body>These are things we need to pack for a trip.</body>",
                        "public": false,
                        "owner": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "team": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Marketing"
                        },
                        "requested_dates": [
                            {
                                "gid": "1",
                                "name": "Start Date",
                                "description": "Choose a start date for your project."
                            }
                        ],
                        "color": "light-green",
                        "requested_roles": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Designer"
                            }
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98978,
        "executor_type": "THIRDPARTY",
        "executor_name": "instantiateaprojectfromaprojecttemplate",
        "executor_version": "v1",
        "executor_display_name": "Instantiate a project from a project template",
        "executor_description": "Creates and returns a job that will asynchronously handle the project instantiation.  To form this request, it is recommended to first make a request to get a project template. Then, from the response, copy the gid from the object in the requested_dates array. This gid should be used in requested_dates to instantiate a project.",
        "executor_category": "Projecttemplates",
        "executor_category_group": "Projecttemplates",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/project_templates/{project_template_gid}/instantiateProject",
        "dataroot": null,
        "pathParams": [
            {
                "key": "project_template_gid",
                "value": "",
                "description": "Globally unique identifier for the project template."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686903131813,
        "lastModifiedTime": 1686903131813,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully created the job to handle project instantiation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "resource_subtype": "duplicate_task",
                        "status": "in_progress",
                        "new_project": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        },
                        "new_task": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        },
                        "new_project_template": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Packing list"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99085,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteastatusupdate",
        "executor_version": "v1",
        "executor_display_name": "Delete a status update",
        "executor_description": "Deletes a specific, existing status update.  Returns an empty data record.",
        "executor_category": "Statusupdates",
        "executor_category_group": "Statusupdates",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://app.asana.com/api/1.0/status_updates/{status_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "status_gid",
                "value": "",
                "description": "The status update to get."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686926827936,
        "lastModifiedTime": 1686926827936,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully deleted the specified status.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99084,
        "executor_type": "THIRDPARTY",
        "executor_name": "getastatusupdate",
        "executor_version": "v1",
        "executor_display_name": "Get a status update",
        "executor_description": "Returns the complete record for a single status update.",
        "executor_category": "Statusupdates",
        "executor_category_group": "Statusupdates",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/status_updates/{status_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "status_gid",
                "value": "",
                "description": "The status update to get."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686926572017,
        "lastModifiedTime": 1686926572017,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully retrieved the specified object's status updates.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "title": "Status Update - Jun 15",
                        "resource_subtype": "project_status_update",
                        "text": "The project is moving forward according to plan...",
                        "html_text": "<body>The project <strong>is</strong> moving forward according to plan...</body>",
                        "status_type": "on_track",
                        "author": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "created_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "hearted": true,
                        "hearts": [
                            {
                                "gid": "12345",
                                "user": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            }
                        ],
                        "liked": true,
                        "likes": [
                            {
                                "gid": "12345",
                                "user": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            }
                        ],
                        "modified_at": "2012-02-22T02:06:58.147Z",
                        "num_hearts": 5,
                        "num_likes": 5,
                        "parent": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99087,
        "executor_type": "THIRDPARTY",
        "executor_name": "createastatusupdate",
        "executor_version": "v1",
        "executor_display_name": "Create a status update",
        "executor_description": "Creates a new status update on an object. Returns the full record of the newly created status update.",
        "executor_category": "Statusupdates",
        "executor_category_group": "Statusupdates",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/status_updates",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "title": "Status Update - Jun 15",
                    "text": "The project is moving forward according to plan...",
                    "html_text": "<body>The project <strong>is</strong> moving forward according to plan...</body>",
                    "status_type": "on_track",
                    "parent": "string"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686927439361,
        "lastModifiedTime": 1686927439361,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully created a new status update.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "title": "Status Update - Jun 15",
                        "resource_subtype": "project_status_update",
                        "text": "The project is moving forward according to plan...",
                        "html_text": "<body>The project <strong>is</strong> moving forward according to plan...</body>",
                        "status_type": "on_track",
                        "author": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "created_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "hearted": true,
                        "hearts": [
                            {
                                "gid": "12345",
                                "user": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            }
                        ],
                        "liked": true,
                        "likes": [
                            {
                                "gid": "12345",
                                "user": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            }
                        ],
                        "modified_at": "2012-02-22T02:06:58.147Z",
                        "num_hearts": 5,
                        "num_likes": 5,
                        "parent": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99086,
        "executor_type": "THIRDPARTY",
        "executor_name": "getstatusupdatesfromanobject",
        "executor_version": "v1",
        "executor_display_name": "Get status updates from an object",
        "executor_description": "Returns the compact status update records for all updates on the object.",
        "executor_category": "Statusupdates",
        "executor_category_group": "Statusupdates",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/status_updates",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "parent",
                "value": "",
                "description": "Globally unique identifier for object to fetch statuses from. Must be a GID for a project, portfolio, or goal.",
                "req": false
            },
            {
                "key": "created_since",
                "value": "",
                "description": "Only return statuses that have been created since the given time.",
                "req": false
            },
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1686927092580,
        "lastModifiedTime": 1686927153512,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully retrieved the specified object's status updates.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "resource_subtype": "project_status_update"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99023,
        "executor_type": "THIRDPARTY",
        "executor_name": "removeacustomfieldfromaproject",
        "executor_version": "v1",
        "executor_display_name": "Remove a custom field from a project",
        "executor_description": "Removes a custom field setting from a project.",
        "executor_category": "Projects",
        "executor_category_group": "Projects",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/projects/{project_gid}/removeCustomFieldSetting",
        "dataroot": null,
        "pathParams": [
            {
                "key": "project_gid",
                "value": "",
                "description": "Globally unique identifier for the project."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "custom_field": "14916"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686912529843,
        "lastModifiedTime": 1686912529843,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully removed the custom field from the project.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99024,
        "executor_type": "THIRDPARTY",
        "executor_name": "gettaskcountofaproject",
        "executor_version": "v1",
        "executor_display_name": "Get task count of a project",
        "executor_description": "Get an object that holds task count fields. All fields are excluded by default. You must opt in using opt_fields to get any information from this endpoint.  This endpoint has an additional rate limit and each field counts especially high against our cost limits.  Milestones are just tasks, so they are included in the num_tasks, num_incomplete_tasks, and num_completed_tasks counts.",
        "executor_category": "Projects",
        "executor_category_group": "Projects",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/projects/{project_gid}/task_counts",
        "dataroot": null,
        "pathParams": [
            {
                "key": "project_gid",
                "value": "",
                "description": "Globally unique identifier for the project."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686912688966,
        "lastModifiedTime": 1686912688966,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully retrieved the requested project's task counts.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "num_tasks": 200,
                        "num_incomplete_tasks": 50,
                        "num_completed_tasks": 150,
                        "num_milestones": 10,
                        "num_incomplete_milestones": 7,
                        "num_completed_milestones": 3
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99027,
        "executor_type": "THIRDPARTY",
        "executor_name": "removeusersfromaproject",
        "executor_version": "v1",
        "executor_display_name": "Remove users from a project",
        "executor_description": "Removes the specified list of users from members of the project. Returns the updated project record.",
        "executor_category": "Projects",
        "executor_category_group": "Projects",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/projects/{project_gid}/removeMembers",
        "dataroot": null,
        "pathParams": [
            {
                "key": "project_gid",
                "value": "",
                "description": "Globally unique identifier for the project."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "members": "521621,621373"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686913007268,
        "lastModifiedTime": 1686913007268,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully removed the members from the project.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Stuff to buy",
                        "archived": false,
                        "color": "light-green",
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "current_status": {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "text": "The project is moving forward according to plan...",
                            "html_text": "<body>The project <strong>is</strong> moving forward according to plan...</body>",
                            "color": "green",
                            "author": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "created_at": "2012-02-22T02:06:58.147Z",
                            "created_by": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "modified_at": "2012-02-22T02:06:58.147Z"
                        },
                        "current_status_update": {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "resource_subtype": "project_status_update"
                        },
                        "custom_field_settings": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "project": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "is_important": false,
                                "parent": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "custom_field": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Status",
                                    "resource_subtype": "text",
                                    "type": "text",
                                    "enum_options": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Low",
                                            "enabled": true,
                                            "color": "blue"
                                        }
                                    ],
                                    "enabled": true,
                                    "is_formula_field": false,
                                    "date_value": {
                                        "date": "2024-08-23",
                                        "date_time": "2024-08-23T22:00:00.000Z"
                                    },
                                    "enum_value": {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    },
                                    "multi_enum_values": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Low",
                                            "enabled": true,
                                            "color": "blue"
                                        }
                                    ],
                                    "number_value": 5.2,
                                    "text_value": "Some Value",
                                    "display_value": "blue",
                                    "description": "Development team priority",
                                    "precision": 2,
                                    "format": "custom",
                                    "currency_code": "EUR",
                                    "custom_label": "gold pieces",
                                    "custom_label_position": "suffix",
                                    "is_global_to_workspace": true,
                                    "has_notifications_enabled": true,
                                    "asana_created_field": "priority",
                                    "is_value_read_only": false,
                                    "created_by": {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Greg Sanchez"
                                    },
                                    "people_value": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Greg Sanchez"
                                        }
                                    ]
                                }
                            }
                        ],
                        "default_view": "calendar",
                        "due_date": "2019-09-15",
                        "due_on": "2019-09-15",
                        "html_notes": "<body>These are things we need to purchase.</body>",
                        "members": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "modified_at": "2012-02-22T02:06:58.147Z",
                        "notes": "These are things we need to purchase.",
                        "public": false,
                        "start_on": "2019-09-14",
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "custom_fields": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Status",
                                "resource_subtype": "text",
                                "type": "text",
                                "enum_options": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "enabled": true,
                                "is_formula_field": false,
                                "date_value": {
                                    "date": "2024-08-23",
                                    "date_time": "2024-08-23T22:00:00.000Z"
                                },
                                "enum_value": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                },
                                "multi_enum_values": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "number_value": 5.2,
                                "text_value": "Some Value",
                                "display_value": "blue"
                            }
                        ],
                        "completed": false,
                        "completed_at": "2012-02-22T02:06:58.147Z",
                        "completed_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "followers": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "owner": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "team": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Marketing"
                        },
                        "icon": "chat_bubbles",
                        "permalink_url": "https://app.asana.com/0/resource/123456789/list",
                        "project_brief": {
                            "gid": "12345",
                            "resource_type": "task"
                        },
                        "created_from_template": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Packing list"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99017,
        "executor_type": "THIRDPARTY",
        "executor_name": "getallprojectsinaworkspace",
        "executor_version": "v1",
        "executor_display_name": "Get all projects in a workspace",
        "executor_description": "Returns the compact project records for all projects in the workspace.",
        "executor_category": "Projects",
        "executor_category_group": "Projects",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/workspaces/{workspace_gid}/projects",
        "dataroot": null,
        "pathParams": [
            {
                "key": "workspace_gid",
                "value": "",
                "description": "Globally unique identifier for the workspace or organization."
            }
        ],
        "queryParams": [
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            },
            {
                "key": "archived",
                "value": "",
                "description": "Only return projects whose archived field takes on the value of this parameter.",
                "req": false
            },
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686911946400,
        "lastModifiedTime": 1686911946400,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the requested workspace's projects.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98982,
        "executor_type": "THIRDPARTY",
        "executor_name": "getmultipleprojects",
        "executor_version": "v1",
        "executor_display_name": "Get multiple projects",
        "executor_description": "Returns the compact project records for some filtered set of projects. Use one or more of the parameters provided to filter the projects returned.",
        "executor_category": "Projects",
        "executor_category_group": "Projects",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/projects",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            },
            {
                "key": "workspace",
                "value": "",
                "description": "The workspace or organization to filter projects on.",
                "req": false
            },
            {
                "key": "team",
                "value": "",
                "description": "The team to filter projects on.",
                "req": false
            },
            {
                "key": "archived",
                "value": "",
                "description": "Only return projects whose archived field takes on the value of this parameter.",
                "req": false
            },
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686903590179,
        "lastModifiedTime": 1686903590179,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved projects.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98983,
        "executor_type": "THIRDPARTY",
        "executor_name": "createaproject",
        "executor_version": "v1",
        "executor_display_name": "Create a project",
        "executor_description": "Create a new project in a workspace or team.  Every project is required to be created in a specific workspace or organization, and this cannot be changed once set. Note that you can use the workspace parameter regardless of whether or not it is an organization.  If the workspace for your project is an organization, you must also supply a team to share the project with.  Returns the full record of the newly created project.",
        "executor_category": "Projects",
        "executor_category_group": "Projects",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/projects",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "current_status": {
                        "color": "green"
                    }
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686903766660,
        "lastModifiedTime": 1686903766660,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully retrieved projects.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Stuff to buy",
                        "archived": false,
                        "color": "light-green",
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "current_status": {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "text": "The project is moving forward according to plan...",
                            "html_text": "<body>The project <strong>is</strong> moving forward according to plan...</body>",
                            "color": "green",
                            "author": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "created_at": "2012-02-22T02:06:58.147Z",
                            "created_by": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "modified_at": "2012-02-22T02:06:58.147Z"
                        },
                        "current_status_update": {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "resource_subtype": "project_status_update"
                        },
                        "custom_field_settings": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "project": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "is_important": false,
                                "parent": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "custom_field": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Status",
                                    "resource_subtype": "text",
                                    "type": "text",
                                    "enum_options": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Low",
                                            "enabled": true,
                                            "color": "blue"
                                        }
                                    ],
                                    "enabled": true,
                                    "is_formula_field": false,
                                    "date_value": {
                                        "date": "2024-08-23",
                                        "date_time": "2024-08-23T22:00:00.000Z"
                                    },
                                    "enum_value": {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    },
                                    "multi_enum_values": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Low",
                                            "enabled": true,
                                            "color": "blue"
                                        }
                                    ],
                                    "number_value": 5.2,
                                    "text_value": "Some Value",
                                    "display_value": "blue",
                                    "description": "Development team priority",
                                    "precision": 2,
                                    "format": "custom",
                                    "currency_code": "EUR",
                                    "custom_label": "gold pieces",
                                    "custom_label_position": "suffix",
                                    "is_global_to_workspace": true,
                                    "has_notifications_enabled": true,
                                    "asana_created_field": "priority",
                                    "is_value_read_only": false,
                                    "created_by": {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Greg Sanchez"
                                    },
                                    "people_value": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Greg Sanchez"
                                        }
                                    ]
                                }
                            }
                        ],
                        "default_view": "calendar",
                        "due_date": "2019-09-15",
                        "due_on": "2019-09-15",
                        "html_notes": "<body>These are things we need to purchase.</body>",
                        "members": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "modified_at": "2012-02-22T02:06:58.147Z",
                        "notes": "These are things we need to purchase.",
                        "public": false,
                        "start_on": "2019-09-14",
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "custom_fields": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Status",
                                "resource_subtype": "text",
                                "type": "text",
                                "enum_options": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "enabled": true,
                                "is_formula_field": false,
                                "date_value": {
                                    "date": "2024-08-23",
                                    "date_time": "2024-08-23T22:00:00.000Z"
                                },
                                "enum_value": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                },
                                "multi_enum_values": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "number_value": 5.2,
                                "text_value": "Some Value",
                                "display_value": "blue"
                            }
                        ],
                        "completed": false,
                        "completed_at": "2012-02-22T02:06:58.147Z",
                        "completed_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "followers": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "owner": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "team": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Marketing"
                        },
                        "icon": "chat_bubbles",
                        "permalink_url": "https://app.asana.com/0/resource/123456789/list",
                        "project_brief": {
                            "gid": "12345",
                            "resource_type": "task"
                        },
                        "created_from_template": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Packing list"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98985,
        "executor_type": "THIRDPARTY",
        "executor_name": "getaproject",
        "executor_version": "v1",
        "executor_display_name": "Get a project",
        "executor_description": "Returns the complete project record for a single project.",
        "executor_category": "Projects",
        "executor_category_group": "Projects",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/projects/{project_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "project_gid",
                "value": "",
                "description": "Globally unique identifier for the project."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686903912270,
        "lastModifiedTime": 1686903912270,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the requested project.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Stuff to buy",
                        "archived": false,
                        "color": "light-green",
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "current_status": {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "text": "The project is moving forward according to plan...",
                            "html_text": "<body>The project <strong>is</strong> moving forward according to plan...</body>",
                            "color": "green",
                            "author": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "created_at": "2012-02-22T02:06:58.147Z",
                            "created_by": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "modified_at": "2012-02-22T02:06:58.147Z"
                        },
                        "current_status_update": {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "resource_subtype": "project_status_update"
                        },
                        "custom_field_settings": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "project": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "is_important": false,
                                "parent": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "custom_field": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Status",
                                    "resource_subtype": "text",
                                    "type": "text",
                                    "enum_options": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Low",
                                            "enabled": true,
                                            "color": "blue"
                                        }
                                    ],
                                    "enabled": true,
                                    "is_formula_field": false,
                                    "date_value": {
                                        "date": "2024-08-23",
                                        "date_time": "2024-08-23T22:00:00.000Z"
                                    },
                                    "enum_value": {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    },
                                    "multi_enum_values": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Low",
                                            "enabled": true,
                                            "color": "blue"
                                        }
                                    ],
                                    "number_value": 5.2,
                                    "text_value": "Some Value",
                                    "display_value": "blue",
                                    "description": "Development team priority",
                                    "precision": 2,
                                    "format": "custom",
                                    "currency_code": "EUR",
                                    "custom_label": "gold pieces",
                                    "custom_label_position": "suffix",
                                    "is_global_to_workspace": true,
                                    "has_notifications_enabled": true,
                                    "asana_created_field": "priority",
                                    "is_value_read_only": false,
                                    "created_by": {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Greg Sanchez"
                                    },
                                    "people_value": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Greg Sanchez"
                                        }
                                    ]
                                }
                            }
                        ],
                        "default_view": "calendar",
                        "due_date": "2019-09-15",
                        "due_on": "2019-09-15",
                        "html_notes": "<body>These are things we need to purchase.</body>",
                        "members": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "modified_at": "2012-02-22T02:06:58.147Z",
                        "notes": "These are things we need to purchase.",
                        "public": false,
                        "start_on": "2019-09-14",
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "custom_fields": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Status",
                                "resource_subtype": "text",
                                "type": "text",
                                "enum_options": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "enabled": true,
                                "is_formula_field": false,
                                "date_value": {
                                    "date": "2024-08-23",
                                    "date_time": "2024-08-23T22:00:00.000Z"
                                },
                                "enum_value": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                },
                                "multi_enum_values": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "number_value": 5.2,
                                "text_value": "Some Value",
                                "display_value": "blue"
                            }
                        ],
                        "completed": false,
                        "completed_at": "2012-02-22T02:06:58.147Z",
                        "completed_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "followers": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "owner": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "team": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Marketing"
                        },
                        "icon": "chat_bubbles",
                        "permalink_url": "https://app.asana.com/0/resource/123456789/list",
                        "project_brief": {
                            "gid": "12345",
                            "resource_type": "task"
                        },
                        "created_from_template": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Packing list"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99013,
        "executor_type": "THIRDPARTY",
        "executor_name": "getateamsprojects",
        "executor_version": "v1",
        "executor_display_name": "Get a team's projects",
        "executor_description": "Returns the compact project records for all projects in the team.",
        "executor_category": "Projects",
        "executor_category_group": "Projects",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/teams/{team_gid}/projects",
        "dataroot": null,
        "pathParams": [
            {
                "key": "team_gid",
                "value": "",
                "description": "Globally unique identifier for the team."
            }
        ],
        "queryParams": [
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            },
            {
                "key": "archived",
                "value": "",
                "description": "Only return projects whose archived field takes on the value of this parameter.",
                "req": false
            },
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686911516614,
        "lastModifiedTime": 1686911516614,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the requested team's projects.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99030,
        "executor_type": "THIRDPARTY",
        "executor_name": "addfollowerstoaproject",
        "executor_version": "v1",
        "executor_display_name": "Add followers to a project",
        "executor_description": "Adds the specified list of users as followers to the project. Followers are a subset of members who have opted in to receive \"tasks added\" notifications for a project. Therefore, if the users are not already members of the project, they will also become members as a result of this operation. Returns the updated project record.",
        "executor_category": "Projects",
        "executor_category_group": "Projects",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/projects/{project_gid}/addFollowers",
        "dataroot": null,
        "pathParams": [
            {
                "key": "project_gid",
                "value": "",
                "description": "Globally unique identifier for the project."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "followers": "521621,621373"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686913252201,
        "lastModifiedTime": 1686913252201,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully added followers to the project.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Stuff to buy",
                        "archived": false,
                        "color": "light-green",
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "current_status": {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "text": "The project is moving forward according to plan...",
                            "html_text": "<body>The project <strong>is</strong> moving forward according to plan...</body>",
                            "color": "green",
                            "author": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "created_at": "2012-02-22T02:06:58.147Z",
                            "created_by": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "modified_at": "2012-02-22T02:06:58.147Z"
                        },
                        "current_status_update": {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "resource_subtype": "project_status_update"
                        },
                        "custom_field_settings": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "project": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "is_important": false,
                                "parent": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "custom_field": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Status",
                                    "resource_subtype": "text",
                                    "type": "text",
                                    "enum_options": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Low",
                                            "enabled": true,
                                            "color": "blue"
                                        }
                                    ],
                                    "enabled": true,
                                    "is_formula_field": false,
                                    "date_value": {
                                        "date": "2024-08-23",
                                        "date_time": "2024-08-23T22:00:00.000Z"
                                    },
                                    "enum_value": {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    },
                                    "multi_enum_values": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Low",
                                            "enabled": true,
                                            "color": "blue"
                                        }
                                    ],
                                    "number_value": 5.2,
                                    "text_value": "Some Value",
                                    "display_value": "blue",
                                    "description": "Development team priority",
                                    "precision": 2,
                                    "format": "custom",
                                    "currency_code": "EUR",
                                    "custom_label": "gold pieces",
                                    "custom_label_position": "suffix",
                                    "is_global_to_workspace": true,
                                    "has_notifications_enabled": true,
                                    "asana_created_field": "priority",
                                    "is_value_read_only": false,
                                    "created_by": {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Greg Sanchez"
                                    },
                                    "people_value": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Greg Sanchez"
                                        }
                                    ]
                                }
                            }
                        ],
                        "default_view": "calendar",
                        "due_date": "2019-09-15",
                        "due_on": "2019-09-15",
                        "html_notes": "<body>These are things we need to purchase.</body>",
                        "members": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "modified_at": "2012-02-22T02:06:58.147Z",
                        "notes": "These are things we need to purchase.",
                        "public": false,
                        "start_on": "2019-09-14",
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "custom_fields": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Status",
                                "resource_subtype": "text",
                                "type": "text",
                                "enum_options": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "enabled": true,
                                "is_formula_field": false,
                                "date_value": {
                                    "date": "2024-08-23",
                                    "date_time": "2024-08-23T22:00:00.000Z"
                                },
                                "enum_value": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                },
                                "multi_enum_values": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "number_value": 5.2,
                                "text_value": "Some Value",
                                "display_value": "blue"
                            }
                        ],
                        "completed": false,
                        "completed_at": "2012-02-22T02:06:58.147Z",
                        "completed_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "followers": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "owner": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "team": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Marketing"
                        },
                        "icon": "chat_bubbles",
                        "permalink_url": "https://app.asana.com/0/resource/123456789/list",
                        "project_brief": {
                            "gid": "12345",
                            "resource_type": "task"
                        },
                        "created_from_template": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Packing list"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99015,
        "executor_type": "THIRDPARTY",
        "executor_name": "createaprojectinateam",
        "executor_version": "v1",
        "executor_display_name": "Create a project in a team",
        "executor_description": "Creates a project shared with the given team.  Returns the full record of the newly created project.",
        "executor_category": "Projects",
        "executor_category_group": "Projects",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/teams/{team_gid}/projects",
        "dataroot": null,
        "pathParams": [
            {
                "key": "team_gid",
                "value": "",
                "description": "Globally unique identifier for the team."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "name": "Stuff to buy",
                    "archived": false,
                    "color": "light-green",
                    "current_status": {
                        "title": "Status Update - Jun 15",
                        "text": "The project is moving forward according to plan...",
                        "html_text": "<body>The project <strong>is</strong> moving forward according to plan...</body>",
                        "color": "green",
                        "author": {
                            "name": "Greg Sanchez"
                        },
                        "created_by": {
                            "name": "Greg Sanchez"
                        }
                    },
                    "current_status_update": {
                        "title": "Status Update - Jun 15"
                    },
                    "default_view": "calendar",
                    "due_date": "2019-09-15",
                    "due_on": "2019-09-15",
                    "html_notes": "<body>These are things we need to purchase.</body>",
                    "notes": "These are things we need to purchase.",
                    "public": false,
                    "start_on": "2019-09-14",
                    "custom_fields": {
                        "5678904321": "On Hold",
                        "4578152156": "Not Started"
                    },
                    "followers": "12345,23456",
                    "owner": "12345",
                    "team": "12345"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686911684258,
        "lastModifiedTime": 1686911684258,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully created the specified project.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Stuff to buy",
                        "archived": false,
                        "color": "light-green",
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "current_status": {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "text": "The project is moving forward according to plan...",
                            "html_text": "<body>The project <strong>is</strong> moving forward according to plan...</body>",
                            "color": "green",
                            "author": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "created_at": "2012-02-22T02:06:58.147Z",
                            "created_by": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "modified_at": "2012-02-22T02:06:58.147Z"
                        },
                        "current_status_update": {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "resource_subtype": "project_status_update"
                        },
                        "custom_field_settings": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "project": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "is_important": false,
                                "parent": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "custom_field": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Status",
                                    "resource_subtype": "text",
                                    "type": "text",
                                    "enum_options": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Low",
                                            "enabled": true,
                                            "color": "blue"
                                        }
                                    ],
                                    "enabled": true,
                                    "is_formula_field": false,
                                    "date_value": {
                                        "date": "2024-08-23",
                                        "date_time": "2024-08-23T22:00:00.000Z"
                                    },
                                    "enum_value": {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    },
                                    "multi_enum_values": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Low",
                                            "enabled": true,
                                            "color": "blue"
                                        }
                                    ],
                                    "number_value": 5.2,
                                    "text_value": "Some Value",
                                    "display_value": "blue",
                                    "description": "Development team priority",
                                    "precision": 2,
                                    "format": "custom",
                                    "currency_code": "EUR",
                                    "custom_label": "gold pieces",
                                    "custom_label_position": "suffix",
                                    "is_global_to_workspace": true,
                                    "has_notifications_enabled": true,
                                    "asana_created_field": "priority",
                                    "is_value_read_only": false,
                                    "created_by": {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Greg Sanchez"
                                    },
                                    "people_value": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Greg Sanchez"
                                        }
                                    ]
                                }
                            }
                        ],
                        "default_view": "calendar",
                        "due_date": "2019-09-15",
                        "due_on": "2019-09-15",
                        "html_notes": "<body>These are things we need to purchase.</body>",
                        "members": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "modified_at": "2012-02-22T02:06:58.147Z",
                        "notes": "These are things we need to purchase.",
                        "public": false,
                        "start_on": "2019-09-14",
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "custom_fields": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Status",
                                "resource_subtype": "text",
                                "type": "text",
                                "enum_options": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "enabled": true,
                                "is_formula_field": false,
                                "date_value": {
                                    "date": "2024-08-23",
                                    "date_time": "2024-08-23T22:00:00.000Z"
                                },
                                "enum_value": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                },
                                "multi_enum_values": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "number_value": 5.2,
                                "text_value": "Some Value",
                                "display_value": "blue"
                            }
                        ],
                        "completed": false,
                        "completed_at": "2012-02-22T02:06:58.147Z",
                        "completed_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "followers": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "owner": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "team": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Marketing"
                        },
                        "icon": "chat_bubbles",
                        "permalink_url": "https://app.asana.com/0/resource/123456789/list",
                        "project_brief": {
                            "gid": "12345",
                            "resource_type": "task"
                        },
                        "created_from_template": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Packing list"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99033,
        "executor_type": "THIRDPARTY",
        "executor_name": "removefollowersfromaproject",
        "executor_version": "v1",
        "executor_display_name": "Remove followers from a project",
        "executor_description": "Removes the specified list of users from following the project, this will not affect project membership status. Returns the updated project record.",
        "executor_category": "Projects",
        "executor_category_group": "Projects",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/projects/{project_gid}/removeFollowers",
        "dataroot": null,
        "pathParams": [
            {
                "key": "project_gid",
                "value": "",
                "description": "Globally unique identifier for the project."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "followers": "521621,621373"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686913412564,
        "lastModifiedTime": 1686913412564,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully removed followers from the project.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Stuff to buy",
                        "archived": false,
                        "color": "light-green",
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "current_status": {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "text": "The project is moving forward according to plan...",
                            "html_text": "<body>The project <strong>is</strong> moving forward according to plan...</body>",
                            "color": "green",
                            "author": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "created_at": "2012-02-22T02:06:58.147Z",
                            "created_by": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "modified_at": "2012-02-22T02:06:58.147Z"
                        },
                        "current_status_update": {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "resource_subtype": "project_status_update"
                        },
                        "custom_field_settings": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "project": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "is_important": false,
                                "parent": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "custom_field": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Status",
                                    "resource_subtype": "text",
                                    "type": "text",
                                    "enum_options": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Low",
                                            "enabled": true,
                                            "color": "blue"
                                        }
                                    ],
                                    "enabled": true,
                                    "is_formula_field": false,
                                    "date_value": {
                                        "date": "2024-08-23",
                                        "date_time": "2024-08-23T22:00:00.000Z"
                                    },
                                    "enum_value": {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    },
                                    "multi_enum_values": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Low",
                                            "enabled": true,
                                            "color": "blue"
                                        }
                                    ],
                                    "number_value": 5.2,
                                    "text_value": "Some Value",
                                    "display_value": "blue",
                                    "description": "Development team priority",
                                    "precision": 2,
                                    "format": "custom",
                                    "currency_code": "EUR",
                                    "custom_label": "gold pieces",
                                    "custom_label_position": "suffix",
                                    "is_global_to_workspace": true,
                                    "has_notifications_enabled": true,
                                    "asana_created_field": "priority",
                                    "is_value_read_only": false,
                                    "created_by": {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Greg Sanchez"
                                    },
                                    "people_value": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Greg Sanchez"
                                        }
                                    ]
                                }
                            }
                        ],
                        "default_view": "calendar",
                        "due_date": "2019-09-15",
                        "due_on": "2019-09-15",
                        "html_notes": "<body>These are things we need to purchase.</body>",
                        "members": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "modified_at": "2012-02-22T02:06:58.147Z",
                        "notes": "These are things we need to purchase.",
                        "public": false,
                        "start_on": "2019-09-14",
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "custom_fields": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Status",
                                "resource_subtype": "text",
                                "type": "text",
                                "enum_options": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "enabled": true,
                                "is_formula_field": false,
                                "date_value": {
                                    "date": "2024-08-23",
                                    "date_time": "2024-08-23T22:00:00.000Z"
                                },
                                "enum_value": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                },
                                "multi_enum_values": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "number_value": 5.2,
                                "text_value": "Some Value",
                                "display_value": "blue"
                            }
                        ],
                        "completed": false,
                        "completed_at": "2012-02-22T02:06:58.147Z",
                        "completed_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "followers": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "owner": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "team": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Marketing"
                        },
                        "icon": "chat_bubbles",
                        "permalink_url": "https://app.asana.com/0/resource/123456789/list",
                        "project_brief": {
                            "gid": "12345",
                            "resource_type": "task"
                        },
                        "created_from_template": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Packing list"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99025,
        "executor_type": "THIRDPARTY",
        "executor_name": "adduserstoaproject",
        "executor_version": "v1",
        "executor_display_name": "Add users to a project",
        "executor_description": "Adds the specified list of users as members of the project. Note that a user being added as a member may also be added as a follower as a result of this operation. This is because the user's default notification settings (i.e., in the \"Notifcations\" tab of \"My Profile Settings\") will override this endpoint's default behavior of setting \"Tasks added\" notifications to false. Returns the updated project record.",
        "executor_category": "Projects",
        "executor_category_group": "Projects",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/projects/{project_gid}/addMembers",
        "dataroot": null,
        "pathParams": [
            {
                "key": "project_gid",
                "value": "",
                "description": "Globally unique identifier for the project."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "members": "521621,621373"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686912875273,
        "lastModifiedTime": 1686912875273,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully added members to the project.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Stuff to buy",
                        "archived": false,
                        "color": "light-green",
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "current_status": {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "text": "The project is moving forward according to plan...",
                            "html_text": "<body>The project <strong>is</strong> moving forward according to plan...</body>",
                            "color": "green",
                            "author": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "created_at": "2012-02-22T02:06:58.147Z",
                            "created_by": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "modified_at": "2012-02-22T02:06:58.147Z"
                        },
                        "current_status_update": {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "resource_subtype": "project_status_update"
                        },
                        "custom_field_settings": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "project": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "is_important": false,
                                "parent": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "custom_field": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Status",
                                    "resource_subtype": "text",
                                    "type": "text",
                                    "enum_options": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Low",
                                            "enabled": true,
                                            "color": "blue"
                                        }
                                    ],
                                    "enabled": true,
                                    "is_formula_field": false,
                                    "date_value": {
                                        "date": "2024-08-23",
                                        "date_time": "2024-08-23T22:00:00.000Z"
                                    },
                                    "enum_value": {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    },
                                    "multi_enum_values": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Low",
                                            "enabled": true,
                                            "color": "blue"
                                        }
                                    ],
                                    "number_value": 5.2,
                                    "text_value": "Some Value",
                                    "display_value": "blue",
                                    "description": "Development team priority",
                                    "precision": 2,
                                    "format": "custom",
                                    "currency_code": "EUR",
                                    "custom_label": "gold pieces",
                                    "custom_label_position": "suffix",
                                    "is_global_to_workspace": true,
                                    "has_notifications_enabled": true,
                                    "asana_created_field": "priority",
                                    "is_value_read_only": false,
                                    "created_by": {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Greg Sanchez"
                                    },
                                    "people_value": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Greg Sanchez"
                                        }
                                    ]
                                }
                            }
                        ],
                        "default_view": "calendar",
                        "due_date": "2019-09-15",
                        "due_on": "2019-09-15",
                        "html_notes": "<body>These are things we need to purchase.</body>",
                        "members": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "modified_at": "2012-02-22T02:06:58.147Z",
                        "notes": "These are things we need to purchase.",
                        "public": false,
                        "start_on": "2019-09-14",
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "custom_fields": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Status",
                                "resource_subtype": "text",
                                "type": "text",
                                "enum_options": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "enabled": true,
                                "is_formula_field": false,
                                "date_value": {
                                    "date": "2024-08-23",
                                    "date_time": "2024-08-23T22:00:00.000Z"
                                },
                                "enum_value": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                },
                                "multi_enum_values": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "number_value": 5.2,
                                "text_value": "Some Value",
                                "display_value": "blue"
                            }
                        ],
                        "completed": false,
                        "completed_at": "2012-02-22T02:06:58.147Z",
                        "completed_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "followers": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "owner": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "team": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Marketing"
                        },
                        "icon": "chat_bubbles",
                        "permalink_url": "https://app.asana.com/0/resource/123456789/list",
                        "project_brief": {
                            "gid": "12345",
                            "resource_type": "task"
                        },
                        "created_from_template": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Packing list"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98987,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateaProject",
        "executor_version": "v1",
        "executor_display_name": "Update a project",
        "executor_description": "A specific, existing project can be updated by making a PUT request on the URL for that project. Only the fields provided in the data block will be updated; any unspecified fields will remain unchanged.  When using this method, it is best to specify only those fields you wish to change, or else you may overwrite changes made by another user since you last retrieved the task.  Returns the complete updated project record.",
        "executor_category": "Projects",
        "executor_category_group": "Projects",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://app.asana.com/api/1.0/projects/{project_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "project_gid",
                "value": "",
                "description": "Globally unique identifier for the project."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "current_status": {
                        "color": "green"
                    }
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686904080549,
        "lastModifiedTime": 1686904080549,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully updated the project.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Stuff to buy",
                        "archived": false,
                        "color": "light-green",
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "current_status": {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "text": "The project is moving forward according to plan...",
                            "html_text": "<body>The project <strong>is</strong> moving forward according to plan...</body>",
                            "color": "green",
                            "author": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "created_at": "2012-02-22T02:06:58.147Z",
                            "created_by": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "modified_at": "2012-02-22T02:06:58.147Z"
                        },
                        "current_status_update": {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "resource_subtype": "project_status_update"
                        },
                        "custom_field_settings": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "project": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "is_important": false,
                                "parent": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "custom_field": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Status",
                                    "resource_subtype": "text",
                                    "type": "text",
                                    "enum_options": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Low",
                                            "enabled": true,
                                            "color": "blue"
                                        }
                                    ],
                                    "enabled": true,
                                    "is_formula_field": false,
                                    "date_value": {
                                        "date": "2024-08-23",
                                        "date_time": "2024-08-23T22:00:00.000Z"
                                    },
                                    "enum_value": {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    },
                                    "multi_enum_values": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Low",
                                            "enabled": true,
                                            "color": "blue"
                                        }
                                    ],
                                    "number_value": 5.2,
                                    "text_value": "Some Value",
                                    "display_value": "blue",
                                    "description": "Development team priority",
                                    "precision": 2,
                                    "format": "custom",
                                    "currency_code": "EUR",
                                    "custom_label": "gold pieces",
                                    "custom_label_position": "suffix",
                                    "is_global_to_workspace": true,
                                    "has_notifications_enabled": true,
                                    "asana_created_field": "priority",
                                    "is_value_read_only": false,
                                    "created_by": {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Greg Sanchez"
                                    },
                                    "people_value": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Greg Sanchez"
                                        }
                                    ]
                                }
                            }
                        ],
                        "default_view": "calendar",
                        "due_date": "2019-09-15",
                        "due_on": "2019-09-15",
                        "html_notes": "<body>These are things we need to purchase.</body>",
                        "members": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "modified_at": "2012-02-22T02:06:58.147Z",
                        "notes": "These are things we need to purchase.",
                        "public": false,
                        "start_on": "2019-09-14",
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "custom_fields": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Status",
                                "resource_subtype": "text",
                                "type": "text",
                                "enum_options": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "enabled": true,
                                "is_formula_field": false,
                                "date_value": {
                                    "date": "2024-08-23",
                                    "date_time": "2024-08-23T22:00:00.000Z"
                                },
                                "enum_value": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                },
                                "multi_enum_values": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "number_value": 5.2,
                                "text_value": "Some Value",
                                "display_value": "blue"
                            }
                        ],
                        "completed": false,
                        "completed_at": "2012-02-22T02:06:58.147Z",
                        "completed_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "followers": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "owner": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "team": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Marketing"
                        },
                        "icon": "chat_bubbles",
                        "permalink_url": "https://app.asana.com/0/resource/123456789/list",
                        "project_brief": {
                            "gid": "12345",
                            "resource_type": "task"
                        },
                        "created_from_template": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Packing list"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98990,
        "executor_type": "THIRDPARTY",
        "executor_name": "duplicateaproject",
        "executor_version": "v1",
        "executor_display_name": "Duplicate a project",
        "executor_description": "Creates and returns a job that will asynchronously handle the duplication.",
        "executor_category": "Projects",
        "executor_category_group": "Projects",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/projects/{project_gid}/duplicate",
        "dataroot": null,
        "pathParams": [
            {
                "key": "project_gid",
                "value": "",
                "description": "Globally unique identifier for the project."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "schedule_dates": {
                        "should_skip_weekends": true
                    }
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686904454686,
        "lastModifiedTime": 1686904454686,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully created the job to handle duplication.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "resource_subtype": "duplicate_task",
                        "status": "in_progress",
                        "new_project": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        },
                        "new_task": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        },
                        "new_project_template": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Packing list"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98991,
        "executor_type": "THIRDPARTY",
        "executor_name": "getprojectsataskisin",
        "executor_version": "v1",
        "executor_display_name": "Get projects a task is in",
        "executor_description": "Returns a compact representation of all of the projects the task is in.",
        "executor_category": "Projects",
        "executor_category_group": "Projects",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/tasks/{task_gid}/projects",
        "dataroot": null,
        "pathParams": [
            {
                "key": "task_gid",
                "value": "",
                "description": "The task to operate on."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686904631151,
        "lastModifiedTime": 1686904631151,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the projects for the given task.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99021,
        "executor_type": "THIRDPARTY",
        "executor_name": "addacustomfieldtoaproject",
        "executor_version": "v1",
        "executor_display_name": "Add a custom field to a project",
        "executor_description": "Custom fields are associated with projects by way of custom field settings. This method creates a setting for the project.",
        "executor_category": "Projects",
        "executor_category_group": "Projects",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/projects/{project_gid}/addCustomFieldSetting",
        "dataroot": null,
        "pathParams": [
            {
                "key": "project_gid",
                "value": "",
                "description": "Globally unique identifier for the project."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "custom_field": "14916",
                    "is_important": true,
                    "insert_before": "1331",
                    "insert_after": "1331"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686912320466,
        "lastModifiedTime": 1686912320466,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully added the custom field to the project.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "project": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        },
                        "is_important": false,
                        "parent": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        },
                        "custom_field": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Status",
                            "resource_subtype": "text",
                            "type": "text",
                            "enum_options": [
                                {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                }
                            ],
                            "enabled": true,
                            "is_formula_field": false,
                            "date_value": {
                                "date": "2024-08-23",
                                "date_time": "2024-08-23T22:00:00.000Z"
                            },
                            "enum_value": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Low",
                                "enabled": true,
                                "color": "blue"
                            },
                            "multi_enum_values": [
                                {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                }
                            ],
                            "number_value": 5.2,
                            "text_value": "Some Value",
                            "display_value": "blue",
                            "description": "Development team priority",
                            "precision": 2,
                            "format": "custom",
                            "currency_code": "EUR",
                            "custom_label": "gold pieces",
                            "custom_label_position": "suffix",
                            "is_global_to_workspace": true,
                            "has_notifications_enabled": true,
                            "asana_created_field": "priority",
                            "is_value_read_only": false,
                            "created_by": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "people_value": [
                                {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            ]
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99036,
        "executor_type": "THIRDPARTY",
        "executor_name": "createaprojecttemplatefromaproject",
        "executor_version": "v1",
        "executor_display_name": "Create a project template from a project",
        "executor_description": "Creates and returns a job that will asynchronously handle the project template creation. Note that while the resulting project template can be accessed with the API, it won't be visible in the Asana UI until Project Templates 2.0 is launched in the app.",
        "executor_category": "Projects",
        "executor_category_group": "Projects",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/projects/{project_gid}/saveAsTemplate",
        "dataroot": null,
        "pathParams": [
            {
                "key": "project_gid",
                "value": "",
                "description": "Globally unique identifier for the project."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "public": true
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686913626613,
        "lastModifiedTime": 1686913626613,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully created the job to handle project template creation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "resource_subtype": "duplicate_task",
                        "status": "in_progress",
                        "new_project": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        },
                        "new_task": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        },
                        "new_project_template": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Packing list"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98988,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaprojects",
        "executor_version": "v1",
        "executor_display_name": "Delete a project",
        "executor_description": "A specific, existing project can be deleted by making a DELETE request on the URL for that project.  Returns an empty data record.",
        "executor_category": "Projects",
        "executor_category_group": "Projects",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://app.asana.com/api/1.0/projects/{project_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "project_gid",
                "value": "",
                "description": "Globally unique identifier for the project."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686904243772,
        "lastModifiedTime": 1686904243772,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully deleted the specified project.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99018,
        "executor_type": "THIRDPARTY",
        "executor_name": "createaprojectinaworkspace",
        "executor_version": "v1",
        "executor_display_name": "Create a project in a workspace",
        "executor_description": "Creates a project in the workspace.  If the workspace for your project is an organization, you must also supply a team to share the project with.  Returns the full record of the newly created project.",
        "executor_category": "Projects",
        "executor_category_group": "Projects",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/workspaces/{workspace_gid}/projects",
        "dataroot": null,
        "pathParams": [
            {
                "key": "workspace_gid",
                "value": "",
                "description": "Globally unique identifier for the workspace or organization."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "name": "Stuff to buy",
                    "archived": false,
                    "color": "light-green",
                    "current_status": {
                        "title": "Status Update - Jun 15",
                        "text": "The project is moving forward according to plan...",
                        "html_text": "<body>The project <strong>is</strong> moving forward according to plan...</body>",
                        "color": "green",
                        "author": {
                            "name": "Greg Sanchez"
                        },
                        "created_by": {
                            "name": "Greg Sanchez"
                        }
                    },
                    "current_status_update": {
                        "title": "Status Update - Jun 15"
                    },
                    "default_view": "calendar",
                    "due_date": "2019-09-15",
                    "due_on": "2019-09-15",
                    "html_notes": "<body>These are things we need to purchase.</body>",
                    "notes": "These are things we need to purchase.",
                    "public": false,
                    "start_on": "2019-09-14",
                    "custom_fields": {
                        "5678904321": "On Hold",
                        "4578152156": "Not Started"
                    },
                    "followers": "12345,23456",
                    "owner": "12345",
                    "team": "12345"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686912091574,
        "lastModifiedTime": 1686912091574,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully created a new project in the specified workspace.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Stuff to buy",
                        "archived": false,
                        "color": "light-green",
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "current_status": {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "text": "The project is moving forward according to plan...",
                            "html_text": "<body>The project <strong>is</strong> moving forward according to plan...</body>",
                            "color": "green",
                            "author": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "created_at": "2012-02-22T02:06:58.147Z",
                            "created_by": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "modified_at": "2012-02-22T02:06:58.147Z"
                        },
                        "current_status_update": {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15",
                            "resource_subtype": "project_status_update"
                        },
                        "custom_field_settings": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "project": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "is_important": false,
                                "parent": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "custom_field": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Status",
                                    "resource_subtype": "text",
                                    "type": "text",
                                    "enum_options": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Low",
                                            "enabled": true,
                                            "color": "blue"
                                        }
                                    ],
                                    "enabled": true,
                                    "is_formula_field": false,
                                    "date_value": {
                                        "date": "2024-08-23",
                                        "date_time": "2024-08-23T22:00:00.000Z"
                                    },
                                    "enum_value": {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    },
                                    "multi_enum_values": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Low",
                                            "enabled": true,
                                            "color": "blue"
                                        }
                                    ],
                                    "number_value": 5.2,
                                    "text_value": "Some Value",
                                    "display_value": "blue",
                                    "description": "Development team priority",
                                    "precision": 2,
                                    "format": "custom",
                                    "currency_code": "EUR",
                                    "custom_label": "gold pieces",
                                    "custom_label_position": "suffix",
                                    "is_global_to_workspace": true,
                                    "has_notifications_enabled": true,
                                    "asana_created_field": "priority",
                                    "is_value_read_only": false,
                                    "created_by": {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Greg Sanchez"
                                    },
                                    "people_value": [
                                        {
                                            "gid": "12345",
                                            "resource_type": "task",
                                            "name": "Greg Sanchez"
                                        }
                                    ]
                                }
                            }
                        ],
                        "default_view": "calendar",
                        "due_date": "2019-09-15",
                        "due_on": "2019-09-15",
                        "html_notes": "<body>These are things we need to purchase.</body>",
                        "members": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "modified_at": "2012-02-22T02:06:58.147Z",
                        "notes": "These are things we need to purchase.",
                        "public": false,
                        "start_on": "2019-09-14",
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "custom_fields": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Status",
                                "resource_subtype": "text",
                                "type": "text",
                                "enum_options": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "enabled": true,
                                "is_formula_field": false,
                                "date_value": {
                                    "date": "2024-08-23",
                                    "date_time": "2024-08-23T22:00:00.000Z"
                                },
                                "enum_value": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                },
                                "multi_enum_values": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "number_value": 5.2,
                                "text_value": "Some Value",
                                "display_value": "blue"
                            }
                        ],
                        "completed": false,
                        "completed_at": "2012-02-22T02:06:58.147Z",
                        "completed_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "followers": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "owner": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "team": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Marketing"
                        },
                        "icon": "chat_bubbles",
                        "permalink_url": "https://app.asana.com/0/resource/123456789/list",
                        "project_brief": {
                            "gid": "12345",
                            "resource_type": "task"
                        },
                        "created_from_template": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Packing list"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99090,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteastory",
        "executor_version": "v1",
        "executor_display_name": "Delete a story",
        "executor_description": "Deletes a story. A user can only delete stories they have created.  Returns an empty data record.",
        "executor_category": "Stories",
        "executor_category_group": "Stories",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://app.asana.com/api/1.0/stories/{story_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "story_gid",
                "value": "",
                "description": "Globally unique identifier for the story."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686928240526,
        "lastModifiedTime": 1686928240526,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully deleted the specified story.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99089,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateastory",
        "executor_version": "v1",
        "executor_display_name": "Update a story",
        "executor_description": "Updates the story and returns the full record for the updated story. Only comment stories can have their text updated, and only comment stories and attachment stories can be pinned. Only one of text and html_text can be specified.",
        "executor_category": "Stories",
        "executor_category_group": "Stories",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://app.asana.com/api/1.0/stories/{story_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "story_gid",
                "value": "",
                "description": "Globally unique identifier for the story."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "text": "This is a comment.",
                    "html_text": "<body>This is a comment.</body>",
                    "is_pinned": false,
                    "sticker_name": "dancing_unicorn"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686928058318,
        "lastModifiedTime": 1686928058318,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the specified story.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "resource_subtype": "comment_added",
                        "text": "This is a comment.",
                        "html_text": "<body>This is a comment.</body>",
                        "is_pinned": false,
                        "sticker_name": "dancing_unicorn",
                        "created_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "type": "comment",
                        "is_editable": false,
                        "is_edited": false,
                        "hearted": false,
                        "hearts": [
                            {
                                "gid": "12345",
                                "user": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            }
                        ],
                        "num_hearts": 5,
                        "liked": false,
                        "likes": [
                            {
                                "gid": "12345",
                                "user": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            }
                        ],
                        "num_likes": 5,
                        "previews": [
                            {
                                "fallback": "Greg: Great! I like this idea.\\n\\nhttps//a_company.slack.com/archives/ABCDEFG/12345678",
                                "footer": "Mar 17, 2019 1:25 PM",
                                "header": "Asana for Slack",
                                "header_link": "https://asana.comn/apps/slack",
                                "html_text": "<body>Great! I like this idea.</body>",
                                "text": "Great! I like this idea.",
                                "title": "Greg",
                                "title_link": "https://asana.slack.com/archives/ABCDEFG/12345678"
                            }
                        ],
                        "old_name": "This was the Old Name",
                        "new_name": "This is the New Name",
                        "old_dates": {
                            "start_on": "2019-09-14",
                            "due_at": "2019-09-15T02:06:58.158Z",
                            "due_on": "2019-09-15"
                        },
                        "new_dates": {
                            "start_on": "2019-09-14",
                            "due_at": "2019-09-15T02:06:58.158Z",
                            "due_on": "2019-09-15"
                        },
                        "old_resource_subtype": "default_task",
                        "new_resource_subtype": "milestone",
                        "story": {
                            "gid": "12345",
                            "resource_type": "task",
                            "created_at": "2012-02-22T02:06:58.147Z",
                            "created_by": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "resource_subtype": "comment_added",
                            "text": "marked today"
                        },
                        "assignee": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "follower": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "old_section": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Next Actions"
                        },
                        "new_section": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Next Actions"
                        },
                        "task": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        },
                        "project": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        },
                        "tag": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        },
                        "custom_field": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Status",
                            "resource_subtype": "text",
                            "type": "text",
                            "enum_options": [
                                {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                }
                            ],
                            "enabled": true,
                            "is_formula_field": false,
                            "date_value": {
                                "date": "2024-08-23",
                                "date_time": "2024-08-23T22:00:00.000Z"
                            },
                            "enum_value": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Low",
                                "enabled": true,
                                "color": "blue"
                            },
                            "multi_enum_values": [
                                {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                }
                            ],
                            "number_value": 5.2,
                            "text_value": "Some Value",
                            "display_value": "blue"
                        },
                        "old_text_value": "This was the Old Text",
                        "new_text_value": "This is the New Text",
                        "old_number_value": 1,
                        "new_number_value": 2,
                        "old_enum_value": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Low",
                            "enabled": true,
                            "color": "blue"
                        },
                        "new_enum_value": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Low",
                            "enabled": true,
                            "color": "blue"
                        },
                        "old_date_value": {
                            "start_on": "2019-09-14",
                            "due_at": "2019-09-15T02:06:58.158Z",
                            "due_on": "2019-09-15"
                        },
                        "new_date_value": {
                            "start_on": "2019-09-14",
                            "due_at": "2019-09-15T02:06:58.158Z",
                            "due_on": "2019-09-15"
                        },
                        "old_people_value": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "new_people_value": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "old_multi_enum_values": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Low",
                                "enabled": true,
                                "color": "blue"
                            }
                        ],
                        "new_multi_enum_values": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Low",
                                "enabled": true,
                                "color": "blue"
                            }
                        ],
                        "new_approval_status": "approved",
                        "old_approval_status": "pending",
                        "duplicate_of": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        },
                        "duplicated_from": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        },
                        "dependency": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        },
                        "source": "web",
                        "target": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99091,
        "executor_type": "THIRDPARTY",
        "executor_name": "getstoriesfromatask",
        "executor_version": "v1",
        "executor_display_name": "Get stories from a task",
        "executor_description": "Returns the compact records for all stories on the task.",
        "executor_category": "Stories",
        "executor_category_group": "Stories",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/tasks/{task_gid}/stories",
        "dataroot": null,
        "pathParams": [
            {
                "key": "task_gid",
                "value": "",
                "description": "The task to operate on."
            }
        ],
        "queryParams": [
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            },
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686928389261,
        "lastModifiedTime": 1686928389261,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the specified task's stories.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "created_at": "2012-02-22T02:06:58.147Z",
                            "created_by": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "resource_subtype": "comment_added",
                            "text": "marked today"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99092,
        "executor_type": "THIRDPARTY",
        "executor_name": "createastoryonatask",
        "executor_version": "v1",
        "executor_display_name": "Create a story on a task",
        "executor_description": "Adds a story to a task. This endpoint currently only allows for comment stories to be created. The comment will be authored by the currently authenticated user, and timestamped when the server receives the request.  Returns the full record for the new story added to the task.",
        "executor_category": "Stories",
        "executor_category_group": "Stories",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/tasks/{task_gid}/stories",
        "dataroot": null,
        "pathParams": [
            {
                "key": "task_gid",
                "value": "",
                "description": "The task to operate on."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "text": "This is a comment.",
                    "html_text": "<body>This is a comment.</body>",
                    "is_pinned": false,
                    "sticker_name": "dancing_unicorn"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686928508518,
        "lastModifiedTime": 1686928508518,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully created a new story.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "resource_subtype": "comment_added",
                        "text": "This is a comment.",
                        "html_text": "<body>This is a comment.</body>",
                        "is_pinned": false,
                        "sticker_name": "dancing_unicorn",
                        "created_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "type": "comment",
                        "is_editable": false,
                        "is_edited": false,
                        "hearted": false,
                        "hearts": [
                            {
                                "gid": "12345",
                                "user": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            }
                        ],
                        "num_hearts": 5,
                        "liked": false,
                        "likes": [
                            {
                                "gid": "12345",
                                "user": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            }
                        ],
                        "num_likes": 5,
                        "previews": [
                            {
                                "fallback": "Greg: Great! I like this idea.\\n\\nhttps//a_company.slack.com/archives/ABCDEFG/12345678",
                                "footer": "Mar 17, 2019 1:25 PM",
                                "header": "Asana for Slack",
                                "header_link": "https://asana.comn/apps/slack",
                                "html_text": "<body>Great! I like this idea.</body>",
                                "text": "Great! I like this idea.",
                                "title": "Greg",
                                "title_link": "https://asana.slack.com/archives/ABCDEFG/12345678"
                            }
                        ],
                        "old_name": "This was the Old Name",
                        "new_name": "This is the New Name",
                        "old_dates": {
                            "start_on": "2019-09-14",
                            "due_at": "2019-09-15T02:06:58.158Z",
                            "due_on": "2019-09-15"
                        },
                        "new_dates": {
                            "start_on": "2019-09-14",
                            "due_at": "2019-09-15T02:06:58.158Z",
                            "due_on": "2019-09-15"
                        },
                        "old_resource_subtype": "default_task",
                        "new_resource_subtype": "milestone",
                        "story": {
                            "gid": "12345",
                            "resource_type": "task",
                            "created_at": "2012-02-22T02:06:58.147Z",
                            "created_by": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "resource_subtype": "comment_added",
                            "text": "marked today"
                        },
                        "assignee": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "follower": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "old_section": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Next Actions"
                        },
                        "new_section": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Next Actions"
                        },
                        "task": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        },
                        "project": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        },
                        "tag": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        },
                        "custom_field": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Status",
                            "resource_subtype": "text",
                            "type": "text",
                            "enum_options": [
                                {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                }
                            ],
                            "enabled": true,
                            "is_formula_field": false,
                            "date_value": {
                                "date": "2024-08-23",
                                "date_time": "2024-08-23T22:00:00.000Z"
                            },
                            "enum_value": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Low",
                                "enabled": true,
                                "color": "blue"
                            },
                            "multi_enum_values": [
                                {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                }
                            ],
                            "number_value": 5.2,
                            "text_value": "Some Value",
                            "display_value": "blue"
                        },
                        "old_text_value": "This was the Old Text",
                        "new_text_value": "This is the New Text",
                        "old_number_value": 1,
                        "new_number_value": 2,
                        "old_enum_value": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Low",
                            "enabled": true,
                            "color": "blue"
                        },
                        "new_enum_value": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Low",
                            "enabled": true,
                            "color": "blue"
                        },
                        "old_date_value": {
                            "start_on": "2019-09-14",
                            "due_at": "2019-09-15T02:06:58.158Z",
                            "due_on": "2019-09-15"
                        },
                        "new_date_value": {
                            "start_on": "2019-09-14",
                            "due_at": "2019-09-15T02:06:58.158Z",
                            "due_on": "2019-09-15"
                        },
                        "old_people_value": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "new_people_value": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "old_multi_enum_values": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Low",
                                "enabled": true,
                                "color": "blue"
                            }
                        ],
                        "new_multi_enum_values": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Low",
                                "enabled": true,
                                "color": "blue"
                            }
                        ],
                        "new_approval_status": "approved",
                        "old_approval_status": "pending",
                        "duplicate_of": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        },
                        "duplicated_from": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        },
                        "dependency": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        },
                        "source": "web",
                        "target": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99088,
        "executor_type": "THIRDPARTY",
        "executor_name": "getastory",
        "executor_version": "v1",
        "executor_display_name": "Get a story",
        "executor_description": "Returns the full record for a single story.",
        "executor_category": "Stories",
        "executor_category_group": "Stories",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/stories/{story_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "story_gid",
                "value": "",
                "description": "Globally unique identifier for the story."
            }
        ],
        "queryParams": [
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            },
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686927806077,
        "lastModifiedTime": 1686927806077,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the specified story.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "resource_subtype": "comment_added",
                        "text": "This is a comment.",
                        "html_text": "<body>This is a comment.</body>",
                        "is_pinned": false,
                        "sticker_name": "dancing_unicorn",
                        "created_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "type": "comment",
                        "is_editable": false,
                        "is_edited": false,
                        "hearted": false,
                        "hearts": [
                            {
                                "gid": "12345",
                                "user": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            }
                        ],
                        "num_hearts": 5,
                        "liked": false,
                        "likes": [
                            {
                                "gid": "12345",
                                "user": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            }
                        ],
                        "num_likes": 5,
                        "previews": [
                            {
                                "fallback": "Greg: Great! I like this idea.\\n\\nhttps//a_company.slack.com/archives/ABCDEFG/12345678",
                                "footer": "Mar 17, 2019 1:25 PM",
                                "header": "Asana for Slack",
                                "header_link": "https://asana.comn/apps/slack",
                                "html_text": "<body>Great! I like this idea.</body>",
                                "text": "Great! I like this idea.",
                                "title": "Greg",
                                "title_link": "https://asana.slack.com/archives/ABCDEFG/12345678"
                            }
                        ],
                        "old_name": "This was the Old Name",
                        "new_name": "This is the New Name",
                        "old_dates": {
                            "start_on": "2019-09-14",
                            "due_at": "2019-09-15T02:06:58.158Z",
                            "due_on": "2019-09-15"
                        },
                        "new_dates": {
                            "start_on": "2019-09-14",
                            "due_at": "2019-09-15T02:06:58.158Z",
                            "due_on": "2019-09-15"
                        },
                        "old_resource_subtype": "default_task",
                        "new_resource_subtype": "milestone",
                        "story": {
                            "gid": "12345",
                            "resource_type": "task",
                            "created_at": "2012-02-22T02:06:58.147Z",
                            "created_by": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "resource_subtype": "comment_added",
                            "text": "marked today"
                        },
                        "assignee": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "follower": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "old_section": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Next Actions"
                        },
                        "new_section": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Next Actions"
                        },
                        "task": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        },
                        "project": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        },
                        "tag": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        },
                        "custom_field": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Status",
                            "resource_subtype": "text",
                            "type": "text",
                            "enum_options": [
                                {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                }
                            ],
                            "enabled": true,
                            "is_formula_field": false,
                            "date_value": {
                                "date": "2024-08-23",
                                "date_time": "2024-08-23T22:00:00.000Z"
                            },
                            "enum_value": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Low",
                                "enabled": true,
                                "color": "blue"
                            },
                            "multi_enum_values": [
                                {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                }
                            ],
                            "number_value": 5.2,
                            "text_value": "Some Value",
                            "display_value": "blue"
                        },
                        "old_text_value": "This was the Old Text",
                        "new_text_value": "This is the New Text",
                        "old_number_value": 1,
                        "new_number_value": 2,
                        "old_enum_value": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Low",
                            "enabled": true,
                            "color": "blue"
                        },
                        "new_enum_value": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Low",
                            "enabled": true,
                            "color": "blue"
                        },
                        "old_date_value": {
                            "start_on": "2019-09-14",
                            "due_at": "2019-09-15T02:06:58.158Z",
                            "due_on": "2019-09-15"
                        },
                        "new_date_value": {
                            "start_on": "2019-09-14",
                            "due_at": "2019-09-15T02:06:58.158Z",
                            "due_on": "2019-09-15"
                        },
                        "old_people_value": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "new_people_value": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "old_multi_enum_values": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Low",
                                "enabled": true,
                                "color": "blue"
                            }
                        ],
                        "new_multi_enum_values": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Low",
                                "enabled": true,
                                "color": "blue"
                            }
                        ],
                        "new_approval_status": "approved",
                        "old_approval_status": "pending",
                        "duplicate_of": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        },
                        "duplicated_from": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        },
                        "dependency": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        },
                        "source": "web",
                        "target": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99097,
        "executor_type": "THIRDPARTY",
        "executor_name": "getmultipletags",
        "executor_version": "v1",
        "executor_display_name": "Get multiple tags",
        "executor_description": "Returns the compact tag records for some filtered set of tags. Use one or more of the parameters provided to filter the tags returned.",
        "executor_category": "Tags",
        "executor_category_group": "Tags",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/tags",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            },
            {
                "key": "workspace",
                "value": "",
                "description": "The workspace to filter tags on.",
                "req": false
            },
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686985746292,
        "lastModifiedTime": 1686985746292,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the specified set of tags.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99103,
        "executor_type": "THIRDPARTY",
        "executor_name": "gettagsinaworkspace",
        "executor_version": "v1",
        "executor_display_name": "Get tags in a workspace",
        "executor_description": "Returns the compact tag records for some filtered set of tags. Use one or more of the parameters provided to filter the tags returned.",
        "executor_category": "Tags",
        "executor_category_group": "Tags",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/workspaces/{workspace_gid}/tags",
        "dataroot": null,
        "pathParams": [
            {
                "key": "workspace_gid",
                "value": "",
                "description": "Globally unique identifier for the workspace or organization."
            }
        ],
        "queryParams": [
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            },
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686987472144,
        "lastModifiedTime": 1686987472144,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the specified set of tags.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99100,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateatag",
        "executor_version": "v1",
        "executor_display_name": "Update a tag",
        "executor_description": "Updates the properties of a tag. Only the fields provided in the data block will be updated; any unspecified fields will remain unchanged.  When using this method, it is best to specify only those fields you wish to change, or else you may overwrite changes made by another user since you last retrieved the tag.  Returns the complete updated tag record.",
        "executor_category": "Tags",
        "executor_category_group": "Tags",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://app.asana.com/api/1.0/tags/{tag_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "tag_gid",
                "value": "",
                "description": "Globally unique identifier for the tag."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686986771105,
        "lastModifiedTime": 1686986771105,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully updated the specified tag.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Stuff to buy",
                        "color": "light-green",
                        "notes": "Mittens really likes the stuff from Humboldt.",
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "followers": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "permalink_url": "https://app.asana.com/0/resource/123456789/list"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99099,
        "executor_type": "THIRDPARTY",
        "executor_name": "getatag",
        "executor_version": "v1",
        "executor_display_name": "Get a tag",
        "executor_description": "Returns the complete tag record for a single tag.",
        "executor_category": "Tags",
        "executor_category_group": "Tags",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/tags/{tag_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "tag_gid",
                "value": "",
                "description": "Globally unique identifier for the tag."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686986631559,
        "lastModifiedTime": 1686986631559,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the specified tag.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Stuff to buy",
                        "color": "light-green",
                        "notes": "Mittens really likes the stuff from Humboldt.",
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "followers": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "permalink_url": "https://app.asana.com/0/resource/123456789/list"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99101,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteatag",
        "executor_version": "v1",
        "executor_display_name": "Delete a tag",
        "executor_description": "A specific, existing tag can be deleted by making a DELETE request on the URL for that tag.  Returns an empty data record.",
        "executor_category": "Tags",
        "executor_category_group": "Tags",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://app.asana.com/api/1.0/tags/{tag_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "tag_gid",
                "value": "",
                "description": "Globally unique identifier for the tag."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686986890399,
        "lastModifiedTime": 1686986890399,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully deleted the specified tag.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99102,
        "executor_type": "THIRDPARTY",
        "executor_name": "getataskstags",
        "executor_version": "v1",
        "executor_display_name": "Get a task's tags",
        "executor_description": "Get a compact representation of all of the tags the task has.",
        "executor_category": "Tags",
        "executor_category_group": "Tags",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/tasks/{task_gid}/tags",
        "dataroot": null,
        "pathParams": [
            {
                "key": "task_gid",
                "value": "",
                "description": "The task to operate on."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686987121168,
        "lastModifiedTime": 1686987121169,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the tags for the given task.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99104,
        "executor_type": "THIRDPARTY",
        "executor_name": "createataginaworkspace",
        "executor_version": "v1",
        "executor_display_name": "Create a tag in a workspace",
        "executor_description": "Creates a new tag in a workspace or organization.  Every tag is required to be created in a specific workspace or organization, and this cannot be changed once set. Note that you can use the workspace parameter regardless of whether or not it is an organization.  Returns the full record of the newly created tag.",
        "executor_category": "Tags",
        "executor_category_group": "Tags",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/workspaces/{workspace_gid}/tags",
        "dataroot": null,
        "pathParams": [
            {
                "key": "workspace_gid",
                "value": "",
                "description": "Globally unique identifier for the workspace or organization."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "name": "Stuff to buy",
                    "color": "light-green",
                    "notes": "Mittens really likes the stuff from Humboldt.",
                    "workspace": {
                        "name": "My Company Workspace"
                    }
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686987711735,
        "lastModifiedTime": 1686987711736,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully created the newly specified tag.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Stuff to buy",
                        "color": "light-green",
                        "notes": "Mittens really likes the stuff from Humboldt.",
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "followers": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "permalink_url": "https://app.asana.com/0/resource/123456789/list"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99098,
        "executor_type": "THIRDPARTY",
        "executor_name": "createatag",
        "executor_version": "v1",
        "executor_display_name": "Create a tag",
        "executor_description": "Creates a new tag in a workspace or organization.  Every tag is required to be created in a specific workspace or organization, and this cannot be changed once set. Note that you can use the workspace parameter regardless of whether or not it is an organization.  Returns the full record of the newly created tag.",
        "executor_category": "Tags",
        "executor_category_group": "Tags",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/tags",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "name": "Stuff to buy",
                    "color": "light-green",
                    "notes": "Mittens really likes the stuff from Humboldt.",
                    "followers": [
                        "12345",
                        "42563"
                    ],
                    "workspace": "12345"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686986501641,
        "lastModifiedTime": 1686986501641,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully created the newly specified tag.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Stuff to buy",
                        "color": "light-green",
                        "notes": "Mittens really likes the stuff from Humboldt.",
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "followers": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "permalink_url": "https://app.asana.com/0/resource/123456789/list"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99083,
        "executor_type": "THIRDPARTY",
        "executor_name": "moveorInsertsections",
        "executor_version": "v1",
        "executor_display_name": "Move or Insert sections",
        "executor_description": "Move sections relative to each other. One of before_section or after_section is required.  Sections cannot be moved between projects.  Returns an empty data block.",
        "executor_category": "Sections",
        "executor_category_group": "Sections",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/projects/{project_gid}/sections/insert",
        "dataroot": null,
        "pathParams": [
            {
                "key": "project_gid",
                "value": "",
                "description": "Globally unique identifier for the project."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "project": "123456",
                    "section": "321654",
                    "before_section": "86420",
                    "after_section": "987654"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686926188141,
        "lastModifiedTime": 1686926188141,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully moved the specified section.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99082,
        "executor_type": "THIRDPARTY",
        "executor_name": "addtasktosection",
        "executor_version": "v1",
        "executor_display_name": "Add task to section",
        "executor_description": "Add a task to a specific, existing section. This will remove the task from other sections of the project.  The task will be inserted at the top of a section unless an insert_before or insert_after parameter is declared.  This does not work for separators (tasks with the resource_subtype of section).",
        "executor_category": "Sections",
        "executor_category_group": "Sections",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/sections/{section_gid}/addTask",
        "dataroot": null,
        "pathParams": [
            {
                "key": "section_gid",
                "value": "",
                "description": "The globally unique identifier for the section."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "task": "123456",
                    "insert_before": "86420",
                    "insert_after": "987654"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686926079912,
        "lastModifiedTime": 1686926079912,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully added the task.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99079,
        "executor_type": "THIRDPARTY",
        "executor_name": "getsectionsinaproject",
        "executor_version": "v1",
        "executor_display_name": "Get sections in a project",
        "executor_description": "Returns the compact records for all sections in the specified project.",
        "executor_category": "Sections",
        "executor_category_group": "Sections",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/projects/{project_gid}/sections",
        "dataroot": null,
        "pathParams": [
            {
                "key": "project_gid",
                "value": "",
                "description": "Globally unique identifier for the project."
            }
        ],
        "queryParams": [
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            },
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686924414888,
        "lastModifiedTime": 1686924414888,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved sections in project.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Next Actions"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99077,
        "executor_type": "THIRDPARTY",
        "executor_name": "getasection",
        "executor_version": "v1",
        "executor_display_name": "Get a section",
        "executor_description": "Returns the complete record for a single section.",
        "executor_category": "Sections",
        "executor_category_group": "Sections",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/sections/{section_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "section_gid",
                "value": "",
                "description": "The globally unique identifier for the section."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686922946664,
        "lastModifiedTime": 1686922946664,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved section.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Next Actions",
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "project": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        },
                        "projects": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Stuff to buy"
                            }
                        ]
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99081,
        "executor_type": "THIRDPARTY",
        "executor_name": "createasectioninaproject",
        "executor_version": "v1",
        "executor_display_name": "Create a section in a project",
        "executor_description": "Creates a new section in a project. Returns the full record of the newly created section.",
        "executor_category": "Sections",
        "executor_category_group": "Sections",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/projects/{project_gid}/sections",
        "dataroot": null,
        "pathParams": [
            {
                "key": "project_gid",
                "value": "",
                "description": "Globally unique identifier for the project."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "name": "Next Actions",
                    "insert_before": "86420",
                    "insert_after": "987654"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686925961883,
        "lastModifiedTime": 1686925961883,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully created the specified section.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Next Actions",
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "project": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        },
                        "projects": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Stuff to buy"
                            }
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98970,
        "executor_type": "THIRDPARTY",
        "executor_name": "getstatusesfromaproject",
        "executor_version": "v1",
        "executor_display_name": "Get statuses from a project",
        "executor_description": "Returns the compact project status update records for all updates on the project.",
        "executor_category": "Projectstatuses",
        "executor_category_group": "Projectstatuses",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/projects/{project_gid}/project_statuses",
        "dataroot": null,
        "pathParams": [
            {
                "key": "project_gid",
                "value": "",
                "description": "Globally unique identifier for the project."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            },
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686902219393,
        "lastModifiedTime": 1686902219393,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the specified project's status updates.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "title": "Status Update - Jun 15"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98968,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaprojectstatus",
        "executor_version": "v1",
        "executor_display_name": "Delete a project status",
        "executor_description": "Deletes a specific, existing project status update.  Returns an empty data record.",
        "executor_category": "Projectstatuses",
        "executor_category_group": "Projectstatuses",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://app.asana.com/api/1.0/project_statuses/{project_status_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "project_status_gid",
                "value": "",
                "description": "The project status update to get."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686902036531,
        "lastModifiedTime": 1686902036531,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully deleted the specified project status.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98971,
        "executor_type": "THIRDPARTY",
        "executor_name": "createaprojectstatus",
        "executor_version": "v1",
        "executor_display_name": "Create a project status",
        "executor_description": "Creates a new status update on the project.  Returns the full record of the newly created project status update.",
        "executor_category": "Projectstatuses",
        "executor_category_group": "Projectstatuses",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/projects/{project_gid}/project_statuses",
        "dataroot": null,
        "pathParams": [
            {
                "key": "project_gid",
                "value": "",
                "description": "Globally unique identifier for the project."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "color": "green"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686902374081,
        "lastModifiedTime": 1686902374081,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully created a new story.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "title": "Status Update - Jun 15",
                        "text": "The project is moving forward according to plan...",
                        "html_text": "<body>The project <strong>is</strong> moving forward according to plan...</body>",
                        "color": "green",
                        "author": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "created_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "modified_at": "2012-02-22T02:06:58.147Z"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 98967,
        "executor_type": "THIRDPARTY",
        "executor_name": "getaprojectstatus",
        "executor_version": "v1",
        "executor_display_name": "Get a project status",
        "executor_description": "Returns the complete record for a single status update.",
        "executor_category": "Projectstatuses",
        "executor_category_group": "Projectstatuses",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/project_statuses/{project_status_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "project_status_gid",
                "value": "",
                "description": "The project status update to get."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686901900118,
        "lastModifiedTime": 1686901900118,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the specified project's status updates.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "title": "Status Update - Jun 15",
                        "text": "The project is moving forward according to plan...",
                        "html_text": "<body>The project <strong>is</strong> moving forward according to plan...</body>",
                        "color": "green",
                        "author": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "created_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "modified_at": "2012-02-22T02:06:58.147Z"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99105,
        "executor_type": "THIRDPARTY",
        "executor_name": "getmultipletasks",
        "executor_version": "v1",
        "executor_display_name": "Get multiple tasks",
        "executor_description": "Returns the compact task records for some filtered set of tasks. Use one or more of the parameters provided to filter the tasks returned. You must specify a project or tag if you do not specify assignee and workspace.",
        "executor_category": "Tasks",
        "executor_category_group": "Tasks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/tasks",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            },
            {
                "key": "assignee",
                "value": "",
                "description": "The assignee to filter tasks on. If searching for unassigned tasks, assignee.any = null can be specified. Note: If you specify assignee, you must also specify the workspace to filter on.",
                "req": false
            },
            {
                "key": "project",
                "value": "",
                "description": "The project to filter tasks on.",
                "req": false
            },
            {
                "key": "section",
                "value": "",
                "description": "The section to filter tasks on.",
                "req": false
            },
            {
                "key": "workspace",
                "value": "",
                "description": "The workspace to filter tasks on. Note: If you specify workspace, you must also specify the assignee to filter on.",
                "req": false
            },
            {
                "key": "completed_since",
                "value": "",
                "description": "Only return tasks that are either incomplete or that have been completed since this time.",
                "req": false
            },
            {
                "key": "modified_since",
                "value": "",
                "description": "Only return tasks that have been modified since the given time.  Note: A task is considered \u201cmodified\u201d if any of its properties change, or associations between it and other objects are modified (e.g. a task being added to a project). A task is not considered modified just because another object it is associated with (e.g. a subtask) is modified. Actions that count as modifying the task include assigning, renaming, completing, and adding stories.",
                "req": false
            },
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686992322232,
        "lastModifiedTime": 1686992322232,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved requested tasks.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99118,
        "executor_type": "THIRDPARTY",
        "executor_name": "setdependenciesforatask",
        "executor_version": "v1",
        "executor_display_name": "Set dependencies for a task",
        "executor_description": "Marks a set of tasks as dependencies of this task, if they are not already dependencies. A task can have at most 30 dependents and dependencies combined.",
        "executor_category": "Tasks",
        "executor_category_group": "Tasks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/tasks/{task_gid}/addDependencies",
        "dataroot": null,
        "pathParams": [
            {
                "key": "task_gid",
                "value": "",
                "description": "The task to operate on."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "dependencies": [
                        "133713",
                        "184253"
                    ]
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686997609422,
        "lastModifiedTime": 1686997609422,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully set the specified dependencies on the task.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99107,
        "executor_type": "THIRDPARTY",
        "executor_name": "getatask",
        "executor_version": "v1",
        "executor_display_name": "Get a task",
        "executor_description": "Returns the complete task record for a single task.",
        "executor_category": "Tasks",
        "executor_category_group": "Tasks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/tasks/{task_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "task_gid",
                "value": "",
                "description": "The task to operate on."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "name": "Bug Task",
                    "resource_subtype": "default_task",
                    "approval_status": "pending",
                    "assignee_status": "upcoming",
                    "completed": false,
                    "due_at": "2019-09-15T02:06:58.147Z",
                    "due_on": "2019-09-15",
                    "external": {
                        "gid": "my_gid",
                        "data": "A blob of information"
                    },
                    "html_notes": "<body>Mittens <em>really</em> likes the stuff from Humboldt.</body>",
                    "liked": true,
                    "notes": "Mittens really likes the stuff from Humboldt.",
                    "start_at": "2019-09-14T02:06:58.147Z",
                    "start_on": "2019-09-14",
                    "assignee": "12345",
                    "assignee_section": "12345",
                    "custom_fields": {
                        "5678904321": "On Hold",
                        "4578152156": "Not Started"
                    },
                    "followers": [
                        "12345"
                    ],
                    "parent": "12345",
                    "projects": [
                        "12345"
                    ],
                    "tags": [
                        "12345"
                    ],
                    "workspace": "12345"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686992985541,
        "lastModifiedTime": 1686992985542,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the specified task.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Bug Task",
                        "resource_subtype": "default_task",
                        "approval_status": "pending",
                        "assignee_status": "upcoming",
                        "completed": false,
                        "completed_at": "2012-02-22T02:06:58.147Z",
                        "completed_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "dependencies": [
                            {
                                "gid": "12345",
                                "resource_type": "task"
                            }
                        ],
                        "dependents": [
                            {
                                "gid": "12345",
                                "resource_type": "task"
                            }
                        ],
                        "due_at": "2019-09-15T02:06:58.147Z",
                        "due_on": "2019-09-15",
                        "external": {
                            "gid": "my_gid",
                            "data": "A blob of information"
                        },
                        "html_notes": "<body>Mittens <em>really</em> likes the stuff from Humboldt.</body>",
                        "hearted": true,
                        "hearts": [
                            {
                                "gid": "12345",
                                "user": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            }
                        ],
                        "is_rendered_as_separator": false,
                        "liked": true,
                        "likes": [
                            {
                                "gid": "12345",
                                "user": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            }
                        ],
                        "memberships": [
                            {
                                "project": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "section": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Next Actions"
                                }
                            }
                        ],
                        "modified_at": "2012-02-22T02:06:58.147Z",
                        "notes": "Mittens really likes the stuff from Humboldt.",
                        "num_hearts": 5,
                        "num_likes": 5,
                        "num_subtasks": 3,
                        "start_at": "2019-09-14T02:06:58.147Z",
                        "start_on": "2019-09-14",
                        "actual_time_minutes": 200,
                        "assignee": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "assignee_section": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Next Actions"
                        },
                        "custom_fields": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Status",
                                "resource_subtype": "text",
                                "type": "text",
                                "enum_options": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "enabled": true,
                                "is_formula_field": false,
                                "date_value": {
                                    "date": "2024-08-23",
                                    "date_time": "2024-08-23T22:00:00.000Z"
                                },
                                "enum_value": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                },
                                "multi_enum_values": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "number_value": 5.2,
                                "text_value": "Some Value",
                                "display_value": "blue",
                                "description": "Development team priority",
                                "precision": 2,
                                "format": "custom",
                                "currency_code": "EUR",
                                "custom_label": "gold pieces",
                                "custom_label_position": "suffix",
                                "is_global_to_workspace": true,
                                "has_notifications_enabled": true,
                                "asana_created_field": "priority",
                                "is_value_read_only": false,
                                "created_by": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                },
                                "people_value": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Greg Sanchez"
                                    }
                                ]
                            }
                        ],
                        "followers": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "parent": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        },
                        "projects": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Stuff to buy"
                            }
                        ],
                        "tags": [
                            {
                                "gid": "59746",
                                "name": "Grade A"
                            }
                        ],
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "permalink_url": "https://app.asana.com/0/resource/123456789/list"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99113,
        "executor_type": "THIRDPARTY",
        "executor_name": "gettasksfromatag",
        "executor_version": "v1",
        "executor_display_name": "Get tasks from a tag",
        "executor_description": "Returns the compact task records for all tasks with the given tag. Tasks can have more than one tag at a time.",
        "executor_category": "Tasks",
        "executor_category_group": "Tasks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/tags/{tag_gid}/tasks",
        "dataroot": null,
        "pathParams": [
            {
                "key": "tag_gid",
                "value": "",
                "description": "Globally unique identifier for the tag."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686994960438,
        "lastModifiedTime": 1686994960438,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the tasks associated with the specified tag.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99106,
        "executor_type": "THIRDPARTY",
        "executor_name": "createatask",
        "executor_version": "v1",
        "executor_display_name": "Create a task",
        "executor_description": "Creating a new task is as easy as POSTing to the /tasks endpoint with a data block containing the fields you\u2019d like to set on the task. Any unspecified fields will take on default values.  Every task is required to be created in a specific workspace, and this workspace cannot be changed once set. The workspace need not be set explicitly if you specify projects or a parent task instead.",
        "executor_category": "Tasks",
        "executor_category_group": "Tasks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/tasks",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "name": "Bug Task",
                    "resource_subtype": "default_task",
                    "approval_status": "pending",
                    "assignee_status": "upcoming",
                    "completed": false,
                    "due_at": "2019-09-15T02:06:58.147Z",
                    "due_on": "2019-09-15",
                    "external": {
                        "gid": "my_gid",
                        "data": "A blob of information"
                    },
                    "html_notes": "<body>Mittens <em>really</em> likes the stuff from Humboldt.</body>",
                    "liked": true,
                    "notes": "Mittens really likes the stuff from Humboldt.",
                    "start_at": "2019-09-14T02:06:58.147Z",
                    "start_on": "2019-09-14",
                    "assignee": "12345",
                    "assignee_section": "12345",
                    "custom_fields": {
                        "5678904321": "On Hold",
                        "4578152156": "Not Started"
                    },
                    "followers": [
                        "12345"
                    ],
                    "parent": "12345",
                    "projects": [
                        "12345"
                    ],
                    "tags": [
                        "12345"
                    ],
                    "workspace": "12345"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686992788091,
        "lastModifiedTime": 1686992788092,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully created a new task.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Bug Task",
                        "resource_subtype": "default_task",
                        "approval_status": "pending",
                        "assignee_status": "upcoming",
                        "completed": false,
                        "completed_at": "2012-02-22T02:06:58.147Z",
                        "completed_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "dependencies": [
                            {
                                "gid": "12345",
                                "resource_type": "task"
                            }
                        ],
                        "dependents": [
                            {
                                "gid": "12345",
                                "resource_type": "task"
                            }
                        ],
                        "due_at": "2019-09-15T02:06:58.147Z",
                        "due_on": "2019-09-15",
                        "external": {
                            "gid": "my_gid",
                            "data": "A blob of information"
                        },
                        "html_notes": "<body>Mittens <em>really</em> likes the stuff from Humboldt.</body>",
                        "hearted": true,
                        "hearts": [
                            {
                                "gid": "12345",
                                "user": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            }
                        ],
                        "is_rendered_as_separator": false,
                        "liked": true,
                        "likes": [
                            {
                                "gid": "12345",
                                "user": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            }
                        ],
                        "memberships": [
                            {
                                "project": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "section": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Next Actions"
                                }
                            }
                        ],
                        "modified_at": "2012-02-22T02:06:58.147Z",
                        "notes": "Mittens really likes the stuff from Humboldt.",
                        "num_hearts": 5,
                        "num_likes": 5,
                        "num_subtasks": 3,
                        "start_at": "2019-09-14T02:06:58.147Z",
                        "start_on": "2019-09-14",
                        "actual_time_minutes": 200,
                        "assignee": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "assignee_section": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Next Actions"
                        },
                        "custom_fields": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Status",
                                "resource_subtype": "text",
                                "type": "text",
                                "enum_options": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "enabled": true,
                                "is_formula_field": false,
                                "date_value": {
                                    "date": "2024-08-23",
                                    "date_time": "2024-08-23T22:00:00.000Z"
                                },
                                "enum_value": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                },
                                "multi_enum_values": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "number_value": 5.2,
                                "text_value": "Some Value",
                                "display_value": "blue",
                                "description": "Development team priority",
                                "precision": 2,
                                "format": "custom",
                                "currency_code": "EUR",
                                "custom_label": "gold pieces",
                                "custom_label_position": "suffix",
                                "is_global_to_workspace": true,
                                "has_notifications_enabled": true,
                                "asana_created_field": "priority",
                                "is_value_read_only": false,
                                "created_by": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                },
                                "people_value": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Greg Sanchez"
                                    }
                                ]
                            }
                        ],
                        "followers": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "parent": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        },
                        "projects": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Stuff to buy"
                            }
                        ],
                        "tags": [
                            {
                                "gid": "59746",
                                "name": "Grade A"
                            }
                        ],
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "permalink_url": "https://app.asana.com/0/resource/123456789/list"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99108,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateatask",
        "executor_version": "v1",
        "executor_display_name": "Update a task",
        "executor_description": "A specific, existing task can be updated by making a PUT request on the URL for that task. Only the fields provided in the data block will be updated; any unspecified fields will remain unchanged.  When using this method, it is best to specify only those fields you wish to change, or else you may overwrite changes made by another user since you last retrieved the task.  Returns the complete updated task record.",
        "executor_category": "Tasks",
        "executor_category_group": "Tasks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://app.asana.com/api/1.0/tasks/{task_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "task_gid",
                "value": "",
                "description": "The task to operate on."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "name": "Bug Task",
                    "resource_subtype": "default_task",
                    "approval_status": "pending",
                    "assignee_status": "upcoming",
                    "completed": false,
                    "due_at": "2019-09-15T02:06:58.147Z",
                    "due_on": "2019-09-15",
                    "external": {
                        "gid": "my_gid",
                        "data": "A blob of information"
                    },
                    "html_notes": "<body>Mittens <em>really</em> likes the stuff from Humboldt.</body>",
                    "liked": true,
                    "notes": "Mittens really likes the stuff from Humboldt.",
                    "start_at": "2019-09-14T02:06:58.147Z",
                    "start_on": "2019-09-14",
                    "assignee": "12345",
                    "assignee_section": "12345",
                    "custom_fields": {
                        "5678904321": "On Hold",
                        "4578152156": "Not Started"
                    },
                    "followers": [
                        "12345"
                    ],
                    "parent": "12345",
                    "projects": [
                        "12345"
                    ],
                    "tags": [
                        "12345"
                    ],
                    "workspace": "12345"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686993519212,
        "lastModifiedTime": 1686993519212,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully updated the specified task.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Bug Task",
                        "resource_subtype": "default_task",
                        "approval_status": "pending",
                        "assignee_status": "upcoming",
                        "completed": false,
                        "completed_at": "2012-02-22T02:06:58.147Z",
                        "completed_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "dependencies": [
                            {
                                "gid": "12345",
                                "resource_type": "task"
                            }
                        ],
                        "dependents": [
                            {
                                "gid": "12345",
                                "resource_type": "task"
                            }
                        ],
                        "due_at": "2019-09-15T02:06:58.147Z",
                        "due_on": "2019-09-15",
                        "external": {
                            "gid": "my_gid",
                            "data": "A blob of information"
                        },
                        "html_notes": "<body>Mittens <em>really</em> likes the stuff from Humboldt.</body>",
                        "hearted": true,
                        "hearts": [
                            {
                                "gid": "12345",
                                "user": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            }
                        ],
                        "is_rendered_as_separator": false,
                        "liked": true,
                        "likes": [
                            {
                                "gid": "12345",
                                "user": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            }
                        ],
                        "memberships": [
                            {
                                "project": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "section": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Next Actions"
                                }
                            }
                        ],
                        "modified_at": "2012-02-22T02:06:58.147Z",
                        "notes": "Mittens really likes the stuff from Humboldt.",
                        "num_hearts": 5,
                        "num_likes": 5,
                        "num_subtasks": 3,
                        "start_at": "2019-09-14T02:06:58.147Z",
                        "start_on": "2019-09-14",
                        "actual_time_minutes": 200,
                        "assignee": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "assignee_section": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Next Actions"
                        },
                        "custom_fields": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Status",
                                "resource_subtype": "text",
                                "type": "text",
                                "enum_options": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "enabled": true,
                                "is_formula_field": false,
                                "date_value": {
                                    "date": "2024-08-23",
                                    "date_time": "2024-08-23T22:00:00.000Z"
                                },
                                "enum_value": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                },
                                "multi_enum_values": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "number_value": 5.2,
                                "text_value": "Some Value",
                                "display_value": "blue",
                                "description": "Development team priority",
                                "precision": 2,
                                "format": "custom",
                                "currency_code": "EUR",
                                "custom_label": "gold pieces",
                                "custom_label_position": "suffix",
                                "is_global_to_workspace": true,
                                "has_notifications_enabled": true,
                                "asana_created_field": "priority",
                                "is_value_read_only": false,
                                "created_by": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                },
                                "people_value": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Greg Sanchez"
                                    }
                                ]
                            }
                        ],
                        "followers": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "parent": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        },
                        "projects": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Stuff to buy"
                            }
                        ],
                        "tags": [
                            {
                                "gid": "59746",
                                "name": "Grade A"
                            }
                        ],
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "permalink_url": "https://app.asana.com/0/resource/123456789/list"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99124,
        "executor_type": "THIRDPARTY",
        "executor_name": "removeaprojectfromatask",
        "executor_version": "v1",
        "executor_display_name": "Remove a project from a task",
        "executor_description": "Removes the task from the specified project. The task will still exist in the system, but it will not be in the project anymore.  Returns an empty data block.",
        "executor_category": "Tasks",
        "executor_category_group": "Tasks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/tasks/{task_gid}/removeProject",
        "dataroot": null,
        "pathParams": [
            {
                "key": "task_gid",
                "value": "",
                "description": "The task to operate on."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "project": "13579"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687002410063,
        "lastModifiedTime": 1687002410063,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully removed the specified project from the task.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99129,
        "executor_type": "THIRDPARTY",
        "executor_name": "searchtasksinaworkspace",
        "executor_version": "v1",
        "executor_display_name": "Search tasks in a workspace",
        "executor_description": "To mirror the functionality of the Asana web app's advanced search feature, the Asana API has a task search endpoint that allows you to build complex filters to find and retrieve the exact data you need.",
        "executor_category": "Tasks",
        "executor_category_group": "Tasks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/workspaces/{workspace_gid}/tasks/search",
        "dataroot": null,
        "pathParams": [
            {
                "key": "workspace_gid",
                "value": "",
                "description": "Globally unique identifier for the workspace or organization."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "text",
                "value": "",
                "description": "Performs full-text search on both task name and description",
                "req": false
            },
            {
                "key": "resource_subtype",
                "value": "",
                "description": "Filters results by the task's resource_subtype",
                "req": false
            },
            {
                "key": "assignee.any",
                "value": "",
                "description": "Comma-separated list of user identifiers",
                "req": false
            },
            {
                "key": "assignee.not",
                "value": "",
                "description": "Comma-separated list of user identifiers",
                "req": false
            },
            {
                "key": "portfolios.any",
                "value": "",
                "description": "Comma-separated list of portfolio IDs",
                "req": false
            },
            {
                "key": "projects.any",
                "value": "",
                "description": "Comma-separated list of project IDs",
                "req": false
            },
            {
                "key": "projects.not",
                "value": "",
                "description": "Comma-separated list of project IDs",
                "req": false
            },
            {
                "key": "projects.all",
                "value": "",
                "description": "Comma-separated list of project IDs",
                "req": false
            },
            {
                "key": "sections.any",
                "value": "",
                "description": "Comma-separated list of section or column IDs",
                "req": false
            },
            {
                "key": "sections.not",
                "value": "",
                "description": "Comma-separated list of section or column IDs",
                "req": false
            },
            {
                "key": "sections.all",
                "value": "",
                "description": "Comma-separated list of section or column IDs",
                "req": false
            },
            {
                "key": "tags.any",
                "value": "",
                "description": "Comma-separated list of tag IDs",
                "req": false
            },
            {
                "key": "tags.not",
                "value": "",
                "description": "Comma-separated list of tag IDs",
                "req": false
            },
            {
                "key": "tags.all",
                "value": "",
                "description": "Comma-separated list of tag IDs",
                "req": false
            },
            {
                "key": "teams.any",
                "value": "",
                "description": "Comma-separated list of team IDs",
                "req": false
            },
            {
                "key": "followers.not",
                "value": "",
                "description": "Comma-separated list of user identifiers",
                "req": false
            },
            {
                "key": "created_by.any",
                "value": "",
                "description": "Comma-separated list of user identifiers",
                "req": false
            },
            {
                "key": "created_by.not",
                "value": "",
                "description": "Comma-separated list of user identifiers",
                "req": false
            },
            {
                "key": "assigned_by.any",
                "value": "",
                "description": "Comma-separated list of user identifiers",
                "req": false
            },
            {
                "key": "assigned_by.not",
                "value": "",
                "description": "Comma-separated list of user identifiers",
                "req": false
            },
            {
                "key": "liked_by.not",
                "value": "",
                "description": "Comma-separated list of user identifiers",
                "req": false
            },
            {
                "key": "commented_on_by.not",
                "value": "",
                "description": "Comma-separated list of user identifiers",
                "req": false
            },
            {
                "key": "due_on.before",
                "value": "",
                "description": "ISO 8601 date string",
                "req": false
            },
            {
                "key": "due_on.after",
                "value": "",
                "description": "ISO 8601 date string",
                "req": false
            },
            {
                "key": "due_on",
                "value": "",
                "description": "ISO 8601 date string or null",
                "req": false
            },
            {
                "key": "due_at.before",
                "value": "",
                "description": "ISO 8601 datetime string",
                "req": false
            },
            {
                "key": "due_at.after",
                "value": "",
                "description": "ISO 8601 datetime string",
                "req": false
            },
            {
                "key": "start_on.before",
                "value": "",
                "description": "ISO 8601 date string",
                "req": false
            },
            {
                "key": "start_on.after",
                "value": "",
                "description": "ISO 8601 date string",
                "req": false
            },
            {
                "key": "start_on",
                "value": "",
                "description": "ISO 8601 date string or null",
                "req": false
            },
            {
                "key": "created_on.before",
                "value": "",
                "description": "ISO 8601 date string",
                "req": false
            },
            {
                "key": "created_on.after",
                "value": "",
                "description": "ISO 8601 date string",
                "req": false
            },
            {
                "key": "created_on",
                "value": "",
                "description": "ISO 8601 date string or null",
                "req": false
            },
            {
                "key": "created_at.before",
                "value": "",
                "description": "ISO 8601 datetime string",
                "req": false
            },
            {
                "key": "created_at.after",
                "value": "",
                "description": "ISO 8601 datetime string",
                "req": false
            },
            {
                "key": "completed_on.before",
                "value": "",
                "description": "ISO 8601 date string",
                "req": false
            },
            {
                "key": "completed_on.after",
                "value": "",
                "description": "ISO 8601 date string",
                "req": false
            },
            {
                "key": "completed_on",
                "value": "",
                "description": "ISO 8601 date string or null",
                "req": false
            },
            {
                "key": "completed_at.before",
                "value": "",
                "description": "ISO 8601 datetime string",
                "req": false
            },
            {
                "key": "completed_at.after",
                "value": "",
                "description": "ISO 8601 datetime string",
                "req": false
            },
            {
                "key": "modified_on.before",
                "value": "",
                "description": "ISO 8601 date string",
                "req": false
            },
            {
                "key": "modified_on.after",
                "value": "",
                "description": "ISO 8601 date string",
                "req": false
            },
            {
                "key": "modified_on",
                "value": "",
                "description": "ISO 8601 date string or null",
                "req": false
            },
            {
                "key": "modified_at.before",
                "value": "",
                "description": "ISO 8601 datetime string",
                "req": false
            },
            {
                "key": "modified_at.after",
                "value": "",
                "description": "ISO 8601 datetime string",
                "req": false
            },
            {
                "key": "is_blocking",
                "value": "",
                "description": "Filter to incomplete tasks with dependents",
                "req": false
            },
            {
                "key": "is_blocked",
                "value": "",
                "description": "Filter to tasks with incomplete dependencies",
                "req": false
            },
            {
                "key": "has_attachment",
                "value": "",
                "description": "Filter to tasks with attachments",
                "req": false
            },
            {
                "key": "completed",
                "value": "",
                "description": "Filter to completed tasks",
                "req": false
            },
            {
                "key": "is_subtask",
                "value": "",
                "description": "Filter to subtasks",
                "req": false
            },
            {
                "key": "sort_by",
                "value": "",
                "description": "One of due_date, created_at, completed_at, likes, or modified_at, defaults to modified_at",
                "req": false
            },
            {
                "key": "sort_ascending",
                "value": "",
                "description": "Default",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687005032509,
        "lastModifiedTime": 1687005032509,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully retrieved the section's tasks.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99121,
        "executor_type": "THIRDPARTY",
        "executor_name": "setdependentsforatask",
        "executor_version": "v1",
        "executor_display_name": "Set dependents for a task",
        "executor_description": "Marks a set of tasks as dependents of this task, if they are not already dependents. A task can have at most 30 dependents and dependencies combined.",
        "executor_category": "Tasks",
        "executor_category_group": "Tasks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/tasks/{task_gid}/addDependents",
        "dataroot": null,
        "pathParams": [
            {
                "key": "task_gid",
                "value": "",
                "description": "The task to operate on."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "dependents": [
                        "133713",
                        "184253"
                    ]
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686998436614,
        "lastModifiedTime": 1686998436614,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully set the specified dependents on the given task.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99111,
        "executor_type": "THIRDPARTY",
        "executor_name": "gettasksfromaproject",
        "executor_version": "v1",
        "executor_display_name": "Get tasks from a project",
        "executor_description": "Returns the compact task records for all tasks within the given project, ordered by their priority within the project. Tasks can exist in more than one project at a time.",
        "executor_category": "Tasks",
        "executor_category_group": "Tasks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/projects/{project_gid}/tasks",
        "dataroot": null,
        "pathParams": [
            {
                "key": "project_gid",
                "value": "",
                "description": "Globally unique identifier for the project."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "completed_since",
                "value": "",
                "description": "Only return tasks that are either incomplete or that have been completed since this time. Accepts a date-time string or the keyword now.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686994601027,
        "lastModifiedTime": 1686994601027,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the requested project's tasks.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99119,
        "executor_type": "THIRDPARTY",
        "executor_name": "unlinkdependenciesfromatask",
        "executor_version": "v1",
        "executor_display_name": "Unlink dependencies from a task",
        "executor_description": "Unlinks a set of dependencies from this task.",
        "executor_category": "Tasks",
        "executor_category_group": "Tasks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/tasks/{task_gid}/removeDependencies",
        "dataroot": null,
        "pathParams": [
            {
                "key": "task_gid",
                "value": "",
                "description": "The task to operate on."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "dependencies": [
                        "133713",
                        "184253"
                    ]
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686997855322,
        "lastModifiedTime": 1686997855322,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully unlinked the dependencies from the specified task.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99125,
        "executor_type": "THIRDPARTY",
        "executor_name": "addatagtoatask",
        "executor_version": "v1",
        "executor_display_name": "Add a tag to a task",
        "executor_description": "Adds a tag to a task. Returns an empty data block.",
        "executor_category": "Tasks",
        "executor_category_group": "Tasks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/tasks/{task_gid}/addTag",
        "dataroot": null,
        "pathParams": [
            {
                "key": "task_gid",
                "value": "",
                "description": "The task to operate on."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "tag": "13579"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687002682095,
        "lastModifiedTime": 1687002682095,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully added the specified tag to the task.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99127,
        "executor_type": "THIRDPARTY",
        "executor_name": "addfollowerstoatask",
        "executor_version": "v1",
        "executor_display_name": "Add followers to a task",
        "executor_description": "Adds followers to a task. Returns an empty data block. Each task can be associated with zero or more followers in the system. Requests to add/remove followers, if successful, will return the complete updated task record, described above.",
        "executor_category": "Tasks",
        "executor_category_group": "Tasks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/tasks/{task_gid}/addFollowers",
        "dataroot": null,
        "pathParams": [
            {
                "key": "task_gid",
                "value": "",
                "description": "The task to operate on."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "followers": [
                        "13579",
                        "321654"
                    ]
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687003362253,
        "lastModifiedTime": 1687003362253,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully added the specified followers to the task.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Bug Task",
                        "resource_subtype": "default_task",
                        "approval_status": "pending",
                        "assignee_status": "upcoming",
                        "completed": false,
                        "completed_at": "2012-02-22T02:06:58.147Z",
                        "completed_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "dependencies": [
                            {
                                "gid": "12345",
                                "resource_type": "task"
                            }
                        ],
                        "dependents": [
                            {
                                "gid": "12345",
                                "resource_type": "task"
                            }
                        ],
                        "due_at": "2019-09-15T02:06:58.147Z",
                        "due_on": "2019-09-15",
                        "external": {
                            "gid": "my_gid",
                            "data": "A blob of information"
                        },
                        "html_notes": "<body>Mittens <em>really</em> likes the stuff from Humboldt.</body>",
                        "hearted": true,
                        "hearts": [
                            {
                                "gid": "12345",
                                "user": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            }
                        ],
                        "is_rendered_as_separator": false,
                        "liked": true,
                        "likes": [
                            {
                                "gid": "12345",
                                "user": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            }
                        ],
                        "memberships": [
                            {
                                "project": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "section": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Next Actions"
                                }
                            }
                        ],
                        "modified_at": "2012-02-22T02:06:58.147Z",
                        "notes": "Mittens really likes the stuff from Humboldt.",
                        "num_hearts": 5,
                        "num_likes": 5,
                        "num_subtasks": 3,
                        "start_at": "2019-09-14T02:06:58.147Z",
                        "start_on": "2019-09-14",
                        "actual_time_minutes": 200,
                        "assignee": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "assignee_section": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Next Actions"
                        },
                        "custom_fields": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Status",
                                "resource_subtype": "text",
                                "type": "text",
                                "enum_options": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "enabled": true,
                                "is_formula_field": false,
                                "date_value": {
                                    "date": "2024-08-23",
                                    "date_time": "2024-08-23T22:00:00.000Z"
                                },
                                "enum_value": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                },
                                "multi_enum_values": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "number_value": 5.2,
                                "text_value": "Some Value",
                                "display_value": "blue",
                                "description": "Development team priority",
                                "precision": 2,
                                "format": "custom",
                                "currency_code": "EUR",
                                "custom_label": "gold pieces",
                                "custom_label_position": "suffix",
                                "is_global_to_workspace": true,
                                "has_notifications_enabled": true,
                                "asana_created_field": "priority",
                                "is_value_read_only": false,
                                "created_by": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                },
                                "people_value": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Greg Sanchez"
                                    }
                                ]
                            }
                        ],
                        "followers": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "parent": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        },
                        "projects": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Stuff to buy"
                            }
                        ],
                        "tags": [
                            {
                                "gid": "59746",
                                "name": "Grade A"
                            }
                        ],
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "permalink_url": "https://app.asana.com/0/resource/123456789/list"
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99109,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteatask",
        "executor_version": "v1",
        "executor_display_name": "Delete a task",
        "executor_description": "A specific, existing task can be deleted by making a DELETE request on the URL for that task. Deleted tasks go into the \u201ctrash\u201d of the user making the delete request. Tasks can be recovered from the trash within a period of 30 days; afterward they are completely removed from the system.  Returns an empty data record.",
        "executor_category": "Tasks",
        "executor_category_group": "Tasks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://app.asana.com/api/1.0/tasks/{task_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "task_gid",
                "value": "",
                "description": "The task to operate on."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686994047937,
        "lastModifiedTime": 1686994047937,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully deleted the specified task.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99114,
        "executor_type": "THIRDPARTY",
        "executor_name": "gettasksfromausertasklist",
        "executor_version": "v1",
        "executor_display_name": "Get tasks from a user task list",
        "executor_description": "Returns the compact list of tasks in a user\u2019s My Tasks list.",
        "executor_category": "Tasks",
        "executor_category_group": "Tasks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/user_task_lists/{user_task_list_gid}/tasks",
        "dataroot": null,
        "pathParams": [
            {
                "key": "user_task_list_gid",
                "value": "",
                "description": "Globally unique identifier for the user task list."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            },
            {
                "key": "completed_since",
                "value": "",
                "description": "Only return tasks that are either incomplete or that have been completed since this time. Accepts a date-time string or the keyword now.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686995176994,
        "lastModifiedTime": 1686995176994,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the user task list's tasks.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99116,
        "executor_type": "THIRDPARTY",
        "executor_name": "createasubtask",
        "executor_version": "v1",
        "executor_display_name": "Create a subtask",
        "executor_description": "Creates a new subtask and adds it to the parent task. Returns the full record for the newly created subtask.",
        "executor_category": "Tasks",
        "executor_category_group": "Tasks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/tasks/{task_gid}/subtasks",
        "dataroot": null,
        "pathParams": [
            {
                "key": "task_gid",
                "value": "",
                "description": "The task to operate on."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "name": "Bug Task",
                    "resource_subtype": "default_task",
                    "approval_status": "pending",
                    "assignee_status": "upcoming",
                    "completed": false,
                    "due_at": "2019-09-15T02:06:58.147Z",
                    "due_on": "2019-09-15",
                    "external": {
                        "gid": "my_gid",
                        "data": "A blob of information"
                    },
                    "html_notes": "<body>Mittens <em>really</em> likes the stuff from Humboldt.</body>",
                    "liked": true,
                    "notes": "Mittens really likes the stuff from Humboldt.",
                    "start_at": "2019-09-14T02:06:58.147Z",
                    "start_on": "2019-09-14",
                    "assignee": "12345",
                    "assignee_section": "12345",
                    "custom_fields": {
                        "5678904321": "On Hold",
                        "4578152156": "Not Started"
                    },
                    "followers": [
                        "12345"
                    ],
                    "parent": "12345",
                    "projects": [
                        "12345"
                    ],
                    "tags": [
                        "12345"
                    ],
                    "workspace": "12345"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686995633044,
        "lastModifiedTime": 1686995633044,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully created the specified subtask.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Bug Task",
                        "resource_subtype": "default_task",
                        "approval_status": "pending",
                        "assignee_status": "upcoming",
                        "completed": false,
                        "completed_at": "2012-02-22T02:06:58.147Z",
                        "completed_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "dependencies": [
                            {
                                "gid": "12345",
                                "resource_type": "task"
                            }
                        ],
                        "dependents": [
                            {
                                "gid": "12345",
                                "resource_type": "task"
                            }
                        ],
                        "due_at": "2019-09-15T02:06:58.147Z",
                        "due_on": "2019-09-15",
                        "external": {
                            "gid": "my_gid",
                            "data": "A blob of information"
                        },
                        "html_notes": "<body>Mittens <em>really</em> likes the stuff from Humboldt.</body>",
                        "hearted": true,
                        "hearts": [
                            {
                                "gid": "12345",
                                "user": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            }
                        ],
                        "is_rendered_as_separator": false,
                        "liked": true,
                        "likes": [
                            {
                                "gid": "12345",
                                "user": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            }
                        ],
                        "memberships": [
                            {
                                "project": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "section": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Next Actions"
                                }
                            }
                        ],
                        "modified_at": "2012-02-22T02:06:58.147Z",
                        "notes": "Mittens really likes the stuff from Humboldt.",
                        "num_hearts": 5,
                        "num_likes": 5,
                        "num_subtasks": 3,
                        "start_at": "2019-09-14T02:06:58.147Z",
                        "start_on": "2019-09-14",
                        "actual_time_minutes": 200,
                        "assignee": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "assignee_section": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Next Actions"
                        },
                        "custom_fields": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Status",
                                "resource_subtype": "text",
                                "type": "text",
                                "enum_options": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "enabled": true,
                                "is_formula_field": false,
                                "date_value": {
                                    "date": "2024-08-23",
                                    "date_time": "2024-08-23T22:00:00.000Z"
                                },
                                "enum_value": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                },
                                "multi_enum_values": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "number_value": 5.2,
                                "text_value": "Some Value",
                                "display_value": "blue",
                                "description": "Development team priority",
                                "precision": 2,
                                "format": "custom",
                                "currency_code": "EUR",
                                "custom_label": "gold pieces",
                                "custom_label_position": "suffix",
                                "is_global_to_workspace": true,
                                "has_notifications_enabled": true,
                                "asana_created_field": "priority",
                                "is_value_read_only": false,
                                "created_by": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                },
                                "people_value": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Greg Sanchez"
                                    }
                                ]
                            }
                        ],
                        "followers": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "parent": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        },
                        "projects": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Stuff to buy"
                            }
                        ],
                        "tags": [
                            {
                                "gid": "59746",
                                "name": "Grade A"
                            }
                        ],
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "permalink_url": "https://app.asana.com/0/resource/123456789/list"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99110,
        "executor_type": "THIRDPARTY",
        "executor_name": "duplicateatask",
        "executor_version": "v1",
        "executor_display_name": "Duplicate a task",
        "executor_description": "Creates and returns a job that will asynchronously handle the duplication.",
        "executor_category": "Tasks",
        "executor_category_group": "Tasks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/tasks/{task_gid}/duplicate",
        "dataroot": null,
        "pathParams": [
            {
                "key": "task_gid",
                "value": "",
                "description": "The task to operate on."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "name": "New Task Name",
                    "include": [
                        "notes",
                        "assignee"
                    ]
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686994324974,
        "lastModifiedTime": 1686994324974,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Successfully created the job to handle duplication.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "resource_subtype": "duplicate_task",
                        "status": "in_progress",
                        "new_project": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Stuff to buy"
                        },
                        "new_task": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        },
                        "new_project_template": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Packing list"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99120,
        "executor_type": "THIRDPARTY",
        "executor_name": "getdependentsfromatask",
        "executor_version": "v1",
        "executor_display_name": "Get dependents from a task",
        "executor_description": "Returns the compact representations of all of the dependents of a task.",
        "executor_category": "Tasks",
        "executor_category_group": "Tasks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/tasks/{task_gid}/dependents",
        "dataroot": null,
        "pathParams": [
            {
                "key": "task_gid",
                "value": "",
                "description": "The task to operate on."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686998143830,
        "lastModifiedTime": 1686998143830,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully retrieved the specified dependents of the task.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99122,
        "executor_type": "THIRDPARTY",
        "executor_name": "unlinkdependentsfromatask",
        "executor_version": "v1",
        "executor_display_name": "Unlink dependents from a task",
        "executor_description": "Unlinks a set of dependents from this task.",
        "executor_category": "Tasks",
        "executor_category_group": "Tasks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/tasks/{task_gid}/removeDependents",
        "dataroot": null,
        "pathParams": [
            {
                "key": "task_gid",
                "value": "",
                "description": "The task to operate on."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "dependents": [
                        "133713",
                        "184253"
                    ]
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686998649669,
        "lastModifiedTime": 1686998649669,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully unlinked the specified tasks as dependents.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99123,
        "executor_type": "THIRDPARTY",
        "executor_name": "addaprojecttoatask",
        "executor_version": "v1",
        "executor_display_name": "Add a project to a task",
        "executor_description": "Adds the task to the specified project, in the optional location specified. If no location arguments are given, the task will be added to the end of the project.  addProject can also be used to reorder a task within a project or section that already contains it.  At most one of insert_before, insert_after, or section should be specified. Inserting into a section in an non-order-dependent way can be done by specifying section, otherwise, to insert within a section in a particular place, specify insert_before or insert_after and a task within the section to anchor the position of this task.  Returns an empty data block.",
        "executor_category": "Tasks",
        "executor_category_group": "Tasks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/tasks/{task_gid}/addProject",
        "dataroot": null,
        "pathParams": [
            {
                "key": "task_gid",
                "value": "",
                "description": "The task to operate on."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "project": "13579",
                    "insert_after": "124816",
                    "insert_before": "432134",
                    "section": "987654"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686998815371,
        "lastModifiedTime": 1686998815371,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully added the specified project to the task.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99115,
        "executor_type": "THIRDPARTY",
        "executor_name": "getsubtasksfromatask",
        "executor_version": "v1",
        "executor_display_name": "Get subtasks from a task",
        "executor_description": "Returns a compact representation of all of the subtasks of a task.",
        "executor_category": "Tasks",
        "executor_category_group": "Tasks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/tasks/{task_gid}/subtasks",
        "dataroot": null,
        "pathParams": [
            {
                "key": "task_gid",
                "value": "",
                "description": "The task to operate on."
            }
        ],
        "queryParams": [
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            },
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686995325082,
        "lastModifiedTime": 1686995325082,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the specified task's subtasks.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99112,
        "executor_type": "THIRDPARTY",
        "executor_name": "gettasksfromasection",
        "executor_version": "v1",
        "executor_display_name": "Get tasks from a section",
        "executor_description": "Board view only: Returns the compact section records for all tasks within the given section.",
        "executor_category": "Tasks",
        "executor_category_group": "Tasks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/sections/{section_gid}/tasks",
        "dataroot": null,
        "pathParams": [
            {
                "key": "section_gid",
                "value": "",
                "description": "The globally unique identifier for the section."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686994787674,
        "lastModifiedTime": 1686994787675,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successfully retrieved the section's tasks.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99117,
        "executor_type": "THIRDPARTY",
        "executor_name": "getdependenciesfromatask",
        "executor_version": "v1",
        "executor_display_name": "Get dependencies from a task",
        "executor_description": "Returns the compact representations of all of the dependencies of a task.",
        "executor_category": "Tasks",
        "executor_category_group": "Tasks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/tasks/{task_gid}/dependencies",
        "dataroot": null,
        "pathParams": [
            {
                "key": "task_gid",
                "value": "",
                "description": "The task to operate on."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1686997352280,
        "lastModifiedTime": 1686997352280,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully retrieved the specified task's dependencies.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99126,
        "executor_type": "THIRDPARTY",
        "executor_name": "removeatagfromatask",
        "executor_version": "v1",
        "executor_display_name": "Remove a tag from a task",
        "executor_description": "Removes a tag from a task. Returns an empty data block.",
        "executor_category": "Tasks",
        "executor_category_group": "Tasks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/tasks/{task_gid}/removeTag",
        "dataroot": null,
        "pathParams": [
            {
                "key": "task_gid",
                "value": "",
                "description": "The task to operate on."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "tag": "13579"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687002941386,
        "lastModifiedTime": 1687002941386,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully removed the specified tag from the task.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99128,
        "executor_type": "THIRDPARTY",
        "executor_name": "removefollowersfromatask",
        "executor_version": "v1",
        "executor_display_name": "Remove followers from a task",
        "executor_description": "Removes each of the specified followers from the task if they are following. Returns the complete, updated record for the affected task.",
        "executor_category": "Tasks",
        "executor_category_group": "Tasks",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/tasks/{task_gid}/removeFollowers",
        "dataroot": null,
        "pathParams": [
            {
                "key": "task_gid",
                "value": "",
                "description": "The task to operate on."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "followers": [
                        "13579",
                        "321654"
                    ]
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687003713187,
        "lastModifiedTime": 1687003713187,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully removed the specified followers from the task.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Bug Task",
                        "resource_subtype": "default_task",
                        "approval_status": "pending",
                        "assignee_status": "upcoming",
                        "completed": false,
                        "completed_at": "2012-02-22T02:06:58.147Z",
                        "completed_by": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "created_at": "2012-02-22T02:06:58.147Z",
                        "dependencies": [
                            {
                                "gid": "12345",
                                "resource_type": "task"
                            }
                        ],
                        "dependents": [
                            {
                                "gid": "12345",
                                "resource_type": "task"
                            }
                        ],
                        "due_at": "2019-09-15T02:06:58.147Z",
                        "due_on": "2019-09-15",
                        "external": {
                            "gid": "my_gid",
                            "data": "A blob of information"
                        },
                        "html_notes": "<body>Mittens <em>really</em> likes the stuff from Humboldt.</body>",
                        "hearted": true,
                        "hearts": [
                            {
                                "gid": "12345",
                                "user": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            }
                        ],
                        "is_rendered_as_separator": false,
                        "liked": true,
                        "likes": [
                            {
                                "gid": "12345",
                                "user": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                }
                            }
                        ],
                        "memberships": [
                            {
                                "project": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Stuff to buy"
                                },
                                "section": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Next Actions"
                                }
                            }
                        ],
                        "modified_at": "2012-02-22T02:06:58.147Z",
                        "notes": "Mittens really likes the stuff from Humboldt.",
                        "num_hearts": 5,
                        "num_likes": 5,
                        "num_subtasks": 3,
                        "start_at": "2019-09-14T02:06:58.147Z",
                        "start_on": "2019-09-14",
                        "actual_time_minutes": 200,
                        "assignee": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "assignee_section": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Next Actions"
                        },
                        "custom_fields": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Status",
                                "resource_subtype": "text",
                                "type": "text",
                                "enum_options": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "enabled": true,
                                "is_formula_field": false,
                                "date_value": {
                                    "date": "2024-08-23",
                                    "date_time": "2024-08-23T22:00:00.000Z"
                                },
                                "enum_value": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Low",
                                    "enabled": true,
                                    "color": "blue"
                                },
                                "multi_enum_values": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Low",
                                        "enabled": true,
                                        "color": "blue"
                                    }
                                ],
                                "number_value": 5.2,
                                "text_value": "Some Value",
                                "display_value": "blue",
                                "description": "Development team priority",
                                "precision": 2,
                                "format": "custom",
                                "currency_code": "EUR",
                                "custom_label": "gold pieces",
                                "custom_label_position": "suffix",
                                "is_global_to_workspace": true,
                                "has_notifications_enabled": true,
                                "asana_created_field": "priority",
                                "is_value_read_only": false,
                                "created_by": {
                                    "gid": "12345",
                                    "resource_type": "task",
                                    "name": "Greg Sanchez"
                                },
                                "people_value": [
                                    {
                                        "gid": "12345",
                                        "resource_type": "task",
                                        "name": "Greg Sanchez"
                                    }
                                ]
                            }
                        ],
                        "followers": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            }
                        ],
                        "parent": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Bug Task",
                            "resource_subtype": "default_task"
                        },
                        "projects": [
                            {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Stuff to buy"
                            }
                        ],
                        "tags": [
                            {
                                "gid": "59746",
                                "name": "Grade A"
                            }
                        ],
                        "workspace": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "permalink_url": "https://app.asana.com/0/resource/123456789/list"
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99039,
        "executor_type": "THIRDPARTY",
        "executor_name": "triggerarule",
        "executor_version": "v1",
        "executor_display_name": "Trigger a rule",
        "executor_description": "Trigger a rule which uses an \"incoming web request\" trigger.",
        "executor_category": "Rules",
        "executor_category_group": "Rules",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/rule_triggers/{rule_trigger_gid}/run",
        "dataroot": null,
        "pathParams": [
            {
                "key": "rule_trigger_gid",
                "value": "",
                "description": "The ID of the incoming web request trigger. This value is a path parameter that is automatically generated for the API endpoint."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "resource": "12345",
                    "action_data": {
                        "jira_ticket_name": "Test",
                        "jira_ticket_id": "123"
                    }
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1686913774459,
        "lastModifiedTime": 1686922317629,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully triggered a rule.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "message": "Successfully saved the payload and ran the rule"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99133,
        "executor_type": "THIRDPARTY",
        "executor_name": "getmembershipsfromauser",
        "executor_version": "v1",
        "executor_display_name": "Get memberships from a user",
        "executor_description": "Returns the compact team membership records for the user.",
        "executor_category": "Teammemberships",
        "executor_category_group": "Teammemberships",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/users/{user_gid}/team_memberships",
        "dataroot": null,
        "pathParams": [
            {
                "key": "user_gid",
                "value": "",
                "description": "A string identifying a user. This can either be the string \"me\", an email, or the gid of a user."
            }
        ],
        "queryParams": [
            {
                "key": "workspace",
                "value": "",
                "description": "Globally unique identifier for the workspace.",
                "req": false
            },
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687006485287,
        "lastModifiedTime": 1687006485287,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully retrieved the requested users's memberships.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "user": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "team": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Marketing"
                            },
                            "is_guest": false,
                            "is_limited_access": false,
                            "is_admin": false
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99131,
        "executor_type": "THIRDPARTY",
        "executor_name": "getteammemberships",
        "executor_version": "v1",
        "executor_display_name": "Get team memberships",
        "executor_description": "Returns compact team membership records.",
        "executor_category": "Teammemberships",
        "executor_category_group": "Teammemberships",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/team_memberships",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "team",
                "value": "",
                "description": "Globally unique identifier for the team.",
                "req": false
            },
            {
                "key": "user",
                "value": "",
                "description": "A string identifying a user. This can either be the string \"me\", an email, or the gid of a user. This parameter must be used with the workspace parameter.",
                "req": false
            },
            {
                "key": "workspace",
                "value": "",
                "description": "Globally unique identifier for the workspace. This parameter must be used with the user parameter.",
                "req": false
            },
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687005697578,
        "lastModifiedTime": 1687005697579,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully retrieved the requested team memberships.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "user": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "team": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Marketing"
                            },
                            "is_guest": false,
                            "is_limited_access": false,
                            "is_admin": false
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99132,
        "executor_type": "THIRDPARTY",
        "executor_name": "getmembershipsfromateam",
        "executor_version": "v1",
        "executor_display_name": "Get memberships from a team",
        "executor_description": "Returns the compact team memberships for the team.",
        "executor_category": "Teammemberships",
        "executor_category_group": "Teammemberships",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/teams/{team_gid}/team_memberships",
        "dataroot": null,
        "pathParams": [
            {
                "key": "team_gid",
                "value": "",
                "description": "Globally unique identifier for the team."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687006099416,
        "lastModifiedTime": 1687006099416,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully retrieved the requested team's memberships.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "user": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Greg Sanchez"
                            },
                            "team": {
                                "gid": "12345",
                                "resource_type": "task",
                                "name": "Marketing"
                            },
                            "is_guest": false,
                            "is_limited_access": false,
                            "is_admin": false
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99130,
        "executor_type": "THIRDPARTY",
        "executor_name": "getateammembership",
        "executor_version": "v1",
        "executor_display_name": "Get a team membership",
        "executor_description": "Returns the complete team membership record for a single team membership.",
        "executor_category": "Teammemberships",
        "executor_category_group": "Teammemberships",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/team_memberships/{team_membership_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "team_membership_gid",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687005411501,
        "lastModifiedTime": 1687005411501,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully retrieved the requested team membership.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "user": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "team": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Marketing"
                        },
                        "is_guest": false,
                        "is_limited_access": false,
                        "is_admin": false
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99135,
        "executor_type": "THIRDPARTY",
        "executor_name": "createateam",
        "executor_version": "v1",
        "executor_display_name": "Create a team",
        "executor_description": "Creates a team within the current workspace.",
        "executor_category": "Teams",
        "executor_category_group": "Teams",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/teams",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "name": "Marketing",
                    "description": "All developers should be members of this team.",
                    "html_description": "<body><em>All</em> developers should be members of this team.</body>",
                    "organization": "123456789",
                    "visibility": "secret",
                    "edit_team_name_or_description_access_level": "all_team_members",
                    "edit_team_visibility_or_trash_team_access_level": "all_team_members",
                    "member_invite_management_access_level": "all_team_members",
                    "guest_invite_management_access_level": "all_team_members",
                    "join_request_management_access_level": "all_team_members",
                    "team_member_removal_access_level": "all_team_members"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687006808791,
        "lastModifiedTime": 1687006808791,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Successfully created a new team.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Marketing",
                        "description": "All developers should be members of this team.",
                        "html_description": "<body><em>All</em> developers should be members of this team.</body>",
                        "organization": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "permalink_url": "https://app.asana.com/0/resource/123456789/list",
                        "visibility": "secret",
                        "edit_team_name_or_description_access_level": "all_team_members",
                        "edit_team_visibility_or_trash_team_access_level": "all_team_members",
                        "member_invite_management_access_level": "all_team_members",
                        "guest_invite_management_access_level": "all_team_members",
                        "join_request_management_access_level": "all_team_members",
                        "team_member_removal_access_level": "all_team_members"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99144,
        "executor_type": "THIRDPARTY",
        "executor_name": "addausertoateam",
        "executor_version": "v1",
        "executor_display_name": "Add a user to a team",
        "executor_description": "The user making this call must be a member of the team in order to add others. The user being added must exist in the same organization as the team.  Returns the complete team membership record for the newly added user.",
        "executor_category": "Teams",
        "executor_category_group": "Teams",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/teams/{team_gid}/addUser",
        "dataroot": null,
        "pathParams": [
            {
                "key": "team_gid",
                "value": "",
                "description": "Globally unique identifier for the team."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "user": "12345"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687007589262,
        "lastModifiedTime": 1687007589262,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "Successfully added user to the team.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "user": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Greg Sanchez"
                        },
                        "team": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Marketing"
                        },
                        "is_guest": false,
                        "is_limited_access": false,
                        "is_admin": false
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99142,
        "executor_type": "THIRDPARTY",
        "executor_name": "getteamsforauser",
        "executor_version": "v1",
        "executor_display_name": "Get teams for a user",
        "executor_description": "Returns the compact records for all teams to which the given user is assigned.",
        "executor_category": "Teams",
        "executor_category_group": "Teams",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/users/{user_gid}/teams",
        "dataroot": null,
        "pathParams": [
            {
                "key": "user_gid",
                "value": "",
                "description": "A string identifying a user. This can either be the string \"me\", an email, or the gid of a user."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            },
            {
                "key": "organization",
                "value": "",
                "description": "The workspace or organization to filter teams on.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687007458492,
        "lastModifiedTime": 1687007458492,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "Returns the team records for all teams in the organization or workspace to which the given user is assigned.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Marketing"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99137,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateateam",
        "executor_version": "v1",
        "executor_display_name": "Update a team",
        "executor_description": "Updates a team within the current workspace.",
        "executor_category": "Teams",
        "executor_category_group": "Teams",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://app.asana.com/api/1.0/teams",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "name": "Marketing",
                    "description": "All developers should be members of this team.",
                    "html_description": "<body><em>All</em> developers should be members of this team.</body>",
                    "organization": "123456789",
                    "visibility": "secret",
                    "edit_team_name_or_description_access_level": "all_team_members",
                    "edit_team_visibility_or_trash_team_access_level": "all_team_members",
                    "member_invite_management_access_level": "all_team_members",
                    "guest_invite_management_access_level": "all_team_members",
                    "join_request_management_access_level": "all_team_members",
                    "team_member_removal_access_level": "all_team_members"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687006945417,
        "lastModifiedTime": 1687006945417,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "Successfully updated the team.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Marketing",
                        "description": "All developers should be members of this team.",
                        "html_description": "<body><em>All</em> developers should be members of this team.</body>",
                        "organization": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "permalink_url": "https://app.asana.com/0/resource/123456789/list",
                        "visibility": "secret",
                        "edit_team_name_or_description_access_level": "all_team_members",
                        "edit_team_visibility_or_trash_team_access_level": "all_team_members",
                        "member_invite_management_access_level": "all_team_members",
                        "guest_invite_management_access_level": "all_team_members",
                        "join_request_management_access_level": "all_team_members",
                        "team_member_removal_access_level": "all_team_members"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99141,
        "executor_type": "THIRDPARTY",
        "executor_name": "getteamsinaworkspace",
        "executor_version": "v1",
        "executor_display_name": "Get teams in a workspace",
        "executor_description": "Returns the compact records for all teams in the workspace visible to the authorized user.",
        "executor_category": "Teams",
        "executor_category_group": "Teams",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/workspaces/{workspace_gid}/teams",
        "dataroot": null,
        "pathParams": [
            {
                "key": "workspace_gid",
                "value": "",
                "description": "Globally unique identifier for the workspace or organization."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687007340555,
        "lastModifiedTime": 1687007340555,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "Returns the team records for all teams in the organization or workspace accessible to the authenticated user.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "Marketing"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99139,
        "executor_type": "THIRDPARTY",
        "executor_name": "getateam",
        "executor_version": "v1",
        "executor_display_name": "Get a team",
        "executor_description": "Returns the full record for a single team.",
        "executor_category": "Teams",
        "executor_category_group": "Teams",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://app.asana.com/api/1.0/teams/{team_gid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "team_gid",
                "value": "",
                "description": "Globally unique identifier for the team."
            }
        ],
        "queryParams": [
            {
                "key": "opt_fields",
                "value": "",
                "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
                "req": false
            },
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Results per page. The number of objects to return per page. The value must be between 1 and 100.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687007242458,
        "lastModifiedTime": 1687007242458,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "Successfully retrieved the record for a single team.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "gid": "12345",
                        "resource_type": "task",
                        "name": "Marketing",
                        "description": "All developers should be members of this team.",
                        "html_description": "<body><em>All</em> developers should be members of this team.</body>",
                        "organization": {
                            "gid": "12345",
                            "resource_type": "task",
                            "name": "My Company Workspace"
                        },
                        "permalink_url": "https://app.asana.com/0/resource/123456789/list",
                        "visibility": "secret",
                        "edit_team_name_or_description_access_level": "all_team_members",
                        "edit_team_visibility_or_trash_team_access_level": "all_team_members",
                        "member_invite_management_access_level": "all_team_members",
                        "guest_invite_management_access_level": "all_team_members",
                        "join_request_management_access_level": "all_team_members",
                        "team_member_removal_access_level": "all_team_members"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 99147,
        "executor_type": "THIRDPARTY",
        "executor_name": "removeauserfromateam",
        "executor_version": "v1",
        "executor_display_name": "Remove a user from a team",
        "executor_description": "The user making this call must be a member of the team in order to remove themselves or others.",
        "executor_category": "Teams",
        "executor_category_group": "Teams",
        "service_provider": "asana",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://app.asana.com/api/1.0/teams/{team_gid}/removeUser",
        "dataroot": null,
        "pathParams": [
            {
                "key": "team_gid",
                "value": "",
                "description": "Globally unique identifier for the team."
            }
        ],
        "queryParams": [
            {
                "key": "opt_pretty",
                "value": "",
                "description": "Provides \u201cpretty\u201d output. Provides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "user": "12345"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1687007774049,
        "lastModifiedTime": 1687007774049,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "There was a problem on Asana\u2019s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "message": "project: Missing input",
                            "help": "For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'",
                            "phrase": "6 sad squid snuggle softly"
                        }
                    ]
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": "Returns an empty data record",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    }
]