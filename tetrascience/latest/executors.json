[
    {
        "id": 90534,
        "executor_type": "THIRDPARTY",
        "executor_name": "statusByPipeline",
        "executor_version": "v1",
        "executor_display_name": "Status By Pipeline",
        "executor_description": "Status By Pipeline",
        "executor_category": "Pipelines",
        "executor_category_group": "Pipelines>Workflows",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.tetrascience.com/v1/workflow/statusByPipeline",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1682628769715,
        "lastModifiedTime": 1682628769715,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90522,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateExistingPipeline",
        "executor_version": "v1",
        "executor_display_name": "Update Existing Pipeline",
        "executor_description": "Update Existing Pipeline",
        "executor_category": "Pipelines",
        "executor_category_group": "Pipelines",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.tetrascience.com/v1/pipeline/update/{pipelineId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "pipelineId",
                "value": "",
                "description": "Required. UUID of the pipeline that you want update."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682627591916,
        "lastModifiedTime": 1682648541177,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "4070efe0-0381-451c-acc1-025025b7688f",
                    "name": "HG-ApiTest-Pipe-101",
                    "description": "Pipeline created using API",
                    "triggerType": "custom",
                    "triggerCondition": {
                        "groupOperator": "AND",
                        "groupLevel": 1,
                        "groups": [
                            {
                                "groupLevel": 2,
                                "groupOperator": "AND",
                                "groups": [
                                    {
                                        "key": "sourceId",
                                        "operator": "is",
                                        "value": "4095be8f-40c6-487d-99ce-bef42682c36b"
                                    }
                                ]
                            },
                            {
                                "groupLevel": 2,
                                "groupOperator": "AND",
                                "groups": [
                                    {
                                        "key": "category",
                                        "operator": "is",
                                        "value": "raw"
                                    }
                                ]
                            }
                        ]
                    },
                    "protocolSlug": "hg-prot-covid-data",
                    "protocolVersion": "v2.1.0",
                    "createdAt": "2022-02-11T18:48:45.331Z",
                    "updatedAt": "2022-02-11T18:56:39.733Z",
                    "pipelineConfig": {
                        "notificationsConfig": {
                            "sendOnSuccessful": true,
                            "sendOnFailed": true,
                            "notificationEmailAddresses": [
                                "example1@yourcompany.com",
                                "example2@yourcompany.com"
                            ]
                        }
                    },
                    "masterScriptNamespace": "private-yourcompany",
                    "masterScriptSlug": "hg-prot-covid-data",
                    "masterScriptVersion": "v2.1.0",
                    "status": "disabled",
                    "standby": 0,
                    "retryBehavior": null
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 400,
                    "error": "Bad Request",
                    "message": "\"triggerCondition\" is required",
                    "validation": {
                        "source": "payload",
                        "keys": [
                            "triggerCondition"
                        ]
                    }
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "file not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 404,
                    "error": "Not Found",
                    "message": "The requested item was not found."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90527,
        "executor_type": "THIRDPARTY",
        "executor_name": "searchPipelines",
        "executor_version": "v1",
        "executor_display_name": "Search Pipelines",
        "executor_description": "Search Pipelines",
        "executor_category": "Pipelines",
        "executor_category_group": "Pipelines",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.tetrascience.com/v1/pipeline/search",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "from",
                "value": "",
                "description": "Optional. Paging index. Starts with zero.",
                "req": false
            },
            {
                "key": "order",
                "value": "",
                "description": "Optional. Options are asc, desc. asc is ascending and desc is descending. The default is desc. Note that the specific ordering data type is based on what is given in sortBy field.",
                "req": false
            },
            {
                "key": "pipelineStatus",
                "value": "",
                "description": "Filter results by pipelines enable/disable state. Possible values are: enabled, disabled, all. The Default is all. All does not filter on by enable/disable state, all pipelines that meet other search criteria will be returned.",
                "req": false
            },
            {
                "key": "pipelineNameOrId",
                "value": "",
                "description": "Optional. Find pipelines that have the given string in its name or the pipelineId. For PipelineId: Full string match of pipeline UUID. No fuzzy search. Case insensitive search. For Pipeline name: Fuzzy search: Partial string match with pipeline name. Case insensitive search.",
                "req": false
            },
            {
                "key": "protocolName",
                "value": "",
                "description": "Optional. Find pipelines that have the given string in their protocol name. Case insensitive search.",
                "req": false
            },
            {
                "key": "protocolNamespace",
                "value": "",
                "description": "Optional. Find pipelines that are in the given namespace. Must be one of the following: common, client, or private.",
                "req": false
            },
            {
                "key": "protocolVersion",
                "value": "",
                "description": "Optional. Find pipelines that use a specific version of a protocol, the latest version, or all versions. Must have protocolName. Following are the valid options: all - detail list of all versions latest - Only the newest version as determined by the largest numbering vX.Y.Z vX.Y.X - specific version of protocol Default is all.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Optional. Number of results to return starting from the page index given in the \u201cfrom\u201d parameter. Default is 10, Max is 100.",
                "req": false
            },
            {
                "key": "sortBy",
                "value": "",
                "description": "Optional. Indicates the sorting field. Can be one of the following: pipelineName, protocolName, lastConfigUpdate, createDate. The default is the lastConfigUpdate.",
                "req": false
            },
            {
                "key": "startTime",
                "value": "",
                "description": "Optional. Provides a lower bound time range on the pipeline\u2019s lastConfigUpdate field. If not specified, there are no defaults and the filter is not applied. If supplied, the value must be ISO format only.",
                "req": false
            },
            {
                "key": "endTime",
                "value": "",
                "description": "Optional. Provides an upper bound time range on the pipeline\u2019s lastConfigUpdate field. If not specified, there are no defaults and the filter is not applied. If supplied, the value must be ISO format only.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1682628086466,
        "lastModifiedTime": 1682628086466,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90536,
        "executor_type": "THIRDPARTY",
        "executor_name": "getSingleWorkflowDetails",
        "executor_version": "v1",
        "executor_display_name": "Get Single Workflow Details",
        "executor_description": "Get Single Workflow Details",
        "executor_category": "Pipelines",
        "executor_category_group": "Pipelines>Workflows",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.tetrascience.com/v1/workflow/{workflowId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "workflowId",
                "value": "",
                "description": "Required. UUID of the workflow."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682628909131,
        "lastModifiedTime": 1682649156293,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "38bc1925-cd38-4232-a8cd-16c1baffa0d7",
                    "orgSlug": "your_org",
                    "pipelineId": "8592187a-d3ed-4410-8ffb-ee47826bebf7",
                    "masterScriptNamespace": "private-your_org",
                    "masterScriptSlug": "hg-prot-covid-data",
                    "masterScriptVersion": "v2.1.0",
                    "protocolSlug": "hg-prot-covid-data",
                    "protocolVersion": "v2.1.0",
                    "protocol": {
                        "protocolSchema": "v2",
                        "name": "HG Protocol COVID-JSON to IDS",
                        "description": "",
                        "steps": [
                            {
                                "slug": "first-step-covid-json-ids",
                                "description": "Generates COVID data row (IDS JSON) for each state.",
                                "type": "generator",
                                "script": {
                                    "namespace": "private-your_org",
                                    "slug": "hg-tscr-covid-data",
                                    "version": "v2.0.1"
                                },
                                "functionSlug": "main"
                            }
                        ],
                        "config": []
                    },
                    "pipelineConfig": {
                        "notificationsConfig": {
                            "sendOnSuccessful": true,
                            "sendOnFailed": true,
                            "notificationEmailAddresses": [
                                "example1@your_org.com",
                                "example2@your_org.com"
                            ]
                        },
                        "pipelineName": "HG-Covid-Demo"
                    },
                    "inputFile": {
                        "meta": {
                            "fileId": "650bc88a-e90c-48c7-a349-65dcc756b0a4",
                            "source": {
                                "box": {
                                    "id": "56d9293c-2dc7-4133-b21b-c1468aefb41f",
                                    "size": 2648411,
                                    "filePath": "/All Files/your_org/coviddata/statesdata/covid_states_tseries_2021_12_09.json",
                                    "integrationSource": "4095be8f-40c6-487d-99ce-bef42682c36b"
                                },
                                "type": "box"
                            },
                            "traceId": "650bc88a-e90c-48c7-a349-65dcc756b0a4",
                            "sourceId": "4095be8f-40c6-487d-99ce-bef42682c36b",
                            "sourceName": "HG-Box-Covid-Data-States",
                            "sourceType": "box",
                            "integrationId": "56d9293c-2dc7-4133-b21b-c1468aefb41f",
                            "integrationType": "box"
                        },
                        "type": "s3file",
                        "bucket": "ts-platform-dev-datalake",
                        "fileId": "650bc88a-e90c-48c7-a349-65dcc756b0a4",
                        "fileKey": "your_org/4095be8f-40c6-487d-99ce-bef42682c36b/RAW/All Files/your_org/coviddata/statesdata/covid_states_tseries_2021_12_09.json",
                        "version": "YXWfnGtFnxXaRshIkphKpeIWjKM5YMrL",
                        "customTags": [],
                        "customMetadata": {}
                    },
                    "tasks": [
                        {
                            "slug": "first-step-covid-json-ids",
                            "input": {
                                "input_file": {
                                    "meta": {
                                        "fileId": "650bc88a-e90c-48c7-a349-65dcc756b0a4",
                                        "source": {
                                            "box": {
                                                "id": "56d9293c-2dc7-4133-b21b-c1468aefb41f",
                                                "size": 2648411,
                                                "filePath": "/All Files/your_org/coviddata/statesdata/covid_states_tseries_2021_12_09.json",
                                                "integrationSource": "4095be8f-40c6-487d-99ce-bef42682c36b"
                                            },
                                            "type": "box"
                                        },
                                        "traceId": "650bc88a-e90c-48c7-a349-65dcc756b0a4",
                                        "sourceId": "4095be8f-40c6-487d-99ce-bef42682c36b",
                                        "sourceName": "HG-Box-Covid-Data-States",
                                        "sourceType": "box",
                                        "integrationId": "56d9293c-2dc7-4133-b21b-c1468aefb41f",
                                        "integrationType": "box"
                                    },
                                    "type": "s3file",
                                    "bucket": "ts-platform-dev-datalake",
                                    "fileId": "650bc88a-e90c-48c7-a349-65dcc756b0a4",
                                    "fileKey": "your_org/4095be8f-40c6-487d-99ce-bef42682c36b/RAW/All Files/your_org/coviddata/statesdata/covid_states_tseries_2021_12_09.json",
                                    "version": "YXWfnGtFnxXaRshIkphKpeIWjKM5YMrL",
                                    "customTags": [],
                                    "customMetadata": {}
                                }
                            },
                            "retry": 0,
                            "events": [
                                {
                                    "at": "2021-12-15T16:35:19.762Z",
                                    "status": "pending"
                                },
                                {
                                    "at": "2021-12-15T16:35:44.639Z",
                                    "status": "in-progress"
                                },
                                {
                                    "at": "2021-12-15T16:36:10.039Z",
                                    "status": "completed"
                                }
                            ],
                            "output": {
                                "type": "success",
                                "result": "ReturnRandomData"
                            },
                            "script": {
                                "list": [
                                    "requirements.txt",
                                    "README-internal.md",
                                    "config.json",
                                    "README.md",
                                    "Pipfile",
                                    "main.py",
                                    "Pipfile.lock",
                                    "__test__/test_business_logic.py",
                                    "__test__/test_config.py",
                                    "__test__/test_integration.py",
                                    "__test__/__pycache__/test_business_logic.cpython-37.pyc",
                                    "__test__/__pycache__/test_config.cpython-37.pyc",
                                    "__test__/__pycache__/test_integration.cpython-37.pyc",
                                    "__test__/data/expected.json",
                                    "__test__/data/input.json",
                                    "__pycache__/main.cpython-37.pyc"
                                ],
                                "slug": "hg-tscr-covid-data",
                                "docker": {
                                    "image": "706717599419.dkr.ecr.us-east-2.amazonaws.com/ts-platform-development-task-private-your_org-hg-tscr-covid-data@sha256:2596c523501d6d88d2a411f60dabb9eeeb6cfb26634f6d61688c5a70c660d299"
                                },
                                "version": "v2.0.1",
                                "language": "python",
                                "maxCount": 30,
                                "createdAt": "2021-12-15T16:33:30.588Z",
                                "functions": [
                                    {
                                        "slug": "main",
                                        "function": "main.main"
                                    }
                                ],
                                "hasSource": true,
                                "namespace": "private-your_org",
                                "timestamp": 1639585872877,
                                "runnerType": "ecs",
                                "buildLogSaved": true,
                                "buildDurationMs": 79859
                            },
                            "status": "completed",
                            "taskId": "006fb33e-7f36-4345-b35b-23ae39e27d31",
                            "options": {},
                            "createdAt": "2021-12-15T16:35:19.746Z",
                            "containerId": "fc11e389-8cc9-4581-ba0f-dbee1936d0b1",
                            "functionSlug": "main",
                            "lastUpdatedAt": "2021-12-15T16:36:10.043Z",
                            "taskMemoryInMB": 512,
                            "cloudWatchUrl": "https://us-east-2.console.aws.amazon.com/cloudwatch/home?region=us-east-2#logs-insights:queryDetail=~(end~'2021-12-15T16*3a41*3a10.043Z~start~'2021-12-15T16*3a30*3a19.746Z~timeType~'ABSOLUTE~tz~'Local~editorString~'filter*20*60taskId*60*3d*27006fb33e-7f36-4345-b35b-23ae39e27d31*27*20and*20*60containerId*60*3d*27fc11e389-8cc9-4581-ba0f-dbee1936d0b1*27*0a*7c*20fields*20*40timestamp*2c*20*40message*0a*7c*20sort*20*40timestamp*20asc~source~(~'*2fecs*2ftaskscripts*2fts-platform*2fcontainers))"
                        }
                    ],
                    "supersededTasks": [],
                    "status": "completed",
                    "events": [
                        {
                            "at": "2021-12-15T16:35:19.665Z",
                            "status": "in-progress"
                        },
                        {
                            "at": "2021-12-15T16:36:10.049Z",
                            "status": "completed"
                        }
                    ],
                    "createdAt": "2021-12-15T16:35:19.118Z",
                    "lastUpdatedAt": "2021-12-15T16:36:10.049Z",
                    "restarted": false,
                    "masterScriptLogs": [],
                    "retryBehavior": "off",
                    "output": {
                        "type": "success",
                        "result": "ReturnRandomData"
                    }
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "file not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 404,
                    "error": "Not Found",
                    "message": "WorkflowID 38bc1925-cd38-4232-a8cd-16c1baffa0d0 not found"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90516,
        "executor_type": "THIRDPARTY",
        "executor_name": "getDetailsofaSinglePipeline",
        "executor_version": "v1",
        "executor_display_name": "Get Details of a Single Pipeline",
        "executor_description": "Search data pipeline workflows",
        "executor_category": "Pipelines",
        "executor_category_group": "Pipelines",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.tetrascience.com/v1/pipeline/{pipelineId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "pipelineId",
                "value": "",
                "description": "Required. UUID of the pipeline that you want get information about."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682627173352,
        "lastModifiedTime": 1682647568741,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "8592187a-d3ed-4410-8ffb-ee47826bebf7",
                    "name": "HG-Covid-Data",
                    "description": "Reads in Covid USA states Data",
                    "triggerType": "custom",
                    "triggerCondition": {
                        "groupOperator": "AND",
                        "groupLevel": 1,
                        "groups": [
                            {
                                "groupLevel": 2,
                                "groupOperator": "AND",
                                "groups": [
                                    {
                                        "key": "sourceId",
                                        "operator": "is",
                                        "value": "4095be8f-40c6-487d-99ce-bef42682c36b"
                                    }
                                ]
                            },
                            {
                                "groupLevel": 2,
                                "groupOperator": "AND",
                                "groups": [
                                    {
                                        "key": "category",
                                        "operator": "is",
                                        "value": "raw"
                                    }
                                ]
                            }
                        ]
                    },
                    "protocolSlug": "hg-prot-covid-data",
                    "protocolVersion": "v2.1.0",
                    "createdAt": "2021-11-08T19:00:02.701Z",
                    "updatedAt": "2022-02-03T17:54:46.962Z",
                    "pipelineConfig": {
                        "notificationsConfig": {
                            "sendOnSuccessful": true,
                            "sendOnFailed": true,
                            "notificationEmailAddresses": [
                                "hgovind+tdp1@tetrascience.com",
                                "hgovind+tdp2@tetrascience.com"
                            ]
                        }
                    },
                    "masterScriptNamespace": "private-tetrascience",
                    "masterScriptSlug": "hg-prot-covid-data",
                    "masterScriptVersion": "v2.1.0",
                    "status": null,
                    "standby": 0,
                    "retryBehavior": null
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "file not find",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 404,
                    "error": "Not Found",
                    "message": "\"pipelineId\" must be a valid GUID",
                    "validation": {
                        "source": "params",
                        "keys": [
                            "pipelineId"
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90518,
        "executor_type": "THIRDPARTY",
        "executor_name": "paginateThroughallPipelineDetails",
        "executor_version": "v1",
        "executor_display_name": "Paginate Through all Pipeline Details",
        "executor_description": "Lists all of the pipelines in a paginated list",
        "executor_category": "Pipelines",
        "executor_category_group": "Pipelines",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.tetrascience.com/v1/pipeline/list",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "size",
                "value": "",
                "description": "Optional. Number of results to return starting from the page index given in the \u201cfrom\u201d parameter. Default: 100 Max: 1000",
                "req": false
            },
            {
                "key": "from",
                "value": "",
                "description": "Optional. Paging index. Starts with zero. Default: 0",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682627351273,
        "lastModifiedTime": 1682648390233,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "from": 0,
                    "size": 10,
                    "hasNext": true,
                    "hits": [
                        10
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 400,
                    "error": "Bad Request",
                    "message": "Invalid request query input"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90524,
        "executor_type": "THIRDPARTY",
        "executor_name": "processListofFileswithPipeline",
        "executor_version": "v1",
        "executor_display_name": "Process List of Files with Pipeline",
        "executor_description": "Process List of Files with Pipeline",
        "executor_category": "Pipelines",
        "executor_category_group": "Pipelines",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": " https://api.tetrascience.com/v1/pipeline/process/{pipelineId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "pipelineId",
                "value": "",
                "description": "Required. UUID of the pipeline that will process the files."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682627750061,
        "lastModifiedTime": 1682648726405,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "success": [
                        {
                            "fileId": "650bc88a-e90c-48c7-a349-65dcc756b0a4",
                            "workflowId": "b935b198-b1e1-48da-9536-ce38962e74dd"
                        },
                        {
                            "fileId": "18384a5f-9007-4028-85cd-e191a04a71d5",
                            "workflowId": "2fa4ab1d-38a4-4f18-90ba-cf0a1424fbd2"
                        }
                    ],
                    "error": []
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 400,
                    "error": "Bad Request",
                    "message": "Invalid request payload JSON format"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "file not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 404,
                    "error": "Not Found",
                    "message": "\"pipelineId\" must be a valid GUID",
                    "validation": {
                        "source": "params",
                        "keys": [
                            "pipelineId"
                        ]
                    }
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.\u201d",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 404,
                    "error": "Not Found",
                    "message": "The requested item was not found."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90530,
        "executor_type": "THIRDPARTY",
        "executor_name": "searchWorkflows",
        "executor_version": "v1",
        "executor_display_name": "Search Workflows",
        "executor_description": "Search data pipeline workflows",
        "executor_category": "Pipelines",
        "executor_category_group": "Pipelines>Workflows",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.tetrascience.com/v1/workflow/workflows",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "page",
                "value": "",
                "description": "Results page number - the start index of results is calculated as (page - 1) * limit. Page parameter will return results in range [start index, start index + limit]. Default value is 1. Value 0 will cause error.  1",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": " Page size - number of the workflow results to retrieve for a given page",
                "req": false
            },
            {
                "key": "filter",
                "value": "",
                "description": "Filter by the workflow completion status. Possible values are: all - for all the workflows (completed and failed), failed - for the workflows that failed or were canceled, and completed - for the workflows that completed successfully.  all",
                "req": false
            },
            {
                "key": "pipelineId",
                "value": "",
                "description": "Optional parameter. If provided, only the workflows associated with this pipelineid are retrieved. Otherwise, the workflows from all the pipelines are retrieved.",
                "req": false
            },
            {
                "key": "startTime",
                "value": "",
                "description": "Optional parameter. If provided, service returns all the workflows created after this time. Value can be Unix time in milliseconds or date in ISO format with or without hours, minutes, seconds. If value is just a date without hours, minutes and second, timestamp will be defaulted to 00:00:00 for given date.",
                "req": false
            },
            {
                "key": "endTime",
                "value": "",
                "description": "Optional parameter. If provided, service returns all the workflows created before this time. Value can be Unix time in milliseconds or date in ISO format with or without hours, minutes, seconds. If value is just a date without hours, minutes and second, timestamp will be defaulted to 00:00:00 for given date.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682628439206,
        "lastModifiedTime": 1682648902555,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": "ab3d4e44-483e-446f-9e76-92ab4d01f903",
                        "protocolSlug": "leaf-nodes-excel-and-csv-to-adf",
                        "pipelineId": "a592d372-3bdf-417e-b650-4e3c02cec688",
                        "protocolVersion": "v1.0.0",
                        "orgSlug": "demo",
                        "protocol": {
                            "name": "Convert leaf nodes Excel into ADF",
                            "steps": [
                                {
                                    "slug": "parse-leaf-nodes-excel-or-csv-to-json",
                                    "description": "Parse a leaf node Excel into a json file, such that ADF/SHACL generation can be automated. ",
                                    "type": "parser",
                                    "pattern": "map",
                                    "script": {
                                        "slug": "parse-leaf-nodes-excel-or-csv-to-json",
                                        "version": "v1.0.0"
                                    },
                                    "inputMapping": [
                                        {
                                            "key": "tempDir",
                                            "value": "/$context/session/fileDir"
                                        }
                                    ],
                                    "outputMapping": [
                                        {
                                            "key": "leafNodesJson",
                                            "shouldUpload": true,
                                            "value": "/$session/leafNodesJson"
                                        }
                                    ]
                                }
                            ]
                        },
                        "inputFile": {
                            "meta": {
                                "fileId": "7beb45c3-2d07-4ad7-bf49-8efa29a52e44",
                                "sourceType": "egnyte",
                                "source": {
                                    "type": "egnyte",
                                    "egnyte": {
                                        "url": "https://apptetrascience.qa-egnyte.com",
                                        "integrationId": "febf8cab-0103-4320-ad63-7eab9f26d025",
                                        "filePath": "/Private/demo/test/Structured Spreadsheet for RAMAN Data Cube automation 20180802.xlsx",
                                        "fileName": "Structured Spreadsheet for RAMAN Data Cube automation 20180802.xlsx",
                                        "groupId": "df754531-48bf-441b-8a6b-329f55914c51",
                                        "entryId": "051d5fc1-be3e-4219-bc90-303b3a1e89df",
                                        "checksum": "bbb609cb3fed2bcc2bec44de062c450115322f9b35bbf74f988d1d789326767bb59cf8f68a229c1e5808c8b51d6d22a631dc44ad49ae62c54056a89807367bb6",
                                        "versionId": "051d5fc1-be3e-4219-bc90-303b3a1e89df",
                                        "lastModifiedTime": "2018-09-17T17:47:42.000Z",
                                        "versionNum": 1
                                    }
                                }
                            },
                            "fileKey": "demo/7beb45c3-2d07-4ad7-bf49-8efa29a52e44/1538761419866-Structured Spreadsheet for RAMAN Data Cube automation 20180802.xlsx",
                            "bucket": "files-service",
                            "type": "s3file",
                            "checksum": "d219c4945c3167d4547640d211908640"
                        },
                        "tasks": [
                            {
                                "logs": [
                                    {
                                        "type": "content",
                                        "content": "",
                                        "sessionId": "5fc6004f-f9df-4f57-8455-49fd99e4bbc6"
                                    }
                                ],
                                "slug": "parse-leaf-nodes-excel-or-csv-to-json",
                                "errors": [
                                    {
                                        "error": {
                                            "error": {
                                                "message": "Parsing error"
                                            },
                                            "message": "Script failed. Please check the log file"
                                        },
                                        "action": "run-script",
                                        "exitCode": 1,
                                        "sessionId": "5fc6004f-f9df-4f57-8455-49fd99e4bbc6",
                                        "humanReadableMsg": "Script failed. Please check the log file"
                                    }
                                ],
                                "status": "failed",
                                "taskId": "72e9f8fe-bbc6-49f7-b609-8c48e6b98447",
                                "createdAt": 1538761420014,
                                "lastUpdatedAt": 1538761426013
                            }
                        ],
                        "status": "failed",
                        "createdAt": 1538761420014,
                        "lastUpdatedAt": 1538761426013,
                        "pipelineConfig": {}
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90533,
        "executor_type": "THIRDPARTY",
        "executor_name": "searchWorkflow",
        "executor_version": "v1",
        "executor_display_name": "Search Workflow",
        "executor_description": "Search data pipeline workflows",
        "executor_category": "Pipelines",
        "executor_category_group": "Pipelines>Workflows",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.tetrascience.com/v1/workflow/search",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "filter",
                "value": "",
                "description": "Filter by the workflow completion status. Possible values are: all - for all the workflows (completed and failed), failed - for the workflows that failed or were canceled, and completed - for the workflows that completed successfully.  all",
                "req": false
            },
            {
                "key": "pipelineId",
                "value": "",
                "description": "Optional parameter. If provided, only the workflows associated with this pipelineid are retrieved. Otherwise, the workflows from all the pipelines are retrieved.",
                "req": false
            },
            {
                "key": "startTime",
                "value": "",
                "description": "Optional parameter. If provided, service returns all the workflows created after this time. Value can be Unix time in milliseconds or date in ISO format with or without hours, minutes, seconds. If value is just a date without hours, minutes and second, timestamp will be defaulted to 00:00:00 for given date.",
                "req": false
            },
            {
                "key": "endTime",
                "value": "",
                "description": "Optional parameter. If provided, service returns all the workflows created before this time. Value can be Unix time in milliseconds or date in ISO format with or without hours, minutes, seconds. If value is just a date without hours, minutes and second, timestamp will be defaulted to 00:00:00 for given date.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Optional. Number of results to return starting from the page index given in the \u201cfrom\u201d parameter. Default: 10 Max: 100",
                "req": false
            },
            {
                "key": "from",
                "value": "",
                "description": "Optional. Paging index. Starts with zero. Default: 0",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682628666692,
        "lastModifiedTime": 1682649068639,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "from": 0,
                    "size": 2,
                    "hasNext": true,
                    "hits": [
                        {
                            "id": "ea3e0f87-4ba2-4a10-83f3-db30760fd652",
                            "orgSlug": "your_org",
                            "pipelineId": "8592187a-d3ed-4410-8ffb-ee47826bebf7",
                            "masterScriptNamespace": "private-your_org",
                            "masterScriptSlug": "hg-prot-covid-data",
                            "masterScriptVersion": "v2.1.0",
                            "protocolSlug": "hg-prot-covid-data",
                            "protocolVersion": "v2.1.0",
                            "protocol": {
                                "protocolSchema": "v2",
                                "name": "HG Protocol COVID-JSON to IDS",
                                "description": "",
                                "steps": [
                                    {
                                        "slug": "first-step-covid-json-ids",
                                        "description": "Generates COVID data row (IDS JSON) for each state.",
                                        "type": "generator",
                                        "script": {
                                            "namespace": "private-your_org",
                                            "slug": "hg-tscr-covid-data",
                                            "version": "v2.0.1"
                                        },
                                        "functionSlug": "main"
                                    }
                                ],
                                "config": []
                            },
                            "pipelineConfig": {
                                "notificationsConfig": {
                                    "sendOnSuccessful": true,
                                    "sendOnFailed": true,
                                    "notificationEmailAddresses": [
                                        "example1@your_org.com",
                                        "example2@your_org.com"
                                    ]
                                },
                                "pipelineName": "HG-Covid-Data"
                            },
                            "inputFile": {
                                "meta": {
                                    "fileId": "650bc88a-e90c-48c7-a349-65dcc756b0a4",
                                    "source": {
                                        "box": {
                                            "id": "56d9293c-2dc7-4133-b21b-c1468aefb41f",
                                            "size": 2648411,
                                            "filePath": "/All Files/your_org/coviddata/statesdata/covid_states_tseries_2021_12_09.json",
                                            "integrationSource": "4095be8f-40c6-487d-99ce-bef42682c36b"
                                        },
                                        "type": "box"
                                    },
                                    "traceId": "650bc88a-e90c-48c7-a349-65dcc756b0a4",
                                    "sourceId": "4095be8f-40c6-487d-99ce-bef42682c36b",
                                    "sourceName": "HG-Box-Covid-Data-States",
                                    "sourceType": "box",
                                    "integrationId": "56d9293c-2dc7-4133-b21b-c1468aefb41f",
                                    "integrationType": "box"
                                },
                                "type": "s3file",
                                "bucket": "ts-platform-dev-datalake",
                                "fileId": "650bc88a-e90c-48c7-a349-65dcc756b0a4",
                                "fileKey": "your_org/4095be8f-40c6-487d-99ce-bef42682c36b/RAW/All Files/your_org/coviddata/statesdata/covid_states_tseries_2021_12_09.json",
                                "version": "YXWfnGtFnxXaRshIkphKpeIWjKM5YMrL",
                                "customTags": [],
                                "customMetadata": {}
                            },
                            "tasks": [
                                {
                                    "slug": "first-step-covid-json-ids",
                                    "input": {
                                        "input_file": {
                                            "meta": {
                                                "fileId": "650bc88a-e90c-48c7-a349-65dcc756b0a4",
                                                "source": {
                                                    "box": {
                                                        "id": "56d9293c-2dc7-4133-b21b-c1468aefb41f",
                                                        "size": 2648411,
                                                        "filePath": "/All Files/your_org/coviddata/statesdata/covid_states_tseries_2021_12_09.json",
                                                        "integrationSource": "4095be8f-40c6-487d-99ce-bef42682c36b"
                                                    },
                                                    "type": "box"
                                                },
                                                "traceId": "650bc88a-e90c-48c7-a349-65dcc756b0a4",
                                                "sourceId": "4095be8f-40c6-487d-99ce-bef42682c36b",
                                                "sourceName": "HG-Box-Covid-Data-States",
                                                "sourceType": "box",
                                                "integrationId": "56d9293c-2dc7-4133-b21b-c1468aefb41f",
                                                "integrationType": "box"
                                            },
                                            "type": "s3file",
                                            "bucket": "ts-platform-dev-datalake",
                                            "fileId": "650bc88a-e90c-48c7-a349-65dcc756b0a4",
                                            "fileKey": "your_org/4095be8f-40c6-487d-99ce-bef42682c36b/RAW/All Files/your_org/coviddata/statesdata/covid_states_tseries_2021_12_09.json",
                                            "version": "YXWfnGtFnxXaRshIkphKpeIWjKM5YMrL",
                                            "customTags": [],
                                            "customMetadata": {}
                                        }
                                    },
                                    "retry": 0,
                                    "events": [
                                        {
                                            "at": "2022-02-08T16:17:59.579+00:00",
                                            "status": "pending"
                                        },
                                        {
                                            "at": "2022-02-08T16:18:23.973+00:00",
                                            "status": "in-progress"
                                        },
                                        {
                                            "at": "2022-02-08T16:18:48.996+00:00",
                                            "status": "completed"
                                        }
                                    ],
                                    "output": {
                                        "type": "success",
                                        "result": [
                                            {
                                                "type": "s3file",
                                                "bucket": "ts-platform-dev-datalake",
                                                "fileId": "6908a751-62d1-4851-b502-818f7c836df1",
                                                "fileKey": "your_org/4095be8f-40c6-487d-99ce-bef42682c36b/IDS/All Files/your_org/coviddata/statesdata/covid_states_tseries_2021_12_09.json/covid-state-tseries-AK-2021-12-08.json",
                                                "version": "9sNbqVb879.geEUVp03EfCDpK8j9gz1Z"
                                            },
                                            {
                                                "type": "s3file",
                                                "bucket": "ts-platform-dev-datalake",
                                                "fileId": "8df8418a-06e0-4499-be19-e783165cad01",
                                                "fileKey": "your_org/4095be8f-40c6-487d-99ce-bef42682c36b/IDS/All Files/your_org/coviddata/statesdata/covid_states_tseries_2021_12_09.json/covid-state-tseries-AL-2021-12-08.json",
                                                "version": "KXS6kfQLrlmc42kUTeY6B70uAeDdSjl0"
                                            },
                                            {
                                                "type": "s3file",
                                                "bucket": "ts-platform-dev-datalake",
                                                "fileId": "49dbbb9a-f251-4749-838e-6c035804b5f5",
                                                "fileKey": "your_org/4095be8f-40c6-487d-99ce-bef42682c36b/IDS/All Files/your_org/coviddata/statesdata/covid_states_tseries_2021_12_09.json/covid-state-tseries-AR-2021-12-08.json",
                                                "version": "2S.kPfOMSQm6E38yiJJWso3notx10uAH"
                                            },
                                            {
                                                "type": "s3file",
                                                "bucket": "ts-platform-dev-datalake",
                                                "fileId": "20d94e00-07aa-46f0-90ab-0c1c4ef3aac6",
                                                "fileKey": "your_org/4095be8f-40c6-487d-99ce-bef42682c36b/IDS/All Files/your_org/coviddata/statesdata/covid_states_tseries_2021_12_09.json/covid-state-tseries-WY-2021-12-08.json",
                                                "version": "ShtbhPlrvyfrPv0_jUUnw4M212ebGc1c"
                                            }
                                        ]
                                    },
                                    "script": {
                                        "list": [
                                            "requirements.txt",
                                            "README-internal.md",
                                            "config.json",
                                            "README.md",
                                            "Pipfile",
                                            "main.py",
                                            "Pipfile.lock",
                                            "__test__/test_business_logic.py",
                                            "__test__/test_config.py",
                                            "__test__/test_integration.py",
                                            "__test__/__pycache__/test_business_logic.cpython-37.pyc",
                                            "__test__/__pycache__/test_config.cpython-37.pyc",
                                            "__test__/__pycache__/test_integration.cpython-37.pyc",
                                            "__test__/data/expected.json",
                                            "__test__/data/input.json",
                                            "__pycache__/main.cpython-37.pyc"
                                        ],
                                        "slug": "hg-tscr-covid-data",
                                        "docker": {
                                            "image": "706717599419.dkr.ecr.us-east-2.amazonaws.com/ts-platform-development-task-private-your_org-hg-tscr-covid-data@sha256:334e32f0810dfdeb3324f63f85c9b6aa7c67fdd4023b317eb67a3a7bdd5be706"
                                        },
                                        "version": "v2.0.1",
                                        "language": "python",
                                        "maxCount": 30,
                                        "createdAt": "2022-02-08T15:41:05.234Z",
                                        "functions": [
                                            {
                                                "slug": "main",
                                                "function": "main.main"
                                            }
                                        ],
                                        "hasSource": true,
                                        "namespace": "private-your_org",
                                        "timestamp": 1644334642884,
                                        "runnerType": "ecs",
                                        "buildLogSaved": true,
                                        "buildDurationMs": 63528
                                    },
                                    "status": "completed",
                                    "taskId": "a9c6e221-bd6e-4554-9ebd-54a231079591",
                                    "options": {},
                                    "createdAt": "2022-02-08T16:17:59.563+00:00",
                                    "containerId": "5e1a47e9-6d3a-428e-8988-e85746f3756b",
                                    "functionSlug": "main",
                                    "lastUpdatedAt": "2022-02-08T16:18:49.010+00:00",
                                    "taskMemoryInMB": 512,
                                    "cloudWatchUrl": "https://us-east-2.console.aws.amazon.com/cloudwatch/home?region=us-east-2#logs-insights:queryDetail=~(end~'2022-02-08T16*3a23*3a49.010Z~start~'2022-02-08T16*3a12*3a59.563Z~timeType~'ABSOLUTE~tz~'Local~editorString~'filter*20*60taskId*60*3d*27a9c6e221-bd6e-4554-9ebd-54a231079591*27*20and*20*60containerId*60*3d*275e1a47e9-6d3a-428e-8988-e85746f3756b*27*0a*7c*20fields*20*40timestamp*2c*20*40message*0a*7c*20sort*20*40timestamp*20asc~source~(~'*2fecs*2ftaskscripts*2fts-platform*2fcontainers))"
                                }
                            ],
                            "supersededTasks": [],
                            "status": "completed",
                            "events": [
                                {
                                    "at": "2022-02-08T16:17:59.463+00:00",
                                    "status": "in-progress"
                                },
                                {
                                    "at": "2022-02-08T16:18:49.023+00:00",
                                    "status": "completed"
                                }
                            ],
                            "createdAt": "2022-02-08T16:17:59.142Z",
                            "lastUpdatedAt": "2022-02-08T16:18:49.024Z",
                            "restarted": false,
                            "masterScriptLogs": [],
                            "retryBehavior": null,
                            "output": {
                                "type": "success",
                                "result": [
                                    {
                                        "type": "s3file",
                                        "bucket": "ts-platform-dev-datalake",
                                        "fileId": "6908a751-62d1-4851-b502-818f7c836df1",
                                        "fileKey": "your_org/4095be8f-40c6-487d-99ce-bef42682c36b/IDS/All Files/your_org/coviddata/statesdata/covid_states_tseries_2021_12_09.json/covid-state-tseries-AK-2021-12-08.json",
                                        "version": "9sNbqVb879.geEUVp03EfCDpK8j9gz1Z"
                                    },
                                    {
                                        "type": "s3file",
                                        "bucket": "ts-platform-dev-datalake",
                                        "fileId": "8df8418a-06e0-4499-be19-e783165cad01",
                                        "fileKey": "your_org/4095be8f-40c6-487d-99ce-bef42682c36b/IDS/All Files/your_org/coviddata/statesdata/covid_states_tseries_2021_12_09.json/covid-state-tseries-AL-2021-12-08.json",
                                        "version": "KXS6kfQLrlmc42kUTeY6B70uAeDdSjl0"
                                    },
                                    {
                                        "type": "s3file",
                                        "bucket": "ts-platform-dev-datalake",
                                        "fileId": "49dbbb9a-f251-4749-838e-6c035804b5f5",
                                        "fileKey": "your_org/4095be8f-40c6-487d-99ce-bef42682c36b/IDS/All Files/your_org/coviddata/statesdata/covid_states_tseries_2021_12_09.json/covid-state-tseries-AR-2021-12-08.json",
                                        "version": "2S.kPfOMSQm6E38yiJJWso3notx10uAH"
                                    },
                                    {
                                        "type": "s3file",
                                        "bucket": "ts-platform-dev-datalake",
                                        "fileId": "20d94e00-07aa-46f0-90ab-0c1c4ef3aac6",
                                        "fileKey": "your_org/4095be8f-40c6-487d-99ce-bef42682c36b/IDS/All Files/your_org/coviddata/statesdata/covid_states_tseries_2021_12_09.json/covid-state-tseries-WY-2021-12-08.json",
                                        "version": "ShtbhPlrvyfrPv0_jUUnw4M212ebGc1c"
                                    }
                                ]
                            }
                        },
                        {
                            "id": "2fb033db-3762-4559-b8d4-39a0db8422cf",
                            "orgSlug": "your_org",
                            "pipelineId": "8592187a-d3ed-4410-8ffb-ee47826bebf7",
                            "masterScriptNamespace": "private-your_org",
                            "masterScriptSlug": "hg-prot-covid-data",
                            "masterScriptVersion": "v2.1.0",
                            "protocolSlug": "hg-prot-covid-data",
                            "protocolVersion": "v2.1.0",
                            "protocol": {
                                "protocolSchema": "v2",
                                "name": "HG Protocol COVID-JSON to IDS",
                                "description": "",
                                "steps": [
                                    {
                                        "slug": "first-step-covid-json-ids",
                                        "description": "Generates COVID data row (IDS JSON) for each state.",
                                        "type": "generator",
                                        "script": {
                                            "namespace": "private-your_org",
                                            "slug": "hg-tscr-covid-data",
                                            "version": "v2.0.1"
                                        },
                                        "functionSlug": "main"
                                    }
                                ],
                                "config": []
                            },
                            "pipelineConfig": {
                                "notificationsConfig": {
                                    "sendOnSuccessful": true,
                                    "sendOnFailed": true,
                                    "notificationEmailAddresses": [
                                        "example1@your_org.com",
                                        "example2@your_org.com"
                                    ]
                                },
                                "pipelineName": "HG-Covid-Data"
                            },
                            "inputFile": {
                                "meta": {
                                    "fileId": "3691e31b-6953-40de-aa4e-0dba99b4db19",
                                    "source": {
                                        "api": {
                                            "id": "6f166302-df8a-4044-ab4b-7ddd3eefb50b",
                                            "size": 14862,
                                            "filePath": "/All Files/your_org/coviddata/statesdata/CovidData_states_11_03_2021.json",
                                            "integrationSource": "4095be8f-40c6-487d-99ce-bef42682c36b"
                                        },
                                        "type": "api"
                                    },
                                    "traceId": "3691e31b-6953-40de-aa4e-0dba99b4db19",
                                    "sourceId": "4095be8f-40c6-487d-99ce-bef42682c36b",
                                    "sourceName": "HG-Box-Covid-Data-States",
                                    "sourceType": "box",
                                    "integrationId": "6f166302-df8a-4044-ab4b-7ddd3eefb50b",
                                    "integrationType": "api"
                                },
                                "type": "s3file",
                                "bucket": "ts-platform-dev-datalake",
                                "fileId": "3691e31b-6953-40de-aa4e-0dba99b4db19",
                                "fileKey": "your_org/4095be8f-40c6-487d-99ce-bef42682c36b/RAW/All Files/your_org/coviddata/statesdata/CovidData_states_11_03_2021.json",
                                "version": "Y7_UBtoF11Bvv75LsuCZ1K73.u04K3Dx",
                                "customTags": [],
                                "customMetadata": {}
                            },
                            "tasks": [
                                {
                                    "slug": "first-step-covid-json-ids",
                                    "input": {
                                        "input_file": {
                                            "meta": {
                                                "fileId": "3691e31b-6953-40de-aa4e-0dba99b4db19",
                                                "source": {
                                                    "api": {
                                                        "id": "6f166302-df8a-4044-ab4b-7ddd3eefb50b",
                                                        "size": 14862,
                                                        "filePath": "/All Files/your_org/coviddata/statesdata/CovidData_states_11_03_2021.json",
                                                        "integrationSource": "4095be8f-40c6-487d-99ce-bef42682c36b"
                                                    },
                                                    "type": "api"
                                                },
                                                "traceId": "3691e31b-6953-40de-aa4e-0dba99b4db19",
                                                "sourceId": "4095be8f-40c6-487d-99ce-bef42682c36b",
                                                "sourceName": "HG-Box-Covid-Data-States",
                                                "sourceType": "box",
                                                "integrationId": "6f166302-df8a-4044-ab4b-7ddd3eefb50b",
                                                "integrationType": "api"
                                            },
                                            "type": "s3file",
                                            "bucket": "ts-platform-dev-datalake",
                                            "fileId": "3691e31b-6953-40de-aa4e-0dba99b4db19",
                                            "fileKey": "your_org/4095be8f-40c6-487d-99ce-bef42682c36b/RAW/All Files/your_org/coviddata/statesdata/CovidData_states_11_03_2021.json",
                                            "version": "Y7_UBtoF11Bvv75LsuCZ1K73.u04K3Dx",
                                            "customTags": [],
                                            "customMetadata": {}
                                        }
                                    },
                                    "retry": 3,
                                    "events": [
                                        {
                                            "at": "2022-02-07T20:01:26.526+00:00"
                                        },
                                        {
                                            "at": "2022-02-07T20:01:26.541+00:00",
                                            "status": "pending"
                                        },
                                        {
                                            "at": "2022-02-07T20:01:26.549+00:00",
                                            "status": "in-progress"
                                        },
                                        {
                                            "at": "2022-02-07T20:01:27.108+00:00",
                                            "status": "failed"
                                        }
                                    ],
                                    "output": {
                                        "type": "error",
                                        "result": {
                                            "message": "'actualsTimeseries'"
                                        }
                                    },
                                    "script": {
                                        "list": [
                                            "requirements.txt",
                                            "README-internal.md",
                                            "config.json",
                                            "README.md",
                                            "Pipfile",
                                            "main.py",
                                            "Pipfile.lock",
                                            "__test__/test_business_logic.py",
                                            "__test__/test_config.py",
                                            "__test__/test_integration.py",
                                            "__test__/__pycache__/test_business_logic.cpython-37.pyc",
                                            "__test__/__pycache__/test_config.cpython-37.pyc",
                                            "__test__/__pycache__/test_integration.cpython-37.pyc",
                                            "__test__/data/expected.json",
                                            "__test__/data/input.json",
                                            "__pycache__/main.cpython-37.pyc"
                                        ],
                                        "slug": "hg-tscr-covid-data",
                                        "docker": {
                                            "image": "706717599419.dkr.ecr.us-east-2.amazonaws.com/ts-platform-development-task-private-your_org-hg-tscr-covid-data@sha256:947d1b9fa98aac20eb9e36ae89c8aed971c521e437c628248af5da3769a2845a"
                                        },
                                        "version": "v2.0.1",
                                        "language": "python",
                                        "maxCount": 30,
                                        "createdAt": "2022-02-04T16:11:54.239Z",
                                        "functions": [
                                            {
                                                "slug": "main",
                                                "function": "main.main"
                                            }
                                        ],
                                        "hasSource": true,
                                        "namespace": "private-your_org",
                                        "timestamp": 1643990906049,
                                        "runnerType": "ecs",
                                        "buildLogSaved": true,
                                        "buildDurationMs": 72462
                                    },
                                    "status": "failed",
                                    "taskId": "cb3545d0-4dcd-4cb6-adc5-079f6c4002db",
                                    "options": {},
                                    "createdAt": "2022-02-07T20:01:26.526+00:00",
                                    "containerId": "a9b6f2de-453f-4897-a72f-fcb528f6aee3",
                                    "functionSlug": "main",
                                    "lastUpdatedAt": "2022-02-07T20:01:27.114+00:00",
                                    "taskMemoryInMB": 512,
                                    "cloudWatchUrl": "https://us-east-2.console.aws.amazon.com/cloudwatch/home?region=us-east-2#logs-insights:queryDetail=~(end~'2022-02-07T20*3a06*3a27.114Z~start~'2022-02-07T19*3a56*3a26.526Z~timeType~'ABSOLUTE~tz~'Local~editorString~'filter*20*60taskId*60*3d*27cb3545d0-4dcd-4cb6-adc5-079f6c4002db*27*20and*20*60containerId*60*3d*27a9b6f2de-453f-4897-a72f-fcb528f6aee3*27*0a*7c*20fields*20*40timestamp*2c*20*40message*0a*7c*20sort*20*40timestamp*20asc~source~(~'*2fecs*2ftaskscripts*2fts-platform*2fcontainers))"
                                }
                            ],
                            "supersededTasks": [
                                {
                                    "slug": "first-step-covid-json-ids",
                                    "input": {
                                        "input_file": {
                                            "meta": {
                                                "fileId": "3691e31b-6953-40de-aa4e-0dba99b4db19",
                                                "source": {
                                                    "api": {
                                                        "id": "6f166302-df8a-4044-ab4b-7ddd3eefb50b",
                                                        "size": 14862,
                                                        "filePath": "/All Files/your_org/coviddata/statesdata/CovidData_states_11_03_2021.json",
                                                        "integrationSource": "4095be8f-40c6-487d-99ce-bef42682c36b"
                                                    },
                                                    "type": "api"
                                                },
                                                "traceId": "3691e31b-6953-40de-aa4e-0dba99b4db19",
                                                "sourceId": "4095be8f-40c6-487d-99ce-bef42682c36b",
                                                "sourceName": "HG-Box-Covid-Data-States",
                                                "sourceType": "box",
                                                "integrationId": "6f166302-df8a-4044-ab4b-7ddd3eefb50b",
                                                "integrationType": "api"
                                            },
                                            "type": "s3file",
                                            "bucket": "ts-platform-dev-datalake",
                                            "fileId": "3691e31b-6953-40de-aa4e-0dba99b4db19",
                                            "fileKey": "your_org/4095be8f-40c6-487d-99ce-bef42682c36b/RAW/All Files/your_org/coviddata/statesdata/CovidData_states_11_03_2021.json",
                                            "version": "Y7_UBtoF11Bvv75LsuCZ1K73.u04K3Dx",
                                            "customTags": [],
                                            "customMetadata": {}
                                        }
                                    },
                                    "retry": 0,
                                    "events": [
                                        {
                                            "at": "2022-02-07T20:01:01.990+00:00",
                                            "status": "pending"
                                        },
                                        {
                                            "at": "2022-02-07T20:01:24.704+00:00",
                                            "status": "in-progress"
                                        },
                                        {
                                            "at": "2022-02-07T20:01:25.264+00:00",
                                            "status": "failed"
                                        }
                                    ],
                                    "output": {
                                        "type": "error",
                                        "result": {
                                            "message": "'actualsTimeseries'"
                                        }
                                    },
                                    "script": {
                                        "list": [
                                            "requirements.txt",
                                            "README-internal.md",
                                            "config.json",
                                            "README.md",
                                            "Pipfile",
                                            "main.py",
                                            "Pipfile.lock",
                                            "__test__/test_business_logic.py",
                                            "__test__/test_config.py",
                                            "__test__/test_integration.py",
                                            "__test__/__pycache__/test_business_logic.cpython-37.pyc",
                                            "__test__/__pycache__/test_config.cpython-37.pyc",
                                            "__test__/__pycache__/test_integration.cpython-37.pyc",
                                            "__test__/data/expected.json",
                                            "__test__/data/input.json",
                                            "__pycache__/main.cpython-37.pyc"
                                        ],
                                        "slug": "hg-tscr-covid-data",
                                        "docker": {
                                            "image": "706717599419.dkr.ecr.us-east-2.amazonaws.com/ts-platform-development-task-private-your_org-hg-tscr-covid-data@sha256:947d1b9fa98aac20eb9e36ae89c8aed971c521e437c628248af5da3769a2845a"
                                        },
                                        "version": "v2.0.1",
                                        "language": "python",
                                        "maxCount": 30,
                                        "createdAt": "2022-02-04T16:11:54.239Z",
                                        "functions": [
                                            {
                                                "slug": "main",
                                                "function": "main.main"
                                            }
                                        ],
                                        "hasSource": true,
                                        "namespace": "private-your_org",
                                        "timestamp": 1643990906049,
                                        "runnerType": "ecs",
                                        "buildLogSaved": true,
                                        "buildDurationMs": 72462
                                    },
                                    "status": "failed",
                                    "taskId": "14aaadfc-f75e-4a26-bef3-2b9339ec0bc3",
                                    "options": {},
                                    "createdAt": "2022-02-07T20:01:01.977+00:00",
                                    "containerId": "a9b6f2de-453f-4897-a72f-fcb528f6aee3",
                                    "functionSlug": "main",
                                    "lastUpdatedAt": "2022-02-07T20:01:25.269+00:00",
                                    "taskMemoryInMB": 512
                                },
                                {
                                    "slug": "first-step-covid-json-ids",
                                    "input": {
                                        "input_file": {
                                            "meta": {
                                                "fileId": "3691e31b-6953-40de-aa4e-0dba99b4db19",
                                                "source": {
                                                    "api": {
                                                        "id": "6f166302-df8a-4044-ab4b-7ddd3eefb50b",
                                                        "size": 14862,
                                                        "filePath": "/All Files/your_org/coviddata/statesdata/CovidData_states_11_03_2021.json",
                                                        "integrationSource": "4095be8f-40c6-487d-99ce-bef42682c36b"
                                                    },
                                                    "type": "api"
                                                },
                                                "traceId": "3691e31b-6953-40de-aa4e-0dba99b4db19",
                                                "sourceId": "4095be8f-40c6-487d-99ce-bef42682c36b",
                                                "sourceName": "HG-Box-Covid-Data-States",
                                                "sourceType": "box",
                                                "integrationId": "6f166302-df8a-4044-ab4b-7ddd3eefb50b",
                                                "integrationType": "api"
                                            },
                                            "type": "s3file",
                                            "bucket": "ts-platform-dev-datalake",
                                            "fileId": "3691e31b-6953-40de-aa4e-0dba99b4db19",
                                            "fileKey": "your_org/4095be8f-40c6-487d-99ce-bef42682c36b/RAW/All Files/your_org/coviddata/statesdata/CovidData_states_11_03_2021.json",
                                            "version": "Y7_UBtoF11Bvv75LsuCZ1K73.u04K3Dx",
                                            "customTags": [],
                                            "customMetadata": {}
                                        }
                                    },
                                    "retry": 1,
                                    "events": [
                                        {
                                            "at": "2022-02-07T20:01:25.334+00:00"
                                        },
                                        {
                                            "at": "2022-02-07T20:01:25.347+00:00",
                                            "status": "pending"
                                        },
                                        {
                                            "at": "2022-02-07T20:01:25.356+00:00",
                                            "status": "in-progress"
                                        },
                                        {
                                            "at": "2022-02-07T20:01:25.859+00:00",
                                            "status": "failed"
                                        }
                                    ],
                                    "output": {
                                        "type": "error",
                                        "result": {
                                            "message": "'actualsTimeseries'"
                                        }
                                    },
                                    "script": {
                                        "list": [
                                            "requirements.txt",
                                            "README-internal.md",
                                            "config.json",
                                            "README.md",
                                            "Pipfile",
                                            "main.py",
                                            "Pipfile.lock",
                                            "__test__/test_business_logic.py",
                                            "__test__/test_config.py",
                                            "__test__/test_integration.py",
                                            "__test__/__pycache__/test_business_logic.cpython-37.pyc",
                                            "__test__/__pycache__/test_config.cpython-37.pyc",
                                            "__test__/__pycache__/test_integration.cpython-37.pyc",
                                            "__test__/data/expected.json",
                                            "__test__/data/input.json",
                                            "__pycache__/main.cpython-37.pyc"
                                        ],
                                        "slug": "hg-tscr-covid-data",
                                        "docker": {
                                            "image": "706717599419.dkr.ecr.us-east-2.amazonaws.com/ts-platform-development-task-private-your_org-hg-tscr-covid-data@sha256:947d1b9fa98aac20eb9e36ae89c8aed971c521e437c628248af5da3769a2845a"
                                        },
                                        "version": "v2.0.1",
                                        "language": "python",
                                        "maxCount": 30,
                                        "createdAt": "2022-02-04T16:11:54.239Z",
                                        "functions": [
                                            {
                                                "slug": "main",
                                                "function": "main.main"
                                            }
                                        ],
                                        "hasSource": true,
                                        "namespace": "private-your_org",
                                        "timestamp": 1643990906049,
                                        "runnerType": "ecs",
                                        "buildLogSaved": true,
                                        "buildDurationMs": 72462
                                    },
                                    "status": "failed",
                                    "taskId": "c276e3a1-7c38-4347-b2ec-1a4507d6b574",
                                    "options": {},
                                    "createdAt": "2022-02-07T20:01:25.334+00:00",
                                    "containerId": "a9b6f2de-453f-4897-a72f-fcb528f6aee3",
                                    "functionSlug": "main",
                                    "lastUpdatedAt": "2022-02-07T20:01:25.866+00:00",
                                    "taskMemoryInMB": 512
                                },
                                {
                                    "slug": "first-step-covid-json-ids",
                                    "input": {
                                        "input_file": {
                                            "meta": {
                                                "fileId": "3691e31b-6953-40de-aa4e-0dba99b4db19",
                                                "source": {
                                                    "api": {
                                                        "id": "6f166302-df8a-4044-ab4b-7ddd3eefb50b",
                                                        "size": 14862,
                                                        "filePath": "/All Files/your_org/coviddata/statesdata/CovidData_states_11_03_2021.json",
                                                        "integrationSource": "4095be8f-40c6-487d-99ce-bef42682c36b"
                                                    },
                                                    "type": "api"
                                                },
                                                "traceId": "3691e31b-6953-40de-aa4e-0dba99b4db19",
                                                "sourceId": "4095be8f-40c6-487d-99ce-bef42682c36b",
                                                "sourceName": "HG-Box-Covid-Data-States",
                                                "sourceType": "box",
                                                "integrationId": "6f166302-df8a-4044-ab4b-7ddd3eefb50b",
                                                "integrationType": "api"
                                            },
                                            "type": "s3file",
                                            "bucket": "ts-platform-dev-datalake",
                                            "fileId": "3691e31b-6953-40de-aa4e-0dba99b4db19",
                                            "fileKey": "your_org/4095be8f-40c6-487d-99ce-bef42682c36b/RAW/All Files/your_org/coviddata/statesdata/CovidData_states_11_03_2021.json",
                                            "version": "Y7_UBtoF11Bvv75LsuCZ1K73.u04K3Dx",
                                            "customTags": [],
                                            "customMetadata": {}
                                        }
                                    },
                                    "retry": 2,
                                    "events": [
                                        {
                                            "at": "2022-02-07T20:01:25.913+00:00"
                                        },
                                        {
                                            "at": "2022-02-07T20:01:25.925+00:00",
                                            "status": "pending"
                                        },
                                        {
                                            "at": "2022-02-07T20:01:25.935+00:00",
                                            "status": "in-progress"
                                        },
                                        {
                                            "at": "2022-02-07T20:01:26.469+00:00",
                                            "status": "failed"
                                        }
                                    ],
                                    "output": {
                                        "type": "error",
                                        "result": {
                                            "message": "'actualsTimeseries'"
                                        }
                                    },
                                    "script": {
                                        "list": [
                                            "requirements.txt",
                                            "README-internal.md",
                                            "config.json",
                                            "README.md",
                                            "Pipfile",
                                            "main.py",
                                            "Pipfile.lock",
                                            "__test__/test_business_logic.py",
                                            "__test__/test_config.py",
                                            "__test__/test_integration.py",
                                            "__test__/__pycache__/test_business_logic.cpython-37.pyc",
                                            "__test__/__pycache__/test_config.cpython-37.pyc",
                                            "__test__/__pycache__/test_integration.cpython-37.pyc",
                                            "__test__/data/expected.json",
                                            "__test__/data/input.json",
                                            "__pycache__/main.cpython-37.pyc"
                                        ],
                                        "slug": "hg-tscr-covid-data",
                                        "docker": {
                                            "image": "706717599419.dkr.ecr.us-east-2.amazonaws.com/ts-platform-development-task-private-your_org-hg-tscr-covid-data@sha256:947d1b9fa98aac20eb9e36ae89c8aed971c521e437c628248af5da3769a2845a"
                                        },
                                        "version": "v2.0.1",
                                        "language": "python",
                                        "maxCount": 30,
                                        "createdAt": "2022-02-04T16:11:54.239Z",
                                        "functions": [
                                            {
                                                "slug": "main",
                                                "function": "main.main"
                                            }
                                        ],
                                        "hasSource": true,
                                        "namespace": "private-your_org",
                                        "timestamp": 1643990906049,
                                        "runnerType": "ecs",
                                        "buildLogSaved": true,
                                        "buildDurationMs": 72462
                                    },
                                    "status": "failed",
                                    "taskId": "38555e50-499f-49fb-b97b-e239327f5ada",
                                    "options": {},
                                    "createdAt": "2022-02-07T20:01:25.913+00:00",
                                    "containerId": "a9b6f2de-453f-4897-a72f-fcb528f6aee3",
                                    "functionSlug": "main",
                                    "lastUpdatedAt": "2022-02-07T20:01:26.477+00:00",
                                    "taskMemoryInMB": 512
                                }
                            ],
                            "status": "failed",
                            "events": [
                                {
                                    "at": "2022-02-07T20:01:01.863+00:00",
                                    "status": "in-progress"
                                },
                                {
                                    "at": "2022-02-07T20:01:27.169+00:00",
                                    "status": "failed"
                                }
                            ],
                            "createdAt": "2022-02-07T20:01:01.305Z",
                            "lastUpdatedAt": "2022-02-07T20:01:27.169Z",
                            "restarted": false,
                            "masterScriptLogs": [
                                {
                                    "level": "error",
                                    "message": "Error: Task first-step-covid-json-ids failed\n    at WorkflowRunner._runTask (/usr/src/app/services/orchestrator/src/workflow-runner.js:207:28)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async WorkflowRunner._runTask (/usr/src/app/lib/util-logger/index.js:81:20)\n    at async evalmachine.<anonymous>:16:18\n    at async WorkflowRunner.run (/usr/src/app/services/orchestrator/src/workflow-runner.js:98:22)\n    at async wrapWithLog.args2LogArgs (/usr/src/app/services/orchestrator/src/workflow-handlers.js:105:20)\n    at async /usr/src/app/lib/util-logger/index.js:81:20\n    at async /usr/src/app/services/orchestrator/src/sqs-consumer.js:224:9\n    at async Consumer.sema.sema [as _handleMessage] (/usr/src/app/services/orchestrator/src/sqs-consumer.js:34:9)\n    at async /usr/src/app/lib/util-sqs/index.js:100:17",
                                    "traceId": "3691e31b-6953-40de-aa4e-0dba99b4db19",
                                    "timestamp": "2022-02-07T20:01:27.168Z"
                                }
                            ],
                            "retryBehavior": null,
                            "output": {
                                "type": "error",
                                "result": {
                                    "message": "Error: Task first-step-covid-json-ids failed\n    at WorkflowRunner._runTask (/usr/src/app/services/orchestrator/src/workflow-runner.js:207:28)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async WorkflowRunner._runTask (/usr/src/app/lib/util-logger/index.js:81:20)\n    at async evalmachine.<anonymous>:16:18\n    at async WorkflowRunner.run (/usr/src/app/services/orchestrator/src/workflow-runner.js:98:22)\n    at async wrapWithLog.args2LogArgs (/usr/src/app/services/orchestrator/src/workflow-handlers.js:105:20)\n    at async /usr/src/app/lib/util-logger/index.js:81:20\n    at async /usr/src/app/services/orchestrator/src/sqs-consumer.js:224:9\n    at async Consumer.sema.sema [as _handleMessage] (/usr/src/app/services/orchestrator/src/sqs-consumer.js:34:9)\n    at async /usr/src/app/lib/util-sqs/index.js:100:17"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 400,
                    "error": "Bad Request",
                    "message": "\"from\" must be greater than or equal to 0",
                    "validation": {
                        "source": "query",
                        "keys": [
                            "from"
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90520,
        "executor_type": "THIRDPARTY",
        "executor_name": "createNewPipeline",
        "executor_version": "v1",
        "executor_display_name": "Create New Pipeline",
        "executor_description": "Create New Pipeline",
        "executor_category": "Pipelines",
        "executor_category_group": "Pipelines",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.tetrascience.com/v1/pipeline/create",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682627452988,
        "lastModifiedTime": 1682648371403,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "2f590ad7-19f9-4b06-91d0-e531be622b8d",
                    "name": "HG-ApiTest-Pipe-100",
                    "description": "Pipeline created using API",
                    "triggerType": "custom",
                    "triggerCondition": {
                        "groupOperator": "AND",
                        "groupLevel": 1,
                        "groups": [
                            {
                                "groupLevel": 2,
                                "groupOperator": "AND",
                                "groups": [
                                    {
                                        "key": "sourceId",
                                        "operator": "is",
                                        "value": "4095be8f-40c6-487d-99ce-bef42682c36b"
                                    }
                                ]
                            },
                            {
                                "groupLevel": 2,
                                "groupOperator": "AND",
                                "groups": [
                                    {
                                        "key": "category",
                                        "operator": "is",
                                        "value": "raw"
                                    }
                                ]
                            }
                        ]
                    },
                    "protocolSlug": "hg-prot-covid-data",
                    "protocolVersion": "v2.1.0",
                    "createdAt": "2022-02-11T18:44:47.652Z",
                    "updatedAt": "2022-02-11T18:44:47.652Z",
                    "pipelineConfig": {
                        "notificationsConfig": {
                            "sendOnSuccessful": true,
                            "sendOnFailed": true,
                            "notificationEmailAddresses": [
                                "example1@your_org.com",
                                "example2@your_org.com"
                            ]
                        }
                    },
                    "masterScriptNamespace": "private-your_org",
                    "masterScriptSlug": "hg-prot-covid-data",
                    "masterScriptVersion": "v2.1.0",
                    "status": null,
                    "standby": 0,
                    "retryBehavior": null
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "2f590ad7-19f9-4b06-91d0-e531be622b8d",
                    "name": "HG-ApiTest-Pipe-100",
                    "description": "Pipeline created using API",
                    "triggerType": "custom",
                    "triggerCondition": {
                        "groupOperator": "AND",
                        "groupLevel": 1,
                        "groups": [
                            {
                                "groupLevel": 2,
                                "groupOperator": "AND",
                                "groups": [
                                    {
                                        "key": "sourceId",
                                        "operator": "is",
                                        "value": "4095be8f-40c6-487d-99ce-bef42682c36b"
                                    }
                                ]
                            },
                            {
                                "groupLevel": 2,
                                "groupOperator": "AND",
                                "groups": [
                                    {
                                        "key": "category",
                                        "operator": "is",
                                        "value": "raw"
                                    }
                                ]
                            }
                        ]
                    },
                    "protocolSlug": "hg-prot-covid-data",
                    "protocolVersion": "v2.1.0",
                    "createdAt": "2022-02-11T18:44:47.652Z",
                    "updatedAt": "2022-02-11T18:44:47.652Z",
                    "pipelineConfig": {
                        "notificationsConfig": {
                            "sendOnSuccessful": true,
                            "sendOnFailed": true,
                            "notificationEmailAddresses": [
                                "example1@your_org.com",
                                "example2@your_org.com"
                            ]
                        }
                    },
                    "masterScriptNamespace": "private-your_org",
                    "masterScriptSlug": "hg-prot-covid-data",
                    "masterScriptVersion": "v2.1.0",
                    "status": null,
                    "standby": 0,
                    "retryBehavior": null
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90540,
        "executor_type": "THIRDPARTY",
        "executor_name": "fileUpload",
        "executor_version": "v1",
        "executor_display_name": "File Upload",
        "executor_description": "This endpoint uploads a file to TetraScience Cloud. It requires a user-defined agent set up in the TetraScience Web UI. API users can use it to upload, manage their files, and trigger pipelines.  Maximum payload size: 500MB  Validations performed by this endpoint:  agentId must be a valid ID of the user defined agent (UDA) param sourceType must contain only lower case alphanumerical characters and dashes params metadata and tags must contain only ASCII characters; tags values cannot contain comma and values must be unique params metadata and tags together as JSON objects must have less than 1.5KB of text (1536 characters)",
        "executor_category": "Agents",
        "executor_category_group": "Agents>dataacquisition",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.tetrascience.com/v1/data-acquisition/agent/upload",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682629322399,
        "lastModifiedTime": 1682649275057,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "s3file",
                    "fileKey": "demo/1cd9ffeb-1e10-45d2-a8d6-61a88c829e5c/RAW/test/raw.json",
                    "bucket": "ts-platform-env-datalake",
                    "version": "grXOL0hSiCeKu094tBw.mu4LXQErWzGT",
                    "fileId": "c4c6cfdf-67d0-4672-a1a6-0b9f558d0156"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "file not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 404,
                    "error": "Not Found",
                    "message": "Source with config source ID 47ab98d5-cccb-4a7d-86f4-0ff8f7c11bda does not exist"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "the action could not be processed properly due to invalid data provided.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 422,
                    "error": "Unprocessable Entity",
                    "message": "Param sourceType contains invalid character or upper case letter"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90549,
        "executor_type": "THIRDPARTY",
        "executor_name": "agentConfiguration",
        "executor_version": "v1",
        "executor_display_name": "Agent Configuration",
        "executor_description": "This endpoint returns all the parameters that client needs in order to upload files directly to S3 and upload log directly to Cloudwatch. Using these values and temporary credentials obtained from /v1/data-acquisition/agent/credentials client can upload files to S3 into their bucket and log to CloudWatch into their log groups.",
        "executor_category": "Agents",
        "executor_category_group": "Agents>dataacquisition",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.tetrascience.com/v1/data-acquisition/agent/config",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682629996043,
        "lastModifiedTime": 1682649788400,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "orgSlug": "mgtest",
                    "integrationId": "844dc7e9-a4c4-429c-b364-b54bf531c078",
                    "agentId": "0db83bc0-0921-414c-ad1c-05d47af3dd44",
                    "agentName": "test agent",
                    "region": "us-east-2",
                    "bucket": "ts-platform-dev-datalake",
                    "streamBucket": "ts-platform-dev-stream",
                    "backupBucket": "ts-platform-dev-backup",
                    "kmsKey": "alias/customer-key-development-mgtest",
                    "integrationType": "user_defined",
                    "metadata": {},
                    "tags": [],
                    "logGroupName": "/agents/mgtest/0db83bc0-0921-414c-ad1c-05d47af3dd44",
                    "rpcSourceQueueUrl": "https://sqs.us-east-2.amazonaws/706717599419/onprem-0db83bc0-0921-414c-ad1c-05d47af3dd44.fifo",
                    "rpcPlatformQueueUrl": "https://sqs.us-east-2.amazonaws/706717599419/onprem-development-command-service-inbound"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "file not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 404,
                    "error": "Not Found",
                    "message": "Source with source ID 47ab98d5-cccb-4a7d-86f4-0ff8f7c11bda does not exist"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90551,
        "executor_type": "THIRDPARTY",
        "executor_name": "userDefinedAgentAgentTempAWSCredentials",
        "executor_version": "v1",
        "executor_display_name": "User Defined Agent Agent Temp AWS Credentials",
        "executor_description": "This endpoint returns temporary credentials for given organization based on datahub policy. When using those credentials, client can upload files to their S3 bucket and write log to their CloudWatch. Returned credentials have expiration time 60 minutes.",
        "executor_category": "Agents",
        "executor_category_group": "Agents>dataacquisition",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.tetrascience.com/v1/data-acquisition/agent/credentials",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682630194871,
        "lastModifiedTime": 1682650021827,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "AccessKeyId": "ASIA2JC5GY25RFP7QTVZ",
                    "SecretAccessKey": "0dj+fAT3MosSGZ10hhcvpGK8PHL4J+9k9LKW42Qi",
                    "SessionToken": "FwoGZXIvYXdzEMT//////////wEaDLiAcEBD4vwx6kFB7SLaAfm5fV73dYiSq9GdpEQ5IkqwrC7yzy6woVfzgdlpufjYQeNpYauarCH+uR5HmW04mzcD/KpPUhBzy4MYZQmpW2iXLsLxnS53psjvDGsyMAivHL6eVVJBve3SepNJzB+Itx1kDO2J/y9Ahty4iClyP2KKD638AWcbix85SHpBAZjpsjYZ1IVlS037VOmtaKLRlkZrbzylEmisBXXKGLXGES3/mZaAbTMpFNp+rv1SASCi0vGBJlFQzGHPuB9Qv3VYQcHWqE4EKrQ6JPZjU0cMx0Zq7gV7jcI0XdPvKIak8/cFMm+pQINw6D/rcKPNgN6VH78kutuWJR0i0mln2FSauwvfsRGANzXDBpCa4jA23IkKm5fGP5/kfT7M8uxykcfjCOpkOZ1KnNERwKz2hyS4siVxrdGammaNRHwgf1zJgLDViwxWlfCYHxbg5INlvKsaqCU=",
                    "Expiration": "2020-07-01T19:12:22.000Z"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "file not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "AccessKeyId": "ASIA2JC5GY25RFP7QTVZ",
                    "SecretAccessKey": "0dj+fAT3MosSGZ10hhcvpGK8PHL4J+9k9LKW42Qi",
                    "SessionToken": "FwoGZXIvYXdzEMT//////////wEaDLiAcEBD4vwx6kFB7SLaAfm5fV73dYiSq9GdpEQ5IkqwrC7yzy6woVfzgdlpufjYQeNpYauarCH+uR5HmW04mzcD/KpPUhBzy4MYZQmpW2iXLsLxnS53psjvDGsyMAivHL6eVVJBve3SepNJzB+Itx1kDO2J/y9Ahty4iClyP2KKD638AWcbix85SHpBAZjpsjYZ1IVlS037VOmtaKLRlkZrbzylEmisBXXKGLXGES3/mZaAbTMpFNp+rv1SASCi0vGBJlFQzGHPuB9Qv3VYQcHWqE4EKrQ6JPZjU0cMx0Zq7gV7jcI0XdPvKIak8/cFMm+pQINw6D/rcKPNgN6VH78kutuWJR0i0mln2FSauwvfsRGANzXDBpCa4jA23IkKm5fGP5/kfT7M8uxykcfjCOpkOZ1KnNERwKz2hyS4siVxrdGammaNRHwgf1zJgLDViwxWlfCYHxbg5INlvKsaqCU=",
                    "Expiration": "2020-07-01T19:12:22.000Z"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90555,
        "executor_type": "THIRDPARTY",
        "executor_name": "purgequeue",
        "executor_version": "v1",
        "executor_display_name": "Purge queue",
        "executor_description": "Use this method to purge all existing commands from the target queue. This command can be useful when testing new pipelines and command creation and the queue is blocked by a large number of unexecuted commands. When you fire this endpoint, all commands are deleted from the queue, and the command status is changed to PURGED. Also, during the purge, the queue for the given target is blocked and does not receive new commands.",
        "executor_category": "Agents",
        "executor_category_group": "Agents>Commands",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.tetrascience.com/v1/commands",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "targetId",
                "value": "",
                "description": "Agent or connector ID for which queue should be purged",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682630500554,
        "lastModifiedTime": 1682650719182,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "purged": [
                        {
                            "commandId": "cd0ce1e2-c0f1-47c1-9da9-feaa10cfe7eb"
                        },
                        {
                            "commandId": "39ead9af-2926-4800-9d11-a3895de495e8"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "file not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 400,
                    "error": "Bad request",
                    "message": "Queue is already purging. Please try later."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": " indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.\u201d",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 500,
                    "error": "Internal Server Error",
                    "message": "An internal server error occurred"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90543,
        "executor_type": "THIRDPARTY",
        "executor_name": "agentLogUpload",
        "executor_version": "v1",
        "executor_display_name": "Agent Log Upload",
        "executor_description": "This endpoint uploads agents log to TetraScience Cloud. It requires a user-defined agent set up in the TetraScience Web UI.",
        "executor_category": "Agents",
        "executor_category_group": "Agents>dataacquisition",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.tetrascience.com/v1/data-acquisition/agent/log",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682629486861,
        "lastModifiedTime": 1682649354677,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "OK"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "file not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 404,
                    "error": "Not Found",
                    "message": "Source with source ID 47ab98d5-cccb-4a7d-86f4-0ff8f7c11bda does not exist"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90564,
        "executor_type": "THIRDPARTY",
        "executor_name": "createcommands",
        "executor_version": "v1",
        "executor_display_name": "Create command",
        "executor_description": "Use this endpoint to create a new command for an on-premise connector/agent. It also automatically sends command to SQS queue for execution. Once it is in the queue, the connector/agent listening on the target queue picks up the command, tries to execute it, and sends the response back to the command service.",
        "executor_category": "Agents",
        "executor_category_group": "Agents>Commands",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": " https://api.tetrascience.com/v1/commands",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682631038210,
        "lastModifiedTime": 1682652065552,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "7992e5d6-15bf-4f5b-af06-47f3380ca75a",
                    "orgSlug": "tetrascience",
                    "targetId": "b143e7c5-90ae-4b69-895a-decf0b1dfb38",
                    "action": "TetraScience.Connector.gdc.HttpRequest",
                    "expiresAt": "2021-01-31T23:58:43.749Z",
                    "metadata": {},
                    "status": "PENDING",
                    "requestBody": {
                        "body": {
                            "url": "https://sdc.test.com:9005/SDC/Smartreports/ExportedMeasurements",
                            "body": {
                                "raw": "{\"InterfaceId\":\"1\",\"LastInterfaceResultId\":\"0\"}",
                                "mode": "raw"
                            },
                            "method": "POST",
                            "headers": [
                                {
                                    "Authorization": "Basic ..."
                                },
                                {
                                    "Content-Type": "application/json"
                                }
                            ],
                            "ignore_tls_certificate": true
                        },
                        "action": "TetraScience.Connector.gdc.HttpRequest",
                        "targetId": "b143e7c5-90ae-4b69-895a-decf0b1dfb38",
                        "commandId": "7992e5d6-15bf-4f5b-af06-47f3380ca75a",
                        "createdAt": "2021-01-20T10:25:02.807Z",
                        "expiresAt": "2021-01-31T23:58:43.749Z"
                    },
                    "responseBody": null,
                    "createdByEntity": "user",
                    "createdBy": "59eb8bd4-8b10-43b3-ac57-fe3ab86c05fd",
                    "createdAt": "2021-01-20T10:25:02.807Z",
                    "updatedAt": "2021-01-20T10:25:02.872Z"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": " indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.\u201d",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 500,
                    "error": "Internal Server Error",
                    "message": "An internal server error occurred"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 400,
                    "error": "Bad request",
                    "message": "Queue is purging and cannot accept new requests. Please try again later"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90572,
        "executor_type": "THIRDPARTY",
        "executor_name": "remotelyconfigurearunningFileLogAgent",
        "executor_version": "v1",
        "executor_display_name": "Remotely configure a running File-Log Agent",
        "executor_description": "his endpoint allows configuration of a running File-Log Agent with paths. The File-Log Agent must be version 4.1.0 or greater, and configured to Receive Commands. Additionally, the Command Queue must be enabled for this Agent on TDP.  This will remove any paths not included in the JSON. To preserve existing paths, you must include them each time you POST.",
        "executor_category": "Agents",
        "executor_category_group": "Agents>Commands",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.tetrascience.com/v1/agents/{id}/configuration",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "Agent ID"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682631800372,
        "lastModifiedTime": 1682652485127,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "commandId": "729dec7d-26f6-4ac2-b1c0-2ae918e270dc"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "file not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 404,
                    "error": "Not Found",
                    "message": "Agent with id 47ab98d5-cccb-4a7d-86f4-0ff8f7c11bda not found"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 400,
                    "error": "Bad Request",
                    "message": "Cloud configuration is supported only by Online agents"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90546,
        "executor_type": "THIRDPARTY",
        "executor_name": "agentStatusHeartBeat",
        "executor_version": "v1",
        "executor_display_name": "Agent Status (Heart Beat)",
        "executor_description": "This endpoint allows TetraScience Agent to send heartbeats to the Tetrascience platform periodically. Platform will return the agent's name. It's recommended to send a heartbeat every 30 seconds.",
        "executor_category": "Agents",
        "executor_category_group": "Agents>dataacquisition",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.tetrascience.com/v1/data-acquisition/agent/status",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682629776115,
        "lastModifiedTime": 1682649553446,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "agentName": "test"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "file not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 404,
                    "error": "Not Found",
                    "message": "Source with source ID 47ab98d5-cccb-4a7d-86f4-0ff8f7c11bda does not exist"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90568,
        "executor_type": "THIRDPARTY",
        "executor_name": "getcommandhistory",
        "executor_version": "v1",
        "executor_display_name": "Get command history",
        "executor_description": "Use this endpoint to obtain all the changes of a given command. It should return all status changes including who made the change and when the change was made.",
        "executor_category": "Agents",
        "executor_category_group": "Agents>Commands",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.tetrascience.com/v1/commands/{id}/history",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "Command id"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682631479242,
        "lastModifiedTime": 1682652374864,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "57ebb02f-81d6-4627-8248-6c24c2d61323",
                    "history": [
                        {
                            "id": "14da67ba-57fc-45ea-8621-09a8466a3f15",
                            "commandId": "57ebb02f-81d6-4627-8248-6c24c2d61323",
                            "reason": "Command created",
                            "updatedBy": "platform",
                            "updatedAt": "2021-01-12T10:14:14.512Z"
                        },
                        {
                            "id": "50f1e195-8c19-4df6-94bb-75540deee23b",
                            "commandId": "57ebb02f-81d6-4627-8248-6c24c2d61323",
                            "reason": "Status update to PENDING",
                            "updatedBy": "platform",
                            "updatedAt": "2021-01-12T10:14:14.543Z"
                        },
                        {
                            "id": "ccb8e962-78fe-43a6-814d-6c27cf62d456",
                            "commandId": "57ebb02f-81d6-4627-8248-6c24c2d61323",
                            "reason": "Command status changed to PROCESSING",
                            "updatedBy": "target",
                            "updatedAt": "2021-01-12T10:14:16.184Z"
                        },
                        {
                            "id": "5c5abc92-3c37-4312-943e-a78f9016280d",
                            "commandId": "57ebb02f-81d6-4627-8248-6c24c2d61323",
                            "reason": "Command status changed to SUCCESS",
                            "updatedBy": "target",
                            "updatedAt": "2021-01-12T10:14:18.054Z"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": " indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.\u201d",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 500,
                    "error": "Internal Server Error",
                    "message": "An internal server error occurred"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "file not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 404,
                    "error": "Not Found",
                    "message": "Command with given ID 57ebb02f-81d6-4627-8248-6c24c2d61324 does not exist"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90547,
        "executor_type": "THIRDPARTY",
        "executor_name": "agentStatusSettingUpdate",
        "executor_version": "v1",
        "executor_display_name": "Agent Status Setting Update",
        "executor_description": "his endpoint allows TetraScience Agent to send status setting update to platform. Tetrascience agents have start/stop button. When start button is clicked, agent should hit endpoint with statusSetting=STARTED. Opposite, when stop button is clicked, agent should hit endpoint with statusSetting=STOPPED.",
        "executor_category": "Agents",
        "executor_category_group": "Agents>dataacquisition",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.tetrascience.com/v1/data-acquisition/agent/status",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682629883215,
        "lastModifiedTime": 1682649694122,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "agentName": "test"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "file not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 404,
                    "error": "Not Found",
                    "message": "Source with source ID 47ab98d5-cccb-4a7d-86f4-0ff8f7c11bda does not exist"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90544,
        "executor_type": "THIRDPARTY",
        "executor_name": "agentSystemMetricUpload",
        "executor_version": "v1",
        "executor_display_name": "Agent System Metric Upload",
        "executor_description": "TetraScience Agent can periodically upload system metrics of itself and the host environment the Agent is running. It requires a user-defined agent set up in the TetraScience Web UI. Uploaded system metric file should be new line delimited JSON file. See below for more details.",
        "executor_category": "Agents",
        "executor_category_group": "Agents>dataacquisition",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.tetrascience.com/v1/data-acquisition/agent/systemmetric",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682629634077,
        "lastModifiedTime": 1682649457642,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "OK"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "file not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 404,
                    "error": "Not Found",
                    "message": "Source with source ID 47ab98d5-cccb-4a7d-86f4-0ff8f7c11bda does not exist"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90558,
        "executor_type": "THIRDPARTY",
        "executor_name": "searchcommands",
        "executor_version": "v1",
        "executor_display_name": "Search commands",
        "executor_description": "Use this endpoint to search all on-premise commands based on various filters. This endpoint is useful when you want to filter out commands, get all successful, or unsuccessful commands, get all commands that are sent to some agent/connector, commands that are created within a certain time range and more.",
        "executor_category": "Agents",
        "executor_category_group": "Agents>Commands",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.tetrascience.com/v1/commands",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "targetId",
                "value": "",
                "description": "ID of the target that received and processed command(s)",
                "req": false
            },
            {
                "key": "action",
                "value": "",
                "description": "Action label like TetraScience.Connector.sdc.CreateMeasurementOrder",
                "req": false
            },
            {
                "key": "status",
                "value": "",
                "description": "Command status: CREATED, UNSENT, PENDING, EXPIRED, PURGED, ERROR, PROCESSING, REJECTED, SUCCESS, FAILURE",
                "req": false
            },
            {
                "key": "fromDate",
                "value": "",
                "description": "Commands created from given timestamp (ISO timestamp)",
                "req": false
            },
            {
                "key": "toDate",
                "value": "",
                "description": "Commands created till given date (ISO timestamp)",
                "req": false
            },
            {
                "key": "from",
                "value": "",
                "description": "Display commands started from specified number in the results array. By default, commands are displayed from the start of the array (the number 0). This parameter is included if the result set is large, pagination might be required. This parameter is typically used in conjunction with size.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Indicates the number of results to return in the request. This parameter is included if the result set is large, pagination might be required. This parameter is typically used in conjunction with from.",
                "req": false
            },
            {
                "key": "sort",
                "value": "",
                "description": "Sort order: asc | desc",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682630764078,
        "lastModifiedTime": 1682652148274,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "hits": [
                        {
                            "id": "013cf44b-e3ef-4757-84c2-ff19a133c955",
                            "orgSlug": "mgtest",
                            "targetId": "d7f4c013-26c3-4214-ae6c-f14467ad6848",
                            "action": "TetraScience.Connector.gdc.HttpRequest",
                            "expiresAt": "2021-01-10T23:58:43.749Z",
                            "metadata": {
                                "key1": "value1",
                                "key2": "value2"
                            },
                            "status": "SUCCESS",
                            "requestBody": {
                                "body": {
                                    "url": "https://jsonplaceholder.typicode.com/posts",
                                    "body": {
                                        "raw": "{ \"title\": \"foo\", \"body\": \"bar\", \"userId\": 1 }",
                                        "mode": "raw"
                                    },
                                    "method": "POST",
                                    "headers": [],
                                    "ignore_tls_certificate": true
                                },
                                "action": "TetraScience.Connector.gdc.HttpRequest",
                                "targetId": "d7f4c013-26c3-4214-ae6c-f14467ad6848",
                                "commandId": "013cf44b-e3ef-4757-84c2-ff19a133c955",
                                "createdAt": "2021-01-08T23:32:31.456Z",
                                "expiresAt": "2021-01-10T23:58:43.749Z"
                            },
                            "responseBody": {
                                "body": "{\"title\":\"foo\",\"body\":\"bar\",\"userId\":1,\"id\":101}",
                                "headers": [
                                    {
                                        "date": "Fri, 08 Jan 2021 23:32:33 GMT"
                                    },
                                    {
                                        "content-type": "application/json; charset=utf-8"
                                    },
                                    {
                                        "content-length": "65"
                                    },
                                    {
                                        "connection": "close"
                                    },
                                    {
                                        "set-cookie": [
                                            "__cfduid=d97d344facc0f82adc186946039b275d91610148753; expires=Sun, 07-Feb-21 23:32:33 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax"
                                        ]
                                    },
                                    {
                                        "x-powered-by": "Express"
                                    },
                                    {
                                        "x-ratelimit-limit": "1000"
                                    },
                                    {
                                        "x-ratelimit-remaining": "999"
                                    },
                                    {
                                        "x-ratelimit-reset": "1610148757"
                                    },
                                    {
                                        "vary": "Origin, X-HTTP-Method-Override, Accept-Encoding"
                                    },
                                    {
                                        "access-control-allow-credentials": "true"
                                    },
                                    {
                                        "cache-control": "no-cache"
                                    },
                                    {
                                        "pragma": "no-cache"
                                    },
                                    {
                                        "expires": "-1"
                                    },
                                    {
                                        "access-control-expose-headers": "Location"
                                    },
                                    {
                                        "location": "http://jsonplaceholder.typicode.com/posts/101"
                                    },
                                    {
                                        "x-content-type-options": "nosniff"
                                    },
                                    {
                                        "etag": "W/\"41-GDNaWfnVU6RZhpLbye0veBaqcHA\""
                                    },
                                    {
                                        "via": "1.1 vegur"
                                    },
                                    {
                                        "cf-cache-status": "DYNAMIC"
                                    },
                                    {
                                        "cf-request-id": "0785f147a40000c2c743215000000001"
                                    },
                                    {
                                        "expect-ct": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
                                    },
                                    {
                                        "report-to": "{\"endpoints\":[{\"url\":\"https://a.nel.cloudflare.com/report?s=YgiQkNmS0T9r5VNVT7lxY1UOFzqBlOObjIXH5rv5JQuqlQMNpSffc6TdpWXDfXXzBc6PYQcNe7mDBE58luZcL5QssEmJ9BT8GBlVowE9UPNrYlbhbuOF5tSY3QIO\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
                                    },
                                    {
                                        "nel": "{\"report_to\":\"cf-nel\",\"max_age\":604800}"
                                    },
                                    {
                                        "server": "cloudflare"
                                    },
                                    {
                                        "cf-ray": "60e9b7ec3c79c2c7-FRA"
                                    }
                                ],
                                "statusCode": 201
                            },
                            "createdByEntity": "user",
                            "createdBy": "59eb8bd4-8b10-43b3-ac57-fe3ab86c05fd",
                            "createdAt": "2021-01-08T23:32:31.456Z",
                            "updatedAt": "2021-01-08T23:32:34.219Z"
                        }
                    ],
                    "hasNext": false,
                    "from": 0,
                    "size": 100,
                    "sort": "desc"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": " indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.\u201d",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 500,
                    "error": "Internal Server Error",
                    "message": "An internal server error occurred"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90566,
        "executor_type": "THIRDPARTY",
        "executor_name": "getonecommand",
        "executor_version": "v1",
        "executor_display_name": "Get one command",
        "executor_description": "Use this endpoint to obtain all the details for one single command. You will need to supply the command id as the path variable. This endpoint returns details like the command id, creation time, expiration time, the action, actual request body, and more.",
        "executor_category": "Agents",
        "executor_category_group": "Agents>Commands",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.tetrascience.com/v1/commands/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "Command ID"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682631339038,
        "lastModifiedTime": 1682652256214,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "d3b63076-02db-4d36-9cea-39fa32f52647",
                    "orgSlug": "mgtest",
                    "targetId": "9154b6c4-0fab-4544-b9c3-c203983e7be6",
                    "action": "TetraScience.Connector.gdc.HttpRequest",
                    "expiresAt": "2020-12-30T23:58:43.749Z",
                    "metadata": {
                        "key1": "value1",
                        "key2": "value2"
                    },
                    "status": "ERROR",
                    "requestBody": {
                        "body": {
                            "url": "https://jsonplaceholder.typicode.com/posts/1",
                            "body": {
                                "raw": "{ \"title\": \"foo\", \"body\": \"bar\", \"userId\": 1 }",
                                "mode": "raw"
                            },
                            "method": "POST",
                            "headers": [],
                            "ignore_tls_certificate": true
                        },
                        "action": "TetraScience.Connector.gdc.HttpRequest",
                        "targetId": "9154b6c4-0fab-4544-b9c3-c203983e7be6",
                        "commandId": "d3b63076-02db-4d36-9cea-39fa32f52647",
                        "createdAt": "2020-12-27T17:04:00.500Z",
                        "expiresAt": "2020-12-30T23:58:43.749Z"
                    },
                    "responseBody": {
                        "body": "{\"message\":\"Request failed with status code 404\"}"
                    },
                    "createdByEntity": null,
                    "createdBy": "59eb8bd4-8b10-43b3-ac57-fe3ab86c05fd",
                    "createdAt": "2020-12-27T17:04:00.500Z",
                    "updatedAt": "2020-12-27T17:04:02.721Z"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": " indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.\u201d",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 500,
                    "error": "Internal Server Error",
                    "message": "An internal server error occurred"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "file not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 404,
                    "error": "Not Found",
                    "message": "Command with ID d3b63076-02db-4d36-9cea-39fa32f52648 not found"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90493,
        "executor_type": "THIRDPARTY",
        "executor_name": "searchfiles",
        "executor_version": "v1",
        "executor_display_name": "Search files",
        "executor_description": "Search for files in the Data Lake using Spleen query language.",
        "executor_category": "Search",
        "executor_category_group": "DataLake>Search",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.tetrascience.com/v1/datalake/search",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "filter",
                "value": "",
                "description": "Filter criteria, specified as a Spleen expression. If omitted, all resources will be returned.",
                "req": false
            },
            {
                "key": "sort",
                "value": "",
                "description": "Order a query by one or more fields.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "The number of results to return. You can treat this as the page size and use it in combination with offset",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "The number of results to skip before returning results from the query. This parameter is intended to be used in conjunction with limit to enable pagination.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682622890691,
        "lastModifiedTime": 1682645940701,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "total": 3,
                    "data": [
                        {
                            "fileId": "f65ce93f-adef-4947-91d0-547b42582048",
                            "category": "raw",
                            "organizationId": "90c408f9-b2d2-42ee-931f-192d63c7394f",
                            "createdAt": "2017-07-21T17:32:28Z",
                            "source": {
                                "egnyte": {
                                    "integrationId": "b2fc7e03-7aaf-487a-ba70-2e7b6c0d517e",
                                    "targetId": "tttt-tttt-tttt",
                                    "filePath": "/shared/plate-reader/sample0.xlsx"
                                }
                            }
                        },
                        {
                            "fileId": "f0a5661c-775a-44d6-8bcf-d2a5b6f0fbe3",
                            "category": "ids",
                            "organizationId": "90c408f9-b2d2-42ee-931f-192d63c7394f",
                            "createdAt": "2017-07-21T17:33:28Z",
                            "rawFileId": "f65ce93f-adef-4947-91d0-547b42582048",
                            "idsType": "plate-reader-biotek-synergy2",
                            "idsTypeVersion": "v1.0.0",
                            "source": {
                                "datapipeline": {
                                    "workflowId": "10d88a57-5c5e-4360-8832-849a91a11145",
                                    "protocolSlug": "parse-plate-reader-biotek-synergy2",
                                    "protocolVersion": "v1.0.0"
                                }
                            },
                            "data": {
                                "sample": {
                                    "id": "abc-def"
                                }
                            }
                        },
                        {
                            "fileId": "5fcbd4de-c77e-4c7d-ba45-80d5812107d2",
                            "category": "report",
                            "organizationId": "90c408f9-b2d2-42ee-931f-192d63c7394f",
                            "createdAt": "2017-07-21T17:34:28Z",
                            "rawFileId": "f65ce93f-adef-4947-91d0-547b42582048",
                            "idsFileId": "f0a5661c-775a-44d6-8bcf-d2a5b6f0fbe3",
                            "source": {
                                "datapipeline": {
                                    "workflowId": "10d88a57-5c5e-4360-8832-849a91a11145",
                                    "protocolSlug": "parse-plate-reader-biotek-synergy2",
                                    "protocolVersion": "v1.0.0"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90589,
        "executor_type": "THIRDPARTY",
        "executor_name": "searchFilesGET",
        "executor_version": "v1",
        "executor_display_name": "Search Files (GET)",
        "executor_description": "Search Files (GET)",
        "executor_category": "search",
        "executor_category_group": "FileInfo>search",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.tetrascience.com/v1/fileinfo/search",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "category",
                "value": "",
                "description": "File category. Values are RAW, IDS, and PROCESSED.",
                "req": false
            },
            {
                "key": "from",
                "value": "",
                "description": "Display files started from specified number in the results array. By default, files are displayed from the start of the array (the number 0). This parameter is included if the result set is large, pagination might be required. This parameter is typically used in conjunction with size.  0",
                "req": false
            },
            {
                "key": "fromDate",
                "value": "",
                "description": "Search for files created on or after a specific date.",
                "req": false
            },
            {
                "key": "excludeTags",
                "value": "",
                "description": "Lists the tags that should be excluded; files that have the specified tag associated with them will not appear in search results.",
                "req": false
            },
            {
                "key": "ids",
                "value": "",
                "description": "Name, type, and version of the schema used to create the IDS file. Format is {namespace}/{idsType}:{idsVersion}.",
                "req": false
            },
            {
                "key": "integrationId",
                "value": "",
                "description": "UUID for the integration.",
                "req": false
            },
            {
                "key": "integrationType",
                "value": "",
                "description": "Integration type. Values are EGNYTE, BOX, DOTMATICS, HRB CELLARIO, DATAHUB, PIPELINE, RAW, and API.",
                "req": false
            },
            {
                "key": "metadata",
                "value": "",
                "description": "Searches for files that have specific metadata.",
                "req": false
            },
            {
                "key": "pipelineId",
                "value": "",
                "description": "UUID for the pipeline.",
                "req": false
            },
            {
                "key": "rawFileId",
                "value": "",
                "description": "UUID for the RAW file that this file was generated from.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Indicates the number of results to return in the request. This parameter is included if the result set is large, pagination might be required. This parameter is typically used in conjunction with from.  100",
                "req": false
            },
            {
                "key": "sort",
                "value": "",
                "description": "Indicates the sort order for the search results. Sort occurs on the date (createAt timestamp, which occurred when the file was created in the data lake. Options: desc, asc  asc",
                "req": false
            },
            {
                "key": "sourceId",
                "value": "",
                "description": "UUID for the source.",
                "req": false
            },
            {
                "key": "sourceType",
                "value": "",
                "description": "Type of source, which is typically the name of the instrument or other lab equipment used to generate the data or report.",
                "req": false
            },
            {
                "key": "traceId",
                "value": "",
                "description": "UUID generated when the RAW file is first uploaded to the data lake. All files derived from the RAW file, such as an IDS file, have the same traceId.",
                "req": false
            },
            {
                "key": "tags",
                "value": "",
                "description": "Lists tags that the user added to the file.",
                "req": false
            },
            {
                "key": "toDate",
                "value": "",
                "description": "Search for files created on or before a specific date.",
                "req": false
            },
            {
                "key": "workflowId ",
                "value": "",
                "description": "ID for the pipeline workflow.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682632962972,
        "lastModifiedTime": 1682653625420,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "from": 0,
                    "size": 1,
                    "sort": "asc",
                    "hasNext": false,
                    "hits": [
                        {
                            "fileId": "ac2750f0-f252-4083-90d1-7825d2b1691f",
                            "filePath": "/my-machine-name/UNICORN_HDAServer12.1/Default/Folders/DefaultHome/Cheng/01/sample_01 - SPPD-17-0050 BHIC 09APR17 New Resin Run 1 001.json/0.json",
                            "orgSlug": "tetrascience",
                            "traceId": "6f1b19f7-fa44-43fe-9d32-ad30ac3069a1",
                            "file": {
                                "bucket": "myBucketName",
                                "path": "tetrascience/7abaa520-726d-4182-9e17-8c830f29ae0e/IDS/my-machine-name/UNICORN_HDAServer12.1/Default/Folders/DefaultHome/Cheng/01/sample_01 - SPPD-17-0050 BHIC 09APR17 New Resin Run 1 001.json/0.json",
                                "checksum": "690a567e4d58c1ea87e5cb1d8c4fd54a-2",
                                "size": 5984603,
                                "type": null,
                                "version": "v3.A3soqFFydk2V1PXBwXcyJgV17sUuh"
                            },
                            "createdAt": "2021-08-21T23:13:04.000Z",
                            "category": "IDS",
                            "integration": {
                                "id": "d61bcba5-3ebb-4149-a59d-16f4c20b4b86",
                                "type": "datapipeline",
                                "name": "Liang Unicorn v2.6.0 Test 05-04-2020",
                                "workflowId": "eeac26b1-5034-4a1d-a97f-0c8b8cd2ea1e",
                                "masterScript": "common/akta-raw-to-ids:v3.0.0",
                                "taskScript": "common/akta-raw-to-ids:v3.0.0",
                                "taskSlug": "akta-raw-to-ids",
                                "taskExecutionId": "12202ae7-a796-4dc8-b048-0da994b38ec2"
                            },
                            "source": {
                                "id": "7abaa520-726d-4182-9e17-8c830f29ae0e",
                                "type": "unicorn-hda",
                                "name": "UNICORN-TEST-AGENT-2",
                                "datapipeline": {
                                    "workflowId": "eeac26b1-5034-4a1d-a97f-0c8b8cd2ea1e",
                                    "taskExecutionId": "12202ae7-a796-4dc8-b048-0da994b38ec2",
                                    "taskSlug": "akta-raw-to-ids",
                                    "taskScript": "common/akta-raw-to-ids:v3.0.0",
                                    "masterScript": "common/akta-raw-to-ids:v3.0.0",
                                    "inputFileId": "6f1b19f7-fa44-43fe-9d32-ad30ac3069a1"
                                }
                            },
                            "rawFileId": "6f1b19f7-fa44-43fe-9d32-ad30ac3069a1",
                            "ids": "common/akta:v3.0.0",
                            "metadata": {
                                "Version": "v330",
                                "CREATED_FOR": "PQ",
                                "cheeeng": "sss"
                            },
                            "tags": [
                                "PQ",
                                "ssss"
                            ],
                            "deleted": false,
                            "outdated": false
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": " Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 401,
                    "error": "Unauthorized",
                    "message": "Invalid token"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": " indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.\u201d",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 500,
                    "error": "Internal Server Error",
                    "message": "Internal Server Error"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90507,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrievemetadataandtagsofafile",
        "executor_version": "v1",
        "executor_display_name": "Retrieve metadata and tags of a file",
        "executor_description": "This endpoint returns metadata and tags of a target file in datalake. This endpoint require either fileId or bucket, fileKey and version to be provided in order to uniquely identify file.",
        "executor_category": "Tags",
        "executor_category_group": "DataLake>Tags",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.tetrascience.com/v1/datalake/metadata-tags",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "fileId",
                "value": "",
                "description": "UUIDv4 of the target file in datalake",
                "req": false
            },
            {
                "key": "bucket",
                "value": "",
                "description": "S3 bucket of the target file in datalake",
                "req": false
            },
            {
                "key": "type",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "version",
                "value": "",
                "description": "Version of the target file in datalake",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682625246441,
        "lastModifiedTime": 1682647083622,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "metadata": {
                        "b": "null",
                        "c": "Test"
                    },
                    "tags": [
                        "Boston",
                        "San Fran",
                        "123"
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "file not find",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 404,
                    "error": "Not Found",
                    "message": "File not found: ts-platform-dev-datalake1/tetrascience/tetrascience/47ab98d5-cccb-4a7d-86f4-0ff8f7c11bdf/RAW/WAT12/Test_0504/Test_SignOff/PQ Sample Set/1135/19970917300559.json in version DupNjjfIab3JqWMCaDJPmx2XlG6GxBwJ"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90504,
        "executor_type": "THIRDPARTY",
        "executor_name": "updatTagsofaFile",
        "executor_version": "v1",
        "executor_display_name": "Update Tags of a File",
        "executor_description": "Update Tags of a File",
        "executor_category": "Tags",
        "executor_category_group": "DataLake>Tags",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.tetrascience.com/v1/datalake/tags/{fileId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "fileId",
                "value": "",
                "description": "ID of the file"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1682624978944,
        "lastModifiedTime": 1682624978945,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90511,
        "executor_type": "THIRDPARTY",
        "executor_name": "updatemetadataandtagsofafile",
        "executor_version": "v1",
        "executor_display_name": "Update metadata and tags of a file",
        "executor_description": "This endpoint updates metadata and tags of a target file in datalake. This endpoint require either fileId or bucket, fileKey and version to be provided in order to uniquely identify file.  Target file query is determined by field originalFile. Target file is queried in two ways:  by fileId (UUID of a file in datalake) by bucket, fileKey and version Endpoint finds target file by given file query and creates new version with updated metadata and tags. If payload doesn't contain neither metadata nor tags, endpoint will return existing file from datalake.",
        "executor_category": "Tags",
        "executor_category_group": "DataLake>Tags",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.tetrascience.com/v1/datalake/metadata-tags",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682625595404,
        "lastModifiedTime": 1682647450399,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "fileId": "f46c1b61-ad7c-477f-8dc6-87790445a730",
                    "fileKey": "tetrascience/47ab98d5-cccb-4a7d-86f4-0ff8f7c11bdf/RAW/WAT12/Test_0504/Test_SignOff/PQ Sample Set/1135/19970917300559.json",
                    "bucket": "ts-platform-dev-datalake",
                    "version": "DupNjjfIab3JqWMCaDJPmx2XlG6GxBwJ",
                    "type": "s3file"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "file not find",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 404,
                    "error": "Not Found",
                    "message": "File not found: ts-platform-dev-datalake1/tetrascience/tetrascience/47ab98d5-cccb-4a7d-86f4-0ff8f7c11bdf/RAW/WAT12/Test_0504/Test_SignOff/PQ Sample Set/1135/19970917300559.json in version DupNjjfIab3JqWMCaDJPmx2XlG6GxBwJ"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 400,
                    "error": "Bad Request",
                    "message": "Error validating payload",
                    "validations": [
                        {
                            "message": "\"b\" must be a string",
                            "path": "metadata.b",
                            "type": "string.base",
                            "context": {
                                "value": 1234123,
                                "key": "b"
                            }
                        }
                    ]
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "the action could not be processed properly due to invalid data provided. ",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 422,
                    "error": "Unprocessable Entity",
                    "message": "Error validating metadata and tags",
                    "details": {
                        "errors": [
                            "Metadata value \u041c\u0438\u043b\u043e\u0448 contains non-ASCII character",
                            "Tags item San, Fran contains comma (,)"
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90493,
        "executor_type": "THIRDPARTY",
        "executor_name": "searchfiles",
        "executor_version": "v1",
        "executor_display_name": "Search files",
        "executor_description": "Search for files in the Data Lake using Spleen query language.",
        "executor_category": "Search",
        "executor_category_group": "DataLake>Search",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.tetrascience.com/v1/datalake/search",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "filter",
                "value": "",
                "description": "Filter criteria, specified as a Spleen expression. If omitted, all resources will be returned.",
                "req": false
            },
            {
                "key": "sort",
                "value": "",
                "description": "Order a query by one or more fields.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "The number of results to return. You can treat this as the page size and use it in combination with offset",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "The number of results to skip before returning results from the query. This parameter is intended to be used in conjunction with limit to enable pagination.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682622890691,
        "lastModifiedTime": 1682645940701,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "total": 3,
                    "data": [
                        {
                            "fileId": "f65ce93f-adef-4947-91d0-547b42582048",
                            "category": "raw",
                            "organizationId": "90c408f9-b2d2-42ee-931f-192d63c7394f",
                            "createdAt": "2017-07-21T17:32:28Z",
                            "source": {
                                "egnyte": {
                                    "integrationId": "b2fc7e03-7aaf-487a-ba70-2e7b6c0d517e",
                                    "targetId": "tttt-tttt-tttt",
                                    "filePath": "/shared/plate-reader/sample0.xlsx"
                                }
                            }
                        },
                        {
                            "fileId": "f0a5661c-775a-44d6-8bcf-d2a5b6f0fbe3",
                            "category": "ids",
                            "organizationId": "90c408f9-b2d2-42ee-931f-192d63c7394f",
                            "createdAt": "2017-07-21T17:33:28Z",
                            "rawFileId": "f65ce93f-adef-4947-91d0-547b42582048",
                            "idsType": "plate-reader-biotek-synergy2",
                            "idsTypeVersion": "v1.0.0",
                            "source": {
                                "datapipeline": {
                                    "workflowId": "10d88a57-5c5e-4360-8832-849a91a11145",
                                    "protocolSlug": "parse-plate-reader-biotek-synergy2",
                                    "protocolVersion": "v1.0.0"
                                }
                            },
                            "data": {
                                "sample": {
                                    "id": "abc-def"
                                }
                            }
                        },
                        {
                            "fileId": "5fcbd4de-c77e-4c7d-ba45-80d5812107d2",
                            "category": "report",
                            "organizationId": "90c408f9-b2d2-42ee-931f-192d63c7394f",
                            "createdAt": "2017-07-21T17:34:28Z",
                            "rawFileId": "f65ce93f-adef-4947-91d0-547b42582048",
                            "idsFileId": "f0a5661c-775a-44d6-8bcf-d2a5b6f0fbe3",
                            "source": {
                                "datapipeline": {
                                    "workflowId": "10d88a57-5c5e-4360-8832-849a91a11145",
                                    "protocolSlug": "parse-plate-reader-biotek-synergy2",
                                    "protocolVersion": "v1.0.0"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90589,
        "executor_type": "THIRDPARTY",
        "executor_name": "searchFilesGET",
        "executor_version": "v1",
        "executor_display_name": "Search Files (GET)",
        "executor_description": "Search Files (GET)",
        "executor_category": "search",
        "executor_category_group": "FileInfo>search",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.tetrascience.com/v1/fileinfo/search",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "category",
                "value": "",
                "description": "File category. Values are RAW, IDS, and PROCESSED.",
                "req": false
            },
            {
                "key": "from",
                "value": "",
                "description": "Display files started from specified number in the results array. By default, files are displayed from the start of the array (the number 0). This parameter is included if the result set is large, pagination might be required. This parameter is typically used in conjunction with size.  0",
                "req": false
            },
            {
                "key": "fromDate",
                "value": "",
                "description": "Search for files created on or after a specific date.",
                "req": false
            },
            {
                "key": "excludeTags",
                "value": "",
                "description": "Lists the tags that should be excluded; files that have the specified tag associated with them will not appear in search results.",
                "req": false
            },
            {
                "key": "ids",
                "value": "",
                "description": "Name, type, and version of the schema used to create the IDS file. Format is {namespace}/{idsType}:{idsVersion}.",
                "req": false
            },
            {
                "key": "integrationId",
                "value": "",
                "description": "UUID for the integration.",
                "req": false
            },
            {
                "key": "integrationType",
                "value": "",
                "description": "Integration type. Values are EGNYTE, BOX, DOTMATICS, HRB CELLARIO, DATAHUB, PIPELINE, RAW, and API.",
                "req": false
            },
            {
                "key": "metadata",
                "value": "",
                "description": "Searches for files that have specific metadata.",
                "req": false
            },
            {
                "key": "pipelineId",
                "value": "",
                "description": "UUID for the pipeline.",
                "req": false
            },
            {
                "key": "rawFileId",
                "value": "",
                "description": "UUID for the RAW file that this file was generated from.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Indicates the number of results to return in the request. This parameter is included if the result set is large, pagination might be required. This parameter is typically used in conjunction with from.  100",
                "req": false
            },
            {
                "key": "sort",
                "value": "",
                "description": "Indicates the sort order for the search results. Sort occurs on the date (createAt timestamp, which occurred when the file was created in the data lake. Options: desc, asc  asc",
                "req": false
            },
            {
                "key": "sourceId",
                "value": "",
                "description": "UUID for the source.",
                "req": false
            },
            {
                "key": "sourceType",
                "value": "",
                "description": "Type of source, which is typically the name of the instrument or other lab equipment used to generate the data or report.",
                "req": false
            },
            {
                "key": "traceId",
                "value": "",
                "description": "UUID generated when the RAW file is first uploaded to the data lake. All files derived from the RAW file, such as an IDS file, have the same traceId.",
                "req": false
            },
            {
                "key": "tags",
                "value": "",
                "description": "Lists tags that the user added to the file.",
                "req": false
            },
            {
                "key": "toDate",
                "value": "",
                "description": "Search for files created on or before a specific date.",
                "req": false
            },
            {
                "key": "workflowId ",
                "value": "",
                "description": "ID for the pipeline workflow.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682632962972,
        "lastModifiedTime": 1682653625420,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "from": 0,
                    "size": 1,
                    "sort": "asc",
                    "hasNext": false,
                    "hits": [
                        {
                            "fileId": "ac2750f0-f252-4083-90d1-7825d2b1691f",
                            "filePath": "/my-machine-name/UNICORN_HDAServer12.1/Default/Folders/DefaultHome/Cheng/01/sample_01 - SPPD-17-0050 BHIC 09APR17 New Resin Run 1 001.json/0.json",
                            "orgSlug": "tetrascience",
                            "traceId": "6f1b19f7-fa44-43fe-9d32-ad30ac3069a1",
                            "file": {
                                "bucket": "myBucketName",
                                "path": "tetrascience/7abaa520-726d-4182-9e17-8c830f29ae0e/IDS/my-machine-name/UNICORN_HDAServer12.1/Default/Folders/DefaultHome/Cheng/01/sample_01 - SPPD-17-0050 BHIC 09APR17 New Resin Run 1 001.json/0.json",
                                "checksum": "690a567e4d58c1ea87e5cb1d8c4fd54a-2",
                                "size": 5984603,
                                "type": null,
                                "version": "v3.A3soqFFydk2V1PXBwXcyJgV17sUuh"
                            },
                            "createdAt": "2021-08-21T23:13:04.000Z",
                            "category": "IDS",
                            "integration": {
                                "id": "d61bcba5-3ebb-4149-a59d-16f4c20b4b86",
                                "type": "datapipeline",
                                "name": "Liang Unicorn v2.6.0 Test 05-04-2020",
                                "workflowId": "eeac26b1-5034-4a1d-a97f-0c8b8cd2ea1e",
                                "masterScript": "common/akta-raw-to-ids:v3.0.0",
                                "taskScript": "common/akta-raw-to-ids:v3.0.0",
                                "taskSlug": "akta-raw-to-ids",
                                "taskExecutionId": "12202ae7-a796-4dc8-b048-0da994b38ec2"
                            },
                            "source": {
                                "id": "7abaa520-726d-4182-9e17-8c830f29ae0e",
                                "type": "unicorn-hda",
                                "name": "UNICORN-TEST-AGENT-2",
                                "datapipeline": {
                                    "workflowId": "eeac26b1-5034-4a1d-a97f-0c8b8cd2ea1e",
                                    "taskExecutionId": "12202ae7-a796-4dc8-b048-0da994b38ec2",
                                    "taskSlug": "akta-raw-to-ids",
                                    "taskScript": "common/akta-raw-to-ids:v3.0.0",
                                    "masterScript": "common/akta-raw-to-ids:v3.0.0",
                                    "inputFileId": "6f1b19f7-fa44-43fe-9d32-ad30ac3069a1"
                                }
                            },
                            "rawFileId": "6f1b19f7-fa44-43fe-9d32-ad30ac3069a1",
                            "ids": "common/akta:v3.0.0",
                            "metadata": {
                                "Version": "v330",
                                "CREATED_FOR": "PQ",
                                "cheeeng": "sss"
                            },
                            "tags": [
                                "PQ",
                                "ssss"
                            ],
                            "deleted": false,
                            "outdated": false
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": " Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 401,
                    "error": "Unauthorized",
                    "message": "Invalid token"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": " indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.\u201d",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 500,
                    "error": "Internal Server Error",
                    "message": "Internal Server Error"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90501,
        "executor_type": "THIRDPARTY",
        "executor_name": "getlistSchemas",
        "executor_version": "v1",
        "executor_display_name": "List Schemas",
        "executor_description": "List Schemas",
        "executor_category": "Schemas",
        "executor_category_group": "DataLake>Schemas",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.tetrascience.com/v1/datalake/schemas",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "type",
                "value": "",
                "description": "Return only IDS of a given type. Example: plate-reader. If omitted, will return the all the IDS the api key has access to.",
                "req": false
            },
            {
                "key": "version",
                "value": "",
                "description": "Return a specific version. This must be used with type. Example: v1.0.0. If omitted, will return all the versions.",
                "req": false
            },
            {
                "key": "fields",
                "value": "",
                "description": "Comma-separated list of fields to return (nested paths are also supported). Example: namespace,slug,version,schema.description. If omitted, will return full structure. Not-existing fields will be ignored.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682624759867,
        "lastModifiedTime": 1682646772774,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "namespace": "common",
                        "slug": "some-identificator",
                        "version": "v1.0.0",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "assay_name": {
                                    "type": "string"
                                },
                                "temperature": {
                                    "type": "number"
                                },
                                "timestamp": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "readout": {
                                    "type": "array",
                                    "items": {
                                        "type": "number"
                                    }
                                }
                            }
                        },
                        "expected": {},
                        "elasticsearch": {},
                        "athena": {},
                        "readme": "Some text"
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90593,
        "executor_type": "THIRDPARTY",
        "executor_name": "addLabelsPOST",
        "executor_version": "v1",
        "executor_display_name": "Add Labels POST",
        "executor_description": "This endpoint allows you to add a label to a file.",
        "executor_category": "Labels ",
        "executor_category_group": "FileInfo>Labels ",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.tetrascience.com/v1/fileinfo/files/{fileId}/labels",
        "dataroot": null,
        "pathParams": [
            {
                "key": "fileId",
                "value": "",
                "description": "ID assigned to the file when it was created in the data lake. Type is uuid."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "my_name_value",
                "value": "my_label_value",
                "id": 3871635,
                "createdAt": "2021-10-06T14:36:19.721Z"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682633677427,
        "lastModifiedTime": 1682653888219,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "name": "<name>",
                        "value": "<value>"
                    }
                ]
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 401,
                    "error": "Unauthorized",
                    "message": "Invalid token"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "file not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 404,
                    "error": "Not Found",
                    "message": "Not Found"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.\u201d",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 500,
                    "error": "Internal Server Error",
                    "message": "Internal Server Error"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90596,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteLabelsDELETE",
        "executor_version": "v1",
        "executor_display_name": "Delete Labels DELETE",
        "executor_description": "Delete Labels (DELETE)",
        "executor_category": "Labels ",
        "executor_category_group": "FileInfo>Labels ",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.tetrascience.com/v1/fileinfo/files/{fileId}/labels",
        "dataroot": null,
        "pathParams": [
            {
                "key": "fileId",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "id",
                "value": "",
                "description": "ID Assigned to the Label. You can find this by running the Get File Information endpoint",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682634024421,
        "lastModifiedTime": 1682654055154,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 401,
                    "error": "Unauthorized",
                    "message": "Invalid token"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "file not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 404,
                    "error": "Not Found",
                    "message": "Not Found"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.\u201d",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 500,
                    "error": "Internal Server Error",
                    "message": "Internal Server Error"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90584,
        "executor_type": "THIRDPARTY",
        "executor_name": "getFileVersions",
        "executor_version": "v1",
        "executor_display_name": "Get File Versions",
        "executor_description": "Get File Versions",
        "executor_category": "FileInfo",
        "executor_category_group": "FileInfo>files",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.tetrascience.com/v1/fileinfo/file/{fileId}/versions",
        "dataroot": null,
        "pathParams": [
            {
                "key": "fileId",
                "value": "",
                "description": "ID assigned to the file when it was created in the data lake. Type is uuid."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682632439635,
        "lastModifiedTime": 1682653361602,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "file not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 404,
                    "error": "Not Found",
                    "message": "Not Found"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": " Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 401,
                    "error": "Unauthorized",
                    "message": "Invalid token"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": " indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.\u201d",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 500,
                    "error": "Internal Server Error",
                    "message": "Internal Server Error"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90581,
        "executor_type": "THIRDPARTY",
        "executor_name": "getFileInformation",
        "executor_version": "v1",
        "executor_display_name": "Get File Information",
        "executor_description": "Displays file information, such as the file creation date, size, and location.",
        "executor_category": "FileInfo",
        "executor_category_group": "FileInfo>files",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.tetrascience.com/v1/fileinfo/file/{fileId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "fileId",
                "value": "",
                "description": "ID assigned to the file when it was created in the data lake. Type is uuid."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682632272682,
        "lastModifiedTime": 1682652651094,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "file not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 404,
                    "error": "Not Found",
                    "message": "Not Found"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": " Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 401,
                    "error": "Unauthorized",
                    "message": "Invalid token"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": " indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.\u201d",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 500,
                    "error": "Internal Server Error",
                    "message": "Internal Server Error"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90496,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveaFile",
        "executor_version": "v1",
        "executor_display_name": "Retrieve a File",
        "executor_description": "Retrieve a File",
        "executor_category": "Files",
        "executor_category_group": "DataLake>Files",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": " https://api.tetrascience.com/v1/datalake/retrieve",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "fileId",
                "value": "",
                "description": "ID of the file to retrieve.",
                "req": false
            },
            {
                "key": "getPresigned",
                "value": "",
                "description": "A JSON object with temporary s3 url will returned instead of the actual file content (expires in 5 minutes)",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1682624065663,
        "lastModifiedTime": 1682624065663,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 90498,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteafile",
        "executor_version": "v1",
        "executor_display_name": "Delete a File",
        "executor_description": "This endpoint does soft delete. Soft delete means that file will remain in datalake but will be marked as deleted. This means that file will not appear in file search and Athena search",
        "executor_category": "Files",
        "executor_category_group": "DataLake>Files",
        "service_provider": "tetrascience",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.tetrascience.com/v1/datalake/delete",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "fileId",
                "value": "",
                "description": "ID of the file to delete",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1682624444413,
        "lastModifiedTime": 1682646670395,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status": "deleted",
                    "entity": {
                        "fileId": "1013c6fe-05fa-4565-97a7-aed3cf9327cb",
                        "filename": "example.xlsx",
                        "orgSlug": "tetrascience",
                        "category": "raw",
                        "sourceType": "egnyte",
                        "source": {
                            "type": "egnyte",
                            "egnyte": {
                                "integrationId": "65e63947-81ea-49f3-971b-907051ae7fb3",
                                "filePath": "/Private/username/example.xlsx",
                                "fileName": "example.xlsx",
                                "groupId": "ed2ed265-7f4a-4d02-b687-2b03eda1ce59",
                                "entryId": "fdea5a6f-d209-4d27-91f3-218ef7175a3a",
                                "checksum": "63e208ef49ef363bc532a4ce334ff3ca92ad0a3200a61698f9e678132ac2f89d4c7f44b09969ef60d4d53aeb22121658d727d6df745ce2fcc382a9220a496500",
                                "versionId": "fdea5a6f-d209-4d27-91f3-218ef7175a3a",
                                "lastModifiedTime": "2018-01-08T23:24:04.000Z",
                                "versionNum": 1
                            }
                        }
                    }
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "file not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statusCode": 404,
                    "error": "Not Found",
                    "message": "File not found: b80da4bf-dbe9-4c46-9baf-5ab0ba66f5bc"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    }
]