[
    {
        "id": 87760,
        "executor_type": "THIRDPARTY",
        "executor_name": "marine",
        "executor_version": "v1",
        "executor_display_name": "marine",
        "executor_description": "Marine weather API method returns upto next 7 day (depending upon your price plan level) marine and sailing weather forecast and tide data (depending upon your price plan level) as json or xml. The data is returned as a Marine Object.   Marine object, depending upon your price plan level, contains astronomy data, day weather forecast and hourly interval weather information and tide data for a given sea/ocean point.",
        "executor_category": "Weather api",
        "executor_category_group": "Weather api",
        "service_provider": "Weather api",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "http://api.weatherapi.com/v1/marine.json",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "key",
                "value": "",
                "description": "API Key",
                "req": true
            },
            {
                "key": "days",
                "value": "",
                "description": "Number of days of forecast required.  days parameter value ranges between 1 and 14. e.g: days=5  If no days parameter is provided then only today's weather is returned.",
                "req": false
            },
            {
                "key": "q",
                "value": "",
                "description": "Query parameter based on which data is sent back. It could be following:  Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508 city name e.g.: q=Paris US zip e.g.: q=10001 UK postcode e.g: q=SW1 Canada postal code e.g: q=G2J metar:<metar code> e.g: q=metar:EGLL iata:<3 digit airport code> e.g: q=iata:DXB auto:ip IP lookup e.g: q=auto:ip IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1 bulk New",
                "req": false
            },
            {
                "key": "dt (Required for History and Future API)",
                "value": "",
                "description": "For history API 'dt' should be on or after 1st Jan, 2010 in yyyy-MM-dd format (i.e. dt=2010-01-01)  For forecast API 'dt' should be between today and next 14 day in yyyy-MM-dd format (i.e. dt=2010-01-01)  For future API 'dt' should be between 14 days and 300 days from today in the future in yyyy-MM-dd format (i.e. dt=2023-01-01)",
                "req": false
            },
            {
                "key": "unixdt",
                "value": "",
                "description": "unixdt has same restriction as 'dt' parameter. Please either pass 'dt' or 'unixdt' and not both in same request. e.g.: unixdt=1490227200",
                "req": false
            },
            {
                "key": "end_dt (Available for History API)",
                "value": "",
                "description": "For history API 'end_dt' should be on or after 1st Jan, 2010 in yyyy-MM-dd format (i.e. dt=2010-01-01)  'end_dt' should be greater than 'dt' parameter and difference should not be more than 30 days between the two dates.",
                "req": false
            },
            {
                "key": "unixend_dt",
                "value": "",
                "description": "unixend_dt has same restriction as 'end_dt' parameter. Please either pass 'end_dt' or 'unixend_dt' and not both in same request. e.g.: unixend_dt=1490227200",
                "req": false
            },
            {
                "key": "hour",
                "value": "",
                "description": "Must be in 24 hour. For example 5 pm should be hour=17, 6 am as hour=6",
                "req": false
            },
            {
                "key": "alerts",
                "value": "",
                "description": "alerts=yes or alerts=no",
                "req": false
            },
            {
                "key": "aqi",
                "value": "",
                "description": "aqi=yes or aqi=no",
                "req": false
            },
            {
                "key": "tides ",
                "value": "",
                "description": "tides=yes or tides=no",
                "req": false
            },
            {
                "key": "tp",
                "value": "",
                "description": "tp=15",
                "req": false
            },
            {
                "key": "lang",
                "value": "",
                "description": "Please pass 'lang code' from below table. e.g.: lang=fr  Language\tlang code Arabic\tar Bengali\tbn Bulgarian\tbg Chinese Simplified\tzh Chinese Traditional\tzh_tw Czech\tcs Danish\tda Dutch\tnl Finnish\tfi French\tfr German\tde Greek\tel Hindi\thi Hungarian\thu Italian\tit Japanese\tja Javanese\tjv Korean\tko Mandarin\tzh_cmn Marathi\tmr Polish\tpl Portuguese\tpt Punjabi\tpa Romanian\tro Russian\tru Serbian\tsr Sinhalese\tsi Slovak\tsk Spanish\tes Swedish\tsv Tamil\tta Telugu\tte Turkish\ttr Ukrainian\tuk Urdu\tur Vietnamese\tvi Wu (Shanghainese)\tzh_wuu Xiang\tzh_hsn Yue (Cantonese)\tzh_yue Zulu\tzu",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1681199150679,
        "lastModifiedTime": 1681199150679,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 87767,
        "executor_type": "THIRDPARTY",
        "executor_name": "IP_Lookup",
        "executor_version": "v1",
        "executor_display_name": "IP_Lookup",
        "executor_description": "IP Lookup API method allows a user to get up to date information for an IP address in json and xml.",
        "executor_category": "Weather api",
        "executor_category_group": "Weather api",
        "service_provider": "Weather api",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "http://api.weatherapi.com/v1/ip.json",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "key",
                "value": "",
                "description": "API Key",
                "req": true
            },
            {
                "key": "ip",
                "value": "",
                "description": "IP address",
                "req": false
            },
            {
                "key": "type",
                "value": "",
                "description": "ipv4 or ipv6",
                "req": false
            },
            {
                "key": "continent_code",
                "value": "",
                "description": "Continent code",
                "req": false
            },
            {
                "key": "continent_name",
                "value": "",
                "description": "Continent name",
                "req": false
            },
            {
                "key": "country_code",
                "value": "",
                "description": "Country code",
                "req": false
            },
            {
                "key": "country_name",
                "value": "",
                "description": "Name of country",
                "req": false
            },
            {
                "key": "is_eu",
                "value": "",
                "description": "true or false",
                "req": false
            },
            {
                "key": "geoname_id",
                "value": "",
                "description": "Geoname ID",
                "req": false
            },
            {
                "key": "city",
                "value": "",
                "description": "City name",
                "req": false
            },
            {
                "key": "region",
                "value": "",
                "description": "Region name",
                "req": false
            },
            {
                "key": "lat",
                "value": "",
                "description": "Latitude in decimal degree",
                "req": false
            },
            {
                "key": "lon",
                "value": "",
                "description": "Longitude in decimal degree",
                "req": false
            },
            {
                "key": "tz_id",
                "value": "",
                "description": "Time zone",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1681200800068,
        "lastModifiedTime": 1681200800068,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 87766,
        "executor_type": "THIRDPARTY",
        "executor_name": "astronomy",
        "executor_version": "v1",
        "executor_display_name": "astronomy",
        "executor_description": "Astronomy API method allows a user to get up to date information for sunrise, sunset, moonrise, moonset, moon phase and illumination in json and xml.",
        "executor_category": "Weather api",
        "executor_category_group": "Weather api",
        "service_provider": "Weather api",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "http://api.weatherapi.com/v1/astronomy.json",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "key",
                "value": "",
                "description": "API Key",
                "req": true
            },
            {
                "key": "sunrise",
                "value": "",
                "description": "Sunrise local time",
                "req": false
            },
            {
                "key": "sunset",
                "value": "",
                "description": "Sunset local time",
                "req": false
            },
            {
                "key": "moonrise",
                "value": "",
                "description": "Moonrise local time",
                "req": false
            },
            {
                "key": "moonset",
                "value": "",
                "description": "Moonset local time",
                "req": false
            },
            {
                "key": "moon_phase",
                "value": "",
                "description": "Moon phases",
                "req": false
            },
            {
                "key": "moon_illumination",
                "value": "",
                "description": "Moon illumination",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1681199801960,
        "lastModifiedTime": 1681199801960,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 87763,
        "executor_type": "THIRDPARTY",
        "executor_name": "timeZone",
        "executor_version": "v1",
        "executor_display_name": "timeZone",
        "executor_description": "Time Zone API method allows a user to get up to date time zone and local time information in json and xml.",
        "executor_category": "Weather api",
        "executor_category_group": "Weather api",
        "service_provider": "Weather api",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "http://api.weatherapi.com/v1/timezone.json",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "key",
                "value": "",
                "description": "API Key",
                "req": true
            },
            {
                "key": "tz_id",
                "value": "",
                "description": "Time zone id",
                "req": false
            },
            {
                "key": "localtime_epoch",
                "value": "",
                "description": "Local time in epoch.",
                "req": false
            },
            {
                "key": "localtime",
                "value": "",
                "description": "Local time in yyyy-MM-dd HH:mm format",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1681199398037,
        "lastModifiedTime": 1681199398037,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 87764,
        "executor_type": "THIRDPARTY",
        "executor_name": "sports",
        "executor_version": "v1",
        "executor_display_name": "sports",
        "executor_description": "Sports API method allows a user to get listing of all upcoming sports events for football, cricket and golf in json and xml.",
        "executor_category": "Weather api",
        "executor_category_group": "Weather api",
        "service_provider": "Weather api",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "http://api.weatherapi.com/v1/sports.json",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "key",
                "value": "",
                "description": "API Key",
                "req": true
            },
            {
                "key": "stadium",
                "value": "",
                "description": "Name of stadium",
                "req": false
            },
            {
                "key": "country",
                "value": "",
                "description": "Country",
                "req": false
            },
            {
                "key": "region",
                "value": "",
                "description": "Region",
                "req": false
            },
            {
                "key": "tournament",
                "value": "",
                "description": "Tournament name",
                "req": false
            },
            {
                "key": "start",
                "value": "",
                "description": "Start local date and time for event in yyyy-MM-dd HH:mm format.",
                "req": false
            },
            {
                "key": "Match",
                "value": "",
                "description": "Match name",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1681199631406,
        "lastModifiedTime": 1681199631406,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 87754,
        "executor_type": "THIRDPARTY",
        "executor_name": "currentweather",
        "executor_version": "v1",
        "executor_display_name": "currentweather",
        "executor_description": "Current weather or realtime weather API method allows a user to get up to date current weather information in json and xml. The data is returned as a Current Object.",
        "executor_category": "Weather api",
        "executor_category_group": "Weather api",
        "service_provider": "Weather api",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "http://api.weatherapi.com/v1/current.json",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "key",
                "value": "",
                "description": "API Key",
                "req": true
            },
            {
                "key": "q",
                "value": "",
                "description": "Query parameter based on which data is sent back. It could be following:  Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508 city name e.g.: q=Paris US zip e.g.: q=10001 UK postcode e.g: q=SW1 Canada postal code e.g: q=G2J metar:<metar code> e.g: q=metar:EGLL iata:<3 digit airport code> e.g: q=iata:DXB auto:ip IP lookup e.g: q=auto:ip IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1 bulk New",
                "req": true
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1681198139029,
        "lastModifiedTime": 1681198139029,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 87756,
        "executor_type": "THIRDPARTY",
        "executor_name": "Forecast",
        "executor_version": "v1",
        "executor_display_name": "Forecast",
        "executor_description": "Forecast weather API method returns, depending upon your price plan level, upto next 14 day weather forecast and weather alert as json or xml. The data is returned as a Forecast Object.",
        "executor_category": "Weather api",
        "executor_category_group": "Weather api",
        "service_provider": "Weather api",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "http://api.weatherapi.com/v1/forecast.json",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "key",
                "value": "",
                "description": "API Key",
                "req": true
            },
            {
                "key": "days",
                "value": "",
                "description": "Number of days of forecast required.  days parameter value ranges between 1 and 14. e.g: days=5  If no days parameter is provided then only today's weather is returned.",
                "req": true
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1681198364997,
        "lastModifiedTime": 1681198364997,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 87758,
        "executor_type": "THIRDPARTY",
        "executor_name": "Search or Autocomplete",
        "executor_version": "v1",
        "executor_display_name": "Search or Autocomplete",
        "executor_description": "WeatherAPI.com Search or Autocomplete API returns matching cities and towns as an array of Location object.",
        "executor_category": "Weather api",
        "executor_category_group": "Weather api",
        "service_provider": "Weather api",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "http://api.weatherapi.com/v1/search.json",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "key",
                "value": "",
                "description": "API Key",
                "req": true
            },
            {
                "key": "days",
                "value": "",
                "description": "Number of days of forecast required.  days parameter value ranges between 1 and 14. e.g: days=5  If no days parameter is provided then only today's weather is returned.",
                "req": false
            },
            {
                "key": "q",
                "value": "",
                "description": "Query parameter based on which data is sent back. It could be following:  Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508 city name e.g.: q=Paris US zip e.g.: q=10001 UK postcode e.g: q=SW1 Canada postal code e.g: q=G2J metar:<metar code> e.g: q=metar:EGLL iata:<3 digit airport code> e.g: q=iata:DXB auto:ip IP lookup e.g: q=auto:ip IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1 bulk New",
                "req": false
            },
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1681198536650,
        "lastModifiedTime": 1681198536650,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 87759,
        "executor_type": "THIRDPARTY",
        "executor_name": "history",
        "executor_version": "v1",
        "executor_display_name": "history",
        "executor_description": "History weather API method returns, depending upon your price plan level, historical weather for a date on or after 1st Jan, 2010 as json and xml. The data is returned as a Forecast Object.",
        "executor_category": "Weather api",
        "executor_category_group": "Weather api",
        "service_provider": "Weather api",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "http://api.weatherapi.com/v1/history.json",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "key",
                "value": "",
                "description": "API Key",
                "req": true
            },
            {
                "key": "days",
                "value": "",
                "description": "Number of days of forecast required.  days parameter value ranges between 1 and 14. e.g: days=5  If no days parameter is provided then only today's weather is returned.",
                "req": false
            },
            {
                "key": "q",
                "value": "",
                "description": "Query parameter based on which data is sent back. It could be following:  Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508 city name e.g.: q=Paris US zip e.g.: q=10001 UK postcode e.g: q=SW1 Canada postal code e.g: q=G2J metar:<metar code> e.g: q=metar:EGLL iata:<3 digit airport code> e.g: q=iata:DXB auto:ip IP lookup e.g: q=auto:ip IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1 bulk New",
                "req": false
            },
            {
                "key": "dt (Required for History and Future API)",
                "value": "",
                "description": "For history API 'dt' should be on or after 1st Jan, 2010 in yyyy-MM-dd format (i.e. dt=2010-01-01)  For forecast API 'dt' should be between today and next 14 day in yyyy-MM-dd format (i.e. dt=2010-01-01)  For future API 'dt' should be between 14 days and 300 days from today in the future in yyyy-MM-dd format (i.e. dt=2023-01-01)",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1681198647935,
        "lastModifiedTime": 1681198647935,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 87761,
        "executor_type": "THIRDPARTY",
        "executor_name": "future",
        "executor_version": "v1",
        "executor_display_name": "future",
        "executor_description": "Future weather API method returns weather in a 3 hourly interval in future for a date between 14 days and 300 days from today in the future.",
        "executor_category": "Weather api",
        "executor_category_group": "Weather api",
        "service_provider": "Weather api",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "http://api.weatherapi.com/v1/future.json",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "key",
                "value": "",
                "description": "API Key",
                "req": true
            },
            {
                "key": "days",
                "value": "",
                "description": "Number of days of forecast required.  days parameter value ranges between 1 and 14. e.g: days=5  If no days parameter is provided then only today's weather is returned.",
                "req": false
            },
            {
                "key": "q",
                "value": "",
                "description": "Query parameter based on which data is sent back. It could be following:  Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508 city name e.g.: q=Paris US zip e.g.: q=10001 UK postcode e.g: q=SW1 Canada postal code e.g: q=G2J metar:<metar code> e.g: q=metar:EGLL iata:<3 digit airport code> e.g: q=iata:DXB auto:ip IP lookup e.g: q=auto:ip IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1 bulk New",
                "req": false
            },
            {
                "key": "dt (Required for History and Future API)",
                "value": "",
                "description": "For history API 'dt' should be on or after 1st Jan, 2010 in yyyy-MM-dd format (i.e. dt=2010-01-01)  For forecast API 'dt' should be between today and next 14 day in yyyy-MM-dd format (i.e. dt=2010-01-01)  For future API 'dt' should be between 14 days and 300 days from today in the future in yyyy-MM-dd format (i.e. dt=2023-01-01)",
                "req": false
            },
            {
                "key": "unixdt",
                "value": "",
                "description": "unixdt has same restriction as 'dt' parameter. Please either pass 'dt' or 'unixdt' and not both in same request. e.g.: unixdt=1490227200",
                "req": false
            },
            {
                "key": "end_dt (Available for History API)",
                "value": "",
                "description": "For history API 'end_dt' should be on or after 1st Jan, 2010 in yyyy-MM-dd format (i.e. dt=2010-01-01)  'end_dt' should be greater than 'dt' parameter and difference should not be more than 30 days between the two dates.",
                "req": false
            },
            {
                "key": "unixend_dt",
                "value": "",
                "description": "unixend_dt has same restriction as 'end_dt' parameter. Please either pass 'end_dt' or 'unixend_dt' and not both in same request. e.g.: unixend_dt=1490227200",
                "req": false
            },
            {
                "key": "hour",
                "value": "",
                "description": "Must be in 24 hour. For example 5 pm should be hour=17, 6 am as hour=6",
                "req": false
            },
            {
                "key": "alerts",
                "value": "",
                "description": "alerts=yes or alerts=no",
                "req": false
            },
            {
                "key": "aqi",
                "value": "",
                "description": "aqi=yes or aqi=no",
                "req": false
            },
            {
                "key": "tides ",
                "value": "",
                "description": "tides=yes or tides=no",
                "req": false
            },
            {
                "key": "tp",
                "value": "",
                "description": "tp=15",
                "req": false
            },
            {
                "key": "lang",
                "value": "",
                "description": "Please pass 'lang code' from below table. e.g.: lang=fr  Language\tlang code Arabic\tar Bengali\tbn Bulgarian\tbg Chinese Simplified\tzh Chinese Traditional\tzh_tw Czech\tcs Danish\tda Dutch\tnl Finnish\tfi French\tfr German\tde Greek\tel Hindi\thi Hungarian\thu Italian\tit Japanese\tja Javanese\tjv Korean\tko Mandarin\tzh_cmn Marathi\tmr Polish\tpl Portuguese\tpt Punjabi\tpa Romanian\tro Russian\tru Serbian\tsr Sinhalese\tsi Slovak\tsk Spanish\tes Swedish\tsv Tamil\tta Telugu\tte Turkish\ttr Ukrainian\tuk Urdu\tur Vietnamese\tvi Wu (Shanghainese)\tzh_wuu Xiang\tzh_hsn Yue (Cantonese)\tzh_yue Zulu\tzu",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1681199258192,
        "lastModifiedTime": 1681199258192,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    }
]