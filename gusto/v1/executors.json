[
    {
        "id": 110834,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllEarningTypesForCompany",
        "executor_version": "v1",
        "executor_display_name": "Get all earning types for a company",
        "executor_description": "A payroll item in Gusto is associated to an earning type to name the type of earning described by the payroll item.  Default Earning Type Certain earning types are special because they have tax considerations. Those earning types are mostly the same for every company depending on its legal structure (LLC, Corporation, etc.)  Custom Earning Type Custom earning types are all the other earning types added specifically for a company.",
        "executor_category": "EarningTypes",
        "executor_category_group": "EarningTypes",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/companies/{company_id}/earning_types",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "The UUID of the company"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691661075227,
        "lastModifiedTime": 1691661075227,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "default": [
                        {
                            "name": "Bonus",
                            "uuid": "b82e35c5-d7c6-4705-9e16-9f87499ade18"
                        },
                        {
                            "name": "Cash Tips",
                            "uuid": "f5618c94-ed7d-4366-b2c4-ff05e430064f"
                        },
                        {
                            "name": "Commission",
                            "uuid": "60191999-004a-49d9-b163-630574433653"
                        },
                        {
                            "name": "Correction Payment",
                            "uuid": "368226e0-8e8c-48f0-bc91-aee46caafbc9"
                        },
                        {
                            "name": "Minimum Wage Adjustment",
                            "uuid": "88a2e519-9ff5-4c19-9071-6a709f3c2939"
                        },
                        {
                            "name": "Paycheck Tips",
                            "uuid": "a3eaf03d-e712-4144-8f9b-71a85528adcf"
                        },
                        {
                            "name": "Severance",
                            "uuid": "a6a2eba7-6c7d-4ced-bbe8-43452fbc9f63"
                        }
                    ],
                    "custom": [
                        {
                            "name": "Gym Membership Stipend",
                            "uuid": "6b4a8efb-db90-4c13-a75f-aae11b3f4ff9"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110833,
        "executor_type": "THIRDPARTY",
        "executor_name": "createCustomEarningType",
        "executor_version": "v1",
        "executor_display_name": "Create a custom earning type",
        "executor_description": "Create a custom earning type.",
        "executor_category": "EarningTypes",
        "executor_category_group": "EarningTypes",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.gusto-demo.com/v1/companies/{company_id}/earning_types",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "The UUID of the company"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "version": "string",
                "employees": [
                    {
                        "uuid": "string"
                    }
                ],
                "contractors": [
                    {
                        "uuid": "string"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691660875917,
        "lastModifiedTime": 1691660875917,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "Gym Membership Stipend",
                    "uuid": "f4dc8972-8830-4c07-b623-349a04b040d7"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "error_key": "string",
                            "category": "string",
                            "message": "string",
                            "metadata": {}
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110835,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateAnEarningType",
        "executor_version": "v1",
        "executor_display_name": "Update an earning type",
        "executor_description": "Update an earning type.",
        "executor_category": "EarningTypes",
        "executor_category_group": "EarningTypes",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.gusto-demo.com/v1/companies/{company_id}/earning_types/{earning_type_uuid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "The UUID of the company"
            },
            {
                "key": "earning_type_uuid",
                "value": "",
                "description": "The UUID of the earning type"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "Gym Membership Stipend"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691661200216,
        "lastModifiedTime": 1691661200216,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "Gym Membership Stipend",
                    "uuid": "f4dc8972-8830-4c07-b623-349a04b040d7"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "error_key": "string",
                            "category": "string",
                            "message": "string",
                            "metadata": {}
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110836,
        "executor_type": "THIRDPARTY",
        "executor_name": "deactivateAnEarningType",
        "executor_version": "v1",
        "executor_display_name": "Deactivate an earning type",
        "executor_description": "Deactivate an earning type",
        "executor_category": "EarningTypes",
        "executor_category_group": "EarningTypes",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.gusto-demo.com/v1/companies/{company_id}/earning_types/{earning_type_uuid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "The UUID of the company"
            },
            {
                "key": "earning_type_uuid",
                "value": "",
                "description": "The UUID of the earning type"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691661286126,
        "lastModifiedTime": 1691661286126,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "No Content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110868,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAnEmployeesHomeAddresses",
        "executor_version": "v1",
        "executor_display_name": "Get an employee's home addresses",
        "executor_description": "The home address of an employee is used to determine certain tax information about them. Addresses are geocoded on create and update to ensure validity.",
        "executor_category": "EmployeeAddresses",
        "executor_category_group": "EmployeeAddresses",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/employees/{employee_id}/home_addresses",
        "dataroot": null,
        "pathParams": [
            {
                "key": "employee_id",
                "value": "",
                "description": "The UUID of the employee"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691664557829,
        "lastModifiedTime": 1691664557829,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "List of employee addresses",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "uuid": "56260b3d-c375-415c-b77a-75d99f717193",
                        "employee_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e",
                        "street_1": "644 Fay Vista",
                        "street_2": "Suite 842",
                        "city": "Richmond",
                        "state": "VA",
                        "zip": "23218",
                        "country": "USA",
                        "active": false,
                        "effective_date": "2021-01-01",
                        "courtesy_withholding": true
                    },
                    {
                        "uuid": "d9f74049-8769-4fba-8e0f-eceef2da4e6b",
                        "employee_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e",
                        "street_1": "100 5th Ave",
                        "street_2": "Suite 555",
                        "city": "New York",
                        "state": "NY",
                        "zip": "10001",
                        "country": "USA",
                        "active": true,
                        "effective_date": "2022-03-03",
                        "courtesy_withholding": true
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110875,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAnEmployeesHomeAddress",
        "executor_version": "v1",
        "executor_display_name": "Get an employee's home address",
        "executor_description": "The home address of an employee is used to determine certain tax information about them. Addresses are geocoded on create and update to ensure validity.",
        "executor_category": "EmployeeAddresses",
        "executor_category_group": "EmployeeAddresses",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/home_addresses/{home_address_uuid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "home_address_uuid",
                "value": "",
                "description": "The UUID of the home address"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691664877974,
        "lastModifiedTime": 1691664877974,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "9557fe01-f8f8-4c14-a61c-ca6221a9f118",
                    "employee_uuid": "da441196-43a9-4d23-ad5d-f37ce6bb99c0",
                    "street_1": "333 Kiera Stravenue",
                    "street_2": "Suite 391",
                    "city": "San Francisco",
                    "state": "CA",
                    "zip": "94107",
                    "country": "USA",
                    "active": true,
                    "effective_date": "2021-01-01",
                    "courtesy_withholding": true
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110894,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateAnEmployeeWorkAddress",
        "executor_version": "v1",
        "executor_display_name": "Update an employee work address",
        "executor_description": "The work address of an employee is used for payroll tax purposes.",
        "executor_category": "EmployeeAddresses",
        "executor_category_group": "EmployeeAddresses",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.gusto-demo.com/v1/work_addresses/{work_address_uuid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "work_address_uuid",
                "value": "",
                "description": "The UUID of the work address"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "location_uuid": "6a119be7-b4b0-4e27-aaa0-89d5f2524635",
                "effective_date": "2023-05-15",
                "version": "e6db1baa29d3df1eb307ff6a12c778da"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691666506198,
        "lastModifiedTime": 1691666506198,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "34925ef7-6234-440d-83b8-788a24d0d69a",
                    "employee_uuid": "2363b9c0-6625-4425-9261-47627fd68783",
                    "company_location_uuid": "aba6d0fd-7294-4997-b1a4-bc9268c45932",
                    "effective_date": "2023-05-15",
                    "active": true,
                    "version": "6a22da647ed391f184a212e6e83a541d",
                    "street_1": "977 Marks Viaduct",
                    "street_2": null,
                    "city": "Pink Hill",
                    "state": "NC",
                    "zip": "28572",
                    "country": "USA"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "error_key": "string",
                            "category": "string",
                            "message": "string",
                            "metadata": {}
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110893,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAnEmployeeWorkAddress",
        "executor_version": "v1",
        "executor_display_name": "Get an employee work address",
        "executor_description": "The work address of an employee is used for payroll tax purposes.",
        "executor_category": "EmployeeAddresses",
        "executor_category_group": "EmployeeAddresses",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/work_addresses/{work_address_uuid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "work_address_uuid",
                "value": "",
                "description": "The UUID of the work address"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691666399339,
        "lastModifiedTime": 1691666399339,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "34925ef7-6234-440d-83b8-788a24d0d69a",
                    "employee_uuid": "2363b9c0-6625-4425-9261-47627fd68783",
                    "company_location_uuid": "aba6d0fd-7294-4997-b1a4-bc9268c45932",
                    "effective_date": "2023-05-15",
                    "active": true,
                    "version": "6a22da647ed391f184a212e6e83a541d",
                    "street_1": "977 Marks Viaduct",
                    "street_2": null,
                    "city": "Pink Hill",
                    "state": "NC",
                    "zip": "28572",
                    "country": "USA"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110871,
        "executor_type": "THIRDPARTY",
        "executor_name": "createAnEmployeesHomeAddress",
        "executor_version": "v1",
        "executor_display_name": "Create an employee's home address",
        "executor_description": "The home address of an employee is used to determine certain tax information about them. Addresses are geocoded on create and update to ensure validity.",
        "executor_category": "EmployeeAddresses",
        "executor_category_group": "EmployeeAddresses",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.gusto-demo.com/v1/employees/{employee_id}/home_addresses",
        "dataroot": null,
        "pathParams": [
            {
                "key": "employee_id",
                "value": "",
                "description": "The UUID of the employee"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "street_1": "300 3rd Street",
                "street_2": null,
                "city": "San Francisco",
                "state": "CA",
                "zip": "94107",
                "effective_date": "2021-01-01",
                "courtesy_withholding": true
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691664776278,
        "lastModifiedTime": 1691664776278,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "9557fe01-f8f8-4c14-a61c-ca6221a9f118",
                    "employee_uuid": "da441196-43a9-4d23-ad5d-f37ce6bb99c0",
                    "street_1": "333 Kiera Stravenue",
                    "street_2": "Suite 391",
                    "city": "San Francisco",
                    "state": "CA",
                    "zip": "94107",
                    "country": "USA",
                    "active": true,
                    "effective_date": "2021-01-01",
                    "courtesy_withholding": true
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "error_key": "string",
                            "category": "string",
                            "message": "string",
                            "metadata": {}
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110880,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAnEmployeesWorkAddresses",
        "executor_version": "v1",
        "executor_display_name": "Get an employee's work addresses",
        "executor_description": "Returns a list of an employee's work addresses. Each address includes its effective date and a boolean signifying if it is the currently active work address.",
        "executor_category": "EmployeeAddresses",
        "executor_category_group": "EmployeeAddresses",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/employees/{employee_id}/work_addresses",
        "dataroot": null,
        "pathParams": [
            {
                "key": "employee_id",
                "value": "",
                "description": "The UUID of the employee"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691665220821,
        "lastModifiedTime": 1691665220821,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "List of employee work addresses",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "uuid": "fc5b87dc-8d88-400d-b2da-c3587a7e5b15",
                        "employee_uuid": "7597f3e3-31d4-4953-83a5-f95be78d2fe2",
                        "company_location_uuid": "d9456c94-f561-40d2-afec-919da5f59196",
                        "effective_date": "2022-01-01",
                        "active": false,
                        "version": "139f9769a2e543e6a1259173e1ee3b8d",
                        "street_1": "800 Adolfo Gardens",
                        "street_2": "Suite 419",
                        "city": "Bremen",
                        "state": "AL",
                        "zip": "35033",
                        "country": "USA"
                    },
                    {
                        "uuid": "be1c2e24-af86-4c36-b34e-3a55dbcdbdab",
                        "employee_uuid": "7597f3e3-31d4-4953-83a5-f95be78d2fe2",
                        "company_location_uuid": "6a119be7-b4b0-4e27-aaa0-89d5f2524635",
                        "effective_date": "2023-01-01",
                        "active": true,
                        "version": "bbe8d4c741339c6b9e0e2e1c1b120816",
                        "street_1": "2216 Icie Villages",
                        "street_2": "Apt. 798",
                        "city": "Big Delta",
                        "state": "AK",
                        "zip": "99737",
                        "country": "USA"
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110877,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateAnEmployeesHomeAddress",
        "executor_version": "v1",
        "executor_display_name": "Update an employee's home address",
        "executor_description": "The home address of an employee is used to determine certain tax information about them. Addresses are geocoded on create and update to ensure validity.",
        "executor_category": "EmployeeAddresses",
        "executor_category_group": "EmployeeAddresses",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.gusto-demo.com/v1/home_addresses/{home_address_uuid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "home_address_uuid",
                "value": "",
                "description": "The UUID of the home address"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "version": "fe75bd065ff48b91c35fe8ff842f986c",
                "street_1": "300 3rd Street",
                "street_2": null,
                "city": "San Francisco",
                "state": "CA",
                "zip": "94107",
                "effective_date": "2021-01-01",
                "courtesy_withholding": true
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691665016444,
        "lastModifiedTime": 1691665016444,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "9557fe01-f8f8-4c14-a61c-ca6221a9f118",
                    "employee_uuid": "da441196-43a9-4d23-ad5d-f37ce6bb99c0",
                    "street_1": "333 Kiera Stravenue",
                    "street_2": "Suite 391",
                    "city": "San Francisco",
                    "state": "CA",
                    "zip": "94107",
                    "country": "USA",
                    "active": true,
                    "effective_date": "2021-01-01",
                    "courtesy_withholding": true
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "error_key": "string",
                            "category": "string",
                            "message": "string",
                            "metadata": {}
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110878,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteAnEmployeesHomAddress",
        "executor_version": "v1",
        "executor_display_name": "Delete an employee's home address",
        "executor_description": "Used for deleting an employee's home address. Cannot delete the employee's active home address.",
        "executor_category": "EmployeeAddresses",
        "executor_category_group": "EmployeeAddresses",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.gusto-demo.com/v1/home_addresses/{home_address_uuid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "home_address_uuid",
                "value": "",
                "description": "The UUID of the home address"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691665112026,
        "lastModifiedTime": 1691665112026,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "error_key": "string",
                            "category": "string",
                            "message": "string",
                            "metadata": {}
                        }
                    ]
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "No Content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110881,
        "executor_type": "THIRDPARTY",
        "executor_name": "createAnEmployeeWorkAddress",
        "executor_version": "v1",
        "executor_display_name": "Create an employee work address",
        "executor_description": "The work address of an employee describes when an employee began working at an associated company location.",
        "executor_category": "EmployeeAddresses",
        "executor_category_group": "EmployeeAddresses",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.gusto-demo.com/v1/employees/{employee_id}/work_addresses",
        "dataroot": null,
        "pathParams": [
            {
                "key": "employee_id",
                "value": "",
                "description": "The UUID of the employee"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "location_uuid": "6a119be7-b4b0-4e27-aaa0-89d5f2524635",
                "effective_date": "2023-05-15"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691665379499,
        "lastModifiedTime": 1691665379499,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "error_key": "string",
                            "category": "string",
                            "message": "string",
                            "metadata": {}
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "34925ef7-6234-440d-83b8-788a24d0d69a",
                    "employee_uuid": "2363b9c0-6625-4425-9261-47627fd68783",
                    "company_location_uuid": "aba6d0fd-7294-4997-b1a4-bc9268c45932",
                    "effective_date": "2023-05-15",
                    "active": true,
                    "version": "6a22da647ed391f184a212e6e83a541d",
                    "street_1": "977 Marks Viaduct",
                    "street_2": null,
                    "city": "Pink Hill",
                    "state": "NC",
                    "zip": "28572",
                    "country": "USA"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110896,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteAnEmployeesWorkAddress",
        "executor_version": "v1",
        "executor_display_name": "Delete an employee's work address",
        "executor_description": "Used for deleting an employee's work address. Cannot delete the employee's active work address.",
        "executor_category": "EmployeeAddresses",
        "executor_category_group": "EmployeeAddresses",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.gusto-demo.com/v1/work_addresses/{work_address_uuid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "work_address_uuid",
                "value": "",
                "description": "The UUID of the work address"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691666589548,
        "lastModifiedTime": 1691666589548,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "error_key": "string",
                            "category": "string",
                            "message": "string",
                            "metadata": {}
                        }
                    ]
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "No Content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110933,
        "executor_type": "THIRDPARTY",
        "executor_name": "getCompensation",
        "executor_version": "v1",
        "executor_display_name": "Get a compensation",
        "executor_description": "Compensations contain information on how much is paid out for a job. Jobs may have many compensations, but only one that is active. The current compensation is the one with the most recent effective_date.  Note: Currently, jobs are arbitrarily limited to a single compensation as multiple compensations per job are not yet available in Gusto. The API is architected as if multiple compensations may exist, so integrations should integrate under the same assumption. The only exception is that creating a compensation with the same job_uuid as another will fail with a relevant error.",
        "executor_category": "JobsandCompensations",
        "executor_category_group": "JobsandCompensations",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/compensations/{compensation_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "compensation_id",
                "value": "",
                "description": "The UUID of the compensation"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691727838074,
        "lastModifiedTime": 1691727838074,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": 1363316536327004,
                    "uuid": "db57832c-d8bc-43a7-ae99-0a04480ff037",
                    "version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872",
                    "job_id": 1123581321345589,
                    "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086",
                    "rate": "60000.00",
                    "payment_unit": "Year",
                    "flsa_status": "Exempt",
                    "effective_date": "2020-12-11",
                    "adjust_for_minimum_wage": false,
                    "minimum_wages": []
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110899,
        "executor_type": "THIRDPARTY",
        "executor_name": "createaJob",
        "executor_version": "v1",
        "executor_display_name": "Create a job",
        "executor_description": "Create a job.",
        "executor_category": "JobsandCompensations",
        "executor_category_group": "JobsandCompensations",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.gusto-demo.com/v1/employees/{employee_id}/jobs",
        "dataroot": null,
        "pathParams": [
            {
                "key": "employee_id",
                "value": "",
                "description": "The UUID of the employee"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "title": "Regional Manager",
                "hire_date": "2020-12-21"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691666854268,
        "lastModifiedTime": 1691666854268,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "error_key": "string",
                            "category": "string",
                            "message": "string",
                            "metadata": {}
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97",
                    "version": "d0e719137f89ca3dd334dd4cc248ffbb",
                    "employee_uuid": "948daac8-4355-4ece-9e2a-229898accb22",
                    "current_compensation_uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a",
                    "payment_unit": "Year",
                    "primary": true,
                    "title": "Account Director",
                    "compensations": [
                        {
                            "uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a",
                            "version": "994b75511d1debac5d7e2ddeae13679f",
                            "payment_unit": "Year",
                            "flsa_status": "Exempt",
                            "job_uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97",
                            "effective_date": "2021-01-20",
                            "rate": "78000.00",
                            "adjust_for_minimum_wage": false,
                            "minimum_wages": []
                        }
                    ],
                    "rate": "78000.00",
                    "hire_date": "2020-01-20"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110903,
        "executor_type": "THIRDPARTY",
        "executor_name": "getJobsForAnEmployee",
        "executor_version": "v1",
        "executor_display_name": "Get jobs for an employee",
        "executor_description": "Get all of the jobs that an employee holds.",
        "executor_category": "JobsandCompensations",
        "executor_category_group": "JobsandCompensations",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/employees/{employee_id}/jobs",
        "dataroot": null,
        "pathParams": [
            {
                "key": "employee_id",
                "value": "",
                "description": "The UUID of the employee"
            }
        ],
        "queryParams": [
            {
                "key": "page",
                "value": "",
                "description": "The page that is requested. When unspecified, will load all objects.",
                "req": false
            },
            {
                "key": "per",
                "value": "",
                "description": "Number of objects per page. When unspecified, will default to 25",
                "req": false
            },
            {
                "key": "include",
                "value": "",
                "description": "Available options:  all_compensations: Include all effective dated compensations for each job instead of only the current compensation",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691666994718,
        "lastModifiedTime": 1691666994718,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97",
                        "version": "6c0ed1521e8b86eb36bd4455a63a2dac",
                        "employee_uuid": "948daac8-4355-4ece-9e2a-229898accb22",
                        "current_compensation_uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a",
                        "payment_unit": "Year",
                        "primary": true,
                        "title": "Client Support Director",
                        "compensations": [
                            {
                                "uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a",
                                "version": "2cd4b18662395eb53bcf80d5b5447f36",
                                "payment_unit": "Year",
                                "flsa_status": "Exempt",
                                "job_uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97",
                                "effective_date": "2021-01-20",
                                "rate": "70000.00",
                                "adjust_for_minimum_wage": false,
                                "minimum_wages": []
                            }
                        ],
                        "rate": "70000.00",
                        "hire_date": "2020-01-20"
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110935,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateCompensation",
        "executor_version": "v1",
        "executor_display_name": "Update a compensation",
        "executor_description": "Compensations contain information on how much is paid out for a job. Jobs may have many compensations, but only one that is active. The current compensation is the one with the most recent effective_date.  Note: Currently, jobs are arbitrarily limited to a single compensation as multiple compensations per job are not yet available in Gusto. The API is architected as if multiple compensations may exist, so integrations should integrate under the same assumption. The only exception is that creating a compensation with the same job_uuid as another will fail with a relevant error",
        "executor_category": "JobsandCompensations",
        "executor_category_group": "JobsandCompensations",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.gusto-demo.com/v1/compensations/{compensation_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "compensation_id",
                "value": "",
                "description": "The UUID of the compensation"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872",
                "rate": "60000.00",
                "payment_unit": "Year",
                "flsa_status": "Exempt"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691727977268,
        "lastModifiedTime": 1691727977268,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": 1363316536327004,
                    "uuid": "db57832c-d8bc-43a7-ae99-0a04480ff037",
                    "version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872",
                    "job_id": 1123581321345589,
                    "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086",
                    "rate": "60000.00",
                    "payment_unit": "Year",
                    "flsa_status": "Exempt",
                    "effective_date": "2020-12-11",
                    "adjust_for_minimum_wage": false,
                    "minimum_wages": []
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "error_key": "string",
                            "category": "string",
                            "message": "string",
                            "metadata": {}
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110930,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateJob",
        "executor_version": "v1",
        "executor_display_name": "Update a job",
        "executor_description": "Update a job",
        "executor_category": "JobsandCompensations",
        "executor_category_group": "JobsandCompensations",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.gusto-demo.com/v1/jobs/{job_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "job_id",
                "value": "",
                "description": "The UUID of the job"
            }
        ],
        "queryParams": [
            {
                "key": "include",
                "value": "",
                "description": "Available options:  all_compensations: Include all effective dated compensations for each job instead of only the current compensation",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "version": "gr78930htutrz444kuytr3s5hgxykuveb523fwl8sir",
                "title": "Regional Manager",
                "hire_date": "2020-12-21"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691727455796,
        "lastModifiedTime": 1691727455796,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97",
                    "version": "d0e719137f89ca3dd334dd4cc248ffbb",
                    "employee_uuid": "948daac8-4355-4ece-9e2a-229898accb22",
                    "current_compensation_uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a",
                    "payment_unit": "Year",
                    "primary": true,
                    "title": "Account Director",
                    "compensations": [
                        {
                            "uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a",
                            "version": "994b75511d1debac5d7e2ddeae13679f",
                            "payment_unit": "Year",
                            "flsa_status": "Exempt",
                            "job_uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97",
                            "effective_date": "2021-01-20",
                            "rate": "78000.00",
                            "adjust_for_minimum_wage": false,
                            "minimum_wages": []
                        }
                    ],
                    "rate": "78000.00",
                    "hire_date": "2020-01-20"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "error_key": "string",
                            "category": "string",
                            "message": "string",
                            "metadata": {}
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110931,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteAnIndividualJob",
        "executor_version": "v1",
        "executor_display_name": "Delete an individual job",
        "executor_description": "Deletes a specific job that an employee holds.",
        "executor_category": "JobsandCompensations",
        "executor_category_group": "JobsandCompensations",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.gusto-demo.com/v1/jobs/{job_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "job_id",
                "value": "",
                "description": "The UUID of the job"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691727600906,
        "lastModifiedTime": 1691727600906,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "No Content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110932,
        "executor_type": "THIRDPARTY",
        "executor_name": "getCompensationsForJob",
        "executor_version": "v1",
        "executor_display_name": "Get compensations for a job",
        "executor_description": "Compensations contain information on how much is paid out for a job. Jobs may have many compensations, but only one that is active. The current compensation is the one with the most recent effective_date. By default the API returns only the current compensation - see the include query parameter for retrieving all compensations.  Note: Currently the API does not support creating multiple compensations per job - creating a compensation with the same job_uuid as another will fail with a relevant error.",
        "executor_category": "JobsandCompensations",
        "executor_category_group": "JobsandCompensations",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/jobs/{job_id}/compensations",
        "dataroot": null,
        "pathParams": [
            {
                "key": "job_id",
                "value": "",
                "description": "The UUID of the job"
            }
        ],
        "queryParams": [
            {
                "key": "page",
                "value": "",
                "description": "The page that is requested. When unspecified, will load all objects.",
                "req": false
            },
            {
                "key": "per",
                "value": "",
                "description": "Number of objects per page. When unspecified, will default to 25",
                "req": false
            },
            {
                "key": "include",
                "value": "",
                "description": "Available options:  all_compensations: Include all effective dated compensations for each job instead of only the current compensation",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691727768013,
        "lastModifiedTime": 1691727768013,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "uuid": "db57832c-d8bc-43a7-ae99-0a04480ff037",
                        "version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872",
                        "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086",
                        "rate": "70.00",
                        "payment_unit": "Hour",
                        "flsa_status": "Nonexempt",
                        "effective_date": "2020-12-11",
                        "adjust_for_minimum_wage": false,
                        "minimum_wages": []
                    },
                    {
                        "id": 1363316536327003,
                        "job_id": 1123581321345589,
                        "uuid": "a4d9ba9c-32cc-4cc1-a5bc-6ef4cd653e7a",
                        "version": "cc59bd3879d655fb940a1f6b675f2ad9",
                        "job_uuid": "d8f8fbe7-496d-4b69-86f0-1e2d1b73a086",
                        "payment_unit": "Hour",
                        "flsa_status": "Nonexempt",
                        "effective_date": "2018-12-11",
                        "rate": "5.00",
                        "adjust_for_minimum_wage": true,
                        "minimum_wages": [
                            {
                                "uuid": "edeea5af-ecd6-4b1c-b5de-5cff2d302738",
                                "wage": "7.25",
                                "effective_date": "2018-12-11"
                            }
                        ]
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110927,
        "executor_type": "THIRDPARTY",
        "executor_name": "getaJob",
        "executor_version": "v1",
        "executor_display_name": "Get a job",
        "executor_description": "Get a job",
        "executor_category": "JobsandCompensations",
        "executor_category_group": "JobsandCompensations",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/jobs/{job_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "job_id",
                "value": "",
                "description": "The UUID of the job"
            }
        ],
        "queryParams": [
            {
                "key": "include",
                "value": "",
                "description": "Available options:  all_compensations: Include all effective dated compensations for each job instead of only the current compensation",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691727338147,
        "lastModifiedTime": 1691727338147,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97",
                    "version": "d0e719137f89ca3dd334dd4cc248ffbb",
                    "employee_uuid": "948daac8-4355-4ece-9e2a-229898accb22",
                    "current_compensation_uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a",
                    "payment_unit": "Year",
                    "primary": true,
                    "title": "Account Director",
                    "compensations": [
                        {
                            "uuid": "ea8b0b90-1112-4f9d-bb93-bf029bc8537a",
                            "version": "994b75511d1debac5d7e2ddeae13679f",
                            "payment_unit": "Year",
                            "flsa_status": "Exempt",
                            "job_uuid": "d6d1035e-8a21-4e1d-89d5-fa894f9aff97",
                            "effective_date": "2021-01-20",
                            "rate": "78000.00",
                            "adjust_for_minimum_wage": false,
                            "minimum_wages": []
                        }
                    ],
                    "rate": "78000.00",
                    "hire_date": "2020-01-20"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110839,
        "executor_type": "THIRDPARTY",
        "executor_name": "updatePayrollById",
        "executor_version": "v1",
        "executor_display_name": "Update a payroll by ID",
        "executor_description": "This endpoint allows you to update information for one or more employees for a specific unprocessed payroll.",
        "executor_category": "Payrolls",
        "executor_category_group": "Payrolls",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.gusto-demo.com/v1/companies/{company_id}/payrolls/{payroll_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "The UUID of the company"
            },
            {
                "key": "payroll_id",
                "value": "",
                "description": "The UUID of the payroll"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "version": "string",
                "employee_compensations": [
                    {
                        "employee_uuid": "string",
                        "excluded": true,
                        "payment_method": "Direct Deposit",
                        "fixed_compensations": [
                            {
                                "name": "string",
                                "amount": "string",
                                "job_uuid": 0
                            }
                        ],
                        "hourly_compensations": [
                            {
                                "name": "string",
                                "hours": "string",
                                "job_uuid": 0
                            }
                        ],
                        "paid_time_off": [
                            {
                                "name": "string",
                                "hours": "string",
                                "policy_uuid": "string",
                                "final_payout_unused_hours_input": "string"
                            }
                        ]
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691661870168,
        "lastModifiedTime": 1691661870168,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "version": "19289df18e6e20f797de4a585ea5a91535c7ddf7",
                    "payroll_deadline": "2022-02-18T22:00:00Z",
                    "check_date": "2021-02-22",
                    "processed": false,
                    "processed_date": null,
                    "calculated_at": null,
                    "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777",
                    "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb",
                    "pay_period": {
                        "start_date": "2021-02-01",
                        "end_date": "2021-02-15",
                        "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"
                    },
                    "payroll_status_meta": {
                        "cancellable": false,
                        "expected_check_date": "2022-02-22",
                        "initial_check_date": "2022-02-22",
                        "expected_debit_time": "2022-02-18T22:00:00Z",
                        "payroll_late": false,
                        "initial_debit_cutoff_time": "2022-02-18T22:00:00Z"
                    },
                    "employee_compensations": [
                        {
                            "employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7067",
                            "excluded": false,
                            "payment_method": "Direct Deposit",
                            "fixed_compensations": [
                                {
                                    "name": "Bonus",
                                    "amount": "100.00",
                                    "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242ba5"
                                },
                                {
                                    "name": "Reimbursement",
                                    "amount": "100.00",
                                    "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909ba"
                                }
                            ],
                            "hourly_compensations": [
                                {
                                    "name": "Regular Hours",
                                    "hours": "40.000",
                                    "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3",
                                    "compensation_multiplier": 1,
                                    "flsa_status": "Nonexempt"
                                },
                                {
                                    "name": "Overtime",
                                    "hours": "15.000",
                                    "job_uuid": "9d3760f0-d1f9-4700-8817-0fe2dce5cf23",
                                    "compensation_multiplier": 1.5,
                                    "flsa_status": "Nonexempt"
                                },
                                {
                                    "name": "Double overtime",
                                    "hours": "0.000",
                                    "job_uuid": "b5eef9a9-4a87-4649-a80d-14878c05f44e",
                                    "compensation_multiplier": 2,
                                    "flsa_status": "Nonexempt"
                                },
                                {
                                    "name": "Regular Hours",
                                    "hours": "40.000",
                                    "job_uuid": "332bd171-9efc-432b-abbb-a75c9dba706a",
                                    "compensation_multiplier": 1,
                                    "flsa_status": "Nonexempt"
                                },
                                {
                                    "name": "Overtime",
                                    "hours": "5.000",
                                    "job_uuid": "ca9b3dc1-57ac-4736-901a-9b1c9634b9d5",
                                    "compensation_multiplier": 1.5,
                                    "flsa_status": "Nonexempt"
                                },
                                {
                                    "name": "Double overtime",
                                    "hours": "0.000",
                                    "job_uuid": "1bad01e2-140c-49ed-9542-2388ce4a19b3",
                                    "compensation_multiplier": 2,
                                    "flsa_status": "Nonexempt"
                                }
                            ],
                            "paid_time_off": [
                                {
                                    "name": "Vacation Hours",
                                    "hours": "20.000"
                                },
                                {
                                    "name": "Sick Hours",
                                    "hours": "0.000"
                                },
                                {
                                    "name": "Holiday Hours",
                                    "hours": "0.000"
                                }
                            ],
                            "benefits": [
                                {
                                    "name": "Group Term Life",
                                    "employee_deduction": "100.00",
                                    "company_contribution": "50.00",
                                    "imputed": true
                                },
                                {
                                    "name": "401K",
                                    "employee_deduction": "100.00",
                                    "company_contribution": "50.00",
                                    "imputed": false
                                }
                            ],
                            "deductions": [
                                {
                                    "name": "Child Support",
                                    "amount": "80.00"
                                }
                            ],
                            "taxes": [
                                {
                                    "name": "Federal Income Tax",
                                    "employer": false,
                                    "amount": "646.69"
                                },
                                {
                                    "name": "Social Security",
                                    "employer": true,
                                    "amount": "191.25"
                                }
                            ]
                        },
                        {
                            "employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7012",
                            "excluded": false,
                            "payment_method": "Direct Deposit",
                            "fixed_compensations": [
                                {
                                    "name": "Bonus",
                                    "amount": "100.00",
                                    "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242b34"
                                },
                                {
                                    "name": "Reimbursement",
                                    "amount": "100.00",
                                    "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e90955"
                                }
                            ],
                            "hourly_compensations": [
                                {
                                    "name": "Regular Hours",
                                    "hours": "40.000",
                                    "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3",
                                    "compensation_multiplier": 1,
                                    "flsa_status": "Commission Only Exempt"
                                }
                            ],
                            "paid_time_off": [
                                {
                                    "name": "Vacation Hours",
                                    "hours": "20.000"
                                },
                                {
                                    "name": "Sick Hours",
                                    "hours": "0.000"
                                },
                                {
                                    "name": "Holiday Hours",
                                    "hours": "0.000"
                                }
                            ],
                            "benefits": [
                                {
                                    "name": "Group Term Life",
                                    "employee_deduction": "100.00",
                                    "company_contribution": "50.00",
                                    "imputed": true
                                },
                                {
                                    "name": "401K",
                                    "employee_deduction": "100.00",
                                    "company_contribution": "50.00",
                                    "imputed": false
                                }
                            ],
                            "deductions": [
                                {
                                    "name": "Child Support",
                                    "amount": "80.00"
                                }
                            ],
                            "taxes": [
                                {
                                    "name": "Federal Income Tax",
                                    "employer": false,
                                    "amount": "646.69"
                                },
                                {
                                    "name": "Social Security",
                                    "employer": true,
                                    "amount": "191.25"
                                }
                            ]
                        },
                        {
                            "employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7781",
                            "excluded": false,
                            "payment_method": "Direct Deposit",
                            "fixed_compensations": [
                                {
                                    "name": "Bonus",
                                    "amount": "100.00",
                                    "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242bab"
                                },
                                {
                                    "name": "Reimbursement",
                                    "amount": "100.00",
                                    "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909cd"
                                }
                            ],
                            "hourly_compensations": [
                                {
                                    "name": "Regular Hours",
                                    "hours": "40.000",
                                    "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3",
                                    "compensation_multiplier": 1,
                                    "flsa_status": "Exempt"
                                }
                            ],
                            "paid_time_off": [
                                {
                                    "name": "Vacation Hours",
                                    "hours": "20.000"
                                },
                                {
                                    "name": "Sick Hours",
                                    "hours": "0.000"
                                },
                                {
                                    "name": "Holiday Hours",
                                    "hours": "0.000"
                                }
                            ],
                            "benefits": [
                                {
                                    "name": "Group Term Life",
                                    "employee_deduction": "100.00",
                                    "company_contribution": "50.00",
                                    "imputed": true
                                },
                                {
                                    "name": "401K",
                                    "employee_deduction": "100.00",
                                    "company_contribution": "50.00",
                                    "imputed": false
                                }
                            ],
                            "deductions": [
                                {
                                    "name": "Child Support",
                                    "amount": "80.00"
                                }
                            ],
                            "taxes": [
                                {
                                    "name": "Federal Income Tax",
                                    "employer": false,
                                    "amount": "646.69"
                                },
                                {
                                    "name": "Social Security",
                                    "employer": true,
                                    "amount": "191.25"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "error_key": "string",
                            "category": "string",
                            "message": "string",
                            "metadata": {}
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110840,
        "executor_type": "THIRDPARTY",
        "executor_name": "preparePayrollForUpdate",
        "executor_version": "v1",
        "executor_display_name": "Prepare a payroll for update",
        "executor_description": "This endpoint will build the payroll and get it ready for making updates. This includes adding/removing eligible employees from the Payroll and updating the check_date, payroll_deadline, and payroll_status_meta dates & times.  Notes:  Will null out calculated_at & totals if a payroll has already been calculated. Will return the version param used for updating the payroll",
        "executor_category": "Payrolls",
        "executor_category_group": "Payrolls",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.gusto-demo.com/v1/companies/{company_id}/payrolls/{payroll_id}/prepare",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "The UUID of the company"
            },
            {
                "key": "payroll_id",
                "value": "",
                "description": "The UUID of the payroll"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691661998525,
        "lastModifiedTime": 1691661998525,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "version": "19289df18e6e20f797de4a585ea5a91535c7ddf7",
                    "payroll_deadline": "2022-02-18T22:00:00Z",
                    "check_date": "2021-02-22",
                    "processed": false,
                    "processed_date": null,
                    "calculated_at": null,
                    "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777",
                    "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb",
                    "pay_period": {
                        "start_date": "2021-02-01",
                        "end_date": "2021-02-15",
                        "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"
                    },
                    "payroll_status_meta": {
                        "cancellable": false,
                        "expected_check_date": "2022-02-22",
                        "initial_check_date": "2022-02-22",
                        "expected_debit_time": "2022-02-18T22:00:00Z",
                        "payroll_late": false,
                        "initial_debit_cutoff_time": "2022-02-18T22:00:00Z"
                    },
                    "employee_compensations": [
                        {
                            "employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7067",
                            "excluded": false,
                            "payment_method": "Direct Deposit",
                            "fixed_compensations": [
                                {
                                    "name": "Bonus",
                                    "amount": "100.00",
                                    "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242ba5"
                                },
                                {
                                    "name": "Reimbursement",
                                    "amount": "100.00",
                                    "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909ba"
                                }
                            ],
                            "hourly_compensations": [
                                {
                                    "name": "Regular Hours",
                                    "hours": "40.000",
                                    "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3",
                                    "compensation_multiplier": 1,
                                    "flsa_status": "Nonexempt"
                                },
                                {
                                    "name": "Overtime",
                                    "hours": "15.000",
                                    "job_uuid": "9d3760f0-d1f9-4700-8817-0fe2dce5cf23",
                                    "compensation_multiplier": 1.5,
                                    "flsa_status": "Nonexempt"
                                },
                                {
                                    "name": "Double overtime",
                                    "hours": "0.000",
                                    "job_uuid": "b5eef9a9-4a87-4649-a80d-14878c05f44e",
                                    "compensation_multiplier": 2,
                                    "flsa_status": "Nonexempt"
                                },
                                {
                                    "name": "Regular Hours",
                                    "hours": "40.000",
                                    "job_uuid": "332bd171-9efc-432b-abbb-a75c9dba706a",
                                    "compensation_multiplier": 1,
                                    "flsa_status": "Nonexempt"
                                },
                                {
                                    "name": "Overtime",
                                    "hours": "5.000",
                                    "job_uuid": "ca9b3dc1-57ac-4736-901a-9b1c9634b9d5",
                                    "compensation_multiplier": 1.5,
                                    "flsa_status": "Nonexempt"
                                },
                                {
                                    "name": "Double overtime",
                                    "hours": "0.000",
                                    "job_uuid": "1bad01e2-140c-49ed-9542-2388ce4a19b3",
                                    "compensation_multiplier": 2,
                                    "flsa_status": "Nonexempt"
                                }
                            ],
                            "paid_time_off": [
                                {
                                    "name": "Vacation Hours",
                                    "hours": "20.000"
                                },
                                {
                                    "name": "Sick Hours",
                                    "hours": "0.000"
                                },
                                {
                                    "name": "Holiday Hours",
                                    "hours": "0.000"
                                }
                            ],
                            "benefits": [
                                {
                                    "name": "Group Term Life",
                                    "employee_deduction": "100.00",
                                    "company_contribution": "50.00",
                                    "imputed": true
                                },
                                {
                                    "name": "401K",
                                    "employee_deduction": "100.00",
                                    "company_contribution": "50.00",
                                    "imputed": false
                                }
                            ],
                            "deductions": [
                                {
                                    "name": "Child Support",
                                    "amount": "80.00"
                                }
                            ],
                            "taxes": [
                                {
                                    "name": "Federal Income Tax",
                                    "employer": false,
                                    "amount": "646.69"
                                },
                                {
                                    "name": "Social Security",
                                    "employer": true,
                                    "amount": "191.25"
                                }
                            ]
                        },
                        {
                            "employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7012",
                            "excluded": false,
                            "payment_method": "Direct Deposit",
                            "fixed_compensations": [
                                {
                                    "name": "Bonus",
                                    "amount": "100.00",
                                    "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242b34"
                                },
                                {
                                    "name": "Reimbursement",
                                    "amount": "100.00",
                                    "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e90955"
                                }
                            ],
                            "hourly_compensations": [
                                {
                                    "name": "Regular Hours",
                                    "hours": "40.000",
                                    "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3",
                                    "compensation_multiplier": 1,
                                    "flsa_status": "Commission Only Exempt"
                                }
                            ],
                            "paid_time_off": [
                                {
                                    "name": "Vacation Hours",
                                    "hours": "20.000"
                                },
                                {
                                    "name": "Sick Hours",
                                    "hours": "0.000"
                                },
                                {
                                    "name": "Holiday Hours",
                                    "hours": "0.000"
                                }
                            ],
                            "benefits": [
                                {
                                    "name": "Group Term Life",
                                    "employee_deduction": "100.00",
                                    "company_contribution": "50.00",
                                    "imputed": true
                                },
                                {
                                    "name": "401K",
                                    "employee_deduction": "100.00",
                                    "company_contribution": "50.00",
                                    "imputed": false
                                }
                            ],
                            "deductions": [
                                {
                                    "name": "Child Support",
                                    "amount": "80.00"
                                }
                            ],
                            "taxes": [
                                {
                                    "name": "Federal Income Tax",
                                    "employer": false,
                                    "amount": "646.69"
                                },
                                {
                                    "name": "Social Security",
                                    "employer": true,
                                    "amount": "191.25"
                                }
                            ]
                        },
                        {
                            "employee_uuid": "187412e1-3dbe-491a-bb2f-2f40323a7781",
                            "excluded": false,
                            "payment_method": "Direct Deposit",
                            "fixed_compensations": [
                                {
                                    "name": "Bonus",
                                    "amount": "100.00",
                                    "job_uuid": "94e0d15e-9ed2-4077-98f6-64554f242bab"
                                },
                                {
                                    "name": "Reimbursement",
                                    "amount": "100.00",
                                    "job_uuid": "91bc3b43-ded0-4ee7-98fe-215499e909cd"
                                }
                            ],
                            "hourly_compensations": [
                                {
                                    "name": "Regular Hours",
                                    "hours": "40.000",
                                    "job_uuid": "bd378298-3e0c-4145-904a-baadf8a91fa3",
                                    "compensation_multiplier": 1,
                                    "flsa_status": "Exempt"
                                }
                            ],
                            "paid_time_off": [
                                {
                                    "name": "Vacation Hours",
                                    "hours": "20.000"
                                },
                                {
                                    "name": "Sick Hours",
                                    "hours": "0.000"
                                },
                                {
                                    "name": "Holiday Hours",
                                    "hours": "0.000"
                                }
                            ],
                            "benefits": [
                                {
                                    "name": "Group Term Life",
                                    "employee_deduction": "100.00",
                                    "company_contribution": "50.00",
                                    "imputed": true
                                },
                                {
                                    "name": "401K",
                                    "employee_deduction": "100.00",
                                    "company_contribution": "50.00",
                                    "imputed": false
                                }
                            ],
                            "deductions": [
                                {
                                    "name": "Child Support",
                                    "amount": "80.00"
                                }
                            ],
                            "taxes": [
                                {
                                    "name": "Federal Income Tax",
                                    "employer": false,
                                    "amount": "646.69"
                                },
                                {
                                    "name": "Social Security",
                                    "employer": true,
                                    "amount": "191.25"
                                }
                            ]
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110837,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllPayrollsForCompany",
        "executor_version": "v1",
        "executor_display_name": "Get all payrolls for a company",
        "executor_description": "Returns a list of payrolls for a company. You can change the payrolls returned by updating the processing_status, payroll_types, start_date, & end_date params.",
        "executor_category": "Payrolls",
        "executor_category_group": "Payrolls",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/companies/{company_id}/payrolls",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "The UUID of the company"
            }
        ],
        "queryParams": [
            {
                "key": "processing_statuses",
                "value": "",
                "description": "Whether to include processed and/or unprocessed payrolls in the response, defaults to processed, for multiple attributes comma separate the values, i.e. ?processing_statuses=processed,unprocessed",
                "req": false
            },
            {
                "key": "payroll_types",
                "value": "",
                "description": "Whether to include regular and/or off_cycle payrolls in the response, defaults to regular, for multiple attributes comma separate the values, i.e. ?payroll_types=regular,off_cycle",
                "req": false
            },
            {
                "key": "include",
                "value": "",
                "description": "Include the requested attribute in the response. In v2023-04-01 totals are no longer included by default. For multiple attributes comma separate the values, i.e. ?include=totals,payroll_status_meta",
                "req": false
            },
            {
                "key": "start_date",
                "value": "",
                "description": "Return payrolls whose pay period is after the start date",
                "req": false
            },
            {
                "key": "end_date",
                "value": "",
                "description": "Return payrolls whose pay period is before the end date",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691661457721,
        "lastModifiedTime": 1691661457722,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "payroll_deadline": "2021-02-18T22:00:00Z",
                        "check_date": "2021-02-22",
                        "processed": true,
                        "processed_date": "2021-02-18",
                        "calculated_at": "2021-02-18T12:00:00Z",
                        "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777",
                        "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb",
                        "pay_period": {
                            "start_date": "2021-02-01",
                            "end_date": "2021-02-15",
                            "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"
                        },
                        "totals": {
                            "company_debit": "121747.71",
                            "net_pay_debit": "79283.80",
                            "tax_debit": "42463.91",
                            "reimbursement_debit": "0.00",
                            "child_support_debit": "0.00",
                            "reimbursements": "0.00",
                            "net_pay": "81752.94",
                            "gross_pay": "130635.89",
                            "employee_bonuses": "0.00",
                            "employee_commissions": "18536.37",
                            "employee_cash_tips": "0.00",
                            "employee_paycheck_tips": "0.00",
                            "additional_earnings": "0.00",
                            "owners_draw": "0.00",
                            "check_amount": "2469.14",
                            "employer_taxes": "6917.19",
                            "employee_taxes": "35546.72",
                            "benefits": "0.00",
                            "employee_benefits_deductions": "13336.23",
                            "deferred_payroll_taxes": "0.00"
                        }
                    },
                    {
                        "payroll_deadline": "2021-02-28",
                        "check_date": "2021-03-01",
                        "processed": false,
                        "processed_date": "nil",
                        "calculated_at": "nil",
                        "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777",
                        "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb",
                        "pay_period": {
                            "start_date": "2021-02-16",
                            "end_date": "2021-03-01",
                            "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"
                        }
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110838,
        "executor_type": "THIRDPARTY",
        "executor_name": "getSinglePayroll",
        "executor_version": "v1",
        "executor_display_name": "Get a single payroll",
        "executor_description": "Returns a payroll. If payroll is calculated or processed, will return employee_compensations and totals.  Notes:  Hour and dollar amounts are returned as string representations of numeric decimals. Hours are represented to the thousands place; dollar amounts are represented to the cent. Every eligible compensation is returned for each employee. If no data has yet be inserted for a given field, it defaults to \u201c0.00\u201d (for fixed amounts) or \u201c0.000\u201d (for hours ). When include parameter with benefits value is passed, employee_benefits:read scope is required to return benefits",
        "executor_category": "Payrolls",
        "executor_category_group": "Payrolls",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/companies/{company_id}/payrolls/{payroll_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "The UUID of the company"
            },
            {
                "key": "payroll_id",
                "value": "",
                "description": "The UUID of the payroll"
            }
        ],
        "queryParams": [
            {
                "key": "include",
                "value": "",
                "description": "Include the requested attribute in the response, for multiple attributes comma separate the values, i.e. ?include=benefits,deductions,taxes",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691661732349,
        "lastModifiedTime": 1691661732349,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "payroll_deadline": "2021-02-18T22:00:00Z",
                    "check_date": "2021-02-22",
                    "processed": false,
                    "processed_date": null,
                    "calculated_at": null,
                    "payroll_uuid": "b50e611d-8f3d-4f24-b001-46675f7b5777",
                    "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb",
                    "pay_period": {
                        "start_date": "2021-02-01",
                        "end_date": "2021-02-15",
                        "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501"
                    },
                    "payroll_status_meta": {
                        "cancellable": false,
                        "expected_check_date": "2021-02-22",
                        "initial_check_date": "2021-02-22",
                        "expected_debit_time": "2021-02-18T22:00:00Z",
                        "payroll_late": false,
                        "initial_debit_cutoff_time": "2021-02-18T22:00:00Z"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110847,
        "executor_type": "THIRDPARTY",
        "executor_name": "getCompanyBenefit",
        "executor_version": "v1",
        "executor_display_name": "Get a company benefit",
        "executor_description": "Company benefits represent the benefits that a company is offering to employees. This ties together a particular supported benefit with the company-specific information for the offering of that benefit.",
        "executor_category": "CompanyBenefits",
        "executor_category_group": "CompanyBenefits",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/company_benefits/{company_benefit_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_benefit_id",
                "value": "",
                "description": "The UUID of the company benefit"
            }
        ],
        "queryParams": [
            {
                "key": "with_employee_benefits",
                "value": "",
                "description": "Whether to return employee benefits associated with the benefit",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691662768706,
        "lastModifiedTime": 1691662768706,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "d2cec746-caee-464a-bcaf-00d93f7049c9",
                    "version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872",
                    "active": true,
                    "description": "Kaiser Permanente",
                    "deletable": true,
                    "supports_percentage_amounts": true,
                    "responsible_for_employer_taxes": false,
                    "responsible_for_employee_w2": false,
                    "employee_benefits": [
                        {
                            "employee_uuid": "ae44a0b2-3c89-41e1-91c8-5f8224a779ca",
                            "company_benefit_uuid": "d2cec746-caee-464a-bcaf-00d93f7049c9",
                            "active": true,
                            "deduct_as_percentage": false,
                            "employee_deduction": 3,
                            "company_contribution": 0,
                            "uuid": "9988f241-9aee-4383-bfca-eac79cf58135",
                            "contribution": {
                                "type": "amount",
                                "value": 0
                            }
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110855,
        "executor_type": "THIRDPARTY",
        "executor_name": "getCompanyBenefitSummaryByCompanyBenefitId",
        "executor_version": "v1",
        "executor_display_name": "Get company benefit summary by company benefit id",
        "executor_description": "Returns summary benefit data for the requested company benefit id.",
        "executor_category": "CompanyBenefits",
        "executor_category_group": "CompanyBenefits",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/company_benefits/{company_benefit_id}/summary",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_benefit_id",
                "value": "",
                "description": "The UUID of the company benefit"
            }
        ],
        "queryParams": [
            {
                "key": "start_date",
                "value": "",
                "description": "The start date for which to retrieve company benefit summary",
                "req": false
            },
            {
                "key": "end_date",
                "value": "",
                "description": "The end date for which to retrieve company benefit summary",
                "req": false
            },
            {
                "key": "detailed",
                "value": "",
                "description": "Display employee payroll item summary",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691663318646,
        "lastModifiedTime": 1691663318646,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Benefit summary response",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "start_date": "2022-01-01",
                    "end_date": "2022-12-31",
                    "description": "Simple IRA",
                    "company_benefit_deduction": 60,
                    "company_benefit_contribution": 30,
                    "employees": [
                        {
                            "uuid": "54b7114f-f5e2-4f4b-911b-5cd5ad9032b0",
                            "company_benefit_deduction": 60,
                            "company_benefit_contribution": 30,
                            "benefit_deduction": 660,
                            "benefit_contribution": 330,
                            "gross_pay": 18000,
                            "payroll_benefits": [
                                {
                                    "payroll_uuid": "8cc3471b-9da5-47df-88ea-f238c7cb968b",
                                    "payroll_type": "Regular",
                                    "check_date": "2022-03-01",
                                    "gross_pay": 3000,
                                    "company_benefit_deduction": 10,
                                    "company_benefit_contribution": 5,
                                    "pay_period": {
                                        "start_date": "2022-02-01",
                                        "end_date": "2022-02-28"
                                    }
                                },
                                {
                                    "payroll_uuid": "d9d92786-722b-4bf7-bb32-79140418d349",
                                    "payroll_type": "Bonus",
                                    "check_date": "2022-12-31",
                                    "gross_pay": 3000,
                                    "company_benefit_deduction": 20,
                                    "company_benefit_contribution": 10,
                                    "pay_period": {
                                        "start_date": "nil",
                                        "end_date": "nil"
                                    }
                                }
                            ]
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110846,
        "executor_type": "THIRDPARTY",
        "executor_name": "getBenefitsForCompany",
        "executor_version": "v1",
        "executor_display_name": "Get benefits for a company",
        "executor_description": "Company benefits represent the benefits that a company is offering to employees. This ties together a particular supported benefit with the company-specific information for the offering of that benefit.",
        "executor_category": "CompanyBenefits",
        "executor_category_group": "CompanyBenefits",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/companies/{company_id}/company_benefits",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "The UUID of the company"
            }
        ],
        "queryParams": [
            {
                "key": "enrollment_count",
                "value": "",
                "description": "Whether to return employee enrollment count",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691662683876,
        "lastModifiedTime": 1691662683876,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "uuid": "d2cec746-caee-464a-bcaf-00d93f7049c9",
                        "version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872",
                        "company_uuid": "528cc543-8a41-497e-b479-23a4c5ec77ac",
                        "benefit_type": 1,
                        "active": true,
                        "description": "Kaiser Permanente",
                        "deletable": true,
                        "supports_percentage_amounts": true,
                        "responsible_for_employer_taxes": false,
                        "responsible_for_employee_w2": false
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110849,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateCompanyBenefit",
        "executor_version": "v1",
        "executor_display_name": "Update a company benefit",
        "executor_description": "Company benefits represent the benefits that a company is offering to employees. This ties together a particular supported benefit with the company-specific information for the offering of that benefit.",
        "executor_category": "CompanyBenefits",
        "executor_category_group": "CompanyBenefits",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.gusto-demo.com/v1/company_benefits/{company_benefit_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_benefit_id",
                "value": "",
                "description": "The UUID of the company benefit"
            }
        ],
        "queryParams": [
            {
                "key": "with_employee_benefits",
                "value": "",
                "description": "Whether to return employee benefits associated with the benefit",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872",
                "active": false
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691662875575,
        "lastModifiedTime": 1691662875575,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "d2cec746-caee-464a-bcaf-00d93f7049c9",
                    "version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872",
                    "company_uuid": "881ce3f2-e3e1-49c9-8ad4-0bcf515f5618",
                    "benefit_type": 1,
                    "active": true,
                    "description": "Kaiser Permanente",
                    "deletable": true,
                    "supports_percentage_amounts": true,
                    "responsible_for_employer_taxes": false,
                    "responsible_for_employee_w2": false
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "error_key": "string",
                            "category": "string",
                            "message": "string",
                            "metadata": {}
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110845,
        "executor_type": "THIRDPARTY",
        "executor_name": "createCompanyBenefit",
        "executor_version": "v1",
        "executor_display_name": "Create a company benefit",
        "executor_description": "Company benefits represent the benefits that a company is offering to employees. This ties together a particular supported benefit with the company-specific information for the offering of that benefit.",
        "executor_category": "CompanyBenefits",
        "executor_category_group": "CompanyBenefits",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.gusto-demo.com/v1/companies/{company_id}/company_benefits",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "The UUID of the company"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "benefit_type": 0,
                "active": true,
                "description": "string",
                "responsible_for_employer_taxes": true,
                "responsible_for_employee_w2": true
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691662531560,
        "lastModifiedTime": 1691662531560,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "error_key": "string",
                            "category": "string",
                            "message": "string",
                            "metadata": {}
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "d2cec746-caee-464a-bcaf-00d93f7049c9",
                    "version": "98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872",
                    "company_uuid": "881ce3f2-e3e1-49c9-8ad4-0bcf515f5618",
                    "benefit_type": 1,
                    "active": true,
                    "description": "Kaiser Permanente",
                    "deletable": true,
                    "supports_percentage_amounts": true,
                    "responsible_for_employer_taxes": false,
                    "responsible_for_employee_w2": false
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110857,
        "executor_type": "THIRDPARTY",
        "executor_name": "getBenefitFieldsRequirementsById",
        "executor_version": "v1",
        "executor_display_name": "Get benefit fields requirements by ID",
        "executor_description": "Returns field requirements for the requested benefit type.",
        "executor_category": "CompanyBenefits",
        "executor_category_group": "CompanyBenefits",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/benefits/{benefit_id}/requirements",
        "dataroot": null,
        "pathParams": [
            {
                "key": "benefit_id",
                "value": "",
                "description": "The benefit type in Gusto."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691663412379,
        "lastModifiedTime": 1691663412379,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Benefit type requirements response",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "employee_deduction": {
                        "required": true,
                        "editable": true,
                        "default_value": null,
                        "choices": null
                    },
                    "contribution": {
                        "required": true,
                        "editable": true,
                        "default_value": {
                            "type": "percentage",
                            "value": 2
                        },
                        "choices": [
                            "percentage"
                        ]
                    },
                    "deduct_as_percentage": {
                        "required": true,
                        "editable": true,
                        "default_value": null,
                        "choices": null
                    },
                    "catch_up": {
                        "required": true,
                        "editable": true,
                        "default_value": null,
                        "choices": null
                    },
                    "limit_option": {
                        "required": false,
                        "editable": false,
                        "default_value": null,
                        "choices": null
                    },
                    "company_contribution_annual_maximum": {
                        "required": false,
                        "editable": false,
                        "default_value": null,
                        "choices": null
                    },
                    "coverage_salary_multiplier": {
                        "required": false,
                        "editable": false,
                        "default_value": null,
                        "choices": null
                    },
                    "coverage_amount": {
                        "required": false,
                        "editable": false,
                        "default_value": null,
                        "choices": null
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110850,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteCompanyBenefit",
        "executor_version": "v1",
        "executor_display_name": "Delete a company benefit",
        "executor_description": "The following must be true in order to delete a company benefit  There are no employee benefits associated with the company benefit There are no payroll items associated with the company benefit The benefit is not managed by a Partner or by Gusto (type must be 'External')",
        "executor_category": "CompanyBenefits",
        "executor_category_group": "CompanyBenefits",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.gusto-demo.com/v1/company_benefits/{company_benefit_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_benefit_id",
                "value": "",
                "description": "The UUID of the company benefit"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691662968408,
        "lastModifiedTime": 1691662968408,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "error_key": "string",
                            "category": "string",
                            "message": "string",
                            "metadata": {}
                        }
                    ]
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "No Content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110852,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllBenefitsSupportedByGusto",
        "executor_version": "v1",
        "executor_display_name": "Get all benefits supported by Gusto",
        "executor_description": "Returns all benefits supported by Gusto.The benefit object in Gusto contains high level information about a particular benefit type and its tax considerations. When companies choose to offer a benefit, they are creating a Company Benefit object associated with a particular benefit.",
        "executor_category": "CompanyBenefits",
        "executor_category_group": "CompanyBenefits",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/benefits",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691663090191,
        "lastModifiedTime": 1691663090191,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "benefit_type": 1,
                        "name": "Medical Insurance",
                        "description": "Deductions and contributions for Medical Insurance",
                        "pretax": true,
                        "posttax": false,
                        "imputed": false,
                        "healthcare": true,
                        "retirement": false,
                        "yearly_limit": false,
                        "category": "Health"
                    },
                    {
                        "benefit_type": 2,
                        "name": "Dental Insurance",
                        "description": "Deductions and contributions for Dental Insurance",
                        "pretax": true,
                        "posttax": false,
                        "imputed": false,
                        "healthcare": true,
                        "retirement": false,
                        "yearly_limit": false,
                        "category": "Health"
                    },
                    {
                        "benefit_type": 3,
                        "name": "Vision Insurance",
                        "description": "Deductions and contributions for Vision Insurance",
                        "pretax": true,
                        "posttax": false,
                        "imputed": false,
                        "healthcare": true,
                        "retirement": false,
                        "yearly_limit": false,
                        "category": "Health"
                    },
                    {
                        "benefit_type": 6,
                        "name": "Health Savings Account",
                        "description": "Health Savings Accounts (HSA) allow employees to be reimbursed for qualified medical expenses. Contributions are pre-tax and lower the total amount of tax paid by employees and the employer. Employers may also make tax-free contributions to employees' HSA. Remaining balances are carried over in next year.",
                        "pretax": true,
                        "posttax": false,
                        "imputed": false,
                        "healthcare": false,
                        "retirement": false,
                        "yearly_limit": true,
                        "category": "Health"
                    },
                    {
                        "benefit_type": 7,
                        "name": "Health FSA",
                        "description": "Flexible Spending Accounts (FSA) allow employees to be reimbursed for qualified medical expenses. Contributions are pre-tax and lower the total amount of tax paid by employees and the employer. Employers may also make tax-free contributions to employees' FSA. Remaining balances are not carried over in next year.",
                        "pretax": true,
                        "posttax": false,
                        "imputed": false,
                        "healthcare": false,
                        "retirement": false,
                        "yearly_limit": true,
                        "category": "Health"
                    },
                    {
                        "benefit_type": 11,
                        "name": "Dependent Care FSA",
                        "description": "Dependent Care FSA reimburses employees for expenses to care for dependents while the employee is at work (e.g. Daycares). Contributions are pre-tax and lower the total amount of tax paid by employees and the employer. Employers may also make tax-free contributions to employee FSA. Remaining balances are not carried over to the next year. Single parents or Married couples filing a joint return can elect up to $5000 per year. Married couples filing separate returns are limited to $2500 elections each.",
                        "pretax": true,
                        "posttax": false,
                        "imputed": false,
                        "healthcare": false,
                        "retirement": false,
                        "yearly_limit": true,
                        "category": "Health"
                    },
                    {
                        "benefit_type": 8,
                        "name": "SIMPLE IRA",
                        "description": "The SIMPLE IRA is a tax-deferred retirement savings plan for employees. It is often used by small businesses as an alternative to 401(k) due to its relatively low operating cost. Employers are required to contribute a specific percentage to an employee's SIMPLE IRA.",
                        "pretax": true,
                        "posttax": false,
                        "imputed": false,
                        "healthcare": false,
                        "retirement": true,
                        "yearly_limit": true,
                        "category": "Savings and Retirement"
                    },
                    {
                        "benefit_type": 105,
                        "name": "Roth 401(k)",
                        "description": "Roth 401(k) is an after-tax savings plan for employees. The standard maximum is $18,000, or $24,000 for employees over 50 years old.",
                        "pretax": false,
                        "posttax": true,
                        "imputed": false,
                        "healthcare": false,
                        "retirement": true,
                        "yearly_limit": true,
                        "category": "Savings and Retirement"
                    },
                    {
                        "benefit_type": 110,
                        "name": "Roth 403(b)",
                        "description": "Roth 403(b) is an after-tax savings plan for certain clerics, employees of public schools, and employees of other types of tax-exempt organizations. Contributions made by employees are taxable for federal and state withholding. Often, employers contribute additional pre-tax dollars to the employee\u2019s Roth account to encourage saving for retirement.",
                        "pretax": false,
                        "posttax": true,
                        "imputed": false,
                        "healthcare": false,
                        "retirement": true,
                        "yearly_limit": true,
                        "category": "Savings and Retirement"
                    },
                    {
                        "benefit_type": 5,
                        "name": "401(k)",
                        "description": "401(k) is tax-deferred retirement savings plan for employees. The standard maximum is $18,000, or $24,000 for employees over 50 years old.",
                        "pretax": true,
                        "posttax": false,
                        "imputed": false,
                        "healthcare": false,
                        "retirement": true,
                        "yearly_limit": true,
                        "category": "Savings and Retirement"
                    },
                    {
                        "benefit_type": 9,
                        "name": "403(b)",
                        "description": "403(b) is tax-deferred retirement savings plan for certain clerics, employees of public schools, and employees of other types of tax-exempt organizations.",
                        "pretax": true,
                        "posttax": false,
                        "imputed": false,
                        "healthcare": false,
                        "retirement": true,
                        "yearly_limit": true,
                        "category": "Savings and Retirement"
                    },
                    {
                        "benefit_type": 108,
                        "name": "SEP-IRA",
                        "description": "A SEP-IRA is a pre-tax retirement savings plan where only the employer contributes. It is often used by small businesses as an alternative to 401(k) due to its relatively low operating cost. Employers are required to contribute the same percentage to all enrolled employees, with a maximum contribution of 25% of the employee\u2019s compensation.",
                        "pretax": true,
                        "posttax": false,
                        "imputed": false,
                        "healthcare": false,
                        "retirement": true,
                        "yearly_limit": true,
                        "category": "Savings and Retirement"
                    },
                    {
                        "benefit_type": 109,
                        "name": "SARSEP",
                        "description": "A SARSEP is a pre-tax retirement savings plan used by small businesses as an alternative to 401(k) due to its relatively low operating cost. While new SARSEP plans are not available, there are still some companies that are grandfathered into the plan. Employers are required to contribute the same percentage to all enrolled employees, with a maximum contribution of 25% of the employee\u2019s compensation.",
                        "pretax": true,
                        "posttax": false,
                        "imputed": false,
                        "healthcare": false,
                        "retirement": true,
                        "yearly_limit": true,
                        "category": "Savings and Retirement"
                    },
                    {
                        "benefit_type": 107,
                        "name": "Group-Term Life Insurance",
                        "description": "Group-Term Life Insurance for coverage in excess of $50,000 per employee is a taxable fringe benefit. See IRS Publication 15-B to determine the dollar value of the excess coverage.",
                        "pretax": false,
                        "posttax": true,
                        "imputed": true,
                        "healthcare": false,
                        "retirement": false,
                        "yearly_limit": false,
                        "category": "Health"
                    },
                    {
                        "benefit_type": 10,
                        "name": "Commuter Benefits (pre-tax)",
                        "description": "Tax-free commuter benefits for transit, vanpooling, bicycling, and work-related parking costs. The annual maximum contribution for this pre-tax benefit is in the IRS publication 15-B.",
                        "pretax": true,
                        "posttax": false,
                        "imputed": false,
                        "healthcare": false,
                        "retirement": false,
                        "yearly_limit": false,
                        "category": "Transportation"
                    },
                    {
                        "benefit_type": 106,
                        "name": "Personal Use of Company Car",
                        "description": "When an employee uses a company-owned car for personal matters, it is considered taxable benefit provided in-kind.",
                        "pretax": false,
                        "posttax": true,
                        "imputed": true,
                        "healthcare": false,
                        "retirement": false,
                        "yearly_limit": false,
                        "category": "Transportation"
                    },
                    {
                        "benefit_type": 111,
                        "name": "529 College Savings",
                        "description": "529 College Savings is an after-tax savings plan for employees designed to encourage saving for future college costs. This benefit should be reported as a taxable benefit and will therefore be taxed.",
                        "pretax": false,
                        "posttax": true,
                        "imputed": true,
                        "healthcare": false,
                        "retirement": false,
                        "yearly_limit": false,
                        "category": "Other"
                    },
                    {
                        "benefit_type": 112,
                        "name": "Student Loan Repayment",
                        "description": "Student Loan Repayment is an after-tax savings plan for employees to pay towards their outstanding student loans. An employee can choose to set aside after-tax dollars towards this benefit. These benefits should be reported as a taxable benefit and will therefore be taxed.",
                        "pretax": false,
                        "posttax": true,
                        "imputed": true,
                        "healthcare": false,
                        "retirement": false,
                        "yearly_limit": false,
                        "category": "Other"
                    },
                    {
                        "benefit_type": 998,
                        "name": "Short Term Disability (post-tax)",
                        "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.",
                        "pretax": false,
                        "posttax": true,
                        "imputed": false,
                        "healthcare": false,
                        "retirement": false,
                        "yearly_limit": false,
                        "category": "Health"
                    },
                    {
                        "benefit_type": 999,
                        "name": "Long Term Disability (post-tax)",
                        "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.",
                        "pretax": false,
                        "posttax": true,
                        "imputed": false,
                        "healthcare": false,
                        "retirement": false,
                        "yearly_limit": false,
                        "category": "Health"
                    },
                    {
                        "benefit_type": 996,
                        "name": "Short Term Disability (pre-tax)",
                        "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.",
                        "pretax": true,
                        "posttax": false,
                        "imputed": false,
                        "healthcare": false,
                        "retirement": false,
                        "yearly_limit": false,
                        "category": "Health"
                    },
                    {
                        "benefit_type": 997,
                        "name": "Long Term Disability (pre-tax)",
                        "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.",
                        "pretax": true,
                        "posttax": false,
                        "imputed": false,
                        "healthcare": false,
                        "retirement": false,
                        "yearly_limit": false,
                        "category": "Health"
                    },
                    {
                        "benefit_type": 991,
                        "name": "Voluntary Short Term Disability (post-tax)",
                        "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.",
                        "pretax": false,
                        "posttax": true,
                        "imputed": false,
                        "healthcare": false,
                        "retirement": false,
                        "yearly_limit": false,
                        "category": "Health"
                    },
                    {
                        "benefit_type": 992,
                        "name": "Voluntary Long Term Disability (post-tax)",
                        "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.",
                        "pretax": false,
                        "posttax": true,
                        "imputed": false,
                        "healthcare": false,
                        "retirement": false,
                        "yearly_limit": false,
                        "category": "Health"
                    },
                    {
                        "benefit_type": 993,
                        "name": "Voluntary Life (post-tax)",
                        "description": "Third Party Disability or Third Party Leave are policies offered by employers that pay an employee for a specific life event (maternity leave, injury). All payments made to employees come from a third-party, such as an insurer. For more information on the taxation of these plans, please refer to publication 15-A for more details.",
                        "pretax": false,
                        "posttax": true,
                        "imputed": false,
                        "healthcare": false,
                        "retirement": false,
                        "yearly_limit": false,
                        "category": "Health"
                    },
                    {
                        "benefit_type": 113,
                        "name": "Commuter Parking",
                        "description": "Tax-free commuter benefits allow employees to reduce their monthly commuting expenses for transit, carpooling, bicycling, and work-related parking costs. Please note that there is an annual maximum for this pre-tax benefit. The maximum dollar amount is found in IRS Publication 15-B.",
                        "pretax": true,
                        "posttax": false,
                        "imputed": false,
                        "healthcare": false,
                        "retirement": false,
                        "yearly_limit": false,
                        "category": "Transportation"
                    },
                    {
                        "benefit_type": 114,
                        "name": "Commuter Transit",
                        "description": "Tax-free commuter benefits allow employees to reduce their monthly commuting expenses for transit, carpooling, bicycling, and work-related parking costs. Please note that there is an annual maximum for this pre-tax benefit. The maximum dollar amount is found in IRS Publication 15-B.",
                        "pretax": true,
                        "posttax": false,
                        "imputed": false,
                        "healthcare": false,
                        "retirement": false,
                        "yearly_limit": false,
                        "category": "Transportation"
                    },
                    {
                        "benefit_type": 100,
                        "name": "Other (taxable)",
                        "description": "Other taxable benefit",
                        "pretax": false,
                        "posttax": true,
                        "imputed": true,
                        "healthcare": false,
                        "retirement": false,
                        "yearly_limit": false,
                        "category": "Other"
                    },
                    {
                        "benefit_type": 201,
                        "name": "Cell Phone (taxable)",
                        "description": "Employer-sponsored benefits like this are called fringe benefits, and they don\u2019t get special tax treatment\u2014they\u2019ll be reported as taxable wages on your employees\u2019 paystubs.",
                        "pretax": false,
                        "posttax": true,
                        "imputed": true,
                        "healthcare": false,
                        "retirement": false,
                        "yearly_limit": false,
                        "category": "Transportation"
                    },
                    {
                        "benefit_type": 202,
                        "name": "Gym & Fitness (taxable)",
                        "description": "Employer-sponsored benefits like this are called fringe benefits, and they don\u2019t get special tax treatment\u2014they\u2019ll be reported as taxable wages on your employees\u2019 paystubs.",
                        "pretax": false,
                        "posttax": true,
                        "imputed": true,
                        "healthcare": false,
                        "retirement": false,
                        "yearly_limit": false,
                        "category": "Transportation"
                    },
                    {
                        "benefit_type": 203,
                        "name": "Housing (taxable)",
                        "description": "Employer-sponsored benefits like this are called fringe benefits, and they don\u2019t get special tax treatment\u2014they\u2019ll be reported as taxable wages on your employees\u2019 paystubs.",
                        "pretax": false,
                        "posttax": true,
                        "imputed": true,
                        "healthcare": false,
                        "retirement": false,
                        "yearly_limit": false,
                        "category": "Transportation"
                    },
                    {
                        "benefit_type": 204,
                        "name": "Wellness (taxable)",
                        "description": "Employer-sponsored benefits like this are called fringe benefits, and they don\u2019t get special tax treatment\u2014they\u2019ll be reported as taxable wages on your employees\u2019 paystubs.",
                        "pretax": false,
                        "posttax": true,
                        "imputed": true,
                        "healthcare": false,
                        "retirement": false,
                        "yearly_limit": false,
                        "category": "Transportation"
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110853,
        "executor_type": "THIRDPARTY",
        "executor_name": "getSupportedBenefitById",
        "executor_version": "v1",
        "executor_display_name": "Get a supported benefit by ID",
        "executor_description": "Returns a benefit supported by Gusto.  The benefit object in Gusto contains high level information about a particular benefit type and its tax considerations. When companies choose to offer a benefit, they are creating a Company Benefit object associated with a particular benefit.",
        "executor_category": "CompanyBenefits",
        "executor_category_group": "CompanyBenefits",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/benefits/{benefit_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "benefit_id",
                "value": "",
                "description": "The benefit type in Gusto."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691663176257,
        "lastModifiedTime": 1691663176257,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Supported benefit response",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "benefit_type": 1,
                    "name": "Medical Insurance",
                    "description": "Deductions and contributions for Medical Insurance",
                    "pretax": true,
                    "posttax": false,
                    "imputed": false,
                    "healthcare": true,
                    "retirement": false,
                    "yearly_limit": false
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110858,
        "executor_type": "THIRDPARTY",
        "executor_name": "createAnEmployee",
        "executor_version": "v1",
        "executor_display_name": "Create an employee",
        "executor_description": "Create an employee.",
        "executor_category": "Employees",
        "executor_category_group": "Employees",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.gusto-demo.com/v1/companies/{company_id}/employees",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "The UUID of the company"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "first_name": "Soren",
                "middle_initial": "A",
                "last_name": "Kierkegaard",
                "date_of_birth": "1995-05-05",
                "email": "knight0faith@example.com",
                "ssn": "123456294"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691663672291,
        "lastModifiedTime": 1691663672291,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "4b3f930f-82cd-48a8-b797-798686e12e5e",
                    "first_name": "Isom",
                    "middle_initial": null,
                    "last_name": "Jaskolski",
                    "email": "dane7757869450111550@botsford.net",
                    "company_uuid": "a007e1ab-3595-43c2-ab4b-af7a5af2e365",
                    "manager_uuid": "5e53e257-c8d6-45aa-aa8a-ec99283a3acd",
                    "version": "1c7ba9d62c8bafbfff998ffccad5d296",
                    "department": "Stage Hand",
                    "department_uuid": "56260b3d-c375-415c-b77a-75d99f717193",
                    "terminated": false,
                    "two_percent_shareholder": false,
                    "onboarded": true,
                    "jobs": [
                        {
                            "uuid": "428a653a-0745-4db4-9c80-558288d416fa",
                            "version": "6c0ed1521e8b86eb36bd4455a63a2dac",
                            "employee_uuid": "f0689739-1985-49f3-b9ba-84562e71e85f",
                            "current_compensation_uuid": "c9fd719b-8b07-48f3-8a4c-f447d2c59669",
                            "payment_unit": "Year",
                            "primary": true,
                            "title": "Client Support Director",
                            "compensations": [
                                {
                                    "uuid": "145660ed-6fcc-4211-8915-18e2786290a2",
                                    "version": "2cd4b18662395eb53bcf80d5b5447f36",
                                    "payment_unit": "Year",
                                    "flsa_status": "Exempt",
                                    "job_uuid": "857feae3-414e-445d-b28b-2eb3ef50155e",
                                    "effective_date": "2021-01-20",
                                    "rate": "70000.00",
                                    "adjust_for_minimum_wage": false,
                                    "minimum_wages": []
                                }
                            ],
                            "rate": "70000.00",
                            "hire_date": "2020-01-20"
                        }
                    ],
                    "eligible_paid_time_off": [
                        {
                            "name": "Sick Hours",
                            "accrual_unit": "Hour",
                            "accrual_rate": "208.0",
                            "accrual_method": "per_hour_worked",
                            "accrual_period": "Year",
                            "accrual_balance": "31.8",
                            "maximum_accrual_balance": "240.0",
                            "paid_at_termination": false
                        },
                        {
                            "name": "Vacation Hours",
                            "accrual_unit": "Hour",
                            "accrual_rate": "208.0",
                            "accrual_period": "Year",
                            "accrual_balance": "77.8",
                            "maximum_accrual_balance": "240.0",
                            "paid_at_termination": true
                        }
                    ],
                    "terminations": [],
                    "custom_fields": [
                        {
                            "id": "ee515986-f3ca-49da-b576-2691b95262f9",
                            "company_custom_field_id": "ea7e5d57-6abb-47d7-b654-347c142886c0",
                            "name": "employee_level",
                            "description": "Employee Level",
                            "type": "text",
                            "value": "2",
                            "selection_options": null
                        },
                        {
                            "id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59",
                            "company_custom_field_id": "299650e4-e970-4acf-9bf0-6f05585d20ba",
                            "name": "t-shirt size",
                            "description": "What is your t-shirt size?",
                            "type": "text",
                            "value": "md",
                            "selection_options": null
                        },
                        {
                            "id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59",
                            "company_custom_field_id": "024ec137-6c92-43a3-b061-14a9720531d6",
                            "name": "favorite fruit",
                            "description": "Which is your favorite fruit?",
                            "type": "radio",
                            "value": "apple",
                            "selection_options": [
                                "apple",
                                "banana",
                                "orange"
                            ]
                        }
                    ],
                    "home_address": {
                        "version": "bfc6ed1d49aa9677265232c470fdbc3e",
                        "employee_uuid": "99a0a9ec-42bb-4fd7-9b82-adc98a954ca2",
                        "street_1": "73243 Wuckert Prairie",
                        "street_2": "Suite 189",
                        "city": "San Francisco",
                        "state": "CA",
                        "zip": "94107",
                        "country": "USA",
                        "active": true
                    },
                    "garnishments": [],
                    "date_of_birth": "1986-06-25",
                    "has_ssn": false,
                    "ssn": "",
                    "phone": "1234567890",
                    "preferred_first_name": "Angel",
                    "work_email": "angel.jaskolski@example.com"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110860,
        "executor_type": "THIRDPARTY",
        "executor_name": "getEmployeesOfCompany",
        "executor_version": "v1",
        "executor_display_name": "Get employees of a company",
        "executor_description": "Get all of the employees, onboarding, active and terminated, for a given company.",
        "executor_category": "Employees",
        "executor_category_group": "Employees",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/companies/{company_id}/employees",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "The UUID of the company"
            }
        ],
        "queryParams": [
            {
                "key": "terminated",
                "value": "",
                "description": "Filters employees by the provided boolean",
                "req": false
            },
            {
                "key": "include",
                "value": "",
                "description": "Include the requested attribute(s) in each employee response, multiple options are comma separated. Available options:  all_compensations: Include all effective dated compensations for each job instead of only the current compensation custom_fields: Include employees' custom fields",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "The page that is requested. When unspecified, will load all objects.",
                "req": false
            },
            {
                "key": "per",
                "value": "",
                "description": "Number of objects per page. When unspecified, will default to 25",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691663843320,
        "lastModifiedTime": 1691663843320,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "uuid": "9779767c-6044-48e0-bf68-aeb370b9a2e7",
                        "first_name": "Nicole",
                        "middle_initial": "M",
                        "last_name": "Boehm",
                        "email": "kory7757869450111548@barton-hermiston.io",
                        "company_uuid": "c44d66dc-c41b-4a60-9e25-5e93ff8583f2",
                        "manager_uuid": "5e53e257-c8d6-45aa-aa8a-ec99283a3acd",
                        "version": "414dedaca594b77135e0b8d2f398516d",
                        "department": "Stage Hand",
                        "department_uuid": "1802465d-4f68-4865-920c-1307ab095f12",
                        "terminated": false,
                        "two_percent_shareholder": false,
                        "onboarded": true,
                        "jobs": [
                            {
                                "uuid": "5d5e3ce5-ea8f-4885-90e5-7ebaed03f7c5",
                                "version": "91179081a7309c9fbd31bb3cf7b9893e",
                                "employee_uuid": "a987bce1-6d06-43f8-9978-9db886f479fb",
                                "current_compensation_uuid": "798a962f-0fcf-491e-9b71-cfa6a1db114f",
                                "payment_unit": "Hour",
                                "primary": true,
                                "title": "Client Support Manager",
                                "compensations": [
                                    {
                                        "uuid": "94f17a77-cfe5-436a-af94-422bbf8248ff",
                                        "version": "233f0096a8015e62d9795fadf1fd300d",
                                        "payment_unit": "Hour",
                                        "flsa_status": "Nonexempt",
                                        "job_uuid": "64711ac0-83ff-4aaf-bec1-db72f5a44e56",
                                        "effective_date": "2021-01-20",
                                        "rate": "22.00",
                                        "adjust_for_minimum_wage": false,
                                        "minimum_wages": []
                                    }
                                ],
                                "rate": "22.00",
                                "hire_date": "2020-01-20"
                            }
                        ],
                        "eligible_paid_time_off": [
                            {
                                "name": "Sick Hours",
                                "accrual_unit": "Hour",
                                "accrual_rate": "208.0",
                                "accrual_method": "per_hour_worked",
                                "accrual_period": "Year",
                                "accrual_balance": "71.0",
                                "maximum_accrual_balance": "240.0",
                                "paid_at_termination": false
                            },
                            {
                                "name": "Vacation Hours",
                                "accrual_unit": "Hour",
                                "accrual_rate": "208.0",
                                "accrual_period": "Year",
                                "accrual_balance": "34.0",
                                "maximum_accrual_balance": "240.0",
                                "paid_at_termination": true
                            }
                        ],
                        "terminations": [],
                        "home_address": {
                            "version": "7776defce07496b82f3f1ed469e48ae5",
                            "employee_uuid": "628d203c-357b-4dd4-9ea1-8468b15dd58b",
                            "street_1": "3772 Reynolds Centers",
                            "street_2": "Suite 461",
                            "city": "San Francisco",
                            "state": "CA",
                            "zip": "94107",
                            "country": "USA",
                            "active": true
                        },
                        "garnishments": [],
                        "date_of_birth": "1996-05-08",
                        "has_ssn": true,
                        "ssn": "",
                        "phone": "1234567890",
                        "preferred_first_name": "Vanessa",
                        "work_email": "vanessa.boehm@example.com"
                    },
                    {
                        "uuid": "d7cb289a-af62-4120-9cd5-acda324b5c04",
                        "first_name": "Maci",
                        "middle_initial": "M",
                        "last_name": "Cassin",
                        "email": "claud_reinger7757869450111549@gutkowski.net",
                        "company_uuid": "4522d043-5731-406d-a129-de1808042a32",
                        "manager_uuid": "5e53e257-c8d6-45aa-aa8a-ec99283a3acd",
                        "version": "e867459e1360fa71e78b88142923d341",
                        "department": "Band",
                        "department_uuid": "1802465d-4f68-4865-920c-1307ab095f12",
                        "terminated": false,
                        "two_percent_shareholder": false,
                        "onboarded": true,
                        "jobs": [
                            {
                                "uuid": "62a00cf7-342b-465e-a151-ecd295152be0",
                                "version": "d0e719137f89ca3dd334dd4cc248ffbb",
                                "employee_uuid": "5e53e257-c8d6-45aa-aa8a-ec99283a3acd",
                                "current_compensation_uuid": "93e5da92-173b-4faa-a0bd-d1a8dee68be0",
                                "payment_unit": "Year",
                                "primary": true,
                                "title": "Account Director",
                                "compensations": [
                                    {
                                        "uuid": "1bad5177-c4ed-432e-ab43-66055d40c3a5",
                                        "version": "994b75511d1debac5d7e2ddeae13679f",
                                        "payment_unit": "Year",
                                        "flsa_status": "Exempt",
                                        "job_uuid": "1214875b-f43d-4267-bf2f-a6d2c298ff3d",
                                        "effective_date": "2021-01-20",
                                        "rate": "78000.00",
                                        "adjust_for_minimum_wage": false,
                                        "minimum_wages": []
                                    }
                                ],
                                "rate": "78000.00",
                                "hire_date": "2020-01-20"
                            }
                        ],
                        "eligible_paid_time_off": [
                            {
                                "name": "Sick Hours",
                                "accrual_unit": "Hour",
                                "accrual_rate": "208.0",
                                "accrual_method": "per_hour_worked",
                                "accrual_period": "Year",
                                "accrual_balance": "74.0",
                                "maximum_accrual_balance": "240.0",
                                "paid_at_termination": false
                            },
                            {
                                "name": "Vacation Hours",
                                "accrual_unit": "Hour",
                                "accrual_rate": "208.0",
                                "accrual_period": "Year",
                                "accrual_balance": "16.0",
                                "maximum_accrual_balance": "240.0",
                                "paid_at_termination": true
                            }
                        ],
                        "terminations": [],
                        "home_address": {
                            "version": "b5f18a277987fe9b02230ef36910a248",
                            "employee_uuid": "7e343293-b823-487a-a340-2a298dbb97e7",
                            "street_1": "8078 Bogisich Estate",
                            "street_2": "Suite 892",
                            "city": "San Francisco",
                            "state": "CA",
                            "zip": "94107",
                            "country": "USA",
                            "active": true
                        },
                        "garnishments": [],
                        "custom_fields": [
                            {
                                "id": "ee515986-f3ca-49da-b576-2691b95262f9",
                                "company_custom_field_id": "ea7e5d57-6abb-47d7-b654-347c142886c0",
                                "name": "employee_level",
                                "description": "Employee Level",
                                "type": "text",
                                "value": "2",
                                "selection_options": null
                            },
                            {
                                "id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59",
                                "company_custom_field_id": "299650e4-e970-4acf-9bf0-6f05585d20ba",
                                "name": "t-shirt size",
                                "description": "What is your t-shirt size?",
                                "type": "text",
                                "value": "md",
                                "selection_options": null
                            },
                            {
                                "id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59",
                                "company_custom_field_id": "024ec137-6c92-43a3-b061-14a9720531d6",
                                "name": "favorite fruit",
                                "description": "Which is your favorite fruit?",
                                "type": "radio",
                                "value": "apple",
                                "selection_options": [
                                    "apple",
                                    "banana",
                                    "orange"
                                ]
                            }
                        ],
                        "date_of_birth": "1995-09-21",
                        "has_ssn": true,
                        "ssn": "",
                        "phone": "1234567890",
                        "preferred_first_name": "Denis",
                        "work_email": "denis.cassin@example.com"
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110862,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateAnEmployee",
        "executor_version": "v1",
        "executor_display_name": "Update an employee",
        "executor_description": "Update an employee.",
        "executor_category": "Employees",
        "executor_category_group": "Employees",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.gusto-demo.com/v1/employees/{employee_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "employee_id",
                "value": "",
                "description": "The UUID of the employee"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "version": "db0edd04aaac4506f7edab03ac855d56",
                "first_name": "Soren",
                "middle_initial": "A",
                "last_name": "Kierkegaard",
                "date_of_birth": "1995-05-05",
                "email": "knight0faith@example.com",
                "ssn": "123456294",
                "two_percent_shareholder": false
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691664039715,
        "lastModifiedTime": 1691664039715,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "4b3f930f-82cd-48a8-b797-798686e12e5e",
                    "first_name": "Isom",
                    "middle_initial": null,
                    "last_name": "Jaskolski",
                    "email": "dane7757869450111550@botsford.net",
                    "company_uuid": "a007e1ab-3595-43c2-ab4b-af7a5af2e365",
                    "manager_uuid": "5e53e257-c8d6-45aa-aa8a-ec99283a3acd",
                    "version": "1c7ba9d62c8bafbfff998ffccad5d296",
                    "department": "Stage Hand",
                    "department_uuid": "56260b3d-c375-415c-b77a-75d99f717193",
                    "terminated": false,
                    "two_percent_shareholder": false,
                    "onboarded": true,
                    "jobs": [
                        {
                            "uuid": "428a653a-0745-4db4-9c80-558288d416fa",
                            "version": "6c0ed1521e8b86eb36bd4455a63a2dac",
                            "employee_uuid": "f0689739-1985-49f3-b9ba-84562e71e85f",
                            "current_compensation_uuid": "c9fd719b-8b07-48f3-8a4c-f447d2c59669",
                            "payment_unit": "Year",
                            "primary": true,
                            "title": "Client Support Director",
                            "compensations": [
                                {
                                    "uuid": "145660ed-6fcc-4211-8915-18e2786290a2",
                                    "version": "2cd4b18662395eb53bcf80d5b5447f36",
                                    "payment_unit": "Year",
                                    "flsa_status": "Exempt",
                                    "job_uuid": "857feae3-414e-445d-b28b-2eb3ef50155e",
                                    "effective_date": "2021-01-20",
                                    "rate": "70000.00",
                                    "adjust_for_minimum_wage": false,
                                    "minimum_wages": []
                                }
                            ],
                            "rate": "70000.00",
                            "hire_date": "2020-01-20"
                        }
                    ],
                    "eligible_paid_time_off": [
                        {
                            "name": "Sick Hours",
                            "accrual_unit": "Hour",
                            "accrual_rate": "208.0",
                            "accrual_method": "per_hour_worked",
                            "accrual_period": "Year",
                            "accrual_balance": "31.8",
                            "maximum_accrual_balance": "240.0",
                            "paid_at_termination": false
                        },
                        {
                            "name": "Vacation Hours",
                            "accrual_unit": "Hour",
                            "accrual_rate": "208.0",
                            "accrual_period": "Year",
                            "accrual_balance": "77.8",
                            "maximum_accrual_balance": "240.0",
                            "paid_at_termination": true
                        }
                    ],
                    "terminations": [],
                    "custom_fields": [
                        {
                            "id": "ee515986-f3ca-49da-b576-2691b95262f9",
                            "company_custom_field_id": "ea7e5d57-6abb-47d7-b654-347c142886c0",
                            "name": "employee_level",
                            "description": "Employee Level",
                            "type": "text",
                            "value": "2",
                            "selection_options": null
                        },
                        {
                            "id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59",
                            "company_custom_field_id": "299650e4-e970-4acf-9bf0-6f05585d20ba",
                            "name": "t-shirt size",
                            "description": "What is your t-shirt size?",
                            "type": "text",
                            "value": "md",
                            "selection_options": null
                        },
                        {
                            "id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59",
                            "company_custom_field_id": "024ec137-6c92-43a3-b061-14a9720531d6",
                            "name": "favorite fruit",
                            "description": "Which is your favorite fruit?",
                            "type": "radio",
                            "value": "apple",
                            "selection_options": [
                                "apple",
                                "banana",
                                "orange"
                            ]
                        }
                    ],
                    "home_address": {
                        "version": "bfc6ed1d49aa9677265232c470fdbc3e",
                        "employee_uuid": "99a0a9ec-42bb-4fd7-9b82-adc98a954ca2",
                        "street_1": "73243 Wuckert Prairie",
                        "street_2": "Suite 189",
                        "city": "San Francisco",
                        "state": "CA",
                        "zip": "94107",
                        "country": "USA",
                        "active": true
                    },
                    "garnishments": [],
                    "date_of_birth": "1986-06-25",
                    "has_ssn": false,
                    "ssn": "",
                    "phone": "1234567890",
                    "preferred_first_name": "Angel",
                    "work_email": "angel.jaskolski@example.com"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "error_key": "string",
                            "category": "string",
                            "message": "string",
                            "metadata": {}
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110863,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteAnOnboardingEmployee",
        "executor_version": "v1",
        "executor_display_name": "Delete an onboarding employee",
        "executor_description": "Use this endpoint to delete an employee who is in onboarding. Deleting an onboarded employee is not allowed. Please check out the Terminations api if you need to terminate an onboarded employee.",
        "executor_category": "Employees",
        "executor_category_group": "Employees",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.gusto-demo.com/v1/employees/{employee_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "employee_id",
                "value": "",
                "description": "The UUID of the employee"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691664124872,
        "lastModifiedTime": 1691664124872,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "No Content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110861,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAnEmployee",
        "executor_version": "v1",
        "executor_display_name": "Get an employee",
        "executor_description": "Get an employee.",
        "executor_category": "Employees",
        "executor_category_group": "Employees",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/employees/{employee_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "employee_id",
                "value": "",
                "description": "The UUID of the employee"
            }
        ],
        "queryParams": [
            {
                "key": "include",
                "value": "",
                "description": "Include the requested attribute(s) in each employee response, multiple options are comma separated. Available options:  all_compensations: Include all effective dated compensations for each job instead of only the current compensation custom_fields: Include employees' custom fields",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691663932749,
        "lastModifiedTime": 1691663932749,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "4b3f930f-82cd-48a8-b797-798686e12e5e",
                    "first_name": "Isom",
                    "middle_initial": null,
                    "last_name": "Jaskolski",
                    "email": "dane7757869450111550@botsford.net",
                    "company_uuid": "a007e1ab-3595-43c2-ab4b-af7a5af2e365",
                    "manager_uuid": "5e53e257-c8d6-45aa-aa8a-ec99283a3acd",
                    "version": "1c7ba9d62c8bafbfff998ffccad5d296",
                    "department": "Stage Hand",
                    "department_uuid": "56260b3d-c375-415c-b77a-75d99f717193",
                    "terminated": false,
                    "two_percent_shareholder": false,
                    "onboarded": true,
                    "jobs": [
                        {
                            "uuid": "428a653a-0745-4db4-9c80-558288d416fa",
                            "version": "6c0ed1521e8b86eb36bd4455a63a2dac",
                            "employee_uuid": "f0689739-1985-49f3-b9ba-84562e71e85f",
                            "current_compensation_uuid": "c9fd719b-8b07-48f3-8a4c-f447d2c59669",
                            "payment_unit": "Year",
                            "primary": true,
                            "title": "Client Support Director",
                            "compensations": [
                                {
                                    "uuid": "145660ed-6fcc-4211-8915-18e2786290a2",
                                    "version": "2cd4b18662395eb53bcf80d5b5447f36",
                                    "payment_unit": "Year",
                                    "flsa_status": "Exempt",
                                    "job_uuid": "857feae3-414e-445d-b28b-2eb3ef50155e",
                                    "effective_date": "2021-01-20",
                                    "rate": "70000.00",
                                    "adjust_for_minimum_wage": false,
                                    "minimum_wages": []
                                }
                            ],
                            "rate": "70000.00",
                            "hire_date": "2020-01-20"
                        }
                    ],
                    "eligible_paid_time_off": [
                        {
                            "name": "Sick Hours",
                            "accrual_unit": "Hour",
                            "accrual_rate": "208.0",
                            "accrual_method": "per_hour_worked",
                            "accrual_period": "Year",
                            "accrual_balance": "31.8",
                            "maximum_accrual_balance": "240.0",
                            "paid_at_termination": false
                        },
                        {
                            "name": "Vacation Hours",
                            "accrual_unit": "Hour",
                            "accrual_rate": "208.0",
                            "accrual_period": "Year",
                            "accrual_balance": "77.8",
                            "maximum_accrual_balance": "240.0",
                            "paid_at_termination": true
                        }
                    ],
                    "terminations": [],
                    "custom_fields": [
                        {
                            "id": "ee515986-f3ca-49da-b576-2691b95262f9",
                            "company_custom_field_id": "ea7e5d57-6abb-47d7-b654-347c142886c0",
                            "name": "employee_level",
                            "description": "Employee Level",
                            "type": "text",
                            "value": "2",
                            "selection_options": null
                        },
                        {
                            "id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59",
                            "company_custom_field_id": "299650e4-e970-4acf-9bf0-6f05585d20ba",
                            "name": "t-shirt size",
                            "description": "What is your t-shirt size?",
                            "type": "text",
                            "value": "md",
                            "selection_options": null
                        },
                        {
                            "id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59",
                            "company_custom_field_id": "024ec137-6c92-43a3-b061-14a9720531d6",
                            "name": "favorite fruit",
                            "description": "Which is your favorite fruit?",
                            "type": "radio",
                            "value": "apple",
                            "selection_options": [
                                "apple",
                                "banana",
                                "orange"
                            ]
                        }
                    ],
                    "home_address": {
                        "version": "bfc6ed1d49aa9677265232c470fdbc3e",
                        "employee_uuid": "99a0a9ec-42bb-4fd7-9b82-adc98a954ca2",
                        "street_1": "73243 Wuckert Prairie",
                        "street_2": "Suite 189",
                        "city": "San Francisco",
                        "state": "CA",
                        "zip": "94107",
                        "country": "USA",
                        "active": true
                    },
                    "garnishments": [],
                    "date_of_birth": "1986-06-25",
                    "has_ssn": false,
                    "ssn": "",
                    "phone": "1234567890",
                    "preferred_first_name": "Angel",
                    "work_email": "angel.jaskolski@example.com"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110865,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAnEmployeesCustomFields",
        "executor_version": "v1",
        "executor_display_name": "Get an employee's custom fields",
        "executor_description": "Returns a list of the employee's custom fields.",
        "executor_category": "Employees",
        "executor_category_group": "Employees",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/employees/{employee_id}/custom_fields",
        "dataroot": null,
        "pathParams": [
            {
                "key": "employee_id",
                "value": "",
                "description": "The UUID of the employee"
            }
        ],
        "queryParams": [
            {
                "key": "page",
                "value": "",
                "description": "The page that is requested. When unspecified, will load all objects.",
                "req": false
            },
            {
                "key": "per",
                "value": "",
                "description": "Number of objects per page. When unspecified, will default to 25",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691664335836,
        "lastModifiedTime": 1691664335836,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "custom_fields": [
                        {
                            "id": "ee515986-f3ca-49da-b576-2691b95262f9",
                            "company_custom_field_id": "ea7e5d57-6abb-47d7-b654-347c142886c0",
                            "name": "employee_level",
                            "description": "Employee Level",
                            "type": "text",
                            "value": "2",
                            "selection_options": null
                        },
                        {
                            "id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59",
                            "company_custom_field_id": "299650e4-e970-4acf-9bf0-6f05585d20ba",
                            "name": "t-shirt size",
                            "description": "What is your t-shirt size?",
                            "type": "text",
                            "value": "md",
                            "selection_options": null
                        },
                        {
                            "id": "3796e08d-c2e3-434c-b4de-4ce1893e7b59",
                            "company_custom_field_id": "024ec137-6c92-43a3-b061-14a9720531d6",
                            "name": "favorite fruit",
                            "description": "Which is your favorite fruit?",
                            "type": "radio",
                            "value": "apple",
                            "selection_options": [
                                "apple",
                                "banana",
                                "orange"
                            ]
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110866,
        "executor_type": "THIRDPARTY",
        "executor_name": "getEmployeeTimeOffActivities",
        "executor_version": "v1",
        "executor_display_name": "Get employee time off activities",
        "executor_description": "Get employee time off activities.",
        "executor_category": "Employees",
        "executor_category_group": "Employees",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/employees/{employee_uuid}/time_off_activities",
        "dataroot": null,
        "pathParams": [
            {
                "key": "employee_uuid",
                "value": "",
                "description": "The UUID of the employee"
            }
        ],
        "queryParams": [
            {
                "key": "time_off_type",
                "value": "",
                "description": "The time off type name you want to query data for. ex: 'sick' or 'vacation'",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691664424570,
        "lastModifiedTime": 1691664424570,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "policy_uuid": "a7838f74-4c29-4b70-9bfb-02a4e3e60709",
                    "time_off_type": "vacation",
                    "policy_name": "Paid Time Off",
                    "event_type": "TimeOffEvent::AddToPolicy",
                    "event_description": "Added to policy: Vacation Per Hour Worked",
                    "effective_time": "2022-09-27T13:43:03.000-07:00",
                    "balance": "0.0",
                    "balance_change": "0.0"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110937,
        "executor_type": "THIRDPARTY",
        "executor_name": "createAnEmployeeBenefit",
        "executor_version": "v1",
        "executor_display_name": "Create an employee benefit",
        "executor_description": "Employee benefits represent an employee enrolled in a particular company benefit. It includes information specific to that employee\u2019s enrollment.",
        "executor_category": "EmployeeBenefits",
        "executor_category_group": "EmployeeBenefits",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.gusto-demo.com/v1/employees/{employee_id}/employee_benefits",
        "dataroot": null,
        "pathParams": [
            {
                "key": "employee_id",
                "value": "",
                "description": "The UUID of the employee"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "active": true,
                "employee_deduction": "100.00",
                "deduct_as_percentage": false,
                "contribution": {
                    "type": "amount",
                    "value": "100.00"
                },
                "elective": false,
                "catch_up": false,
                "coverage_salary_multiplier": "0.00",
                "company_benefit_uuid": "f68abb42-431e-4392-bc3f-2795627e00f3"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691728142629,
        "lastModifiedTime": 1691728142629,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "version": "09j3d29jqdpj92109j9j2d90dq",
                    "employee_uuid": 908123091820398,
                    "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be",
                    "active": true,
                    "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031",
                    "employee_deduction": "100.00",
                    "employee_deduction_annual_maximum": "200.00",
                    "company_contribution_annual_maximum": "200.00",
                    "limit_option": null,
                    "deduct_as_percentage": false,
                    "catch_up": false,
                    "coverage_amount": null,
                    "deduction_reduces_taxable_income": null,
                    "coverage_salary_multiplier": "0.00",
                    "contribution": {
                        "type": "amount",
                        "value": "100.00"
                    }
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110940,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAnEmployeeBenefit",
        "executor_version": "v1",
        "executor_display_name": "Get an employee benefit",
        "executor_description": "Employee benefits represent an employee enrolled in a particular company benefit. It includes information specific to that employee\u2019s enrollment.",
        "executor_category": "EmployeeBenefits",
        "executor_category_group": "EmployeeBenefits",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/employee_benefits/{employee_benefit_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "employee_benefit_id",
                "value": "",
                "description": "The UUID of the employee benefit."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691728339703,
        "lastModifiedTime": 1691728339703,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "version": "09j3d29jqdpj92109j9j2d90dq",
                    "employee_uuid": 908123091820398,
                    "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be",
                    "active": true,
                    "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031",
                    "employee_deduction": "100.00",
                    "employee_deduction_annual_maximum": "200.00",
                    "company_contribution_annual_maximum": "200.00",
                    "limit_option": null,
                    "deduct_as_percentage": false,
                    "catch_up": false,
                    "coverage_amount": null,
                    "deduction_reduces_taxable_income": null,
                    "coverage_salary_multiplier": "0.00",
                    "contribution": {
                        "type": "amount",
                        "value": "100.00"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110947,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateAnEmployeeBenefit",
        "executor_version": "v1",
        "executor_display_name": "Update an employee benefit",
        "executor_description": "Employee benefits represent an employee enrolled in a particular company benefit. It includes information specific to that employee\u2019s enrollment.",
        "executor_category": "EmployeeBenefits",
        "executor_category_group": "EmployeeBenefits",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.gusto-demo.com/v1/employee_benefits/{employee_benefit_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "employee_benefit_id",
                "value": "",
                "description": "The UUID of the employee benefit."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "employee_deduction": "0.00",
                "elective": false,
                "catch_up": false,
                "deduction_reduces_taxable_income": "unset",
                "coverage_salary_multiplier": "0.00"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691728449437,
        "lastModifiedTime": 1691728449437,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "version": "09j3d29jqdpj92109j9j2d90dq",
                    "employee_uuid": 908123091820398,
                    "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be",
                    "active": true,
                    "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031",
                    "employee_deduction": "100.00",
                    "employee_deduction_annual_maximum": "200.00",
                    "company_contribution_annual_maximum": "200.00",
                    "limit_option": null,
                    "deduct_as_percentage": false,
                    "catch_up": false,
                    "coverage_amount": null,
                    "deduction_reduces_taxable_income": null,
                    "coverage_salary_multiplier": "0.00",
                    "contribution": {
                        "type": "amount",
                        "value": "100.00"
                    }
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "error_key": "string",
                            "category": "string",
                            "message": "string",
                            "metadata": {}
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110949,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteAnEmployeeBenefit",
        "executor_version": "v1",
        "executor_display_name": "Delete an employee benefit",
        "executor_description": "Employee benefits represent an employee enrolled in a particular company benefit. It includes information specific to that employee\u2019s enrollment.",
        "executor_category": "EmployeeBenefits",
        "executor_category_group": "EmployeeBenefits",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.gusto-demo.com/v1/employee_benefits/{employee_benefit_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "employee_benefit_id",
                "value": "",
                "description": "The UUID of the employee benefit."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691728535572,
        "lastModifiedTime": 1691728535572,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "No Content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110951,
        "executor_type": "THIRDPARTY",
        "executor_name": "createYearToDateBenefitAmountsFromDifferentCompany",
        "executor_version": "v1",
        "executor_display_name": "Create year-to-date benefit amounts from a different company",
        "executor_description": "Year-to-date benefit amounts from a different company represents the amount of money added to an employees plan during a current year, made outside of the current contribution when they were employed at a different company.",
        "executor_category": "EmployeeBenefits",
        "executor_category_group": "EmployeeBenefits",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.gusto-demo.com/v1/employees/{employee_id}/ytd_benefit_amounts_from_different_company",
        "dataroot": null,
        "pathParams": [
            {
                "key": "employee_id",
                "value": "",
                "description": "The UUID of the employee"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "benefit_type": 0,
                "tax_year": 0,
                "ytd_employee_deduction_amount": "0.00",
                "ytd_company_contribution_amount": "0.00"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691728670060,
        "lastModifiedTime": 1691728670060,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "No Content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110939,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllBenefitsForAnEmployee",
        "executor_version": "v1",
        "executor_display_name": "Get all benefits for an employee",
        "executor_description": "Employee benefits represent an employee enrolled in a particular company benefit. It includes information specific to that employee\u2019s enrollment.",
        "executor_category": "EmployeeBenefits",
        "executor_category_group": "EmployeeBenefits",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/employees/{employee_id}/employee_benefits",
        "dataroot": null,
        "pathParams": [
            {
                "key": "employee_id",
                "value": "",
                "description": "The UUID of the employee"
            }
        ],
        "queryParams": [
            {
                "key": "page",
                "value": "",
                "description": "The page that is requested. When unspecified, will load all objects.",
                "req": false
            },
            {
                "key": "per",
                "value": "",
                "description": "Number of objects per page. When unspecified, will default to 25",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691728260040,
        "lastModifiedTime": 1691728260040,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "version": "09j3d29jqdpj92109j9j2d90dq",
                        "employee_uuid": "8f9f3f68-8fd3-499d-ade7-4a052e56494e",
                        "company_benefit_uuid": "54e37c27-43e6-4ae5-a5b2-e29895a133be",
                        "active": true,
                        "uuid": "e91ca856-a915-4339-9b18-29f9cd66b031",
                        "employee_deduction": "100.00",
                        "company_contribution": "100.00",
                        "employee_deduction_annual_maximum": "200.00",
                        "company_contribution_annual_maximum": "200.00",
                        "limit_option": null,
                        "deduct_as_percentage": false,
                        "contribute_as_percentage": false,
                        "catch_up": false,
                        "coverage_amount": null,
                        "deduction_reduces_taxable_income": null,
                        "coverage_salary_multiplier": "0.00"
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110971,
        "executor_type": "THIRDPARTY",
        "executor_name": "getaContractor",
        "executor_version": "v1",
        "executor_display_name": "Get a contractor",
        "executor_description": "Get a contractor.",
        "executor_category": "Contractors",
        "executor_category_group": "Contractors",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/contractors/{contractor_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "contractor_id",
                "value": "",
                "description": "The UUID of the contractor"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691731772475,
        "lastModifiedTime": 1691731772475,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "c9fc1ad3-c107-4e7b-aa21-2dd4b00a7a07",
                    "company_uuid": "b7457fec-3b76-43bb-9c6e-69cca4688942",
                    "wage_type": "Hourly",
                    "start_date": "2022-01-01",
                    "is_active": false,
                    "version": "63859768485e218ccf8a449bb60f14ed",
                    "type": "Individual",
                    "first_name": "Kory",
                    "last_name": "Gottlieb",
                    "middle_initial": "P",
                    "business_name": null,
                    "ein": null,
                    "has_ein": false,
                    "has_ssn": true,
                    "department": "Stage hand",
                    "department_uuid": "56260b3d-c375-415c-b77a-75d99f717193",
                    "email": "keira.west@mckenzie.org",
                    "file_new_hire_report": true,
                    "work_state": "FL",
                    "onboarded": true,
                    "onboarding_status": "onboarding_completed",
                    "address": {
                        "street_1": "621 Jast Row",
                        "street_2": "Apt. 281",
                        "city": "Coral Springs",
                        "state": "FL",
                        "zip": "33065",
                        "country": "USA"
                    },
                    "hourly_rate": "60.00"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110973,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateContractor",
        "executor_version": "v1",
        "executor_display_name": "Update a contractor",
        "executor_description": "Update a contractor.",
        "executor_category": "Contractors",
        "executor_category_group": "Contractors",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.gusto-demo.com/v1/contractors/{contractor_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "contractor_id",
                "value": "",
                "description": "The UUID of the contractor"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "type": "Individual",
                "self_onboarding": false,
                "file_new_hire_report": false,
                "version": "b48c46abfed1487b873b442334b3c4ff",
                "start_date": "2021-01-01",
                "first_name": "Chanel",
                "last_name": "Boyle",
                "middle_initial": "X",
                "wage_type": "Hourly",
                "hourly_rate": "20.00",
                "is_active": true
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691731878648,
        "lastModifiedTime": 1691731878648,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "c9fc1ad3-c107-4e7b-aa21-2dd4b00a7a07",
                    "company_uuid": "b7457fec-3b76-43bb-9c6e-69cca4688942",
                    "wage_type": "Hourly",
                    "start_date": "2022-01-01",
                    "is_active": false,
                    "version": "63859768485e218ccf8a449bb60f14ed",
                    "type": "Individual",
                    "first_name": "Kory",
                    "last_name": "Gottlieb",
                    "middle_initial": "P",
                    "business_name": null,
                    "ein": null,
                    "has_ein": false,
                    "has_ssn": true,
                    "department": "Stage hand",
                    "department_uuid": "56260b3d-c375-415c-b77a-75d99f717193",
                    "email": "keira.west@mckenzie.org",
                    "file_new_hire_report": true,
                    "work_state": "FL",
                    "onboarded": true,
                    "onboarding_status": "onboarding_completed",
                    "address": {
                        "street_1": "621 Jast Row",
                        "street_2": "Apt. 281",
                        "city": "Coral Springs",
                        "state": "FL",
                        "zip": "33065",
                        "country": "USA"
                    },
                    "hourly_rate": "60.00"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "error_key": "string",
                            "category": "string",
                            "message": "string",
                            "metadata": {}
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110969,
        "executor_type": "THIRDPARTY",
        "executor_name": "createContractor",
        "executor_version": "v1",
        "executor_display_name": "Create a contractor",
        "executor_description": "Create an individual or business contractor.",
        "executor_category": "Contractors",
        "executor_category_group": "Contractors",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.gusto-demo.com/v1/companies/{company_id}/contractors",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "type": "Individual",
                "wage_type": "Fixed",
                "first_name": "Johnson",
                "last_name": "Johnson",
                "start_date": "2020-04-01",
                "self_onboarding": true,
                "email": "johnson@johnson.com",
                "file_new_hire_report": "true,",
                "work_state": "CA"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691731603841,
        "lastModifiedTime": 1691731603841,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "error_key": "string",
                            "category": "string",
                            "message": "string",
                            "metadata": {}
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "c9fc1ad3-c107-4e7b-aa21-2dd4b00a7a07",
                    "company_uuid": "b7457fec-3b76-43bb-9c6e-69cca4688942",
                    "wage_type": "Hourly",
                    "start_date": "2022-01-01",
                    "is_active": false,
                    "version": "63859768485e218ccf8a449bb60f14ed",
                    "type": "Individual",
                    "first_name": "Kory",
                    "last_name": "Gottlieb",
                    "middle_initial": "P",
                    "business_name": null,
                    "ein": null,
                    "has_ein": false,
                    "has_ssn": true,
                    "department": "Stage hand",
                    "department_uuid": "56260b3d-c375-415c-b77a-75d99f717193",
                    "email": "keira.west@mckenzie.org",
                    "file_new_hire_report": true,
                    "work_state": "FL",
                    "onboarded": true,
                    "onboarding_status": "onboarding_completed",
                    "address": {
                        "street_1": "621 Jast Row",
                        "street_2": "Apt. 281",
                        "city": "Coral Springs",
                        "state": "FL",
                        "zip": "33065",
                        "country": "USA"
                    },
                    "hourly_rate": "60.00"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110970,
        "executor_type": "THIRDPARTY",
        "executor_name": "getContractorsOfCompany",
        "executor_version": "v1",
        "executor_display_name": "Get contractors of a company",
        "executor_description": "Get all contractors, active and inactive, individual and business, for a company.",
        "executor_category": "Contractors",
        "executor_category_group": "Contractors",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/companies/{company_id}/contractors",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "The UUID of the company"
            }
        ],
        "queryParams": [
            {
                "key": "page",
                "value": "",
                "description": "The page that is requested. When unspecified, will load all objects.",
                "req": false
            },
            {
                "key": "per",
                "value": "",
                "description": "Number of objects per page. When unspecified, will default to 25",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691731713064,
        "lastModifiedTime": 1691731713064,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "uuid": "c9fc1ad3-c107-4e7b-aa21-2dd4b00a7a07",
                        "company_uuid": "b7457fec-3b76-43bb-9c6e-69cca4688942",
                        "wage_type": "Fixed",
                        "is_active": false,
                        "version": "63859768485e218ccf8a449bb60f14ed",
                        "type": "Individual",
                        "first_name": "Kory",
                        "last_name": "Gottlieb",
                        "middle_initial": "P",
                        "business_name": null,
                        "ein": null,
                        "has_ein": false,
                        "has_ssn": true,
                        "department": "Backup Dancer",
                        "department_uuid": "1802465d-4f68-4865-920c-1307ab095f12",
                        "email": "keira.west@mckenzie.org",
                        "start_date": "2022-01-01",
                        "file_new_hire_report": false,
                        "work_state": null,
                        "onboarded": true,
                        "onboarding_status": "contractor_onboarding_completed",
                        "address": {
                            "street_1": "621 Jast Row",
                            "street_2": "Apt. 281",
                            "city": "Coral Springs",
                            "state": "FL",
                            "zip": "33065",
                            "country": "USA"
                        },
                        "hourly_rate": "0.00"
                    },
                    {
                        "uuid": "183a86f4-a803-4b38-9357-cd9b78e2560c",
                        "company_uuid": "afdd5d98-581b-4fc0-b988-706b7d23b2a5",
                        "wage_type": "Fixed",
                        "is_active": true,
                        "version": "8aab307f1e8ed788697f8986346af559",
                        "type": "Business",
                        "first_name": null,
                        "last_name": null,
                        "middle_initial": null,
                        "business_name": "Labadie-Stroman",
                        "ein": "XX-XXX0001",
                        "has_ein": true,
                        "has_ssn": false,
                        "email": "jonatan@kerluke.info",
                        "start_date": "2022-01-01",
                        "onboarded": true,
                        "onboarding_status": "contractor_onboarding_completed",
                        "address": {
                            "street_1": "1625 Bednar Center",
                            "street_2": "Apt. 480",
                            "city": "Port Charlotte",
                            "state": "FL",
                            "zip": "33954",
                            "country": "USA"
                        },
                        "hourly_rate": "0.00",
                        "file_new_hire_report": false,
                        "work_state": null
                    },
                    {
                        "uuid": "ea1c2d65-b622-4899-bcb7-5cd0fe0232aa",
                        "id": 7757515807623484,
                        "company_uuid": "281c763d-a2ba-4f51-b9e8-b1ed61576d62",
                        "company_id": 7757616923763477,
                        "wage_type": "Fixed",
                        "is_active": true,
                        "version": "b48c46abfed1487b873b442334b3c4ff",
                        "type": "Individual",
                        "first_name": "Chanel",
                        "last_name": "Boyle",
                        "middle_initial": "X",
                        "business_name": null,
                        "ein": null,
                        "has_ein": false,
                        "has_ssn": true,
                        "email": "loyal@hettinger.biz",
                        "file_new_hire_report": true,
                        "work_state": "TX",
                        "onboarded": true,
                        "onboarding_status": "contractor_onboarding_completed",
                        "address": {
                            "street_1": "35913 Darrick Run",
                            "street_2": "Apt. 913",
                            "city": "Cypress",
                            "state": "TX",
                            "zip": "77433",
                            "country": "USA"
                        },
                        "hourly_rate": "0.00"
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110785,
        "executor_type": "THIRDPARTY",
        "executor_name": "getaCompany",
        "executor_version": "v1",
        "executor_display_name": "Get a company",
        "executor_description": "Get a company. The employees:read scope is required to return home_address and non-work locations. The company_admin:read scope is required to return primary_payroll_admin. The signatories:read scope is required to return primary_signatory.",
        "executor_category": "Companies",
        "executor_category_group": "Companies",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/companies/{company_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "The UUID of the company"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691655114846,
        "lastModifiedTime": 1691655114846,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "ein": "00-0000001",
                    "entity_type": "C-Corporation",
                    "tier": "core",
                    "is_suspended": false,
                    "company_status": "Approved",
                    "uuid": "c7a07c73-a703-4462-9343-1b181182b6e0",
                    "name": "Shoppe Studios LLC",
                    "trade_name": "Record Shoppe",
                    "is_partner_managed": false,
                    "pay_schedule_type": "by_department",
                    "locations": [
                        {
                            "street_1": "412 Kiera Stravenue",
                            "street_2": "Suite 391",
                            "city": "San Francisco",
                            "state": "CA",
                            "zip": "94107",
                            "country": "USA",
                            "active": true
                        },
                        {
                            "street_1": "644 Fay Vista",
                            "street_2": "Suite 842",
                            "city": "Richmond",
                            "state": "VA",
                            "zip": "23218",
                            "country": "USA",
                            "active": true
                        }
                    ],
                    "compensations": {
                        "hourly": [
                            {
                                "name": "Overtime",
                                "multiple": 1.5
                            },
                            {
                                "name": "Double overtime",
                                "multiple": 2
                            },
                            {
                                "name": "Regular",
                                "multiple": 1
                            },
                            {
                                "name": "Outstanding vacation",
                                "multiple": 1
                            },
                            {
                                "name": "Holiday",
                                "multiple": 1
                            },
                            {
                                "name": "Emergency sick - self care",
                                "multiple": 1
                            },
                            {
                                "name": "Emergency sick - caring for others",
                                "multiple": 1
                            },
                            {
                                "name": "FMLA Public Health Emergency Leave",
                                "multiple": 1
                            },
                            {
                                "name": "Regular Hours",
                                "multiple": 1
                            }
                        ],
                        "fixed": [
                            {
                                "name": "Bonus"
                            },
                            {
                                "name": "Commission"
                            },
                            {
                                "name": "Paycheck Tips"
                            },
                            {
                                "name": "Cash Tips"
                            },
                            {
                                "name": "Correction Payment"
                            },
                            {
                                "name": "Severance"
                            },
                            {
                                "name": "Minimum Wage Adjustment"
                            },
                            {
                                "name": "Reimbursement"
                            }
                        ],
                        "paid_time_off": [
                            {
                                "name": "Vacation Hours"
                            },
                            {
                                "name": "Sick Hours"
                            },
                            {
                                "name": "Holiday Hours"
                            }
                        ]
                    },
                    "primary_signatory": {
                        "first_name": "Alda",
                        "middle_initial": "",
                        "last_name": "Carter",
                        "phone": "1-565-710-7558",
                        "email": "louie.hessel7757869450111547@zemlak.biz",
                        "home_address": {
                            "street_1": "524 Roob Divide",
                            "street_2": "Suite 565",
                            "city": "San Francisco",
                            "state": "CA",
                            "zip": "94107",
                            "country": "USA"
                        }
                    },
                    "primary_payroll_admin": {
                        "first_name": "Ian",
                        "last_name": "Labadie",
                        "phone": "1-565-710-7559",
                        "email": "louie.hessel7757869450111547@zemlak.biz"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110790,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTheCustomFieldsofCompany",
        "executor_version": "v1",
        "executor_display_name": "Get the custom fields of a company",
        "executor_description": "Returns a list of the custom fields of the company. Useful when you need to know the schema of custom fields for an entire company",
        "executor_category": "Companies",
        "executor_category_group": "Companies",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/companies/{company_id}/custom_fields",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "The UUID of the company"
            }
        ],
        "queryParams": [
            {
                "key": "page",
                "value": "",
                "description": "The page that is requested. When unspecified, will load all objects.",
                "req": false
            },
            {
                "key": "per",
                "value": "",
                "description": "Number of objects per page. When unspecified, will default to 25",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691655256343,
        "lastModifiedTime": 1691655256343,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "custom_fields": [
                        {
                            "uuid": "ea7e5d57-6abb-47d7-b654-347c142886c0",
                            "name": "employee_level",
                            "description": "Employee Level",
                            "type": "text",
                            "selection_options": null
                        },
                        {
                            "uuid": "299650e4-e970-4acf-9bf0-6f05585d20ba",
                            "name": "t-shirt size",
                            "description": "What is your t-shirt size?",
                            "type": "text",
                            "selection_options": null
                        },
                        {
                            "uuid": "024ec137-6c92-43a3-b061-14a9720531d6",
                            "name": "favorite fruit",
                            "description": "Which is your favorite fruit?",
                            "type": "radio",
                            "selection_options": [
                                "apple",
                                "banana",
                                "orange"
                            ]
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110783,
        "executor_type": "THIRDPARTY",
        "executor_name": "createCompany",
        "executor_version": "v1",
        "executor_display_name": "Create a company",
        "executor_description": "The company provisioning API provides a way to create a Gusto company as part of your integration. When you successfully call the API, the API does the following:  Creates a new company in Gusto. Creates a new user in Gusto. Makes the new user the primary payroll administrator of the new company. Sends a welcome email to the new user. In the response, you will receive an account claim URL. Redirect the user to this URL to complete their account setup inside of Gusto",
        "executor_category": "Companies",
        "executor_category_group": "Companies",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.gusto-demo.com/v1/provision",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "user": {
                    "first_name": "Frank",
                    "last_name": "Ocean",
                    "email": "frank@example.com",
                    "phone": "2345558899"
                },
                "company": {
                    "name": "Frank's Ocean, LLC",
                    "trade_name": "Frank\u2019s Ocean",
                    "tier": "complete",
                    "ein": "123456789",
                    "states": [
                        "CO",
                        "CA"
                    ],
                    "number_employees": 8,
                    "addresses": [
                        {
                            "street_1": "1201 16th Street Mall",
                            "street_2": "Suite 350",
                            "city": "Denver",
                            "zip": "80202",
                            "state": "CO",
                            "phone": "2345678900",
                            "is_primary": "true"
                        },
                        {
                            "street_1": "525 20th Street",
                            "city": "San Francisco",
                            "zip": "94107",
                            "state": "CA",
                            "phone": "2345678901"
                        }
                    ]
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1691654960495,
        "lastModifiedTime": 1691655020215,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unprocessable Entity",
                "description": "This may happen when the body of your request contains errors such as invalid_attribute_value, or the request fails due to an invalid_operation. See the Errors Categories guide for more details.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "error_key": "string",
                            "category": "string",
                            "message": "string",
                            "metadata": {}
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "account_claim_url": "https://app.gusto.com/claim_account/3456789"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110843,
        "executor_type": "THIRDPARTY",
        "executor_name": "getSingleContractorPayment",
        "executor_version": "v1",
        "executor_display_name": "Get a single contractor payment",
        "executor_description": "Returns a single contractor payments",
        "executor_category": "ContractorPayments",
        "executor_category_group": "ContractorPayments",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/companies/{company_id}/contractor_payments/{contractor_payment_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "The UUID of the company"
            },
            {
                "key": "contractor_payment_id",
                "value": "",
                "description": "The UUID of the contractor payment"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691662261788,
        "lastModifiedTime": 1691662261788,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "04552eb9-7829-4b18-ae96-6983552948df",
                    "contractor_uuid": "bc57832c-d8bc-43a7-ae99-3a03380ff037",
                    "bonus": "20.0",
                    "date": "2020-10-19",
                    "hours": "40.0",
                    "payment_method": "Direct Deposit",
                    "reimbursement": "100.0",
                    "status": "Unfunded",
                    "hourly_rate": "18.0",
                    "may_cancel": true,
                    "wage": "0.0",
                    "wage_type": "Hourly",
                    "wage_total": "740.00"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110842,
        "executor_type": "THIRDPARTY",
        "executor_name": "getContractorPaymentsForCompany",
        "executor_version": "v1",
        "executor_display_name": "Get contractor payments for a company",
        "executor_description": "Returns an object containing individual contractor payments, within a given time period, including totals.",
        "executor_category": "ContractorPayments",
        "executor_category_group": "ContractorPayments",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/companies/{company_id}/contractor_payments",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "The UUID of the company"
            }
        ],
        "queryParams": [
            {
                "key": "start_date",
                "value": "",
                "description": "The time period for which to retrieve contractor payments",
                "req": false
            },
            {
                "key": "end_date",
                "value": "",
                "description": "The time period for which to retrieve contractor payments",
                "req": false
            },
            {
                "key": "contractor_uuid",
                "value": "",
                "description": "The UUID of the contractor. When specified, will load all payments for that contractor.",
                "req": false
            },
            {
                "key": "group_by_date",
                "value": "",
                "description": "Display contractor payments results group by check date if set to true.",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "The page that is requested. When unspecified, will load all objects.",
                "req": false
            },
            {
                "key": "per",
                "value": "",
                "description": "Number of objects per page. When unspecified, will default to 25",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691662182251,
        "lastModifiedTime": 1691662182251,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "total": {
                        "reimbursements": "string",
                        "wages": "string"
                    },
                    "contractor_payments": [
                        {
                            "contractor_uuid": 0,
                            "reimbursement_total": "string",
                            "wage_total": "string",
                            "payments": [
                                {
                                    "uuid": "string",
                                    "contractor_uuid": "string",
                                    "bonus": "string",
                                    "date": "string",
                                    "hours": "string",
                                    "payment_method": "Direct Deposit",
                                    "reimbursement": "string",
                                    "status": "Funded",
                                    "hourly_rate": "string",
                                    "may_cancel": true,
                                    "wage": "string",
                                    "wage_type": "Hourly",
                                    "wage_total": "string"
                                }
                            ]
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110830,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaDepartment",
        "executor_version": "v1",
        "executor_display_name": "Delete a department",
        "executor_description": "Delete a department. You cannot delete a department until all employees and contractors have been removed.",
        "executor_category": "Departments",
        "executor_category_group": "Departments",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.gusto-demo.com/v1/departments/{department_uuid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "department_uuid",
                "value": "",
                "description": "The UUID of the department"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691660499731,
        "lastModifiedTime": 1691660499731,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Unprocessable Entity",
                "description": "This may happen when the body of your request contains errors such as invalid_attribute_value, or the request fails due to an invalid_operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "error_key": "string",
                            "category": "string",
                            "message": "string",
                            "metadata": {}
                        }
                    ]
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "No Content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110828,
        "executor_type": "THIRDPARTY",
        "executor_name": "getDepartment",
        "executor_version": "v1",
        "executor_display_name": "Get a department",
        "executor_description": "Get a department given the UUID",
        "executor_category": "Departments",
        "executor_category_group": "Departments",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/departments/{department_uuid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "department_uuid",
                "value": "",
                "description": "The UUID of the department"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691660153845,
        "lastModifiedTime": 1691660153845,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "Department Object Example",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "56260b3d-c375-415c-b77a-75d99f717193",
                    "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e",
                    "title": "Stage Hand",
                    "version": "d90440dd464601d1c8f4e9e240dfb7a6",
                    "employees": [
                        {
                            "uuid": "41199375-a999-4414-9f40-d9bf596b134d"
                        }
                    ],
                    "contractors": [
                        {
                            "uuid": "3488549f-60e4-494f-a34a-9d8aad3aabf5"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110827,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllDepartmentsofCompany",
        "executor_version": "v1",
        "executor_display_name": "Get all departments of a company",
        "executor_description": "Get all of the departments for a given company with the employees and contractors assigned to that department.",
        "executor_category": "Departments",
        "executor_category_group": "Departments",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/companies/{company_uuid}/departments",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_uuid",
                "value": "",
                "description": "The UUID of the company"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691660080105,
        "lastModifiedTime": 1691660080105,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "uuid": "56260b3d-c375-415c-b77a-75d99f717193",
                        "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e",
                        "title": "Stage Hand",
                        "version": "d90440dd464601d1c8f4e9e240dfb7a6",
                        "employees": [
                            {
                                "uuid": "41199375-a999-4414-9f40-d9bf596b134d"
                            }
                        ],
                        "contractors": []
                    },
                    {
                        "uuid": "ec5c8a85-3233-4f39-a9f5-fb1ab7b5f5f3",
                        "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e",
                        "title": "Actors",
                        "version": "34f39a30b45d077cb83aed2df4810d74",
                        "employees": [
                            {
                                "uuid": "7ee4aca1-814b-4034-b0f8-07f93cc679d1"
                            }
                        ],
                        "contractors": []
                    },
                    {
                        "uuid": "1802465d-4f68-4865-920c-1307ab095f12",
                        "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e",
                        "title": "Band",
                        "version": "1fe3076d35ef7c97d0ae68c5f4df0acd",
                        "employees": [
                            {
                                "uuid": "a73955be-c009-44dc-915e-6246e2bdedbb"
                            }
                        ],
                        "contractors": [
                            {
                                "uuid": "3488549f-60e4-494f-a34a-9d8aad3aabf5"
                            }
                        ]
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110829,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateaDepartment",
        "executor_version": "v1",
        "executor_display_name": "Update a department",
        "executor_description": "Update a department",
        "executor_category": "Departments",
        "executor_category_group": "Departments",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.gusto-demo.com/v1/departments/{department_uuid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "department_uuid",
                "value": "",
                "description": "The UUID of the department"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "version": "db0edd04aaac4506f7edab03ac855d56",
                "title": "Backup Dancer"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691660295644,
        "lastModifiedTime": 1691660295644,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "Department Object Example",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "56260b3d-c375-415c-b77a-75d99f717193",
                    "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e",
                    "title": "Stage Hand",
                    "version": "d90440dd464601d1c8f4e9e240dfb7a6",
                    "employees": [
                        {
                            "uuid": "41199375-a999-4414-9f40-d9bf596b134d"
                        }
                    ],
                    "contractors": [
                        {
                            "uuid": "3488549f-60e4-494f-a34a-9d8aad3aabf5"
                        }
                    ]
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Unprocessable Entity",
                "description": "his may happen when the body of your request contains errors such as invalid_attribute_value, or the request fails due to an invalid_operation. ",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110832,
        "executor_type": "THIRDPARTY",
        "executor_name": "removePeopleFromDepartment",
        "executor_version": "v1",
        "executor_display_name": "Remove people from a department",
        "executor_description": "Remove employees and contractors from a department",
        "executor_category": "Departments",
        "executor_category_group": "Departments",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.gusto-demo.com/v1/departments/{department_uuid}/remove",
        "dataroot": null,
        "pathParams": [
            {
                "key": "department_uuid",
                "value": "",
                "description": "The UUID of the department"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "version": "string",
                "employees": [
                    {
                        "uuid": "string"
                    }
                ],
                "contractors": [
                    {
                        "uuid": "string"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691660723770,
        "lastModifiedTime": 1691660723770,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "56260b3d-c375-415c-b77a-75d99f717193",
                    "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e",
                    "title": "Stage Hand",
                    "version": "d90440dd464601d1c8f4e9e240dfb7a6",
                    "employees": [
                        {
                            "uuid": "41199375-a999-4414-9f40-d9bf596b134d"
                        }
                    ],
                    "contractors": [
                        {
                            "uuid": "3488549f-60e4-494f-a34a-9d8aad3aabf5"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110831,
        "executor_type": "THIRDPARTY",
        "executor_name": "addPeopleToDepartment",
        "executor_version": "v1",
        "executor_display_name": "Add people to a department",
        "executor_description": "Add employees and contractors to a department",
        "executor_category": "Departments",
        "executor_category_group": "Departments",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.gusto-demo.com/v1/departments/{department_uuid}/add",
        "dataroot": null,
        "pathParams": [
            {
                "key": "department_uuid",
                "value": "",
                "description": "The UUID of the department"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "version": "string",
                "employees": [
                    {
                        "uuid": "string"
                    }
                ],
                "contractors": [
                    {
                        "uuid": "string"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691660622843,
        "lastModifiedTime": 1691660622843,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "56260b3d-c375-415c-b77a-75d99f717193",
                    "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e",
                    "title": "Stage Hand",
                    "version": "d90440dd464601d1c8f4e9e240dfb7a6",
                    "employees": [
                        {
                            "uuid": "41199375-a999-4414-9f40-d9bf596b134d"
                        }
                    ],
                    "contractors": [
                        {
                            "uuid": "3488549f-60e4-494f-a34a-9d8aad3aabf5"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110826,
        "executor_type": "THIRDPARTY",
        "executor_name": "createDepartment",
        "executor_version": "v1",
        "executor_display_name": "Create a department",
        "executor_description": "Create a department",
        "executor_category": "Departments",
        "executor_category_group": "Departments",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.gusto-demo.com/v1/companies/{company_uuid}/departments",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_uuid",
                "value": "",
                "description": "The UUID of the company"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "title": "Stage Hand"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691659971235,
        "lastModifiedTime": 1691659971236,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "error_key": "string",
                            "category": "string",
                            "message": "string",
                            "metadata": {}
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "56260b3d-c375-415c-b77a-75d99f717193",
                    "company_uuid": "7087a288-8349-4632-b92e-bc94fb79f29e",
                    "title": "Stage Hand",
                    "version": "d90440dd464601d1c8f4e9e240dfb7a6",
                    "employees": [
                        {
                            "uuid": "41199375-a999-4414-9f40-d9bf596b134d"
                        }
                    ],
                    "contractors": [
                        {
                            "uuid": "3488549f-60e4-494f-a34a-9d8aad3aabf5"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110767,
        "executor_type": "THIRDPARTY",
        "executor_name": "updatewebhookSubscription",
        "executor_version": "v1",
        "executor_display_name": "Update a webhook subscription",
        "executor_description": "Updates the Webhook Subscription associated with the provided UUID.",
        "executor_category": "Webhook",
        "executor_category_group": "Webhook",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.gusto-demo.com/v1/webhook_subscriptions/{webhook_subscription_uuid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "webhook_subscription_uuid",
                "value": "",
                "description": "The webhook subscription UUID."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "subscription_types": [
                    "Company",
                    "Employee"
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691654038931,
        "lastModifiedTime": 1691654038931,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4",
                    "url": "https://the-partner-app.com/subscriber",
                    "status": "verified",
                    "subscription_types": [
                        "BankAccount",
                        "Company",
                        "CompanyBenefit",
                        "Contractor",
                        "ContractorPayment",
                        "Employee",
                        "EmployeeBenefit",
                        "EmployeeJobCompensation",
                        "ExternalPayroll",
                        "Form",
                        "Location",
                        "Payroll",
                        "PaySchedule",
                        "Signatory"
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "error_key": "string",
                            "category": "string",
                            "message": "string",
                            "metadata": {}
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110769,
        "executor_type": "THIRDPARTY",
        "executor_name": "getwebhookSubscription",
        "executor_version": "v1",
        "executor_display_name": "Get a webhook subscription",
        "executor_description": "Returns the Webhook Subscription associated with the provided UUID.",
        "executor_category": "Webhook",
        "executor_category_group": "Webhook",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/webhook_subscriptions/{webhook_subscription_uuid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "webhook_subscription_uuid",
                "value": "",
                "description": "The webhook subscription UUID."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691654131403,
        "lastModifiedTime": 1691654131403,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4",
                    "url": "https://the-partner-app.com/subscriber",
                    "status": "verified",
                    "subscription_types": [
                        "BankAccount",
                        "Company",
                        "CompanyBenefit",
                        "Contractor",
                        "ContractorPayment",
                        "Employee",
                        "EmployeeBenefit",
                        "EmployeeJobCompensation",
                        "ExternalPayroll",
                        "Form",
                        "Location",
                        "Payroll",
                        "PaySchedule",
                        "Signatory"
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110773,
        "executor_type": "THIRDPARTY",
        "executor_name": "verifyTheWebhookSubscription",
        "executor_version": "v1",
        "executor_display_name": "Verify the webhook subscription",
        "executor_description": "When a webhook subscription is created, a verification_token is POSTed to the provided webhook subscription URL. This verify endpoint needs to be called with verification_token before notifications will be sent to the subscriber.  Use the /v1/webhook_subscriptions/{webhook_subscription_uuid}/request_verification_token API to resend the verification_token to the Subscriber.  scope: webhook_subscriptions:write",
        "executor_category": "Webhook",
        "executor_category_group": "Webhook",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.gusto-demo.com/v1/webhook_subscriptions/{webhook_subscription_uuid}/verify",
        "dataroot": null,
        "pathParams": [
            {
                "key": "webhook_subscription_uuid",
                "value": "",
                "description": "The webhook subscription UUID."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "verification_token": "asefasedfe23e234easd"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691654357492,
        "lastModifiedTime": 1691654357492,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4",
                    "url": "https://the-partner-app.com/subscriber",
                    "status": "verified",
                    "subscription_types": [
                        "BankAccount",
                        "Company",
                        "CompanyBenefit",
                        "Contractor",
                        "ContractorPayment",
                        "Employee",
                        "EmployeeBenefit",
                        "EmployeeJobCompensation",
                        "ExternalPayroll",
                        "Form",
                        "Location",
                        "Payroll",
                        "PaySchedule",
                        "Signatory"
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110764,
        "executor_type": "THIRDPARTY",
        "executor_name": "listwebhookSubscriptions",
        "executor_version": "v1",
        "executor_display_name": "List webhook subscriptions",
        "executor_description": "Returns all webhook subscriptions associated with the provided Partner API token.",
        "executor_category": "Webhook",
        "executor_category_group": "Webhook",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/webhook_subscriptions",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691653899815,
        "lastModifiedTime": 1691653899815,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "uuid": "dcceb38a-46be-4110-9d1d-1b3384c3b906",
                        "url": "https://6116-2603-6000-8900-3d42-58e7-f1e3-b394-1f21.ngrok.io/subscriber",
                        "status": "pending",
                        "subscription_types": [
                            "BankAccount",
                            "Company",
                            "CompanyBenefit",
                            "Contractor",
                            "ContractorPayment",
                            "Employee",
                            "EmployeeBenefit",
                            "EmployeeJobCompensation",
                            "ExternalPayroll",
                            "Form",
                            "Location",
                            "Payroll",
                            "PaySchedule",
                            "Signatory"
                        ]
                    }
                ]
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110776,
        "executor_type": "THIRDPARTY",
        "executor_name": "requestTheWebhookSubscriptionVerificationToken",
        "executor_version": "v1",
        "executor_display_name": "Request the webhook subscription verification_token",
        "executor_description": "Request that the webhook subscription verification_token be POSTed to the Subscription URL.",
        "executor_category": "Webhook",
        "executor_category_group": "Webhook",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/webhook_subscriptions/{webhook_subscription_uuid}/request_verification_token",
        "dataroot": null,
        "pathParams": [
            {
                "key": "webhook_subscription_uuid",
                "value": "",
                "description": "The webhook subscription UUID."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691654455789,
        "lastModifiedTime": 1691654455789,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110771,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaWebhooksubscription",
        "executor_version": "v1",
        "executor_display_name": "Delete a webhook subscription",
        "executor_description": "Deletes the Webhook Subscription associated with the provided UUID.",
        "executor_category": "Webhook",
        "executor_category_group": "Webhook",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.gusto-demo.com/v1/webhook_subscriptions/{webhook_subscription_uuid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "webhook_subscription_uuid",
                "value": "",
                "description": "The webhook subscription UUID."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691654245583,
        "lastModifiedTime": 1691654245583,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": "The resource was deleted successfully.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110778,
        "executor_type": "THIRDPARTY",
        "executor_name": "getwebhookEvents",
        "executor_version": "v1",
        "executor_display_name": "Get webhook events",
        "executor_description": "Get webhook events based on the partner application's scopes. The response will contain an array of events. Each event will contain the event's details, including its type, resource type, and entity type.  scope: events:read",
        "executor_category": "Webhook",
        "executor_category_group": "Webhook",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/events",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "page",
                "value": "",
                "description": "The page that is requested. When unspecified, will load the first page.",
                "req": false
            },
            {
                "key": "per",
                "value": "",
                "description": "Number of objects per page. When unspecified, will default to 25",
                "req": false
            },
            {
                "key": "starting_after_uuid",
                "value": "",
                "description": "Serves as a cursor, returns all events occuring after specified UUID (exclusive)",
                "req": false
            },
            {
                "key": "event_type",
                "value": "",
                "description": "The name of an event_type to filter for",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691654586225,
        "lastModifiedTime": 1691654586225,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "uuid": "f7397a24-57ad-4fae-b011-d258e8232900",
                        "event_type": "employee.bank_account.created",
                        "resource_type": "Company",
                        "resource_uuid": "92a20431-9489-4bde-ad27-6feb20b969d5",
                        "entity_type": "BankAccount",
                        "entity_uuid": "92a20431-9489-4bde-ad27-6feb20b969d5",
                        "timestamp": 1686784995
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110763,
        "executor_type": "THIRDPARTY",
        "executor_name": "createwebhookSubscription",
        "executor_version": "v1",
        "executor_display_name": "Create a Webhook Subscription",
        "executor_description": "Creates a Webhook Subscription to receive notifications when entities change",
        "executor_category": "Webhook",
        "executor_category_group": "Webhook",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.gusto-demo.com/v1/webhook_subscriptions",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            },
            {
                "key": "Authorization",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "inherit",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "url": "https://partner-app.com/subscriber",
                "subscription_types": [
                    "Company",
                    "Employee"
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691653497180,
        "lastModifiedTime": 1691653497180,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "c5fdae57-5483-4529-9aae-f0edceed92d4",
                    "url": "https://the-partner-app.com/subscriber",
                    "status": "verified",
                    "subscription_types": [
                        "BankAccount",
                        "Company",
                        "CompanyBenefit",
                        "Contractor",
                        "ContractorPayment",
                        "Employee",
                        "EmployeeBenefit",
                        "EmployeeJobCompensation",
                        "ExternalPayroll",
                        "Form",
                        "Location",
                        "Payroll",
                        "PaySchedule",
                        "Signatory"
                    ]
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "error_key": "string",
                            "category": "string",
                            "message": "string",
                            "metadata": {}
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110802,
        "executor_type": "THIRDPARTY",
        "executor_name": "getMinimumWagesForLocation",
        "executor_version": "v1",
        "executor_display_name": "Get minimum wages for a location",
        "executor_description": "Get minimum wages for a location",
        "executor_category": "Locations",
        "executor_category_group": "Locations",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/locations/{location_uuid}/minimum_wages",
        "dataroot": null,
        "pathParams": [
            {
                "key": "location_uuid",
                "value": "",
                "description": "The UUID of the location"
            }
        ],
        "queryParams": [
            {
                "key": "effective_date",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691655952119,
        "lastModifiedTime": 1691655952119,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "uuid": "70c523ff-c71e-4474-9c83-a4ea51bd54a8",
                        "authority": "State",
                        "wage": "13.0",
                        "wage_type": "Regular",
                        "effective_date": "2022-01-01",
                        "notes": "Employers with 6 or more employees"
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110800,
        "executor_type": "THIRDPARTY",
        "executor_name": "updatealocation",
        "executor_version": "v1",
        "executor_display_name": "Update a location",
        "executor_description": "Update a location",
        "executor_category": "Locations",
        "executor_category_group": "Locations",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.gusto-demo.com/v1/locations/{location_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "location_id",
                "value": "",
                "description": "The UUID of the location"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "version": "1928d0c378e519e9c03fb959bc959a6b",
                "phone_number": "8009360383",
                "street_1": "425 2nd Street",
                "street_2": "Suite 602",
                "city": "San Francisco",
                "state": "CA",
                "zip": "94107",
                "country": "USA"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691655776772,
        "lastModifiedTime": 1691655776772,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Unprocessable Entity",
                "description": "This may happen when the body of your request contains errors such as invalid_attribute_value, or the request fails due to an invalid_operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb",
                    "version": "7d9753112507b9dda4fb97910f39b06e",
                    "phone_number": "5825710808",
                    "uuid": "04552eb9-7829-4b18-ae96-6983552948df",
                    "street_1": "412 Kiera Stravenue",
                    "street_2": "Suite 391",
                    "city": "San Francisco",
                    "state": "CA",
                    "zip": "94107",
                    "country": "USA",
                    "active": true,
                    "filing_address": false,
                    "mailing_address": false
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110793,
        "executor_type": "THIRDPARTY",
        "executor_name": "createCompanyLocation",
        "executor_version": "v1",
        "executor_display_name": "Create a company location",
        "executor_description": "Company locations represent all addresses associated with a company. These can be filing addresses, mailing addresses, and/or work locations; one address may serve multiple, or all, purposes.  Since all company locations are subsets of locations, retrieving or updating an individual record should be done via the locations endpoints.",
        "executor_category": "Locations",
        "executor_category_group": "Locations",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.gusto-demo.com/v1/companies/{company_id}/locations",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "The UUID of the company"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "phone_number": "8009360383",
                "street_1": "425 2nd Street",
                "street_2": "Suite 602",
                "city": "San Francisco",
                "state": "CA",
                "zip": "94107",
                "country": "USA"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691655427230,
        "lastModifiedTime": 1691655427230,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb",
                    "version": "7d9753112507b9dda4fb97910f39b06e",
                    "phone_number": "5825710808",
                    "uuid": "04552eb9-7829-4b18-ae96-6983552948df",
                    "street_1": "412 Kiera Stravenue",
                    "street_2": "Suite 391",
                    "city": "San Francisco",
                    "state": "CA",
                    "zip": "94107",
                    "country": "USA",
                    "active": true,
                    "filing_address": false,
                    "mailing_address": false
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unprocessable Entity",
                "description": "This may happen when the body of your request contains errors such as invalid_attribute_value, or the request fails due to an invalid_operation. See the Errors Categories guide for more details.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "error_key": "string",
                            "category": "string",
                            "message": "string",
                            "metadata": {}
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110797,
        "executor_type": "THIRDPARTY",
        "executor_name": "getaLocation",
        "executor_version": "v1",
        "executor_display_name": "Get a location",
        "executor_description": "Get a location",
        "executor_category": "Locations",
        "executor_category_group": "Locations",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/locations/{location_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "location_id",
                "value": "",
                "description": "The UUID of the location"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691655624135,
        "lastModifiedTime": 1691655624135,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb",
                    "version": "7d9753112507b9dda4fb97910f39b06e",
                    "phone_number": "5825710808",
                    "uuid": "04552eb9-7829-4b18-ae96-6983552948df",
                    "street_1": "412 Kiera Stravenue",
                    "street_2": "Suite 391",
                    "city": "San Francisco",
                    "state": "CA",
                    "zip": "94107",
                    "country": "USA",
                    "active": true,
                    "filing_address": false,
                    "mailing_address": false
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110795,
        "executor_type": "THIRDPARTY",
        "executor_name": "getCompanyLocations",
        "executor_version": "v1",
        "executor_display_name": "Get company locations",
        "executor_description": "Company locations represent all addresses associated with a company. These can be filing addresses, mailing addresses, and/or work locations; one address may serve multiple, or all, purposes.  Since all company locations are subsets of locations, retrieving or updating an individual record should be done via the locations endpoints.",
        "executor_category": "Locations",
        "executor_category_group": "Locations",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/companies/{company_id}/locations",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "The UUID of the company"
            }
        ],
        "queryParams": [
            {
                "key": "page",
                "value": "",
                "description": "The page that is requested. When unspecified, will load all objects.",
                "req": false
            },
            {
                "key": "per",
                "value": "",
                "description": "Number of objects per page. When unspecified, will default to 25",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691655549115,
        "lastModifiedTime": 1691655549115,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb",
                        "version": "7d9753112507b9dda4fb97910f39b06e",
                        "phone_number": "5825710808",
                        "uuid": "04552eb9-7829-4b18-ae96-6983552948df",
                        "street_1": "412 Kiera Stravenue",
                        "street_2": "Suite 391",
                        "city": "San Francisco",
                        "state": "CA",
                        "zip": "94107",
                        "country": "USA",
                        "active": true,
                        "filing_address": false,
                        "mailing_address": false
                    },
                    {
                        "company_uuid": "6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb",
                        "version": "15e6b9680e00f3122729e64e3cef3224",
                        "phone_number": "2866070827",
                        "uuid": "fa94a2fd-11a8-4024-87ff-85c587d9d2b4",
                        "street_1": "644 Fay Vista",
                        "street_2": "Suite 842",
                        "city": "Richmond",
                        "state": "VA",
                        "zip": "23218",
                        "country": "USA",
                        "active": true,
                        "filing_address": false,
                        "mailing_address": false
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110961,
        "executor_type": "THIRDPARTY",
        "executor_name": "createGarnishment",
        "executor_version": "v1",
        "executor_display_name": "Create a garnishment",
        "executor_description": "Garnishments, or employee deductions, are fixed amounts or percentages deducted from an employee\u2019s pay. They can be deducted a specific number of times or on a recurring basis. Garnishments can also have maximum deductions on a yearly or per-pay-period bases. Common uses for garnishments are court-ordered payments for child support or back taxes. Some companies provide loans to their employees that are repaid via garnishments.",
        "executor_category": "Garnishments",
        "executor_category_group": "Garnishments",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.gusto-demo.com/v1/employees/{employee_id}/garnishments",
        "dataroot": null,
        "pathParams": [
            {
                "key": "employee_id",
                "value": "",
                "description": "The UUID of the employee"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "active": true,
                "court_ordered": true,
                "times": null,
                "recurring": true,
                "annual_maximum": null,
                "pay_period_maximum": null,
                "deduct_as_percentage": false,
                "amount": "150.00",
                "description": "Back taxes"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691731218666,
        "lastModifiedTime": 1691731218666,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "error_key": "string",
                            "category": "string",
                            "message": "string",
                            "metadata": {}
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "96334c6c-4e01-40ac-ac1c-d2fb02a7e371",
                    "version": "52b7c567242cb7452e89ba2bc02cb476",
                    "employee_uuid": "2d9c45f3-5ab9-4198-90a7-e8bea1ae3ce6",
                    "active": true,
                    "amount": "8.00",
                    "description": "Company loan to employee",
                    "court_ordered": false,
                    "times": 5,
                    "recurring": false,
                    "annual_maximum": null,
                    "pay_period_maximum": "100.00",
                    "deduct_as_percentage": true
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110965,
        "executor_type": "THIRDPARTY",
        "executor_name": "getGarnishment",
        "executor_version": "v1",
        "executor_display_name": "Get a garnishment",
        "executor_description": "Garnishments, or employee deductions, are fixed amounts or percentages deducted from an employee\u2019s pay. They can be deducted a specific number of times or on a recurring basis. Garnishments can also have maximum deductions on a yearly or per-pay-period bases. Common uses for garnishments are court-ordered payments for child support or back taxes. Some companies provide loans to their employees that are repaid via garnishments.",
        "executor_category": "Garnishments",
        "executor_category_group": "Garnishments",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/garnishments/{garnishment_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "garnishment_id",
                "value": "",
                "description": "The UUID of the garnishment"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691731395457,
        "lastModifiedTime": 1691731395457,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "96334c6c-4e01-40ac-ac1c-d2fb02a7e371",
                    "version": "52b7c567242cb7452e89ba2bc02cb476",
                    "employee_uuid": "2d9c45f3-5ab9-4198-90a7-e8bea1ae3ce6",
                    "active": true,
                    "amount": "8.00",
                    "description": "Company loan to employee",
                    "court_ordered": false,
                    "times": 5,
                    "recurring": false,
                    "annual_maximum": null,
                    "pay_period_maximum": "100.00",
                    "deduct_as_percentage": true
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110967,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateGarnishment",
        "executor_version": "v1",
        "executor_display_name": "Update a garnishment",
        "executor_description": "Garnishments, or employee deductions, are fixed amounts or percentages deducted from an employee\u2019s pay. They can be deducted a specific number of times or on a recurring basis. Garnishments can also have maximum deductions on a yearly or per-pay-period bases. Common uses for garnishments are court-ordered payments for child support or back taxes. Some companies provide loans to their employees that are repaid via garnishments.",
        "executor_category": "Garnishments",
        "executor_category_group": "Garnishments",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.gusto-demo.com/v1/garnishments/{garnishment_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "garnishment_id",
                "value": "",
                "description": "The UUID of the garnishment"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "active": false,
                "times": null,
                "recurring": false,
                "annual_maximum": null,
                "pay_period_maximum": null,
                "deduct_as_percentage": false,
                "version": "52b7c567242cb7452e89ba2bc02cb476"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691731504558,
        "lastModifiedTime": 1691731504558,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "96334c6c-4e01-40ac-ac1c-d2fb02a7e371",
                    "version": "52b7c567242cb7452e89ba2bc02cb476",
                    "employee_uuid": "2d9c45f3-5ab9-4198-90a7-e8bea1ae3ce6",
                    "active": true,
                    "amount": "8.00",
                    "description": "Company loan to employee",
                    "court_ordered": false,
                    "times": 5,
                    "recurring": false,
                    "annual_maximum": null,
                    "pay_period_maximum": "100.00",
                    "deduct_as_percentage": true
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "error_key": "string",
                            "category": "string",
                            "message": "string",
                            "metadata": {}
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110963,
        "executor_type": "THIRDPARTY",
        "executor_name": "getGarnishmentsForAnEmployee",
        "executor_version": "v1",
        "executor_display_name": "Get garnishments for an employee",
        "executor_description": "Garnishments, or employee deductions, are fixed amounts or percentages deducted from an employee\u2019s pay. They can be deducted a specific number of times or on a recurring basis. Garnishments can also have maximum deductions on a yearly or per-pay-period bases. Common uses for garnishments are court-ordered payments for child support or back taxes. Some companies provide loans to their employees that are repaid via garnishments.",
        "executor_category": "Garnishments",
        "executor_category_group": "Garnishments",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/employees/{employee_id}/garnishments",
        "dataroot": null,
        "pathParams": [
            {
                "key": "employee_id",
                "value": "",
                "description": "The UUID of the employee"
            }
        ],
        "queryParams": [
            {
                "key": "page",
                "value": "",
                "description": "The page that is requested. When unspecified, will load all objects.",
                "req": false
            },
            {
                "key": "per",
                "value": "",
                "description": "Number of objects per page. When unspecified, will default to 25",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691731331038,
        "lastModifiedTime": 1691731331038,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not Found",
                "description": "The requested resource does not exist. Make sure the provided ID/UUID is valid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "uuid": "4c7841a2-1363-497e-bc0f-664703c7484f",
                        "version": "63152767c822d6b0385509b973c49dda",
                        "employee_uuid": "a6b53294-f871-4db2-bbd4-8c3d1fe56440",
                        "active": true,
                        "amount": "100.00",
                        "description": "Child support",
                        "court_ordered": true,
                        "times": null,
                        "recurring": true,
                        "annual_maximum": "400.00",
                        "pay_period_maximum": null,
                        "deduct_as_percentage": false
                    },
                    {
                        "uuid": "96334c6c-4e01-40ac-ac1c-d2fb02a7e371",
                        "version": "52b7c567242cb7452e89ba2bc02cb476",
                        "employee_uuid": "2d9c45f3-5ab9-4198-90a7-e8bea1ae3ce6",
                        "active": true,
                        "amount": "8.00",
                        "description": "Company loan to employee",
                        "court_ordered": false,
                        "times": 5,
                        "recurring": false,
                        "annual_maximum": null,
                        "pay_period_maximum": "100.00",
                        "deduct_as_percentage": true
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110810,
        "executor_type": "THIRDPARTY",
        "executor_name": "getPayScheduleAssignmentsForCompany",
        "executor_version": "v1",
        "executor_display_name": "Get pay schedule assignments for a company",
        "executor_description": "This endpoint returns the current pay schedule assignment for a company, with pay schedule and employee/department mappings depending on the pay schedule type.",
        "executor_category": "PaySchedules",
        "executor_category_group": "PaySchedules",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/companies/{company_id}/pay_schedules/assignments",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "The UUID of the company"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691656431607,
        "lastModifiedTime": 1691656431607,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "by_employee",
                    "employees": {
                        "employee_uuid": "f0238368-f2cf-43e2-9a07-b0265f2cec69",
                        "pay_schedule_uuid": "c277ac52-9871-4a96-a1e6-0c449684602a"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110808,
        "executor_type": "THIRDPARTY",
        "executor_name": "getPayPeriodsForCompany",
        "executor_version": "v1",
        "executor_display_name": "Get pay periods for a company",
        "executor_description": "Pay periods are the foundation of payroll. Compensation, time & attendance, taxes, and expense reports all rely on when they happened. To begin submitting information for a given payroll, we need to agree on the time period.  By default, this endpoint returns pay periods starting from 6 months ago to the date today. Use the start_date and end_date parameters to change the scope of the response. End dates can be up to 3 months in the future and there is no limit on start dates.  Starting in version '2023-04-01', the eligible_employees attribute was removed from the response. The eligible employees for a payroll are determined by the employee_compensations returned from the payrolls#prepare endpoint.",
        "executor_category": "PaySchedules",
        "executor_category_group": "PaySchedules",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/companies/{company_id}/pay_periods",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "The UUID of the company"
            }
        ],
        "queryParams": [
            {
                "key": "start_date",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "end_date",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "payroll_types",
                "value": "",
                "description": "regular and/or transition. Multiple options are comma separated. The default is regular pay periods if nothing is passed in.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691656355129,
        "lastModifiedTime": 1691656355129,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "start_date": "2020-01-11",
                        "end_date": "2020-01-24",
                        "pay_schedule_uuid": "00ebc4a4-ec88-4435-8f45-c505bb63e501",
                        "payroll": {
                            "payroll_uuid": "bfd8aad4-9c3f-4ca3-b072-a1b2b3ea689f",
                            "check_date": "2020-01-30",
                            "processed": true,
                            "payroll_deadline": "2020-01-28",
                            "payroll_type": "regular"
                        }
                    },
                    {
                        "start_date": "2020-12-12",
                        "end_date": "2020-12-25",
                        "pay_schedule_uuid": "cb53db72-612f-4eb1-9b85-389e79cfa510",
                        "payroll": {
                            "payroll_uuid": "7ed29b45-4bb1-4d38-bd94-4d607d49fd21",
                            "check_date": "2020-12-30",
                            "processed": true,
                            "payroll_deadline": "2020-12-28",
                            "payroll_type": "regular"
                        }
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110806,
        "executor_type": "THIRDPARTY",
        "executor_name": "getPaySchedule",
        "executor_version": "v1",
        "executor_display_name": "Get a pay schedule",
        "executor_description": "The pay schedule object in Gusto captures the details of when employees work and when they should be paid. A company can have multiple pay schedules.",
        "executor_category": "PaySchedules",
        "executor_category_group": "PaySchedules",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/companies/{company_id}/pay_schedules/{pay_schedule_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "The UUID of the company"
            },
            {
                "key": "pay_schedule_id",
                "value": "",
                "description": "The UUID of the pay schedule"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691656213598,
        "lastModifiedTime": 1691656213598,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "f2a69c38-e2f9-4e31-b5c5-4754fc60a052",
                    "frequency": "Twice per month",
                    "anchor_pay_date": "2020-05-15",
                    "anchor_end_of_pay_period": "2020-05-08",
                    "day_1": 15,
                    "day_2": 31,
                    "name": "Engineering",
                    "custom_name": "A new monthly pay schedule",
                    "auto_pilot": false,
                    "active": true
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110805,
        "executor_type": "THIRDPARTY",
        "executor_name": "getThePaySchedulesForCompany",
        "executor_version": "v1",
        "executor_display_name": "Get the pay schedules for a company",
        "executor_description": "The pay schedule object in Gusto captures the details of when employees work and when they should be paid. A company can have multiple pay schedules.",
        "executor_category": "PaySchedules",
        "executor_category_group": "PaySchedules",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/companies/{company_id}/pay_schedules",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "The UUID of the company"
            }
        ],
        "queryParams": [
            {
                "key": "page",
                "value": "",
                "description": "The page that is requested. When unspecified, will load all objects.",
                "req": false
            },
            {
                "key": "per",
                "value": "",
                "description": "Number of objects per page. When unspecified, will default to 25",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691656138127,
        "lastModifiedTime": 1691656138127,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "uuid": "2097fe08-407a-46d7-b35c-a32402a2355e",
                        "frequency": "Twice per month",
                        "anchor_pay_date": "2020-05-15",
                        "anchor_end_of_pay_period": "2020-05-08",
                        "day_1": 15,
                        "day_2": 31,
                        "name": "Engineering",
                        "custom_name": "Engineering department pay schedule",
                        "auto_pilot": false,
                        "active": true
                    },
                    {
                        "uuid": "8fc9f556-74fa-4271-97f6-4bfbfc5a5352",
                        "frequency": "Monthly",
                        "anchor_pay_date": "2020-05-31",
                        "day_1": 31,
                        "day_2": null,
                        "name": "Sales",
                        "custom_name": "Sales department monthly schedule",
                        "auto_pilot": false,
                        "active": false
                    },
                    {
                        "uuid": "0e07d35a-af11-4123-bfcb-4dd5f2f12ee1",
                        "frequency": "Monthly",
                        "anchor_pay_date": "2020-05-31",
                        "day_1": 31,
                        "day_2": null,
                        "name": "Staff",
                        "custom_name": "Staff department pay schedule",
                        "auto_pilot": true,
                        "active": false
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110760,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTheCurrentUser",
        "executor_version": "v1",
        "executor_display_name": "Get the current user",
        "executor_description": "Returns information pertaining to the user associated with the provided access token. The company_admin:read scope is required to return email. The companies:read scope is required to return tier and work locations. The employees:read scope is required to return non-work locations.",
        "executor_category": "User",
        "executor_category_group": "User",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gusto-demo.com/v1/me",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691653193778,
        "lastModifiedTime": 1691653193778,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "uuid": "2107f55f-8b07-4e97-8596-8dfbe9420ef7",
                    "email": "hayden_schuppe@bernhard.name",
                    "roles": {
                        "payroll_admin": {
                            "companies": [
                                {
                                    "uuid": "bffd4a21-7835-41a2-b41a-d691fbf12944",
                                    "name": "Volkman LLC",
                                    "trade_name": "Gibson LLC",
                                    "tier": "concierge",
                                    "is_partner_managed": false,
                                    "locations": [
                                        {
                                            "street_1": "3121 Milky Way",
                                            "street_2": "",
                                            "city": "San Francisco",
                                            "state": "CA",
                                            "zip": "94107",
                                            "country": "USA",
                                            "active": true
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 110780,
        "executor_type": "THIRDPARTY",
        "executor_name": "calculateAccruingTimeOffHours",
        "executor_version": "v1",
        "executor_display_name": "Calculate accruing time off hours",
        "executor_description": "Returns a list of accruing time off for each time off policy associated with the employee.  Factors affecting the accrued hours:  the time off policy accrual method (whether they get pay per hour worked, per hour paid, with / without overtime, accumulate time off based on pay period / calendar year / anniversary) how many hours of work during this pay period how many hours of PTO / sick hours taken during this pay period (for per hour paid policies only) company pay schedule frequency (for per pay period)",
        "executor_category": "TimeOffPolicies",
        "executor_category_group": "TimeOffPolicies",
        "service_provider": "gusto",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.gusto-demo.com/v1/payrolls/{payroll_id}/employees/{employee_id}/calculate_accruing_time_off_hours",
        "dataroot": null,
        "pathParams": [
            {
                "key": "payroll_id",
                "value": "",
                "description": "The UUID of the payroll"
            },
            {
                "key": "employee_id",
                "value": "",
                "description": "The UUID of the employee"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "X-Gusto-API-Version",
                "value": "",
                "description": "Determines the date-based API version associated with your API call. If none is provided, your application's minimum API version is used.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "regular_hours_worked": 30.25,
                "overtime_hours_worked": 10,
                "double_overtime_hours_worked": 0,
                "pto_hours_used": 5.5,
                "sick_hours_used": 0
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1691654777211,
        "lastModifiedTime": 1691654777211,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "time_off_policy_uuid": "c3a15554-f124-415d-b2c4-90b430fd8eb1",
                        "hours": "3.2"
                    },
                    {
                        "time_off_policy_uuid": "386fc48d-52d2-4009-87b3-368f74f6b3df",
                        "hours": "6.0"
                    }
                ]
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "error_key": "string",
                            "category": "string",
                            "message": "string",
                            "metadata": {}
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    }
]