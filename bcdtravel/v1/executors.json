[
    {
        "id": 66627,
        "executor_type": "THIRDPARTY",
        "executor_name": "book",
        "executor_version": "v1",
        "executor_display_name": "book",
        "executor_description": "Books a hotel room/rate.",
        "executor_category": "Hotels",
        "executor_category_group": "Hotels",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.gemini.com/v1/book/{symbol}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "symbol",
                "value": "btcusd",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1644402314537,
        "lastModifiedTime": 1685604272609,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Date",
                        "value": "Wed, 09 Feb 2022 10:24:11 GMT"
                    },
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "name": "Content-Length",
                        "value": "6504"
                    },
                    {
                        "name": "Connection",
                        "value": "keep-alive"
                    },
                    {
                        "name": "Server",
                        "value": "nginx"
                    },
                    {
                        "name": "Vary",
                        "value": "Origin"
                    }
                ],
                "cookies": null,
                "responseAttributes": [
                    {
                        "attributeName": "bids",
                        "displayName": null,
                        "description": null,
                        "type": "Object",
                        "size": 0,
                        "precision": 0,
                        "autoIncrement": false,
                        "defaultValue": null,
                        "subType": [
                            {
                                "attributeName": "price",
                                "displayName": null,
                                "description": null,
                                "type": "String",
                                "size": 0,
                                "precision": 0,
                                "autoIncrement": false,
                                "defaultValue": null,
                                "subType": [],
                                "attributeType": null,
                                "required": false,
                                "dataStoragePolicy": null,
                                "apiAccessPolicy": null,
                                "displayPolicy": null,
                                "array": false,
                                "customType": false,
                                "updateOption": null,
                                "previousAttributeName": null
                            },
                            {
                                "attributeName": "amount",
                                "displayName": null,
                                "description": null,
                                "type": "String",
                                "size": 0,
                                "precision": 0,
                                "autoIncrement": false,
                                "defaultValue": null,
                                "subType": [],
                                "attributeType": null,
                                "required": false,
                                "dataStoragePolicy": null,
                                "apiAccessPolicy": null,
                                "displayPolicy": null,
                                "array": false,
                                "customType": false,
                                "updateOption": null,
                                "previousAttributeName": null
                            },
                            {
                                "attributeName": "timestamp",
                                "displayName": null,
                                "description": null,
                                "type": "String",
                                "size": 0,
                                "precision": 0,
                                "autoIncrement": false,
                                "defaultValue": null,
                                "subType": [],
                                "attributeType": null,
                                "required": false,
                                "dataStoragePolicy": null,
                                "apiAccessPolicy": null,
                                "displayPolicy": null,
                                "array": false,
                                "customType": false,
                                "updateOption": null,
                                "previousAttributeName": null
                            }
                        ],
                        "attributeType": null,
                        "required": false,
                        "dataStoragePolicy": null,
                        "apiAccessPolicy": null,
                        "displayPolicy": null,
                        "array": true,
                        "customType": false,
                        "updateOption": null,
                        "previousAttributeName": null,
                        "compliances": null
                    },
                    {
                        "attributeName": "asks",
                        "displayName": null,
                        "description": null,
                        "type": "Object",
                        "size": 0,
                        "precision": 0,
                        "autoIncrement": false,
                        "defaultValue": null,
                        "subType": [
                            {
                                "attributeName": "price",
                                "displayName": null,
                                "description": null,
                                "type": "String",
                                "size": 0,
                                "precision": 0,
                                "autoIncrement": false,
                                "defaultValue": null,
                                "subType": [],
                                "attributeType": null,
                                "required": false,
                                "dataStoragePolicy": null,
                                "apiAccessPolicy": null,
                                "displayPolicy": null,
                                "array": false,
                                "customType": false,
                                "updateOption": null,
                                "previousAttributeName": null
                            },
                            {
                                "attributeName": "amount",
                                "displayName": null,
                                "description": null,
                                "type": "String",
                                "size": 0,
                                "precision": 0,
                                "autoIncrement": false,
                                "defaultValue": null,
                                "subType": [],
                                "attributeType": null,
                                "required": false,
                                "dataStoragePolicy": null,
                                "apiAccessPolicy": null,
                                "displayPolicy": null,
                                "array": false,
                                "customType": false,
                                "updateOption": null,
                                "previousAttributeName": null
                            },
                            {
                                "attributeName": "timestamp",
                                "displayName": null,
                                "description": null,
                                "type": "String",
                                "size": 0,
                                "precision": 0,
                                "autoIncrement": false,
                                "defaultValue": null,
                                "subType": [],
                                "attributeType": null,
                                "required": false,
                                "dataStoragePolicy": null,
                                "apiAccessPolicy": null,
                                "displayPolicy": null,
                                "array": false,
                                "customType": false,
                                "updateOption": null,
                                "previousAttributeName": null
                            }
                        ],
                        "attributeType": null,
                        "required": false,
                        "dataStoragePolicy": null,
                        "apiAccessPolicy": null,
                        "displayPolicy": null,
                        "array": true,
                        "customType": false,
                        "updateOption": null,
                        "previousAttributeName": null,
                        "compliances": null
                    }
                ],
                "sampleData": {
                    "booking_uid": "hh3KIyTh3VG1rGUV28Azl157",
                    "cancellation_status": "in-progress",
                    "customer_ip": "192.165.34.56",
                    "errors": [],
                    "locale": "en_US",
                    "session_id": "12334556723",
                    "user_agent": "MOBILEAPP"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95581,
        "executor_type": "THIRDPARTY",
        "executor_name": "getratedetails",
        "executor_version": "v1",
        "executor_display_name": "get_rate_details v2",
        "executor_description": "Retrieves additional details on a hotel room/rate.",
        "executor_category": "Hotels",
        "executor_category_group": "Hotels",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-d42b36950c-tshapiv20.apiary-mock.com/hotels/get_rate_details/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "api_key",
                "value": "",
                "description": "Public key, provided by BCD Travel API team Example: testkey.",
                "req": false
            },
            {
                "key": "checkin",
                "value": "",
                "description": "Date of the hotel check-in. Expected format is \"YYYY-MM-DD\". If provided, hotel preference (BCD and client preferred flags and tier) will be returned as it would exist on the date of checkin (recommended for implementations). If not provided, hotel preference (BCD and client preferred flags and tier) will be returned as it exists on the date of the search (less accurate, not recommended for implementations). Example: 2018-10-28.",
                "req": false
            },
            {
                "key": "checkout",
                "value": "",
                "description": " Date of the hotel check-out. Expected format is YYYY-MM-DD. Required, unless search_id is passed in the request. Example: 2018-10-29.",
                "req": false
            },
            {
                "key": "configuration_id",
                "value": "",
                "description": " In order for us to return data in compliance with settings defined for each client configuration, we need to identify the client configuration for this request. This parameter represents Internal Configuration ID as returned in get_configurations. Example: 3500000023.",
                "req": false
            },
            {
                "key": "currency",
                "value": "",
                "description": " ISO 4217 formatted code of a currency that should be used to produce prices in (e.g. EUR ). When omitted (or passed as \u201c___\u201d), will return prices in local currencies for each hotel. We support most of the commonly used currencies (see https://openexchangerates.org/currencies for the full list). Required, unless search_id is passed in the request. Example: EUR.Show Possible Values",
                "req": false
            },
            {
                "key": "customer_ip",
                "value": "",
                "description": " IP address of a user, as captured by the customer\u2019s integration. Ensure your integration passes the user\u2019s IP, not your own. This value helps determine user's location for fraud recovery and other analytics. Example: 192.168.31.116.",
                "req": false
            },
            {
                "key": "date_format_type",
                "value": "",
                "description": " Accepts two-letter language code (one of: de , fr , en , es , it, ko, ja or pt ). If passed, system will return dates (i.e. those in cancellation policy) in the format corresponding to passed language. If not, it will be returned based on the locale. Example: en.",
                "req": false
            },
            {
                "key": "entity_id",
                "value": "",
                "description": " This field is deprecated and will be removed in future versions. Use configuration_id instead. Entity_id is required if configuration_id is not passed. In order for us to return data in compliance with settings defined for each client company, we need to identify the client company for this request. This parameter represents Internal Company ID as shown in Admin Panel. Example: 23",
                "req": false
            },
            {
                "key": "guest_count",
                "value": "",
                "description": "Number of guests in the room (e.g. guest_count=3 means that the room is for three people). Required, unless search_id is passed in the request. Minimum is 1. Maximum is 4. Example: 1.",
                "req": false
            },
            {
                "key": "hotel_id",
                "value": "",
                "description": " Single hotel ID (e.g. 123456 ) as returned by previous methods or cached by the application. Required, unless search_id is passed in the request. Example: 590109.",
                "req": false
            },
            {
                "key": "locale",
                "value": "",
                "description": " Forces system to return data in other languages if available. Defaults to en_US if not passed. Example: en_US.",
                "req": false
            },
            {
                "key": "nonce",
                "value": "",
                "description": " A randomly generated string of your choice. Ensure it is unique to each request with same timestamp within 5 minute interval and no more than 32 characters long. Maximum value length is 32. Example: 1543353502645.",
                "req": false
            },
            {
                "key": "rate_key",
                "value": "",
                "description": "Pass the url encoded rate_key of the rate you would like to get details for (as returned by the get_rates api call). Example: eJwzNLKyMjMwMrQA0hDgbmWVUVRsZeURFuzo7%2BjmY2UV5OhsZWXqlV3m7G%2FpW5hu5OOi7%2B5fEVYZEp5uawuU9veA6HQKAiq2MLHQM4CZFVySmJeSWJSi4FiQWFSSm5pXolCeWZKhYKiQkl%2BalJOqkJSaogBUAhQozsxLhwgAAMz3K5M%3D.",
                "req": false
            },
            {
                "key": "session_id",
                "value": "",
                "description": "Customer generated identifier of user's session. Do not use real user's session id as it will be replayed back in the API response. Reuse this identifier for all requests by the same user. Including this value makes subsequent troubleshooting and audit easier, as it explicitly links together requests for individual users. <,>,& characters are not allowed. Example: 71IxqHT8mgMe5ohsZ25e5P.",
                "req": false
            },
            {
                "key": "system",
                "value": "",
                "description": "Certain things may be configured and subsequently returned very differently based on the booking channel. This attribute tells the system which one of the currently supported channels the data is being requested for. Please inquire which booking channel your integration should use for all requests when you obtain your API key. Example: obt.Show Possible Values",
                "req": false
            },
            {
                "key": "timestamp",
                "value": "",
                "description": "Valid current UNIX timestamp in seconds. Example: 1388774110.",
                "req": false
            },
            {
                "key": "user_agent",
                "value": "",
                "description": "Properly encoded customer\u2019s user agent string (required to obtain mobile rates from some providers). For traffic from mobile or desktop apps (as opposed to browser apps), use the following format: {App Name}/{App Version} ({OS} {OS Version}) [APP or MOBILE_APP] (e.g. TripSource/5.0 (iOS 10_10_3) MOBILE_APP). Note: Required to get discounted mobile rates Example: Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685534222484,
        "lastModifiedTime": 1685598705904,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "check_in_instructions": "<p><b>Special Check-in instructions></b>Contact details can be found on the booking confirmation. For more details, please contact the office using the information on the reservation confirmation received after booking.</p><p><b>Know Before You Go</b> <br /><ul>  <li>Reservations are required for massage services and spa treatments. Reservations can be made by contacting the hotel prior to arrival, using the contact information on the booking confirmation. </li> <li>One child 12 years old or younger stays free when occupying the parent or guardian's room, using existing bedding. </li><li>Only registered guests are allowed in the guestrooms. </li> <li>Some facilities may have restricted access. Guests can contact the property for details using the contact information on the booking confirmation. </li> </ul></p><p><b>Fees</b> <br /><p>The following fees and deposits are charged by the property at time of service, check-in, or check-out. </p> <ul> <li>Fee for buffet breakfast: AED 88 per person (approximately)</li>                <li>Rollaway bed fee: AED 110 per night</li>  </ul> <p>The above list may not be comprehensive. Fees and deposits may not include tax and are subject to change. </p></p>",
                    "customer_ip": null,
                    "errors": [],
                    "hotel_name": "Adagio SP Berrini",
                    "iata_code": "SAO",
                    "locale": "en_US",
                    "rates": [
                        {
                            "additional_rate_information": "Bed & breakfast: per person per night inclusive",
                            "average": 114.12,
                            "average_after_taxes_usd": 119.82,
                            "average_before_taxes_usd": 114.12,
                            "bed_types": [
                                "double",
                                "single"
                            ],
                            "billing_address_required": false,
                            "cancel_by": "2019-02-13T17:00:00",
                            "cancellation_policy": "Cancel before 02/13/2019 05:00 PM local hotel time to avoid 2 night(s) charge.",
                            "cancellation_policy_known": true,
                            "chain_code": null,
                            "chain_name": null,
                            "change_during_stay": false,
                            "checkin_time": "15:00:00",
                            "checkout_time": "12:00:00",
                            "client_preferred": false,
                            "commission": {
                                "commission_repr": "4.00% agent's commission",
                                "commissionable": true
                            },
                            "currency": "USD",
                            "cvv_required": false,
                            "important_info": null,
                            "is_bcd_great_rate": false,
                            "is_mobile": false,
                            "is_on_request": false,
                            "is_package_rate": false,
                            "local_average": 429.61,
                            "local_currency": "BRL",
                            "local_taxes": 42.96,
                            "local_total": 902.18,
                            "loyalty_card_allowed": false,
                            "loyalty_programs": [],
                            "members_only": false,
                            "merchant_of_record": "property",
                            "non_refundable": false,
                            "original_average": 424,
                            "original_currency": "BRL",
                            "original_taxes": 42.4,
                            "original_total": 890.4,
                            "out_of_policy": false,
                            "out_of_policy_reasons": [],
                            "paid_policy": "G",
                            "payment_cards_accepted": [
                                {
                                    "code": "AX",
                                    "mandatory_checkout_text": null
                                },
                                {
                                    "code": "CA",
                                    "mandatory_checkout_text": null
                                },
                                {
                                    "code": "DC",
                                    "mandatory_checkout_text": null
                                },
                                {
                                    "code": "VI",
                                    "mandatory_checkout_text": null
                                }
                            ],
                            "payment_details": null,
                            "payment_options": [
                                "card",
                                "vpa_guarantee"
                            ],
                            "per_night": [
                                {
                                    "date": "2019-02-13",
                                    "local_rate": 451.09,
                                    "original_rate": 445.2,
                                    "rate": 119.83
                                },
                                {
                                    "date": "2019-02-14",
                                    "local_rate": 451.09,
                                    "original_rate": 445.2,
                                    "rate": 119.83
                                }
                            ],
                            "provider": "hrs",
                            "provider_id": "HVSAOAFL",
                            "rate_code": "RAC",
                            "rate_company_name": null,
                            "rate_description": "Standard Apartment with 1 double bed and 1 single bed",
                            "rate_key": "eJwzNLKyMjMwMrQA0hDgbmWVUVRsZeURFuzo7+jmY2UV5OhsZWXqlV3m7G/pW5hu5OOi7+5fEVYZEp5uawuU9veA6HQKAiq2MLHQM4CZFVySmJeSWJSi4FiQWFSSm5pXolCeWZKhYKiQkl+alJOqkJSaogBUAhQozsxLhwgAAMz3K5M=",
                            "rate_promoline": "Standard room",
                            "rate_value_adds": [
                                "FBFST"
                            ],
                            "remaining_rooms_number": null,
                            "room_description": "<p><strong>1 Double Bed and 1 Twin Bed</strong></p><p>581-sq-foot (54-sq-meter) room with a balcony</p><br/><p><b>Layout</b> - Separate living room</p><p><b>Internet</b> - Free WiFi </p><p><b>Entertainment</b> - 32-inch LCD TV with cable channels</p><p><b>Food & Drink</b> - Kitchen with refrigerator, stovetop, microwave, and cookware/dishware</p><p><b>Sleep</b> - Blackout drapes/curtains </p><p><b>Bathroom</b> - Private bathroom, shower, and rainfall showerhead</p><p><b>Practical</b> - Safe, iron/ironing board, and phone</p><p><b>Comfort</b> - Air conditioning</p><p><b>Need to Know</b> - Limited housekeeping</p><p>Non-Smoking</p>&nbsp;",
                            "room_type_code": "ROH",
                            "special_requests": {
                                "sr_allowed": false,
                                "sr_length": 0
                            },
                            "tax_details": [
                                "5.00% VAT/GST tax Per room per night; inclusive"
                            ],
                            "tax_mark": "TI",
                            "taxes": 11.41,
                            "tmc_preferred": false,
                            "total": 239.65
                        }
                    ],
                    "session_id": "3UUlrkvq2gvuQEQqj8EUYy",
                    "user_agent": "MOBAPICLIENTv1"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95573,
        "executor_type": "THIRDPARTY",
        "executor_name": "getavailability",
        "executor_version": "v1",
        "executor_display_name": "get_availability v2",
        "executor_description": "Retrieves the hotel room/rate and availability for one or more hotels.",
        "executor_category": "Hotels",
        "executor_category_group": "Hotels",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-d42b36950c-tshapiv20.apiary-mock.com/hotels/get_availability/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "api_key",
                "value": "",
                "description": " Public key, provided by BCD Travel API team Example: testkey.",
                "req": false
            },
            {
                "key": "checkin",
                "value": "",
                "description": "Date of the hotel check-in. Expected format is \"YYYY-MM-DD\". If provided, hotel preference (BCD and client preferred flags and tier) will be returned as it would exist on the date of checkin (recommended for implementations). If not provided, hotel preference (BCD and client preferred flags and tier) will be returned as it exists on the date of the search (less accurate, not recommended for implementations). Example: 2018-10-28.",
                "req": false
            },
            {
                "key": "checkout",
                "value": "",
                "description": "Date of the hotel check-out. Expected format is YYYY-MM-DD. Required, unless search_id is passed in the request. Example: 2018-10-29.",
                "req": false
            },
            {
                "key": "configuration_id",
                "value": "",
                "description": " In order for us to return data in compliance with settings defined for each client configuration, we need to identify the client configuration for this request. This parameter represents Internal Configuration ID as returned in get_configurations. Example: 3500000023.",
                "req": false
            },
            {
                "key": "currency",
                "value": "",
                "description": " ISO 4217 formatted code of a currency that should be used to produce prices in (e.g. EUR ). When omitted (or passed as \u201c___\u201d), will return prices in local currencies for each hotel. We support most of the commonly used currencies (see https://openexchangerates.org/currencies for the full list). Required, unless search_id is passed in the request. Example: EUR.",
                "req": false
            },
            {
                "key": "customer_ip",
                "value": "",
                "description": " IP address of a user, as captured by the customer\u2019s integration. Ensure your integration passes the user\u2019s IP, not your own. This value helps determine user's location for fraud recovery and other analytics. Example: 192.168.31.116.",
                "req": false
            },
            {
                "key": "dont_wait_for_results",
                "value": "",
                "description": "Accepts true/false (default is false). As an alternative to specifying a short timeout (see above), this optional boolean request parameter forces the system to return search_id as soon as system generates it (without waiting for any results). It can then be used to periodically poll for results using search_id. If search_id is passed in the request, do not pass this parameter. Example: false. Default: false.",
                "req": false
            },
            {
                "key": "entity_id",
                "value": "",
                "description": " This field is deprecated and will be removed in future versions. Use configuration_id instead. Entity_id is required if configuration_id is not passed. In order for us to return data in compliance with settings defined for each client company, we need to identify the client company for this request. This parameter represents Internal Company ID as shown in Admin Panel. Example: 23.",
                "req": false
            },
            {
                "key": "guest_count",
                "value": "",
                "description": "Number of guests in the room (e.g. guest_count=3 means that the room is for three people). Required, unless search_id is passed in the request. Minimum is 1. Maximum is 4. Example: 1.",
                "req": false
            },
            {
                "key": "hotels",
                "value": "",
                "description": " A list of hotel IDs (e.g. 123432,123433 ) or a single hotel ID as returned by calling the previous get_list method or cached by the client. Suggested maximum number of IDs in one request is 100. If some hotel IDs in the request are not known to our system, API will return availability for all the known hotels as well as an \u201cIncorrect hotels\u201d warning in the response. Required, unless search_id is passed in the request. Example: 590109,590111,590118",
                "req": false
            },
            {
                "key": "is_multi_traveler_mode",
                "value": "",
                "description": " For internal use. Obsolete. Ignored. Example: false. Default: false.",
                "req": false
            },
            {
                "key": "locale",
                "value": "",
                "description": " Forces system to return data in other languages if available. Defaults to en_US if not passed. Example: en_US.",
                "req": false
            },
            {
                "key": "loyalty_program_codes",
                "value": "",
                "description": " Accepts comma-separated list of GDS-rate codes from the list returned by get_company_settings API call within hotel_loyalty_programs structure. If passed, results will include member-only rates (rates that require participation in a special Hotel Loyalty Program) in search results, if available. Example: Y48,YR9.",
                "req": false
            },
            {
                "key": "nonce",
                "value": "",
                "description": "A randomly generated string of your choice. Ensure it is unique to each request with same timestamp within 5 minute interval and no more than 32 characters long. Maximum value length is 32. Example: 1543353502645.",
                "req": false
            },
            {
                "key": "only_available_hotels",
                "value": "",
                "description": "Boolean flag that determines whether the query should only return available hotels (only_available_hotels=true) or all hotels (only_available_hotels=false). Example: false. Default: false.",
                "req": false
            },
            {
                "key": "return_postpaid_only",
                "value": "",
                "description": " Accepts true or false. If not passed, system defaults to false and returns availability based on all types of rates. If passed as \u201ctrue\u201d, system will filter out all the rates that require deposit and all the rates where payment policy could not be determined during availability call to provider and return availability/minimum price based on postpaid rates only. This may potentially result in no availability at all depending on the company configuration. Example: false. Default: false.",
                "req": false
            },
            {
                "key": "search_id",
                "value": "",
                "description": "Among other things, each response will contain a search_id that can be used to receive updated results for a previous submitted availability search. This works in conjunction with specifying the timeout value to instantly receive current state of results for the previously submitted search back. Each response will also contain a flag that indicates whether our system expects any updates to the requested data set or not that can be used as an indicator for when to stop asking for updates. If omitted, implies a new search. Please note that you must send only_available_hotels=true flag along with the search_id to get only available results back even if the original search was already asking only_available_hotels=true. Example: 7tdVikde8zhk2RRKpqYK82",
                "req": false
            },
            {
                "key": "session_id",
                "value": "",
                "description": "Customer generated identifier of user's session. Do not use real user's session id as it will be replayed back in the API response. Reuse this identifier for all requests by the same user. Including this value makes subsequent troubleshooting and audit easier, as it explicitly links together requests for individual users. <,>,& characters are not allowed. Example: 71IxqHT8mgMe5ohsZ25e5P.",
                "req": false
            },
            {
                "key": "system",
                "value": "",
                "description": "Certain things may be configured and subsequently returned very differently based on the booking channel. This attribute tells the system which one of the currently supported channels the data is being requested for. Please inquire which booking channel your integration should use for all requests when you obtain your API key. Example: obt.",
                "req": false
            },
            {
                "key": "timeout",
                "value": "",
                "description": "Our system generates numerous parallel requests to various data providers to get the requested data back. This parameter determines how long the system should wait before returning the results (some providers may return the data fast, others may take a while). Value should be specified in seconds (e.g. 10). Minimum timeout that the system can handle is 5 seconds. Depending on the system load, it may actually take longer than the specified value to return. Optional, if omitted would wait until it gets all the results back (may take up to 45 seconds in some cases with a hard system timeout at 180 seconds) before returning the response. If updated results are required, it can be achieved by calling the same method and passing the search_id returned in the first call (see above). If search_id is passed in the request, do not pass this parameter. Example: 10.",
                "req": false
            },
            {
                "key": "timestamp",
                "value": "",
                "description": "Valid current UNIX timestamp in seconds. Example: 1388774110.",
                "req": false
            },
            {
                "key": "user_agent",
                "value": "",
                "description": "Properly encoded customer\u2019s user agent string (required to obtain mobile rates from some providers). For traffic from mobile or desktop apps (as opposed to browser apps), use the following format: {App Name}/{App Version} ({OS} {OS Version}) [APP or MOBILE_APP] (e.g. TripSource/5.0 (iOS 10_10_3) MOBILE_APP). Note: Required to get discounted mobile rates Example: Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685532940919,
        "lastModifiedTime": 1685598331081,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "chunks_received": 6,
                    "chunks_requested": 6,
                    "chunks_with_errors": 0,
                    "currency": "USD",
                    "customer_ip": null,
                    "data_is_complete": true,
                    "errors": [],
                    "hotels_data": [
                        {
                            "client_preference_tier": null,
                            "client_preferred": false,
                            "currency": "USD",
                            "id": "634870",
                            "is_available": true,
                            "is_excluded": false,
                            "local_currency": "EUR",
                            "min_avg_rate": 79.19,
                            "min_avg_rate_after_taxes_usd": null,
                            "min_avg_rate_before_taxes_usd": 79.19,
                            "min_avg_rate_local_currency": 69.75,
                            "min_rate_breakfast_included": true,
                            "min_total": 79.19,
                            "min_total_local_currency": 69.75,
                            "out_of_policy": false,
                            "out_of_policy_reasons": [],
                            "taxes_and_fees": {
                                "tax_and_fee_breakdown": [],
                                "tax_mark": null
                            },
                            "tmc_preference_tier": null,
                            "tmc_preferred": false,
                            "warnings": [
                                {
                                    "message": "sabre error in OTA_HotelAvailLLSRQ: \u2021CATG CODE MUST BE FOLLOWED BY \u2021 / OR ,",
                                    "provider": "sabre",
                                    "type": "ProcessingError"
                                }
                            ]
                        },
                        {
                            "client_preference_tier": null,
                            "client_preferred": false,
                            "currency": "USD",
                            "id": "5360124",
                            "is_available": true,
                            "is_excluded": false,
                            "local_currency": "INR",
                            "min_avg_rate": 182.51,
                            "min_avg_rate_after_taxes_usd": null,
                            "min_avg_rate_before_taxes_usd": 182.51,
                            "min_avg_rate_local_currency": 12800,
                            "min_rate_breakfast_included": false,
                            "min_total": 182.51,
                            "min_total_local_currency": 12800,
                            "out_of_policy": true,
                            "out_of_policy_reasons": [
                                {
                                    "reason_code": "PRICE",
                                    "reason_name": "Room Rate Cannot Exceed 110.00 EUR (approx. 124.89 USD) Per Night.",
                                    "reason_subcategory": "LESS",
                                    "reason_values": {
                                        "currency": "USD",
                                        "local_currency": "INR",
                                        "local_max_value": 8758.85,
                                        "max_value": 124.89,
                                        "original_currency": "EUR",
                                        "original_max_value": 110
                                    }
                                }
                            ],
                            "taxes_and_fees": {
                                "tax_and_fee_breakdown": [
                                    {
                                        "amount": 10.15,
                                        "charge_amount": 7,
                                        "charge_mode": "percent",
                                        "currency": "EUR",
                                        "excluded": false,
                                        "name": "City tax"
                                    },
                                    {
                                        "amount": 3,
                                        "charge_amount": 3,
                                        "charge_mode": "per person per night",
                                        "currency": "EUR",
                                        "excluded": false,
                                        "name": "Tourism Fee"
                                    }
                                ],
                                "tax_mark": "TI"
                            },
                            "tmc_preference_tier": null,
                            "tmc_preferred": false,
                            "warnings": []
                        }
                    ],
                    "locale": "en_US",
                    "rate_target": {
                        "amount": 160,
                        "currency": "USD",
                        "description": "Rate Target: 100 USD"
                    },
                    "search_id": "2Z8NVHsDens6QWeC7Zi6NM",
                    "session_id": "40Lpcxqzu8X2z3YoZEHnEV",
                    "user_agent": "MOBAPICLIENTv1",
                    "warnings": [
                        "Timeout",
                        "Timeout"
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95582,
        "executor_type": "THIRDPARTY",
        "executor_name": "getrecommendedrate",
        "executor_version": "v1",
        "executor_display_name": "get_recommended_rate v2",
        "executor_description": "Retrieves a recommended rate for the selected hotel.",
        "executor_category": "Hotels",
        "executor_category_group": "Hotels",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-d42b36950c-tshapiv20.apiary-mock.com/hotels/get_recommended_rate/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "api_key",
                "value": "",
                "description": "Public key, provided by BCD Travel API team Example: testkey.",
                "req": false
            },
            {
                "key": "checkin",
                "value": "",
                "description": "Date of the hotel check-in. Expected format is \"YYYY-MM-DD\". If provided, hotel preference (BCD and client preferred flags and tier) will be returned as it would exist on the date of checkin (recommended for implementations). If not provided, hotel preference (BCD and client preferred flags and tier) will be returned as it exists on the date of the search (less accurate, not recommended for implementations). Example: 2018-10-28.",
                "req": false
            },
            {
                "key": "checkout",
                "value": "",
                "description": " Date of the hotel check-out. Expected format is YYYY-MM-DD. Required, unless search_id is passed in the request. Example: 2018-10-29.",
                "req": false
            },
            {
                "key": "configuration_id",
                "value": "",
                "description": " In order for us to return data in compliance with settings defined for each client configuration, we need to identify the client configuration for this request. This parameter represents Internal Configuration ID as returned in get_configurations. Example: 3500000023.",
                "req": false
            },
            {
                "key": "currency",
                "value": "",
                "description": " ISO 4217 formatted code of a currency that should be used to produce prices in (e.g. EUR ). When omitted (or passed as \u201c___\u201d), will return prices in local currencies for each hotel. We support most of the commonly used currencies (see https://openexchangerates.org/currencies for the full list). Required, unless search_id is passed in the request. Example: EUR.Show Possible Values",
                "req": false
            },
            {
                "key": "customer_ip",
                "value": "",
                "description": " IP address of a user, as captured by the customer\u2019s integration. Ensure your integration passes the user\u2019s IP, not your own. This value helps determine user's location for fraud recovery and other analytics. Example: 192.168.31.116.",
                "req": false
            },
            {
                "key": "date_format_type",
                "value": "",
                "description": " Accepts two-letter language code (one of: de , fr , en , es , it, ko, ja or pt ). If passed, system will return dates (i.e. those in cancellation policy) in the format corresponding to passed language. If not, it will be returned based on the locale. Example: en.",
                "req": false
            },
            {
                "key": "entity_id",
                "value": "",
                "description": " This field is deprecated and will be removed in future versions. Use configuration_id instead. Entity_id is required if configuration_id is not passed. In order for us to return data in compliance with settings defined for each client company, we need to identify the client company for this request. This parameter represents Internal Company ID as shown in Admin Panel. Example: 23",
                "req": false
            },
            {
                "key": "guest_count",
                "value": "",
                "description": "Number of guests in the room (e.g. guest_count=3 means that the room is for three people). Required, unless search_id is passed in the request. Minimum is 1. Maximum is 4. Example: 1.",
                "req": false
            },
            {
                "key": "hotel_id",
                "value": "",
                "description": " Single hotel ID (e.g. 123456 ) as returned by previous methods or cached by the application. Required, unless search_id is passed in the request. Example: 590109.",
                "req": false
            },
            {
                "key": "locale",
                "value": "",
                "description": " Forces system to return data in other languages if available. Defaults to en_US if not passed. Example: en_US.",
                "req": false
            },
            {
                "key": "nonce",
                "value": "",
                "description": " A randomly generated string of your choice. Ensure it is unique to each request with same timestamp within 5 minute interval and no more than 32 characters long. Maximum value length is 32. Example: 1543353502645.",
                "req": false
            },
            {
                "key": "rate_key",
                "value": "",
                "description": "Pass the url encoded rate_key of the rate you would like to get details for (as returned by the get_rates api call). Example: eJwzNLKyMjMwMrQA0hDgbmWVUVRsZeURFuzo7%2BjmY2UV5OhsZWXqlV3m7G%2FpW5hu5OOi7%2B5fEVYZEp5uawuU9veA6HQKAiq2MLHQM4CZFVySmJeSWJSi4FiQWFSSm5pXolCeWZKhYKiQkl%2BalJOqkJSaogBUAhQozsxLhwgAAMz3K5M%3D.",
                "req": false
            },
            {
                "key": "session_id",
                "value": "",
                "description": "Customer generated identifier of user's session. Do not use real user's session id as it will be replayed back in the API response. Reuse this identifier for all requests by the same user. Including this value makes subsequent troubleshooting and audit easier, as it explicitly links together requests for individual users. <,>,& characters are not allowed. Example: 71IxqHT8mgMe5ohsZ25e5P.",
                "req": false
            },
            {
                "key": "system",
                "value": "",
                "description": "Certain things may be configured and subsequently returned very differently based on the booking channel. This attribute tells the system which one of the currently supported channels the data is being requested for. Please inquire which booking channel your integration should use for all requests when you obtain your API key. Example: obt.Show Possible Values",
                "req": false
            },
            {
                "key": "timestamp",
                "value": "",
                "description": "Valid current UNIX timestamp in seconds. Example: 1388774110.",
                "req": false
            },
            {
                "key": "user_agent",
                "value": "",
                "description": "Properly encoded customer\u2019s user agent string (required to obtain mobile rates from some providers). For traffic from mobile or desktop apps (as opposed to browser apps), use the following format: {App Name}/{App Version} ({OS} {OS Version}) [APP or MOBILE_APP] (e.g. TripSource/5.0 (iOS 10_10_3) MOBILE_APP). Note: Required to get discounted mobile rates Example: Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36.",
                "req": false
            },
            {
                "key": "loyalty_card_accepted",
                "value": "",
                "description": "Boolean flag (with default value false) indicating that recommended rate must be a GDS rate. Example: false. Default: false.",
                "req": false
            },
            {
                "key": "search_id",
                "value": "",
                "description": "Pass search_id that was returned by the corresponding get_rates call. Example: 7tdVikde8zhk2RRKpqYK82.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685534531347,
        "lastModifiedTime": 1685598726815,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "check_in_instructions": "<p><b>Special Check-in instructions></b>Contact details can be found on the booking confirmation. For more details, please contact the office using the information on the reservation confirmation received after booking.</p><p><b>Know Before You Go</b> <br /><ul>  <li>Reservations are required for massage services and spa treatments. Reservations can be made by contacting the hotel prior to arrival, using the contact information on the booking confirmation. </li> <li>One child 12 years old or younger stays free when occupying the parent or guardian's room, using existing bedding. </li><li>Only registered guests are allowed in the guestrooms. </li> <li>Some facilities may have restricted access. Guests can contact the property for details using the contact information on the booking confirmation. </li> </ul></p><p><b>Fees</b> <br /><p>The following fees and deposits are charged by the property at time of service, check-in, or check-out. </p> <ul> <li>Fee for buffet breakfast: AED 88 per person (approximately)</li>                <li>Rollaway bed fee: AED 110 per night</li>  </ul> <p>The above list may not be comprehensive. Fees and deposits may not include tax and are subject to change. </p></p>",
                    "customer_ip": null,
                    "errors": [],
                    "hotel_name": "Adagio SP Berrini",
                    "iata_code": "SAO",
                    "locale": "en_US",
                    "rates": [
                        {
                            "additional_rate_information": "Bed & breakfast: per person per night inclusive",
                            "average": 114.12,
                            "average_after_taxes_usd": 119.82,
                            "average_before_taxes_usd": 114.12,
                            "bed_types": [
                                "double",
                                "single"
                            ],
                            "billing_address_required": false,
                            "cancel_by": "2019-02-13T17:00:00",
                            "cancellation_policy": "Cancel before 02/13/2019 05:00 PM local hotel time to avoid 2 night(s) charge.",
                            "cancellation_policy_known": true,
                            "chain_code": null,
                            "chain_name": null,
                            "change_during_stay": false,
                            "checkin_time": "15:00:00",
                            "checkout_time": "12:00:00",
                            "client_preferred": false,
                            "commission": {
                                "commission_repr": "4.00% agent's commission",
                                "commissionable": true
                            },
                            "currency": "USD",
                            "cvv_required": false,
                            "important_info": null,
                            "is_bcd_great_rate": false,
                            "is_mobile": false,
                            "is_on_request": false,
                            "is_package_rate": false,
                            "local_average": 429.61,
                            "local_currency": "BRL",
                            "local_taxes": 42.96,
                            "local_total": 902.18,
                            "loyalty_card_allowed": false,
                            "loyalty_programs": [],
                            "members_only": false,
                            "merchant_of_record": "property",
                            "non_refundable": false,
                            "original_average": 424,
                            "original_currency": "BRL",
                            "original_taxes": 42.4,
                            "original_total": 890.4,
                            "out_of_policy": false,
                            "out_of_policy_reasons": [],
                            "paid_policy": "G",
                            "payment_cards_accepted": [
                                {
                                    "code": "AX",
                                    "mandatory_checkout_text": null
                                },
                                {
                                    "code": "CA",
                                    "mandatory_checkout_text": null
                                },
                                {
                                    "code": "DC",
                                    "mandatory_checkout_text": null
                                },
                                {
                                    "code": "VI",
                                    "mandatory_checkout_text": null
                                }
                            ],
                            "payment_details": null,
                            "payment_options": [
                                "card",
                                "vpa_guarantee"
                            ],
                            "per_night": [
                                {
                                    "date": "2019-02-13",
                                    "local_rate": 451.09,
                                    "original_rate": 445.2,
                                    "rate": 119.83
                                },
                                {
                                    "date": "2019-02-14",
                                    "local_rate": 451.09,
                                    "original_rate": 445.2,
                                    "rate": 119.83
                                }
                            ],
                            "provider": "hrs",
                            "provider_id": "HVSAOAFL",
                            "rate_code": "RAC",
                            "rate_company_name": null,
                            "rate_description": "Standard Apartment with 1 double bed and 1 single bed",
                            "rate_key": "eJwzNLKyMjMwMrQA0hDgbmWVUVRsZeURFuzo7+jmY2UV5OhsZWXqlV3m7G/pW5hu5OOi7+5fEVYZEp5uawuU9veA6HQKAiq2MLHQM4CZFVySmJeSWJSi4FiQWFSSm5pXolCeWZKhYKiQkl+alJOqkJSaogBUAhQozsxLhwgAAMz3K5M=",
                            "rate_promoline": "Standard room",
                            "rate_value_adds": [
                                "FBFST"
                            ],
                            "remaining_rooms_number": null,
                            "room_description": "<p><strong>1 Double Bed and 1 Twin Bed</strong></p><p>581-sq-foot (54-sq-meter) room with a balcony</p><br/><p><b>Layout</b> - Separate living room</p><p><b>Internet</b> - Free WiFi </p><p><b>Entertainment</b> - 32-inch LCD TV with cable channels</p><p><b>Food & Drink</b> - Kitchen with refrigerator, stovetop, microwave, and cookware/dishware</p><p><b>Sleep</b> - Blackout drapes/curtains </p><p><b>Bathroom</b> - Private bathroom, shower, and rainfall showerhead</p><p><b>Practical</b> - Safe, iron/ironing board, and phone</p><p><b>Comfort</b> - Air conditioning</p><p><b>Need to Know</b> - Limited housekeeping</p><p>Non-Smoking</p>&nbsp;",
                            "room_type_code": "ROH",
                            "special_requests": {
                                "sr_allowed": false,
                                "sr_length": 0
                            },
                            "tax_details": [
                                "5.00% VAT/GST tax Per room per night; inclusive"
                            ],
                            "tax_mark": "TI",
                            "taxes": 11.41,
                            "tmc_preferred": false,
                            "total": 239.65
                        }
                    ],
                    "session_id": "3UUlrkvq2gvuQEQqj8EUYy",
                    "user_agent": "MOBAPICLIENTv1"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95715,
        "executor_type": "THIRDPARTY",
        "executor_name": "cancelreservation",
        "executor_version": "v2",
        "executor_display_name": "cancel_reservation",
        "executor_description": "Cancels an active hotel reservation.",
        "executor_category": "Hotels",
        "executor_category_group": "Hotels",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://private-anon-a03b85d2d4-tshapiv20.apiary-mock.com/hotels/cancel_reservation/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "api_key": "test_key",
                "booking_uid": "hh3KIyTh3VG1rGUV28Azl157",
                "callback_url": "http://trips.mttnow.com/trips/update",
                "customer_ip": "192.165.34.56",
                "email": "johnsmith@example.com",
                "locale": "en_US",
                "nonce": "jhagbcu74683bcskdjhgfcks8e7trhc87346",
                "session_id": "12334556723",
                "system": "aft",
                "timestamp": "1388774110",
                "user_agent": "MOBILEAPP"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685600584833,
        "lastModifiedTime": 1685604631317,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Successful Request",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "booking_uid": "hh3KIyTh3VG1rGUV28Azl157",
                    "cancellation_status": "in-progress",
                    "customer_ip": "192.165.34.56",
                    "errors": [],
                    "locale": "en_US",
                    "session_id": "12334556723",
                    "user_agent": "MOBILEAPP"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95583,
        "executor_type": "THIRDPARTY",
        "executor_name": "getcheckoutdata",
        "executor_version": "v1",
        "executor_display_name": "get_checkout_data v2",
        "executor_description": "Retrieves traveler profile and payment information.",
        "executor_category": "Hotels",
        "executor_category_group": "Hotels",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-d42b36950c-tshapiv20.apiary-mock.com/hotels/get_checkout_data/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "accepted_credit_cards",
                "value": "",
                "description": "One or several (comma separated) of the following credit card codes as returned in payment_cards_accepted for a particular rate being booked. If passed, system will filter out credit card types that do not match one of the codes provided in the request. Example: VI.",
                "req": false
            },
            {
                "key": "api_key",
                "value": "",
                "description": "Public key, provided by BCD Travel API team Example: testkey.",
                "req": false
            },
            {
                "key": "checkout",
                "value": "",
                "description": " Date of the hotel check-out. Expected format is YYYY-MM-DD. Required, unless search_id is passed in the request. Example: 2018-10-29.",
                "req": false
            },
            {
                "key": "configuration_id",
                "value": "",
                "description": " In order for us to return data in compliance with settings defined for each client configuration, we need to identify the client configuration for this request. This parameter represents Internal Configuration ID as returned in get_configurations. Example: 3500000023.",
                "req": false
            },
            {
                "key": "customer_ip",
                "value": "",
                "description": " IP address of a user, as captured by the customer\u2019s integration. Ensure your integration passes the user\u2019s IP, not your own. This value helps determine user's location for fraud recovery and other analytics. Example: 192.168.31.116.",
                "req": false
            },
            {
                "key": "entity_id",
                "value": "",
                "description": " This field is deprecated and will be removed in future versions. Use configuration_id instead. Entity_id is required if configuration_id is not passed. In order for us to return data in compliance with settings defined for each client company, we need to identify the client company for this request. This parameter represents Internal Company ID as shown in Admin Panel. Example: 23",
                "req": false
            },
            {
                "key": "internal_traveler_id",
                "value": "",
                "description": " ID of a traveler in the database. Internal. For cases we have a user without TSPM profile, but with profile in our own database, this allows usage of that data for getting checkout data. Example: 89561433.",
                "req": false
            },
            {
                "key": "locale",
                "value": "",
                "description": " Forces system to return data in other languages if available. Defaults to en_US if not passed. Example: en_US.",
                "req": false
            },
            {
                "key": "paid_policy",
                "value": "",
                "description": " Indicates whether the card will be used for booking a deposit or a guarantee rate. Optional. If both checkout and paid_policy are passed to the request, system will filter out credit cards that will fail with expiration date validation error during booking (i.e. for G rates, system will filter out cards that expire before the checkout date). Example: D.",
                "req": false
            },
            {
                "key": "previous_booking_uid",
                "value": "",
                "description": " Identifier of the booking in our system that is being modified. Example: hh4Fif7QOX7MQn7GH8n7L2l4.",
                "req": false
            },
            {
                "key": "session_id",
                "value": "",
                "description": "Customer generated identifier of user's session. Do not use real user's session id as it will be replayed back in the API response. Reuse this identifier for all requests by the same user. Including this value makes subsequent troubleshooting and audit easier, as it explicitly links together requests for individual users. <,>,& characters are not allowed. Example: 71IxqHT8mgMe5ohsZ25e5P.",
                "req": false
            },
            {
                "key": "sso_saml_art",
                "value": "",
                "description": " SSO server token. Optional. If both sso_url and sso_saml_art are passed to the request, system will attempt to retrieve traveler profile from the SSO server (where supported). Example: u8t3okwe7pmj2au.",
                "req": false
            },
            {
                "key": "sso_url",
                "value": "",
                "description": " URL for SSO server. If both sso_url and sso_saml_art are passed to the request, system will attempt to retrieve traveler profile from the SSO server (where supported). Example: http://www.yourssoserverhere.com.",
                "req": false
            },
            {
                "key": "user_agent",
                "value": "",
                "description": "Properly encoded customer\u2019s user agent string (required to obtain mobile rates from some providers). For traffic from mobile or desktop apps (as opposed to browser apps), use the following format: {App Name}/{App Version} ({OS} {OS Version}) [APP or MOBILE_APP] (e.g. TripSource/5.0 (iOS 10_10_3) MOBILE_APP). Note: Required to get discounted mobile rates Example: Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36.",
                "req": false
            },
            {
                "key": "system",
                "value": "",
                "description": "Certain things may be configured and subsequently returned very differently based on the booking channel. This attribute tells the system which one of the currently supported channels the data is being requested for. Please inquire which booking channel your integration should use for all requests when you obtain your API key. Example: obt.",
                "req": false
            },
            {
                "key": "timestamp",
                "value": "",
                "description": " Valid current UNIX timestamp in seconds. Example: 1388774110.",
                "req": false
            },
            {
                "key": "tspm_company_id",
                "value": "",
                "description": " Company Entity ID from TripSource Profile Manager (TSPM). If present, system will lookup dynamic Client Reportable Data (CRD) variables that are referring to company TSPM data and return their values. Example: 20.1234.",
                "req": false
            },
            {
                "key": "tspm_traveler_id",
                "value": "",
                "description": "Traveler ID from TripSource Profile Manager (TSPM). If present, system will lookup dynamic Client Reportable Data (CRD) variables that are referring to traveler TSPM data and return their values. System will also return traveler\u2019s profile information. Example: 24.1234.",
                "req": false
            },
            {
                "key": "user_agent",
                "value": "",
                "description": "Properly encoded customer\u2019s user agent string (required to obtain mobile rates from some providers). For traffic from mobile or desktop apps (as opposed to browser apps), use the following format: {App Name}/{App Version} ({OS} {OS Version}) [APP or MOBILE_APP] (e.g. TripSource/5.0 (iOS 10_10_3) MOBILE_APP). Note: Required to get discounted mobile rates Example: Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685535045905,
        "lastModifiedTime": 1685598759680,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "crd": [
                        {
                            "allow_special_characters": false,
                            "choices": [],
                            "code": "ALL.COMMON.CRD.company_code",
                            "conditions": [],
                            "default": "888",
                            "help_text": null,
                            "max_length": 6,
                            "min_length": 3,
                            "name": "Company Code",
                            "required": false,
                            "type": "text",
                            "validation_type": "text"
                        },
                        {
                            "allow_special_characters": true,
                            "choices": [
                                {
                                    "code": "AP",
                                    "description": "Asia/Pacific"
                                },
                                {
                                    "code": "EEMEA",
                                    "description": "Eastern Europe/Middle East/Africa"
                                },
                                {
                                    "code": "EU",
                                    "description": "Europe"
                                },
                                {
                                    "code": "LA",
                                    "description": "Latin America"
                                },
                                {
                                    "code": "NA",
                                    "description": "North America"
                                }
                            ],
                            "code": "ALL.HOTELS.CRD.work_region",
                            "conditions": [
                                "guarantee",
                                "out_of_policy",
                                "card"
                            ],
                            "default": "EU",
                            "help_text": null,
                            "max_length": null,
                            "min_length": null,
                            "name": "Work Region",
                            "required": true,
                            "type": "select",
                            "validation_type": "text"
                        }
                    ],
                    "credit_cards": [
                        {
                            "card_index": "1",
                            "card_month": 2,
                            "card_name": "John Smith",
                            "card_name_valid": true,
                            "card_number": "1234",
                            "card_source": "tspm_traveler",
                            "card_type": "VI",
                            "card_year": 2020,
                            "first_name": "John",
                            "last_name": "Smith"
                        }
                    ],
                    "customer_ip": "1.1.1.1",
                    "default_billing_address": {
                        "address": "35 North First st.",
                        "city": "Chico",
                        "company_name": "Roga and Kopyta",
                        "country_code": "US",
                        "phone": {
                            "country_code": "US",
                            "number": "+14086778909"
                        },
                        "postal_code": "94523"
                    },
                    "email": "johnsmith@example.com",
                    "errors": [],
                    "first_name": "John",
                    "is_smoking": false,
                    "last_name": "Smith",
                    "locale": "en_US",
                    "loyalty_cards": [
                        {
                            "loyalty_card_chain_code": "OM",
                            "loyalty_card_chain_name": "Omni Hotels",
                            "loyalty_card_number": "8770605093",
                            "loyalty_card_program_name": "All Omni Hotels",
                            "loyalty_card_source": "tspm"
                        },
                        {
                            "loyalty_card_chain_code": "RT",
                            "loyalty_card_chain_name": "Accor Hotels",
                            "loyalty_card_number": "3081032693950892",
                            "loyalty_card_program_name": "Accor Hotel Group",
                            "loyalty_card_source": "tspm"
                        }
                    ],
                    "middle_name": "Smith",
                    "salutation": "Mr",
                    "session_id": "7MJiByUGsrjDeaVvAhXwyC",
                    "special_requests": "King Size",
                    "user_agent": "MOBAPICLIENTv1",
                    "vpa_card_pools": [
                        {
                            "name": "VPA card pool name",
                            "vpa_client_id": "1234"
                        }
                    ],
                    "vpa_payment_instructions": "default payment instructions"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95569,
        "executor_type": "THIRDPARTY",
        "executor_name": "getlist",
        "executor_version": "v1",
        "executor_display_name": "get_list v2",
        "executor_description": "Retrieves a list of hotels near a location.",
        "executor_category": "Hotels",
        "executor_category_group": "Hotels",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-d42b36950c-tshapiv20.apiary-mock.com/hotels/get_list/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "api_key",
                "value": "",
                "description": " Public key, provided by BCD Travel API team Example: testkey.",
                "req": false
            },
            {
                "key": "chains",
                "value": "",
                "description": " This parameter allows passing a comma-separated url-encoded list of hotel chain codes to the call (e.g. \u201cEH%2CHY\u201d). As a result, search will return only hotels that belong to chains specified in the request. Example: HS,RT.",
                "req": false
            },
            {
                "key": "checkin",
                "value": "",
                "description": "Date of the hotel check-in. Expected format is \"YYYY-MM-DD\". If provided, hotel preference (BCD and client preferred flags and tier) will be returned as it would exist on the date of checkin (recommended for implementations). If not provided, hotel preference (BCD and client preferred flags and tier) will be returned as it exists on the date of the search (less accurate, not recommended for implementations). Example: 2018-10-28.",
                "req": false
            },
            {
                "key": "configuration_id",
                "value": "",
                "description": " In order for us to return data in compliance with settings defined for each client configuration, we need to identify the client configuration for this request. This parameter represents Internal Configuration ID as returned in get_configurations. Example: 3500000023.",
                "req": false
            },
            {
                "key": "customer_ip",
                "value": "",
                "description": "IP address of a user, as captured by the customer\u2019s integration. Ensure your integration passes the user\u2019s IP, not your own. This value helps determine user's location for fraud recovery and other analytics. Example: 192.168.31.116.",
                "req": false
            },
            {
                "key": "destination",
                "value": "",
                "description": "Url-encoded code of the chosen destination as returned in a code element of the destination_lookup call (e.g. destination=Hotel%3Ae%7C590111, destination=Region%3Ae%7C1565) or a set of coordinates (e.g. destination=48.224147%2C16.350547. Minimum value length is 2. Example: Region:48.224147,16.350547",
                "req": false
            },
            {
                "key": "entity_id",
                "value": "",
                "description": " This field is deprecated and will be removed in future versions. Use configuration_id instead. Entity_id is required if configuration_id is not passed. In order for us to return data in compliance with settings defined for each client company, we need to identify the client company for this request. This parameter represents Internal Company ID as shown in Admin Panel. Example: 23.",
                "req": false
            },
            {
                "key": "exclude_non_traditional",
                "value": "",
                "description": "This parameter defines whether or not we want to get non-traditional properties in response. Example: false. Default: false.",
                "req": false
            },
            {
                "key": "hotel_name_keyword",
                "value": "",
                "description": " This parameter allows passing a hotel brand or part of the name to the search (e.g. \"ibis\") as a string and it should return only hotels that have this string as a substring in their name. Example: mozart. Default: null.",
                "req": false
            },
            {
                "key": "is_multi_traveler_mode",
                "value": "",
                "description": " For internal use. Obsolete. Ignored. Example: false. Default: false.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Maximum number of hotels to return in each response, if a large number of hotels is undesired (e.g. \"50\"). If omitted, the system will return 20 hotels. If more results is available, then response will contain the more_results_available=true to indicate this. Should there be a desire to retrieve the remaining hotels, passing the page parameter would help (see below). Example: 5. Default: 20.",
                "req": false
            },
            {
                "key": "locale",
                "value": "",
                "description": "Forces system to return data in other languages if available. Defaults to en_US if not passed. Example: en_US.",
                "req": false
            },
            {
                "key": "nonce",
                "value": "",
                "description": " A randomly generated string of your choice. Ensure it is unique to each request with same timestamp within 5 minute interval and no more than 32 characters long. Maximum value length is 32. Example: 1543353502645.",
                "req": false
            },
            {
                "key": "order",
                "value": "",
                "description": "Order in which hotels should be returned. One of the following: (preference, star_rating, distance, name). Each value could be prefixed with \"-\" for descending order (e.g. \"-star_rating\"), otherwise an ascending order is assumed. If an invalid sorting option is passed, system will return 400 error. Example: -star_rating. Default: -preference.",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": " Number that determines which page of the limited result set (if limit was passed) to return (e.g. \"2\"). Numbering of the pages starts with 1. Total number of pages is indicated in the response (e.g. \"page_results=20\"). Example: 1. Default: 1.",
                "req": false
            },
            {
                "key": "search_radius",
                "value": "",
                "description": " Search radius for POI or coordinate searches (e.g. 0.25). Maximum is 50. Example: 5. Default: 10.0.",
                "req": false
            },
            {
                "key": "search_radius_unit",
                "value": "",
                "description": "Units to use for the search radius (e.g. KM or MI). Example: KM. Default: MI.",
                "req": false
            },
            {
                "key": "session_id",
                "value": "",
                "description": "Customer generated identifier of user's session. Do not use real user's session id as it will be replayed back in the API response. Reuse this identifier for all requests by the same user. Including this value makes subsequent troubleshooting and audit easier, as it explicitly links together requests for individual users. <,>,& characters are not allowed. Example: 71IxqHT8mgMe5ohsZ25e5P.",
                "req": false
            },
            {
                "key": "star_rating_filter",
                "value": "",
                "description": "This parameter allows passing a comma-separated list of star ratings that the user is interested in (e.g. \u201c3,4,5\u201d). System will only return hotels that satisfy this criteria rating-wise. Example: 3,4,5.",
                "req": false
            },
            {
                "key": "suggest_alternative",
                "value": "",
                "description": " This parameter defines whether or not we want to get alternative hotels in response for a single hotel search. Example: false.",
                "req": false
            },
            {
                "key": "system",
                "value": "",
                "description": " Certain things may be configured and subsequently returned very differently based on the booking channel. This attribute tells the system which one of the currently supported channels the data is being requested for. Please inquire which booking channel your integration should use for all requests when you obtain your API key. Example: obt.",
                "req": false
            },
            {
                "key": "timestamp",
                "value": "",
                "description": " Valid current UNIX timestamp in seconds. Example: 1388774110.",
                "req": false
            },
            {
                "key": "user_agent",
                "value": "",
                "description": " Properly encoded customer\u2019s user agent string (required to obtain mobile rates from some providers). For traffic from mobile or desktop apps (as opposed to browser apps), use the following format: {App Name}/{App Version} ({OS} {OS Version}) [APP or MOBILE_APP] (e.g. TripSource/5.0 (iOS 10_10_3) MOBILE_APP). Note: Required to get discounted mobile rates Example: Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685531327850,
        "lastModifiedTime": 1685598297570,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "current_page": 1,
                    "customer_ip": null,
                    "errors": [],
                    "hotels_data": [
                        {
                            "address": "Schottenring 24",
                            "airport_code": "VIE",
                            "amenities": {
                                "property_amenities": [
                                    "AIRSH",
                                    "BAR",
                                    "BCNT",
                                    "BFST",
                                    "CCNT",
                                    "CLNG",
                                    "FWIFI",
                                    "GOLF",
                                    "GYM",
                                    "INTT",
                                    "KIDAC",
                                    "LIFT",
                                    "LNDR",
                                    "MTNG",
                                    "NSMK",
                                    "PARK",
                                    "PETS",
                                    "POOL",
                                    "RSTR",
                                    "RSVC",
                                    "SAUNA",
                                    "TENN",
                                    "WCHR"
                                ],
                                "room_amenities": [
                                    "ACND",
                                    "MBAR",
                                    "SAFE",
                                    "TV"
                                ]
                            },
                            "chain_info": [
                                {
                                    "chain_code": "KI",
                                    "chain_name": "Kempinski Hotels",
                                    "master_chain_code": "GL",
                                    "master_chain_name": "Globalhotel Alliance"
                                }
                            ],
                            "check_in_time": "15:00",
                            "check_out_time": "12:00",
                            "city": "Vienna",
                            "client_preference_tier": 0,
                            "client_preferred": true,
                            "country_code": "AT",
                            "direction": "SE",
                            "distance": 1.58,
                            "giata_ids": [
                                "284896"
                            ],
                            "has_ecofriendly_badge": true,
                            "hotel_rating": 5,
                            "iata_guarantee": false,
                            "id": 590149,
                            "is_bcd_great_rate_hotel": false,
                            "is_cash_only_hotel": false,
                            "is_fema_compliant": false,
                            "is_on_request_hotel": false,
                            "latitude": 48.21658,
                            "longitude": 16.36853,
                            "name": "Palais Hansen Kempinski Vienna",
                            "phone": "43-1-2361000",
                            "postal_code": "1010",
                            "promo_messages": [],
                            "property_type": "Hotel",
                            "regions": {
                                "neighborhood": [
                                    "Innere Stadt"
                                ]
                            },
                            "security_vetted": false,
                            "sort_metric": [
                                {
                                    "ascending": false,
                                    "name": "preference_tmc_exists",
                                    "value": 1
                                },
                                {
                                    "ascending": true,
                                    "name": "distance",
                                    "value": 1.575736891
                                },
                                {
                                    "ascending": true,
                                    "name": "star_rating",
                                    "value": 4
                                }
                            ],
                            "state_province_code": null,
                            "thumbnails": [
                                "https://d2p3d64ud0ufix.cloudfront.net/6/68/6858/685869656a274ac58cb916765d1b9f17_",
                                "https://d2p3d64ud0ufix.cloudfront.net/8/81/818a/818afbe8a1be479bbd2bc66db480a22c_",
                                "https://d2p3d64ud0ufix.cloudfront.net/0/04/0453/04531eda2a784da183e26fdb555b56a4_",
                                "https://d2p3d64ud0ufix.cloudfront.net/2/23/23de/23dee6f49740475880cc2902a321665d_",
                                "https://d2p3d64ud0ufix.cloudfront.net/c/c9/c99b/c99ba1d4d54c474ebd7f8a954bd18eb0_",
                                "https://d2p3d64ud0ufix.cloudfront.net/4/45/4505/4505de5feb394458a44ab097535178a0_",
                                "https://d2p3d64ud0ufix.cloudfront.net/d/da/da66/da66de968e1b4c3bb87a07ab9c2da3ee_",
                                "https://d2p3d64ud0ufix.cloudfront.net/b/b5/b52d/b52d4f82d37b4d95ac6c2fd1ee6cad54_",
                                "https://d2p3d64ud0ufix.cloudfront.net/d/d5/d572/d572a21b2e8245fcb4fcf080d04cae8b_",
                                "https://d2p3d64ud0ufix.cloudfront.net/c/c2/c2fd/c2fdc59ed6604fb2a366a9286ac10a53_",
                                "https://d2p3d64ud0ufix.cloudfront.net/f/f7/f7a5/f7a584f1cd3c4bdf942bbea90bd3c5b3_",
                                "https://d2p3d64ud0ufix.cloudfront.net/3/3d/3dd7/3dd73afb19a04728a64e17ccb9ff7a3c_",
                                "https://d2p3d64ud0ufix.cloudfront.net/a/ac/accd/accd084c77a645d7994dcc1db6ee24e6_",
                                "https://d2p3d64ud0ufix.cloudfront.net/5/51/51e7/51e7da2b91ec45459e97d6cfa9502b88_",
                                "https://d2p3d64ud0ufix.cloudfront.net/e/e4/e4f0/e4f0a97f23a2480c9315336f84875838_",
                                "https://d2p3d64ud0ufix.cloudfront.net/8/87/873f/873f37e21bf0478c966e5ab846bfc8d9_",
                                "https://d2p3d64ud0ufix.cloudfront.net/9/9a/9af3/9af36d3573544043912e4138c3847f7f_",
                                "https://d2p3d64ud0ufix.cloudfront.net/8/82/82e0/82e01a95774649eb8b48c78bc5ca378a_",
                                "https://d2p3d64ud0ufix.cloudfront.net/0/09/099f/099f6ecadaf143b997038f939f533f6c_",
                                "https://d2p3d64ud0ufix.cloudfront.net/6/6c/6cd3/6cd3aef846304f009b57c64bc9270d50_",
                                "https://d2p3d64ud0ufix.cloudfront.net/f/f0/f00a/f00ae185a08c476da39d541aebbfaab4_",
                                "https://d2p3d64ud0ufix.cloudfront.net/b/b0/b0e3/b0e3b4a828a44cb8be6bbe788a5de440_",
                                "https://d2p3d64ud0ufix.cloudfront.net/b/bd/bd5e/bd5e63bd2c5a434fb19b92017eb5e00e_",
                                "https://d2p3d64ud0ufix.cloudfront.net/4/4c/4c78/4c78c3c3a37347819ab2d5855badeb86_",
                                "https://d2p3d64ud0ufix.cloudfront.net/8/82/82cb/82cb2bc1a9194b3897ef674aeb358177_"
                            ],
                            "tmc_preference_tier": 3,
                            "tmc_preferred": true,
                            "trip_advisor_rating": null,
                            "trustyou_rating": 4.8
                        },
                        {
                            "address": "Am Hof 2",
                            "airport_code": "VIE",
                            "amenities": {
                                "property_amenities": [
                                    "AIRSH",
                                    "BAR",
                                    "BCNT",
                                    "BFST",
                                    "CCNT",
                                    "CLNG",
                                    "FINTT",
                                    "FWIFI",
                                    "GOLF",
                                    "GYM",
                                    "KIDAC",
                                    "LIFT",
                                    "LNDR",
                                    "MTNG",
                                    "NSMK",
                                    "PARK",
                                    "PETS",
                                    "POOL",
                                    "RSTR",
                                    "RSVC",
                                    "SAUNA",
                                    "TENN",
                                    "WCHR"
                                ],
                                "room_amenities": [
                                    "ACND",
                                    "MBAR",
                                    "SAFE",
                                    "TV"
                                ]
                            },
                            "chain_info": [
                                {
                                    "chain_code": "HY",
                                    "chain_name": "Hyatt Hotels",
                                    "master_chain_code": null,
                                    "master_chain_name": null
                                }
                            ],
                            "check_in_time": "15:00:00",
                            "check_out_time": "12:00",
                            "city": "Vienna",
                            "client_preference_tier": 0,
                            "client_preferred": true,
                            "country_code": "AT",
                            "direction": "SE",
                            "distance": 1.97,
                            "giata_ids": [
                                "391724"
                            ],
                            "has_ecofriendly_badge": true,
                            "hotel_rating": 5,
                            "iata_guarantee": false,
                            "id": 820604,
                            "is_bcd_great_rate_hotel": false,
                            "is_cash_only_hotel": false,
                            "is_fema_compliant": false,
                            "is_on_request_hotel": false,
                            "latitude": 48.21074,
                            "longitude": 16.36793,
                            "name": "Park Hyatt Vienna",
                            "phone": "43-1-227401234",
                            "postal_code": "1010",
                            "promo_messages": [],
                            "regions": {
                                "neighborhood": [
                                    "Innere Stadt"
                                ]
                            },
                            "security_vetted": false,
                            "sort_metric": [
                                {
                                    "ascending": false,
                                    "name": "preference_tmc_exists",
                                    "value": 1
                                },
                                {
                                    "ascending": true,
                                    "name": "distance",
                                    "value": 1.9700668777
                                },
                                {
                                    "ascending": true,
                                    "name": "star_rating",
                                    "value": 4
                                }
                            ],
                            "state_province_code": null,
                            "thumbnails": [
                                "https://d2p3d64ud0ufix.cloudfront.net/4/49/49be/49bed37ebcea47b88bdd67b239ae4dd2_",
                                "https://d2p3d64ud0ufix.cloudfront.net/1/1d/1d0e/1d0eee86399745979b61f2c336201e11_",
                                "https://d2p3d64ud0ufix.cloudfront.net/8/8d/8d69/8d69d671516f439899c8efaf15428025_",
                                "https://d2p3d64ud0ufix.cloudfront.net/6/6f/6f35/6f358a83e2e3411bae4d8db989a8c958_",
                                "https://d2p3d64ud0ufix.cloudfront.net/1/16/16fe/16fe25bec28d43cfb2c1b20880005176_",
                                "https://d2p3d64ud0ufix.cloudfront.net/1/15/1588/15883c9a87164c67838b15ca1ebf4716_",
                                "https://d2p3d64ud0ufix.cloudfront.net/8/85/8592/8592969a3ebc4090832a76ff2b89b4f6_",
                                "https://d2p3d64ud0ufix.cloudfront.net/a/ad/adab/adab1e41adf544b39dd75d2b24856498_",
                                "https://d2p3d64ud0ufix.cloudfront.net/0/0e/0e23/0e23f5ea04e647819d62575bc3fd8f4b_",
                                "https://d2p3d64ud0ufix.cloudfront.net/2/29/292c/292c9517601545e0a6dc118b4f97613c_",
                                "https://d2p3d64ud0ufix.cloudfront.net/1/1a/1a06/1a06b459061b4dbe8be824357ccd61da_",
                                "https://d2p3d64ud0ufix.cloudfront.net/8/86/8642/86424481a3cf48be9cc5d48607f7f0c1_",
                                "https://d2p3d64ud0ufix.cloudfront.net/d/d5/d573/d573d7de6a784718a5cad661d2027155_",
                                "https://d2p3d64ud0ufix.cloudfront.net/8/8e/8e3e/8e3ed1c1264d4ac49fc71923e2631631_",
                                "https://d2p3d64ud0ufix.cloudfront.net/3/37/37f0/37f04ad23f544552b36a4ceb758349d9_",
                                "https://d2p3d64ud0ufix.cloudfront.net/0/06/0695/0695026103634c4784c299917d662103_",
                                "https://d2p3d64ud0ufix.cloudfront.net/8/8d/8dfe/8dfe6aeefb6a4357aaf680cfebd3adb4_",
                                "https://d2p3d64ud0ufix.cloudfront.net/b/b0/b040/b04042e8493e47fc9e41e1e725ff5e79_",
                                "https://d2p3d64ud0ufix.cloudfront.net/b/b5/b500/b50099f942c54a98b606c07f36bef4ad_",
                                "https://d2p3d64ud0ufix.cloudfront.net/3/31/31a3/31a39983acdc4f73b57170c6a6258ec0_",
                                "https://d2p3d64ud0ufix.cloudfront.net/e/eb/eb15/eb1534cdac5044978c6cc889e763fe4a_",
                                "https://d2p3d64ud0ufix.cloudfront.net/6/61/61bf/61bf6eff81d84a8e9a28d69aa0bb9c31_",
                                "https://d2p3d64ud0ufix.cloudfront.net/c/c5/c54b/c54b5dd7222e4ef1b4cbb314d2e3e44e_",
                                "https://d2p3d64ud0ufix.cloudfront.net/9/9d/9d70/9d7078bcae3c4da6bbb748586828bd15_",
                                "https://d2p3d64ud0ufix.cloudfront.net/c/c4/c4e7/c4e76af892304822a103352391105dc9_"
                            ],
                            "tmc_preference_tier": 2,
                            "tmc_preferred": true,
                            "trip_advisor_rating": null,
                            "trustyou_rating": 4.8
                        }
                    ],
                    "hotels_found_total": 466,
                    "hotels_returned": 2,
                    "locale": "en_US",
                    "more_results_available": true,
                    "page_results": 233,
                    "session_id": "7c54yHqPA5FulQJVxbwlUT",
                    "user_agent": "MOBAPICLIENTv1"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95575,
        "executor_type": "THIRDPARTY",
        "executor_name": "getdetailedinfo",
        "executor_version": "v1",
        "executor_display_name": "get_detailed_info v2",
        "executor_description": "Retrieves descriptive text of a hotel and area attractions nearby.",
        "executor_category": "Hotels",
        "executor_category_group": "Hotels",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-d42b36950c-tshapiv20.apiary-mock.com/hotels/get_detailed_info/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "api_key",
                "value": "",
                "description": " Public key, provided by BCD Travel API team Example: testkey.",
                "req": false
            },
            {
                "key": "checkin",
                "value": "",
                "description": "Date of the hotel check-in. Expected format is \"YYYY-MM-DD\". If provided, hotel preference (BCD and client preferred flags and tier) will be returned as it would exist on the date of checkin (recommended for implementations). If not provided, hotel preference (BCD and client preferred flags and tier) will be returned as it exists on the date of the search (less accurate, not recommended for implementations). Example: 2018-10-28.",
                "req": false
            },
            {
                "key": "configuration_id",
                "value": "",
                "description": " In order for us to return data in compliance with settings defined for each client configuration, we need to identify the client configuration for this request. This parameter represents Internal Configuration ID as returned in get_configurations. Example: 3500000023.",
                "req": false
            },
            {
                "key": "customer_ip",
                "value": "",
                "description": " IP address of a user, as captured by the customer\u2019s integration. Ensure your integration passes the user\u2019s IP, not your own. This value helps determine user's location for fraud recovery and other analytics. Example: 192.168.31.116.",
                "req": false
            },
            {
                "key": "entity_id",
                "value": "",
                "description": " This field is deprecated and will be removed in future versions. Use configuration_id instead. Entity_id is required if configuration_id is not passed. In order for us to return data in compliance with settings defined for each client company, we need to identify the client company for this request. This parameter represents Internal Company ID as shown in Admin Panel. Example: 23.",
                "req": false
            },
            {
                "key": "hotel_id",
                "value": "",
                "description": "Single Hotel ID as returned by previous methods or cached by the application. Example: 590149.",
                "req": false
            },
            {
                "key": "hotels",
                "value": "",
                "description": " A list of hotel IDs (e.g. 123432,123433 ) or a single hotel ID as returned by calling the previous get_list method or cached by the client. Suggested maximum number of IDs in one request is 100. If some hotel IDs in the request are not known to our system, API will return availability for all the known hotels as well as an \u201cIncorrect hotels\u201d warning in the response. Required, unless search_id is passed in the request. Example: 590109,590111,590118",
                "req": false
            },
            {
                "key": "locale",
                "value": "",
                "description": " Forces system to return data in other languages if available. Defaults to en_US if not passed. Example: en_US.",
                "req": false
            },
            {
                "key": "nonce",
                "value": "",
                "description": "A randomly generated string of your choice. Ensure it is unique to each request with same timestamp within 5 minute interval and no more than 32 characters long. Maximum value length is 32. Example: 1543353502645.",
                "req": false
            },
            {
                "key": "session_id",
                "value": "",
                "description": " Customer generated identifier of user's session. Do not use real user's session id as it will be replayed back in the API response. Reuse this identifier for all requests by the same user. Including this value makes subsequent troubleshooting and audit easier, as it explicitly links together requests for individual users. <,>,& characters are not allowed. Example: 71IxqHT8mgMe5ohsZ25e5P.",
                "req": false
            },
            {
                "key": "system",
                "value": "",
                "description": "Certain things may be configured and subsequently returned very differently based on the booking channel. This attribute tells the system which one of the currently supported channels the data is being requested for. Please inquire which booking channel your integration should use for all requests when you obtain your API key. Example: obt.",
                "req": false
            },
            {
                "key": "timestamp",
                "value": "",
                "description": "Valid current UNIX timestamp in seconds. Example: 1388774110.",
                "req": false
            },
            {
                "key": "user_agent",
                "value": "",
                "description": "Properly encoded customer\u2019s user agent string (required to obtain mobile rates from some providers). For traffic from mobile or desktop apps (as opposed to browser apps), use the following format: {App Name}/{App Version} ({OS} {OS Version}) [APP or MOBILE_APP] (e.g. TripSource/5.0 (iOS 10_10_3) MOBILE_APP). Note: Required to get discounted mobile rates Example: Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685533236849,
        "lastModifiedTime": 1685598629331,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "customer_ip": null,
                    "errors": [],
                    "hotels_data": {
                        "address": "Schottenring 24",
                        "airport_code": "VIE",
                        "amenities": {
                            "property_amenities": [
                                "AIRSH",
                                "BAR",
                                "BCNT",
                                "BFST",
                                "CCNT",
                                "CLNG",
                                "FWIFI",
                                "GOLF",
                                "GYM",
                                "INTT",
                                "KIDAC",
                                "LIFT",
                                "LNDR",
                                "MTNG",
                                "NSMK",
                                "PARK",
                                "PETS",
                                "POOL",
                                "RSTR",
                                "RSVC",
                                "SAUNA",
                                "TENN",
                                "WCHR"
                            ],
                            "room_amenities": [
                                "ACND",
                                "MBAR",
                                "SAFE",
                                "TV"
                            ]
                        },
                        "area_attraction": "Distances are displayed to the nearest 0.1 mile and kilometer. <br /> <p>Vienna City Hall Area - 0.7 km / 0.4 mi <br /> Sigmund Freud Museum - 0.7 km / 0.4 mi <br /> Judenplatz - 0.7 km / 0.4 mi <br /> Schottenkirche - 0.8 km / 0.5 mi <br /> Votive Church - 0.9 km / 0.5 mi <br /> Schwedenplatz - 0.9 km / 0.6 mi <br /> University of Vienna - 1 km / 0.6 mi <br /> St. Peter's Church - 1 km / 0.6 mi <br /> Vienna Ring Tram - 1 km / 0.6 mi <br /> Burgtheater - 1 km / 0.6 mi <br /> Graben - 1.1 km / 0.7 mi <br /> Rathausplatz - 1.1 km / 0.7 mi <br /> Rathaus - 1.1 km / 0.7 mi <br /> Michaelerplatz - 1.2 km / 0.7 mi <br /> St. Stephen's Cathedral - 1.3 km / 0.8 mi <br /> </p><p>The preferred airport for Palais Hansen Kempinski Vienna is Vienna (VIE-Vienna Intl.) - 20 km / 12.5 mi </p>",
                        "chain_info": [
                            {
                                "chain_code": "KI",
                                "chain_name": "Kempinski Hotels",
                                "master_chain_code": "GL",
                                "master_chain_name": "Globalhotel Alliance"
                            }
                        ],
                        "checkin_time": "15:00",
                        "checkout_time": "12:00",
                        "city": "Vienna",
                        "client_preference_tier": 0,
                        "client_preferred": true,
                        "country_code": "AT",
                        "description": "Built as a hotel for the World Exhibition in Vienna in 1873, the luxurious Palais Hansen Kempinski Vienna can be found right on the famous Ringstra\u00dfe boulevard in the heart of the city, 10 minutes' walk from St. Stephen's Cathedral. Re-opened in March 2013, it has 2 restaurants, a bar and an exclusive spa and fitness centre. The rooms at the Palais Hansen Kempinski Vienna are decorated with high-quality fabrics and carpets. They are equipped with a Nespresso coffee machine and an in-room tablet. They offer views of the surrounding historic buildings or the inner courtyard. All rooms are non-smoking. A wide range of typical Viennese specialities, as well as dishes from all over the world are served in the hotel's restaurants, which also have a show kitchen. There is an elegant cigar lounge and a lobby lounge and bar serving coffee, Viennese pastries, and delicious cocktails. Spa and fitness facilities include a sauna area, 6 treatment rooms, a hydro pool and state-of-the-art equipment for your workout. Sufficient parking spaces are available on site. Within a 5-minute walk, you can reach the Sigmund Freud Museum and the Danube Canal with its numerous summer bars. The Baroque-style Augarten Park is 10 minutes away. Sch\u00f6nbrunn Palace is easily reachable by metro from the nearby Schottenring Metro Station.\n\nIf you book a non-refundable, fully prepaid rate, the hotel will send you an email with a secure payment link in order to authorize the credit card transaction.\n\nPlease note that different cancellation policies apply for group bookings of 9 or more rooms.",
                        "dining": "Enjoy international cuisine at Edvard, one of the hotel's 2 restaurants, or stay in and take advantage of the 24-hour room service. Need to unwind? Take a break with a tasty beverage at one of the 2 bars/lounges. Buffet breakfasts are available daily from 6:30 AM to 10:30 AM for a fee.",
                        "fax": "43123610001000",
                        "giata_ids": [
                            "284896"
                        ],
                        "has_ecofriendly_badge": true,
                        "hotel_currency": "EUR",
                        "hotel_rating": 5,
                        "id": 590149,
                        "is_bcd_great_rate_hotel": false,
                        "is_cash_only_hotel": false,
                        "is_fema_compliant": false,
                        "is_on_request_hotel": false,
                        "latitude": 48.21658,
                        "longitude": 16.36853,
                        "name": "Palais Hansen Kempinski Vienna",
                        "phone": "43-1-2361000",
                        "policy": "<p><b>Know Before You Go</b> <br /><ul>  <li>This property offers transfers from the airport (surcharges may apply). Guests must contact the property with arrival details before travel, using the contact information on the booking confirmation. </li> <li>Reservations are required for massage services and spa treatments. Reservations can be made by contacting the hotel prior to arrival, using the contact information on the booking confirmation. </li><li>The property has connecting/adjoining rooms, which are subject to availability and can be requested by contacting the property using the number on the booking confirmation. </li> </ul></p><p><b>Fees</b> <br /><p>The following fees and deposits are charged by the property at time of service, check-in, or check-out. </p> <ul> <li>Fee for buffet breakfast: EUR 42.00 per person (approximately)</li>     <li>Airport shuttle fee: EUR 60 per vehicle (one way)</li>  <li>Self parking fee: EUR 40 per day</li>     <li>Pet fee: EUR 35 per pet, per day</li>                  </ul> <p>The above list may not be comprehensive. Fees and deposits may not include tax and are subject to change. </p></p>",
                        "postal_code": "1010",
                        "property_type": "Hotel",
                        "rating_extra": "LSR 5.0,MOB 5.0,NTM 5.0",
                        "recreation": "Recreational amenities at the hotel include an indoor pool, a 24-hour health club, and a sauna.  <p>The recreational activities listed below are available either on site or nearby; fees may apply. </p>",
                        "regions": {
                            "neighborhood": [
                                "Innere Stadt"
                            ]
                        },
                        "security_vetted": false,
                        "short_description": "Palais Hansen Kempinski Vienna is a stunning Grand hotel of the 21st century.",
                        "state_province_code": null,
                        "thumbnails": [
                            "https://d2p3d64ud0ufix.cloudfront.net/1/1f/1fe0/1fe063c29f9e48628e9cd3012a50a145_",
                            "https://d2p3d64ud0ufix.cloudfront.net/8/81/818a/818afbe8a1be479bbd2bc66db480a22c_",
                            "https://d2p3d64ud0ufix.cloudfront.net/0/04/0453/04531eda2a784da183e26fdb555b56a4_",
                            "https://d2p3d64ud0ufix.cloudfront.net/2/23/23de/23dee6f49740475880cc2902a321665d_",
                            "https://d2p3d64ud0ufix.cloudfront.net/7/7d/7d45/7d45ea497694408b90bf51e9b865a13b_",
                            "https://d2p3d64ud0ufix.cloudfront.net/8/8c/8c10/8c101928d85644b3b409e2507c3a0160_",
                            "https://d2p3d64ud0ufix.cloudfront.net/3/31/3105/3105afcfe58345a1a5809e56135c3ba0_",
                            "https://d2p3d64ud0ufix.cloudfront.net/1/1f/1f55/1f5511da204e4905a63f30838e5645e6_",
                            "https://d2p3d64ud0ufix.cloudfront.net/d/d0/d0b7/d0b7721e468b474cbed18e0b3a412725_",
                            "https://d2p3d64ud0ufix.cloudfront.net/9/96/96a0/96a003f57dc744b3b602e84efdbcc22b_"
                        ],
                        "tmc_preference_tier": 2,
                        "tmc_preferred": false,
                        "trip_advisor_rating": null,
                        "trip_advisor_review_count": null,
                        "trustyou_rating": 4.8,
                        "what_to_expect": "<ul>  <li>This property offers transfers from the airport (surcharges may apply). Guests must contact the property with arrival details before travel, using the contact information on the booking confirmation. </li> <li>Reservations are required for massage services and spa treatments. Reservations can be made by contacting the hotel prior to arrival, using the contact information on the booking confirmation. </li><li>The property has connecting/adjoining rooms, which are subject to availability and can be requested by contacting the property using the number on the booking confirmation. </li> </ul>"
                    },
                    "locale": "en_US",
                    "session_id": "175yjR7bpRb8phv6bJrQvw",
                    "user_agent": "MOBAPICLIENTv1"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95580,
        "executor_type": "THIRDPARTY",
        "executor_name": "getrates",
        "executor_version": "v1",
        "executor_display_name": "get_rates v2",
        "executor_description": "Retrieves detailed hotel room rate information for one hotel.",
        "executor_category": "Hotels",
        "executor_category_group": "Hotels",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-d42b36950c-tshapiv20.apiary-mock.com/hotels/get_rates/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "api_key",
                "value": "",
                "description": " Public key, provided by BCD Travel API team Example: testkey.",
                "req": false
            },
            {
                "key": "checkin",
                "value": "",
                "description": "Date of the hotel check-in. Expected format is \"YYYY-MM-DD\". If provided, hotel preference (BCD and client preferred flags and tier) will be returned as it would exist on the date of checkin (recommended for implementations). If not provided, hotel preference (BCD and client preferred flags and tier) will be returned as it exists on the date of the search (less accurate, not recommended for implementations). Example: 2018-10-28.",
                "req": false
            },
            {
                "key": "checkout",
                "value": "",
                "description": " Date of the hotel check-out. Expected format is YYYY-MM-DD. Required, unless search_id is passed in the request. Example: 2018-10-29.",
                "req": false
            },
            {
                "key": "configuration_id",
                "value": "",
                "description": " In order for us to return data in compliance with settings defined for each client configuration, we need to identify the client configuration for this request. This parameter represents Internal Configuration ID as returned in get_configurations. Example: 3500000023.",
                "req": false
            },
            {
                "key": "currency",
                "value": "",
                "description": " ISO 4217 formatted code of a currency that should be used to produce prices in (e.g. EUR ). When omitted (or passed as \u201c___\u201d), will return prices in local currencies for each hotel. We support most of the commonly used currencies (see https://openexchangerates.org/currencies for the full list). Required, unless search_id is passed in the request. Example: EUR.Show Possible Values",
                "req": false
            },
            {
                "key": "customer_ip",
                "value": "",
                "description": " IP address of a user, as captured by the customer\u2019s integration. Ensure your integration passes the user\u2019s IP, not your own. This value helps determine user's location for fraud recovery and other analytics. Example: 192.168.31.116.",
                "req": false
            },
            {
                "key": "date_format_type",
                "value": "",
                "description": " Accepts two-letter language code (one of: de , fr , en , es , it, ko, ja or pt ). If passed, system will return dates (i.e. those in cancellation policy) in the format corresponding to passed language. If not, it will be returned based on the locale. Example: en.",
                "req": false
            },
            {
                "key": "dont_wait_for_results",
                "value": "",
                "description": " Accepts true/false (default is \u201cfalse\u201d). As an alternative to specifying a short timeout (see above), this optional boolean request parameter forces the system to return search_id as soon as system generates it (without waiting for any results). It can then be used to periodically poll for results using search_id. If search_id is passed in the request, do not pass this parameter. Example: false. Default: false.",
                "req": false
            },
            {
                "key": "entity_id",
                "value": "",
                "description": " This field is deprecated and will be removed in future versions. Use configuration_id instead. Entity_id is required if configuration_id is not passed. In order for us to return data in compliance with settings defined for each client company, we need to identify the client company for this request. This parameter represents Internal Company ID as shown in Admin Panel. Example: 23",
                "req": false
            },
            {
                "key": "guest_count",
                "value": "",
                "description": "Number of guests in the room (e.g. guest_count=3 means that the room is for three people). Required, unless search_id is passed in the request. Minimum is 1. Maximum is 4. Example: 1.",
                "req": false
            },
            {
                "key": "hotel_id",
                "value": "",
                "description": " Single hotel ID (e.g. 123456 ) as returned by previous methods or cached by the application. Required, unless search_id is passed in the request. Example: 590109.",
                "req": false
            },
            {
                "key": "include_more_details",
                "value": "",
                "description": "Accepts true/false (default is \u201cfalse\u201d). If passed, this boolean flag will tell the API to return a little bit more information for each rate ( billing_address_required , cvv_required , loyalty_programs , payment_cards_accepted , special_requests ). This extra information is also present in the response of the get_rate_details call. Example: false. Default: false.",
                "req": false
            },
            {
                "key": "is_multi_traveler_mode",
                "value": "",
                "description": "For internal use. Obsolete. Ignored. Example: false. Default: false.",
                "req": false
            },
            {
                "key": "locale",
                "value": "",
                "description": " Forces system to return data in other languages if available. Defaults to en_US if not passed. Example: en_US.",
                "req": false
            },
            {
                "key": "loyalty_program_codes",
                "value": "",
                "description": "Accepts comma-separated list of GDS-rate codes from the list returned by get_company_settings API call within hotel_loyalty_programs structure. If passed, results will include member-only rates (rates that require participation in a special Hotel Loyalty Program) in results, if available. Example: Y48,YR9.",
                "req": false
            },
            {
                "key": "nonce",
                "value": "",
                "description": " A randomly generated string of your choice. Ensure it is unique to each request with same timestamp within 5 minute interval and no more than 32 characters long. Maximum value length is 32. Example: 1543353502645.",
                "req": false
            },
            {
                "key": "search_id",
                "value": "",
                "description": " Among other things, each response will contain a search_id that can be used to receive updated results for a previous submitted availability search. This works in conjunction with specifying the timeout value to instantly receive current state of results for the previously submitted search back. Each response will also contain a flag that indicates whether our system expects any updates to the requested data set or not that can be used as an indicator for when to stop asking for updates. If omitted, implies a new search. Please note that you must send only_available_hotels=true flag along with the search_id to get only available results back even if the original search was already asking only_available_hotels=true. Example: 7tdVikde8zhk2RRKpqYK82. St",
                "req": false
            },
            {
                "key": "session_id",
                "value": "",
                "description": "Customer generated identifier of user's session. Do not use real user's session id as it will be replayed back in the API response. Reuse this identifier for all requests by the same user. Including this value makes subsequent troubleshooting and audit easier, as it explicitly links together requests for individual users. <,>,& characters are not allowed. Example: 71IxqHT8mgMe5ohsZ25e5P.",
                "req": false
            },
            {
                "key": "system",
                "value": "",
                "description": "Certain things may be configured and subsequently returned very differently based on the booking channel. This attribute tells the system which one of the currently supported channels the data is being requested for. Please inquire which booking channel your integration should use for all requests when you obtain your API key. Example: obt.Show Possible Values",
                "req": false
            },
            {
                "key": "timeout",
                "value": "",
                "description": " Our system generates numerous parallel requests to various data providers to get the requested data back. This parameter determines how long the system should wait before returning the results (some providers may return the data fast, others may take a while). Value should be specified in seconds (e.g. 10). Minimum timeout that the system can handle is 5 seconds. Depending on the system load, it may actually take longer than the specified value to return. Optional, if omitted would wait until it gets all the results back (may take up to 45 seconds in some cases with a hard system timeout at 180 seconds) before returning the response. If updated results are required, it can be achieved by calling the same method and passing the search_id returned in the first call (see above). If search_id is passed in the request, do not pass this parameter. Example: 10.",
                "req": false
            },
            {
                "key": "timestamp",
                "value": "",
                "description": "Valid current UNIX timestamp in seconds. Example: 1388774110.",
                "req": false
            },
            {
                "key": "user_agent",
                "value": "",
                "description": "Properly encoded customer\u2019s user agent string (required to obtain mobile rates from some providers). For traffic from mobile or desktop apps (as opposed to browser apps), use the following format: {App Name}/{App Version} ({OS} {OS Version}) [APP or MOBILE_APP] (e.g. TripSource/5.0 (iOS 10_10_3) MOBILE_APP). Note: Required to get discounted mobile rates Example: Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685533911527,
        "lastModifiedTime": 1685598670168,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "chunks_received": 6,
                    "chunks_requested": 6,
                    "chunks_with_errors": 0,
                    "customer_ip": null,
                    "data_is_complete": true,
                    "errors": [],
                    "hotel_id": 602182,
                    "hotel_name": "Adagio SP Berrini",
                    "locale": "en_US",
                    "rates": [
                        {
                            "additional_rate_information": "Cancellable booking. The person whose name is on the reservation must be at least 18 years of age to check in.\nParking is available at an additional fee, payable locally. Valet Only. No Bus Parking Available.\nRollaway beds are available based upon availability for an additional fee, payable locally.\n\n. Wheelchair-accessible.  Unless otherwise specified city and/or stay taxes might be payable upon check-out at hotel front desk.",
                            "average": 111.96,
                            "average_after_taxes_usd": 117.56,
                            "average_before_taxes_usd": 111.96,
                            "bed_types": [
                                "single"
                            ],
                            "billing_address_required": true,
                            "cancel_by": "2019-02-13T10:59:00",
                            "cancellation_fee_frames": [
                                {
                                    "currency": "USD",
                                    "from_date": "2019-01-28T12:36:52",
                                    "original_currency": "BRL",
                                    "original_price": 0,
                                    "price": 0,
                                    "to_date": "2019-02-13T10:58:59"
                                },
                                {
                                    "currency": "USD",
                                    "from_date": "2019-02-13T10:59:00",
                                    "original_currency": "BRL",
                                    "original_price": 424,
                                    "price": 111.98,
                                    "to_date": "2019-02-14T23:59:59"
                                }
                            ],
                            "cancellation_policy": "Charge of 1 night(s) after 02/13/2019 10:59 AM local hotel time (GMT-04:00).",
                            "cancellation_policy_known": true,
                            "change_during_stay": false,
                            "client_preferred": false,
                            "commission": {
                                "commissionable": true,
                                "description": "USD 4.00% agent's commission",
                                "percent": 4
                            },
                            "currency": "USD",
                            "cvv_required": false,
                            "is_mobile": false,
                            "is_on_request": false,
                            "local_average": 424,
                            "local_currency": "BRL",
                            "local_taxes": 42.4,
                            "local_total": 890.4,
                            "loyalty_card_allowed": false,
                            "loyalty_programs": [],
                            "members_only": false,
                            "merchant_of_record": "property",
                            "non_refundable": false,
                            "original_average": 424,
                            "original_currency": "BRL",
                            "original_taxes": 42.4,
                            "original_total": 890.4,
                            "out_of_policy": false,
                            "out_of_policy_reason": null,
                            "paid_policy": "G",
                            "payment_cards_accepted": [
                                {
                                    "code": "AX",
                                    "mandatory_checkout_text": "This payment will be processed in US."
                                },
                                {
                                    "code": "CA",
                                    "mandatory_checkout_text": "This payment will be processed in Brazil."
                                },
                                {
                                    "code": "DC",
                                    "mandatory_checkout_text": "This payment will be processed in Brazil."
                                },
                                {
                                    "code": "VI",
                                    "mandatory_checkout_text": "This payment will be processed in Brazil."
                                }
                            ],
                            "payment_options": [
                                "card"
                            ],
                            "provider": "eps",
                            "qualities": [],
                            "rate_code": "202567447",
                            "rate_company_name": null,
                            "rate_description": "Standard Apartment",
                            "rate_group_id": "247002",
                            "rate_key": "eJw1jTEOAjEMBL/CB4wcx0ms7aC5hgoegJJzEA0ROuX/AnRim6lmVgTILMG+3LcAvY77cwViYGEDhCXloloAbxaq9UIt+krK3agV7pS55uYSHyk6JeZALPozWXNIMe3t8/UCmNqR/2+3WYfXzQ+nd93mq4/5AUy6JcQ=",
                            "rate_promoline": "Advance purchase rate, prepay in full, non-refundable, no chang",
                            "rate_value_adds": [
                                "FBFST",
                                "FINTT",
                                "FWIFI"
                            ],
                            "remaining_rooms_number": null,
                            "room_type_code": "200461535",
                            "sort_metric": 230.11,
                            "special_requests": {
                                "sr_allowed": false,
                                "sr_length": 0
                            },
                            "tax_mark": "TE",
                            "taxes": 11.2,
                            "tmc_preferred": false,
                            "total": 235.11
                        },
                        {
                            "additional_rate_information": null,
                            "average": 111.96,
                            "average_after_taxes_usd": 117.56,
                            "average_before_taxes_usd": 111.96,
                            "bed_types": [
                                "double"
                            ],
                            "billing_address_required": false,
                            "cancel_by": "2019-02-13T18:00:00",
                            "cancellation_fee_frames": [
                                {
                                    "currency": "USD",
                                    "from_date": "2019-01-28T12:36:52",
                                    "original_currency": "BRL",
                                    "original_price": 0,
                                    "price": 0,
                                    "to_date": "2019-02-13T17:59:59"
                                },
                                {
                                    "currency": "USD",
                                    "from_date": "2019-02-13T18:00:00",
                                    "original_currency": "BRL",
                                    "original_price": 424,
                                    "price": 111.98,
                                    "to_date": "2019-02-14T23:59:59"
                                }
                            ],
                            "cancellation_policy": "Cancel before 02/13/2019 06:00 PM local hotel time.",
                            "cancellation_policy_known": true,
                            "change_during_stay": false,
                            "client_preferred": false,
                            "commission": {
                                "commissionable": true,
                                "description": "USD 5.00% agent's commission",
                                "percent": 5
                            },
                            "currency": "USD",
                            "cvv_required": false,
                            "is_mobile": false,
                            "is_on_request": false,
                            "local_average": 424,
                            "local_currency": "BRL",
                            "local_taxes": 42.4,
                            "local_total": 890.4,
                            "loyalty_card_allowed": true,
                            "loyalty_programs": [
                                {
                                    "loyalty_card_chain_code": "BY",
                                    "loyalty_card_chain_name": "Banyan Tree"
                                },
                                {
                                    "loyalty_card_chain_code": "PU",
                                    "loyalty_card_chain_name": "Pullman"
                                },
                                {
                                    "loyalty_card_chain_code": "RT",
                                    "loyalty_card_chain_name": "Accor Hotels"
                                },
                                {
                                    "loyalty_card_chain_code": "RX",
                                    "loyalty_card_chain_name": "Rixos Hotels"
                                },
                                {
                                    "loyalty_card_chain_code": "SB",
                                    "loyalty_card_chain_name": "Sofitel"
                                }
                            ],
                            "members_only": false,
                            "merchant_of_record": "property",
                            "non_refundable": false,
                            "original_average": 424,
                            "original_currency": "BRL",
                            "original_taxes": 42.4,
                            "original_total": 890.4,
                            "out_of_policy": true,
                            "out_of_policy_reason": {
                                "description": "Room Rate Cannot Exceed 60.00 EUR (approx. 68.35 USD) Per Night.",
                                "parameters": {
                                    "currency": "USD",
                                    "local_currency": "BRL",
                                    "local_max_value": 256.87,
                                    "max_value": 68.35,
                                    "original_currency": "EUR",
                                    "original_max_value": 60
                                }
                            },
                            "paid_policy": "G",
                            "payment_cards_accepted": [],
                            "payment_options": [
                                "card"
                            ],
                            "provider": "sabre",
                            "qualities": [
                                "best_gds_rate"
                            ],
                            "rate_code": "BCD",
                            "rate_company_name": "BCD Travel",
                            "rate_description": "The hotel does not accept check.\nStandard apartment with a double bed",
                            "rate_group_id": "241412",
                            "rate_key": "eJw1TE0LgkAUvPcr3r0w3b7kgYdUKMJSs0vd1t0HG5maPgn89S1FAzMDw8wIgbh2hedb/2GH2MuyI8TVxlu4iGEUI4pTnkWumadT5jQtxuMwXl95ECBmXvztzMK95eGGuE0Sm5yt+Evfcf/HF0NgGqYKdEM91A2DVIpaBmVIPZxJwbLWstMgW9nxk2qG950NSDsYyoqgJP0B1Vo02g==",
                            "rate_promoline": "BCD Travel-bb/bed brkfast",
                            "rate_value_adds": [
                                "FWIFI"
                            ],
                            "remaining_rooms_number": null,
                            "room_type_code": "P1D",
                            "sort_metric": 1000000185.47,
                            "special_requests": {
                                "sr_allowed": true,
                                "sr_length": 255
                            },
                            "tax_mark": "TE",
                            "taxes": 11.2,
                            "tmc_preferred": true,
                            "total": 235.11
                        }
                    ],
                    "search_id": "6Kh1dFepNaxAyhphcmp0o2",
                    "session_id": "7DEe0z5WMovtzhVZC2rc13",
                    "user_agent": "MOBAPICLIENTv1",
                    "warnings": [
                        {
                            "message": "sabre error in HotelPropertyDescriptionLLSRQ: \u2021CK RATE CATG CODE",
                            "method": "HotelPropertyDescriptionLLSRQ",
                            "presentation_message": null,
                            "provider": "sabre",
                            "provider_message": "\u2021CK RATE CATG CODE",
                            "raw_response": "\n<Envelope xmlns:soap-env=\"http://schemas.xmlsoap.org/soap/envelope/\"><Header><MessageHeader xmlns:eb=\"http://www.ebxml.org/namespaces/messageHeader\" eb:version=\"1.0\" soap-env:mustUnderstand=\"1\"><From><PartyId eb:type=\"URI\">webservices.sabre.com</PartyId></From><To><PartyId eb:type=\"URI\">getgoing.com</PartyId></To><CPAId>J92H</CPAId><ConversationId>949f731c-a8f0-11e7-a62f-0ed50056acc4</ConversationId><Service eb:type=\"OTA\">HotelPropertyDescriptionLLSRQ</Service><Action>HotelPropertyDescriptionLLSRS</Action><MessageData><MessageId>855184394354960550</MessageId><Timestamp>2017-10-04T10:57:15</Timestamp><RefToMessageId>c8555198-a8f2-11e7-a62f-0ed50056acc4</RefToMessageId></MessageData></MessageHeader><Security xmlns:wsse=\"http://schemas.xmlsoap.org/ws/2002/12/secext\"><BinarySecurityToken valueType=\"String\" EncodingType=\"wsse:Base64Binary\">Shared/IDL:IceSess\\/SessMgr:1\\.0.IDL/Common/!ICESMS\\/RESE!ICESMSLB\\/RES.LB!-3225588275608098172!407132!0!1</BinarySecurityToken></Security></Header><Body><HotelPropertyDescriptionRS xmlnspace=\"http://webservices.sabre.com/sabreXML/2011/10\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:stl=\"http://services.sabre.com/STL/v01\" Version=\"2.3.0\">\n <ApplicationResults status=\"NotProcessed\">\n  <Error type=\"BusinessLogic\" timeStamp=\"2017-10-04T05:57:15-05:00\">\n   <SystemSpecificResults>\n    <HostCommand LNIATA=\"222222\">HOD9995\u00a5B8D\u00a5BCD\u00a5BHD\u00a5BJZ/22NOV-23NOV1/RC-T,S,Q/*R</HostCommand>\n    <Message code=\"0\">\u2021CK RATE CATG CODE</Message>\n    <ShortText>ERR.SWS.HOST.ERROR_IN_RESPONSE</ShortText>\n   </SystemSpecificResults>\n  </Error>\n </ApplicationResults>\n</HotelPropertyDescriptionRS></Body></Envelope>",
                            "type": "ProcessingError"
                        },
                        {
                            "message": "totalstay error in SearchRequest: Could not find login credentials for bcdtravel/xmlbad1d1",
                            "method": "SearchRequest",
                            "presentation_message": null,
                            "provider": "totalstay",
                            "provider_message": "Could not find login credentials for bcdtravel/xmlbcd111",
                            "raw_response": "<SearchResponse><ReturnStatus><Success>false</Success><Exception>Could not find login credentials for bcdtravel/xmlbad1d1</Exception></ReturnStatus></SearchResponse>",
                            "type": "InvalidCredentials"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95717,
        "executor_type": "THIRDPARTY",
        "executor_name": "rebook",
        "executor_version": "v2",
        "executor_display_name": "rebook",
        "executor_description": "Books a new hotel room/rate (when an active reservation already exists).",
        "executor_category": "Hotels",
        "executor_category_group": "Hotels",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://private-anon-a03b85d2d4-tshapiv20.apiary-mock.com/hotels/rebook/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "api_key": "testkey",
                "booker_email": "johnsmith@mail.com",
                "booker_first_name": "John",
                "booker_last_name": "Smith",
                "booking_uid": "hh3KIyTh3VG1rGUV28Azl157",
                "booktrack_id": "booking_XX1234",
                "callback_url": "http://trips.mttnow.com/trips/update",
                "checkin": "2019-02-05",
                "checkout": "2019-02-07",
                "customer_ip": "192.168.31.116",
                "hotel_id": 602182,
                "locale": "en_US",
                "nonce": "1543353502645",
                "original_currency": "EUR",
                "original_total": 200,
                "rate_key": "eJw1jE0LwjAQRO/+ir1ba1tF6t4aC4IIlTQnb9tkJdJP0lT/vlXpXB4M8yZOEA9REqcz/zkjUkuGpxFRqjIrhCwQxSlHvMX5wl8TiMs9UHL31YS8Ih73aRgtR/MAlKMXNxshtoLNWrj6QaNfKctge88NmJ5H6HoPpDUPHrRlXYer0lNnyBnIBnK+5c7D++kt0CxMVcNQsfkA3yA4NA==",
                "send_confirmation_email": false,
                "session_id": "71IxqHT8mgMe5ohsZ25e5P",
                "skip_gds_queuing": false,
                "timestamp": 1388774110,
                "user_agent": "Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685600758646,
        "lastModifiedTime": 1685604610556,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Successful Request",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "booking_uid": "hh4Fif7QOX7MQn7GH8n7L2l4",
                    "customer_ip": "192.165.34.56",
                    "errors": [],
                    "locale": "en_US",
                    "session_id": "12334556723",
                    "user_agent": "MOBILEAPP"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95723,
        "executor_type": "THIRDPARTY",
        "executor_name": "getreservationslist",
        "executor_version": "v2",
        "executor_display_name": "get_reservations_list",
        "executor_description": "Retrieves a list of the active, completed, or cancelled reservations of a traveler.",
        "executor_category": "Hotels",
        "executor_category_group": "Hotels",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-a03b85d2d4-tshapiv20.apiary-mock.com/hotels/get_reservations_list/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "api_key",
                "value": "",
                "description": "Public key, provided by BCD Travel API team Example: testkey.",
                "req": false
            },
            {
                "key": "configuration_id",
                "value": "",
                "description": " In order for us to return data in compliance with settings defined for each client configuration, we need to identify the client configuration for this request. This parameter represents Internal Configuration ID as returned in get_configurations. Example: 3500000023.",
                "req": false
            },
            {
                "key": "customer_ip",
                "value": "",
                "description": " IP address of a user, as captured by the customer\u2019s integration. Ensure your integration passes the user\u2019s IP, not your own. This value helps determine user's location for fraud recovery and other analytics. Example: 192.168.31.116.",
                "req": false
            },
            {
                "key": "entity_id",
                "value": "",
                "description": " This field is deprecated and will be removed in future versions. Use configuration_id instead. Entity_id is required if configuration_id is not passed. In order for us to return data in compliance with settings defined for each client company, we need to identify the client company for this request. This parameter represents Internal Company ID as shown in Admin Panel. Example: 23.",
                "req": false
            },
            {
                "key": "locale",
                "value": "",
                "description": " Forces system to return data in other languages if available. Defaults to en_US if not passed. Example: en_US.",
                "req": false
            },
            {
                "key": "nonce",
                "value": "",
                "description": " A randomly generated string of your choice. Ensure it is unique to each request with same timestamp within 5 minute interval and no more than 32 characters long. Maximum value length is 32. Example: 1543353502645.",
                "req": false
            },
            {
                "key": "session_id",
                "value": "",
                "description": " Customer generated identifier of user's session. Do not use real user's session id as it will be replayed back in the API response. Reuse this identifier for all requests by the same user. Including this value makes subsequent troubleshooting and audit easier, as it explicitly links together requests for individual users. <,>,& characters are not allowed. Example: 71IxqHT8mgMe5ohsZ25e5P.",
                "req": false
            },
            {
                "key": "status",
                "value": "",
                "description": "Pass one of the following statuses to filter the list of reservations matching traveler\u2019s e-mail based on the reservation status: active (to return only future active reservations), partial (to return only partially successful reservations), canceled (to return only canceled reservations), failed (to return only reservations that have failed) or past (to return only past reservations \u2013 both canceled and non-canceled). Example: active.",
                "req": false
            },
            {
                "key": "system",
                "value": "",
                "description": "Certain things may be configured and subsequently returned very differently based on the booking channel. This attribute tells the system which one of the currently supported channels the data is being requested for. Please inquire which booking channel your integration should use for all requests when you obtain your API key. Example: obt.",
                "req": false
            },
            {
                "key": "timestamp",
                "value": "",
                "description": "Valid current UNIX timestamp in seconds. Example: 1388774110.",
                "req": false
            },
            {
                "key": "traveler_email",
                "value": "",
                "description": " Pass the url encoded e-mail of the traveler to get the list of reservations for. If there are reservations present in our system for the specified e-mail, they will be returned. Maximum length of the local part (before \"@\") is 50 characters. Example: johnsmith@mail.com.",
                "req": false
            },
            {
                "key": "user_agent",
                "value": "",
                "description": "Properly encoded customer\u2019s user agent string (required to obtain mobile rates from some providers). For traffic from mobile or desktop apps (as opposed to browser apps), use the following format: {App Name}/{App Version} ({OS} {OS Version}) [APP or MOBILE_APP] (e.g. TripSource/5.0 (iOS 10_10_3) MOBILE_APP). Note: Required to get discounted mobile rates Example: Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685601768845,
        "lastModifiedTime": 1685604586669,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Successful Request",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "booking_data": [
                        {
                            "booker_email": "johnsmith@example.com",
                            "booker_first_name": "John",
                            "booker_last_name": "Smith",
                            "booking_uid": "fi4sc2zicmjmr2ish2tyrbzbiu",
                            "checkin": "2017-04-12",
                            "checkout": "2017-04-13",
                            "hotel_address": "Fillgradergasse 4",
                            "hotel_city": "Wien 6",
                            "hotel_country_code": "AT",
                            "hotel_id": 2598155,
                            "hotel_latitude": 48.19963538,
                            "hotel_longitude": 16.35973692,
                            "hotel_name": "Terminus",
                            "hotel_postal_code": "1060",
                            "hotel_rating": 0,
                            "hotel_state_province_code": null,
                            "hotel_thumbnail": null,
                            "reservation_status": "failed",
                            "traveler_email": "JOHNSMITH@example.com",
                            "traveler_first_name": "JOHN",
                            "traveler_last_name": "SMITH"
                        },
                        {
                            "booker_email": "johnsmith@example.com",
                            "booker_first_name": "John",
                            "booker_last_name": "Smith",
                            "booking_uid": "xye2caoecitbjqbjpnqlk62tp",
                            "checkin": "2017-05-09",
                            "checkout": "2017-05-10",
                            "hotel_address": "1101 N Parkway Dr",
                            "hotel_city": "Fresno",
                            "hotel_country_code": "US",
                            "hotel_id": 632569,
                            "hotel_latitude": 36.75641,
                            "hotel_longitude": -119.82984,
                            "hotel_name": "Days Inn Fresno Central",
                            "hotel_postal_code": "93728",
                            "hotel_rating": 2,
                            "hotel_state_province_code": "CA",
                            "hotel_thumbnail": "https://d2p3d64ud0ufix.cloudfront.net/c/cd/cdf8/cdf8e90749564a10a43cb1174b833180_",
                            "reservation_status": "canceled",
                            "traveler_email": "JOHNSMITH@example.com",
                            "traveler_first_name": "JOHN",
                            "traveler_last_name": "SMITH"
                        }
                    ],
                    "customer_ip": "192.168.31.116",
                    "errors": [],
                    "locale": "en_US",
                    "session_id": "4V1W3TeQK5ilJf9jkDI1id",
                    "user_agent": "Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95724,
        "executor_type": "THIRDPARTY",
        "executor_name": "getreservationdetails",
        "executor_version": "v2",
        "executor_display_name": "get_reservation_details",
        "executor_description": "Retrieves a detailed reservation summary and status of a traveler reservation.",
        "executor_category": "Hotels",
        "executor_category_group": "Hotels",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-a03b85d2d4-tshapiv20.apiary-mock.com/hotels/get_reservation_details/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "api_key",
                "value": "",
                "description": "Public key, provided by BCD Travel API team Example: testkey.",
                "req": false
            },
            {
                "key": "booking_uid",
                "value": "",
                "description": " Identifier of the booking in our system as returned by either a book or a get_reservations_list API call. Example: e44sh55meai5d3kljfcrg2mmd7",
                "req": false
            },
            {
                "key": "currency",
                "value": "",
                "description": " Code of a currency that should be used to produce price conversions in ISO 4217 format. Example: EUR.",
                "req": false
            },
            {
                "key": "customer_ip",
                "value": "",
                "description": " IP address of a user, as captured by the customer\u2019s integration. Ensure your integration passes the user\u2019s IP, not your own. This value helps determine user's location for fraud recovery and other analytics. Example: 192.168.31.116.",
                "req": false
            },
            {
                "key": "locale",
                "value": "",
                "description": " Forces system to return data in other languages if available. Defaults to en_US if not passed. Example: en_US.",
                "req": false
            },
            {
                "key": "nonce",
                "value": "",
                "description": " A randomly generated string of your choice. Ensure it is unique to each request with same timestamp within 5 minute interval and no more than 32 characters long. Maximum value length is 32. Example: 1543353502645.",
                "req": false
            },
            {
                "key": "session_id",
                "value": "",
                "description": " Customer generated identifier of user's session. Do not use real user's session id as it will be replayed back in the API response. Reuse this identifier for all requests by the same user. Including this value makes subsequent troubleshooting and audit easier, as it explicitly links together requests for individual users. <,>,& characters are not allowed. Example: 71IxqHT8mgMe5ohsZ25e5P.",
                "req": false
            },
            {
                "key": "status",
                "value": "",
                "description": "Pass one of the following statuses to filter the list of reservations matching traveler\u2019s e-mail based on the reservation status: active (to return only future active reservations), partial (to return only partially successful reservations), canceled (to return only canceled reservations), failed (to return only reservations that have failed) or past (to return only past reservations \u2013 both canceled and non-canceled). Example: active.",
                "req": false
            },
            {
                "key": "system",
                "value": "",
                "description": "Certain things may be configured and subsequently returned very differently based on the booking channel. This attribute tells the system which one of the currently supported channels the data is being requested for. Please inquire which booking channel your integration should use for all requests when you obtain your API key. Example: obt.",
                "req": false
            },
            {
                "key": "timestamp",
                "value": "",
                "description": "Valid current UNIX timestamp in seconds. Example: 1388774110.",
                "req": false
            },
            {
                "key": "traveler_email",
                "value": "",
                "description": " Pass the url encoded e-mail of the traveler to get the list of reservations for. If there are reservations present in our system for the specified e-mail, they will be returned. Maximum length of the local part (before \"@\") is 50 characters. Example: johnsmith@mail.com.",
                "req": false
            },
            {
                "key": "user_agent",
                "value": "",
                "description": "Properly encoded customer\u2019s user agent string (required to obtain mobile rates from some providers). For traffic from mobile or desktop apps (as opposed to browser apps), use the following format: {App Name}/{App Version} ({OS} {OS Version}) [APP or MOBILE_APP] (e.g. TripSource/5.0 (iOS 10_10_3) MOBILE_APP). Note: Required to get discounted mobile rates Example: Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36.",
                "req": false
            },
            {
                "key": "date_format_type",
                "value": "",
                "description": "Accepts two-letter language code (one of: de, fr, en, es, it, ja or pt). If passed, system will return dates in cancellation policy in the format corresponding to the passed language (see response attributes). If not, it will be returned based on the locale. Example: en.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685602055483,
        "lastModifiedTime": 1685604541712,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Successful Request",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "additional_company_ids": {
                        "sap_account_number": "0123456789"
                    },
                    "booker_email": "johnsmith@example.com",
                    "booker_first_name": "John",
                    "booker_last_name": "Smith",
                    "booking_error": {
                        "external_error_text": "Sorry, we could not process your payment. \nPlease, verify that your credit card and billing information is correct and try again.",
                        "internal_error_text": "Refused",
                        "is_recoverable": true
                    },
                    "booking_status": "failed",
                    "booking_uid": "e44sh55meai5d3kljfcrg2mmd7",
                    "cancellation_confirmation_number": null,
                    "cancellation_error": {},
                    "cancellation_status": null,
                    "checkin": "2019-02-07",
                    "checkout": "2019-02-08",
                    "created_at": "2018-09-17T13:42:48.090146-07:00",
                    "customer_ip": "176.0.0.1",
                    "entity_id": 28,
                    "errors": [],
                    "gds_name": "sabre",
                    "guest_count": 1,
                    "hotel_address": "107 Albert Road",
                    "hotel_chain_code": null,
                    "hotel_chain_name": null,
                    "hotel_city": "Leeds",
                    "hotel_client_preferred": false,
                    "hotel_confirmation_number": null,
                    "hotel_country_code": "GB",
                    "hotel_id": 1548270,
                    "hotel_latitude": 53.74792,
                    "hotel_longitude": -1.59336,
                    "hotel_name": "The Miners Arms",
                    "hotel_phone": "44-1132-525766",
                    "hotel_postal_code": "LS27 8LG",
                    "hotel_rating": 3,
                    "hotel_state_province_code": null,
                    "hotel_thumbnail": "https://d2p3d64ud0ufix.cloudfront.net/0/07/0768/0768fd591eb7416fbc33a17b8a75bc6c_",
                    "hotel_tmc_preferred": false,
                    "is_ghost": true,
                    "locale": "en_US",
                    "payer": {
                        "card_number": "xxxxxxxxxxxx1111",
                        "card_type": "VI",
                        "first_name": "VPA",
                        "last_name": "DUMMY CARD"
                    },
                    "pnr_id": "BPCHVQ",
                    "rate_details": {
                        "additional_rate_information": null,
                        "average": 2402.11,
                        "average_after_taxes_usd": null,
                        "average_before_taxes_usd": 87.8,
                        "bed_types": [
                            "double",
                            "twin"
                        ],
                        "billing_address_required": true,
                        "cancel_by": "02/03/2019 12:00 AM",
                        "cancellation_fee_frames": [
                            {
                                "currency": "UAH",
                                "from_date": "2019-01-28T12:36:52",
                                "original_currency": "EUR",
                                "original_price": 0,
                                "price": 0,
                                "to_date": "2019-02-03T11:59:59"
                            },
                            {
                                "currency": "UAH",
                                "from_date": "2019-03-02T12:00:00",
                                "original_currency": "EUR",
                                "original_price": 73,
                                "price": 2402.11,
                                "to_date": "2019-03-07T23:59:59"
                            }
                        ],
                        "cancellation_policy": "Charge of UAH 0.00 applies when cancelling between 2018-09-17T00:00:00 UTC and 2019-02-03T12:00:00 UTC. Charge of UAH 2402.11 applies when cancelling after 2019-02-03T1200:00 UTC.",
                        "cancellation_policy_known": true,
                        "chain_code": null,
                        "chain_name": null,
                        "change_during_stay": false,
                        "checkin_time": null,
                        "checkout_time": null,
                        "client_preferred": false,
                        "commission": {
                            "commission_repr": "UAH 10.22 agent's commission",
                            "commissionable": true
                        },
                        "currency": "UAH",
                        "cvv_required": false,
                        "important_info": null,
                        "is_bcd_great_rate": false,
                        "is_mobile": false,
                        "is_on_request": true,
                        "is_package_rate": false,
                        "local_average": 73,
                        "local_currency": "EUR",
                        "local_taxes": null,
                        "local_total": 73,
                        "loyalty_card_allowed": false,
                        "loyalty_programs": [],
                        "members_only": false,
                        "merchant_of_record": "supplier",
                        "non_refundable": null,
                        "original_average": 73,
                        "original_currency": "EUR",
                        "original_taxes": null,
                        "original_total": 2402.11,
                        "out_of_policy": false,
                        "out_of_policy_reasons": [],
                        "paid_policy": "D",
                        "payment_cards_accepted": [
                            {
                                "code": "CA",
                                "mandatory_checkout_text": null
                            },
                            {
                                "code": "VI",
                                "mandatory_checkout_text": null
                            }
                        ],
                        "payment_details": null,
                        "payment_options": [
                            "card",
                            "invoice",
                            "vpa_guarantee"
                        ],
                        "per_night": [
                            {
                                "date": "2019-02-07",
                                "local_rate": 73,
                                "original_rate": 73,
                                "rate": 2402.11
                            }
                        ],
                        "provider": "totalstay",
                        "provider_id": "244595",
                        "rate_code": "175353071#175353072#175353073#128070257",
                        "rate_company_name": null,
                        "rate_description": "Double Or Twin Room, Ensuite",
                        "rate_key": "eJw9kMuOgjAARX+FxCWTsS0UpIkLsaCgICLgYweKikorUBT/foyTmbs6NzmrgwaEQKwOkA4I8TnLyWeUEMFFemtE+iIEqSo28FvUsYIVoMPeH6F/UnoQDYAOENYJGVWphkPzMO3uG3dlOXlfeLLjxHxj9rdeheCUu6xyCrqPNLtdU1/z8CJmz6y2433pwuXeaILqwVTYmKV/2wWJU85PV4pHTMNY68J5h/aDpD5ZcH2+VkamrQqlrmrjeG2tAtljbylmwT2TraPqnw2VN7KIjEXgypvI61w4mTMaceyg2WxS07Dsz8z4eUjtBR5PWjPMt6sRuFa3bY5TwNYyEIeItkk8z3NjRy8P0PFdZqHt5VVZy3FUGmnkJ/5zOCQE/Paz4pAQXfn+XOVdUMEaBNo7LG+zWy4tail6FkwKOS+/JIs1bSHyH1svdvE=",
                        "rate_promoline": null,
                        "rate_value_adds": [
                            "FBFST"
                        ],
                        "remaining_rooms_number": null,
                        "room_description": null,
                        "room_type_code": "0",
                        "special_requests": {
                            "sr_allowed": true,
                            "sr_length": 255
                        },
                        "tax_details": [],
                        "tax_mark": "TI",
                        "taxes": null,
                        "tmc_preferred": false,
                        "total": 2402.11
                    },
                    "res_payment_description": null,
                    "session_id": "71IxqHT8mgMe5ohsZ25e5P",
                    "special_request": null,
                    "supplier_confirmation_number": null,
                    "supplier_name": "totalstay",
                    "traveler_email": "johnsmith@example.com",
                    "traveler_first_name": "John",
                    "traveler_last_name": "Smith",
                    "user_agent": "4086740732",
                    "vpa_card_pool_id": "2427",
                    "vpa_transaction_id": "10301217"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95706,
        "executor_type": "THIRDPARTY",
        "executor_name": "book",
        "executor_version": "v2",
        "executor_display_name": "book",
        "executor_description": "Books a hotel room/rate.",
        "executor_category": "Hotels",
        "executor_category_group": "Hotels",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://private-anon-a03b85d2d4-tshapiv20.apiary-mock.com/hotels/book/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "api_key": "testkey",
                "booker_email": "johnsmith@example.com",
                "booker_first_name": "BookerFirst",
                "booker_last_name": "BookerLast",
                "booktrack_id": "tgjsgjs13503ss3959ss",
                "callback_url": "https://www.google.com/",
                "checkin": "2018-10-28",
                "checkout": "2018-10-29",
                "client_reportable_data": [
                    {
                        "answer": "HA",
                        "code": "MOBILE.HOTELS.CRD.hotel_reason_code"
                    }
                ],
                "credit_card_address": "addr1",
                "credit_card_city": "Atlanta",
                "credit_card_country_code": "US",
                "credit_card_expiration_month": "01",
                "credit_card_expiration_year": "2019",
                "credit_card_first_name": "GHOST",
                "credit_card_last_name": "CARD",
                "credit_card_number": "4111111111111111",
                "credit_card_phone": "1234567890",
                "credit_card_postal_code": "12345",
                "credit_card_state_province_code": "GA",
                "currency": "USD",
                "entity_id": 12,
                "guest_count": 1,
                "hotel_id": 5559989,
                "locale": "en_US",
                "nonce": "1546638469406",
                "original_currency": "UAH",
                "original_total": 1000,
                "payment_method": "card",
                "pnr_id": "W9WMYP",
                "rate_key": "eJw1jcEKwjAQRH+lH2Bkk+ymm7kJgl48iWepzZb2UAvBg/69 BeschzdvGBCRnDVjywmw7nkfe0AlJG2BoIGiJ05AHpiIH+ aszd5xkuC0l + LUm yeygWMxJ0TeUeB16XMkDVF/7tvhDKwc7el/dx27aqU5LnWeXkv97JrL9N6KL8 dLKJU= ",
                "salutation": "Mr",
                "send_confirmation_email": "true",
                "skip_gds_queuing": false,
                "special_request": "testing",
                "system": "mobile",
                "timestamp": "1546638467",
                "traveler_email": "johnsmith@example.com",
                "traveler_first_name": "TravelerFirst",
                "traveler_last_name": "TravelerLast"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685599308329,
        "lastModifiedTime": 1685604673795,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Successful Request",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "booking_uid": "hh4Fif7QOX7MQn7GH8n7L2l4",
                    "customer_ip": "192.165.34.56",
                    "errors": [],
                    "locale": "en_US",
                    "session_id": "12334556723",
                    "user_agent": "MOBILEAPP"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95719,
        "executor_type": "THIRDPARTY",
        "executor_name": "updatereservationdetails",
        "executor_version": "v2",
        "executor_display_name": "update_reservation_details",
        "executor_description": "Updates details of an active hotel reservation.",
        "executor_category": "Hotels",
        "executor_category_group": "Hotels",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://private-anon-a03b85d2d4-tshapiv20.apiary-mock.com/hotels/update_reservation_details/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "oauth_2_0",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "api_key": "testkey",
                "booking_data": {
                    "is_ghost": true
                },
                "booking_uid": "hh3KIyTh3VG1rGUV28Azl157",
                "configuration_id": 3500000023,
                "customer_ip": "192.168.31.116",
                "entity_id": 23,
                "locale": "en_US",
                "nonce": "1543353502645",
                "session_id": "71IxqHT8mgMe5ohsZ25e5P",
                "timestamp": 1388774110,
                "user_agent": "Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685600940456,
        "lastModifiedTime": 1685600940456,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Successful Request",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "booking_uid": "hh4Fif5DOX7MQn7GH8n7L1w",
                    "customer_ip": "192.168.31.116",
                    "errors": [],
                    "locale": "en_US",
                    "session_id": "40Lpcxqzu8X2z3YoZEHnEV",
                    "user_agent": "Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95725,
        "executor_type": "THIRDPARTY",
        "executor_name": "gethotelchainslist",
        "executor_version": "v2",
        "executor_display_name": "get_hotel_chains_list",
        "executor_description": "Retrieves a list of the hotel chains we support.",
        "executor_category": "Hotels",
        "executor_category_group": "Hotels",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-a03b85d2d4-tshapiv20.apiary-mock.com/hotels/get_hotel_chains_list/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "api_key",
                "value": "",
                "description": "Public key, provided by BCD Travel API team Example: testkey.",
                "req": false
            },
            {
                "key": "customer_ip",
                "value": "",
                "description": " IP address of a user, as captured by the customer\u2019s integration. Ensure your integration passes the user\u2019s IP, not your own. This value helps determine user's location for fraud recovery and other analytics. Example: 192.168.31.116.",
                "req": false
            },
            {
                "key": "locale",
                "value": "",
                "description": " Forces system to return data in other languages if available. Defaults to en_US if not passed. Example: en_US.",
                "req": false
            },
            {
                "key": "nonce",
                "value": "",
                "description": " A randomly generated string of your choice. Ensure it is unique to each request with same timestamp within 5 minute interval and no more than 32 characters long. Maximum value length is 32. Example: 1543353502645.",
                "req": false
            },
            {
                "key": "session_id",
                "value": "",
                "description": " Customer generated identifier of user's session. Do not use real user's session id as it will be replayed back in the API response. Reuse this identifier for all requests by the same user. Including this value makes subsequent troubleshooting and audit easier, as it explicitly links together requests for individual users. <,>,& characters are not allowed. Example: 71IxqHT8mgMe5ohsZ25e5P.",
                "req": false
            },
            {
                "key": "supplier",
                "value": "",
                "description": "Pass the supplier name to get a list of chains for that supplier. List of currently accepted suppliers is currently limited to GDS only. If omitted, hotel chains from all providers will be returned. Example: amadeus.",
                "req": false
            },
            {
                "key": "system",
                "value": "",
                "description": "Certain things may be configured and subsequently returned very differently based on the booking channel. This attribute tells the system which one of the currently supported channels the data is being requested for. Please inquire which booking channel your integration should use for all requests when you obtain your API key. Example: obt.",
                "req": false
            },
            {
                "key": "timestamp",
                "value": "",
                "description": "Valid current UNIX timestamp in seconds. Example: 1388774110.",
                "req": false
            },
            {
                "key": "traveler_email",
                "value": "",
                "description": " Pass the url encoded e-mail of the traveler to get the list of reservations for. If there are reservations present in our system for the specified e-mail, they will be returned. Maximum length of the local part (before \"@\") is 50 characters. Example: johnsmith@mail.com.",
                "req": false
            },
            {
                "key": "user_agent",
                "value": "",
                "description": "Properly encoded customer\u2019s user agent string (required to obtain mobile rates from some providers). For traffic from mobile or desktop apps (as opposed to browser apps), use the following format: {App Name}/{App Version} ({OS} {OS Version}) [APP or MOBILE_APP] (e.g. TripSource/5.0 (iOS 10_10_3) MOBILE_APP). Note: Required to get discounted mobile rates Example: Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36.",
                "req": false
            },
            {
                "key": "date_format_type",
                "value": "",
                "description": "Accepts two-letter language code (one of: de, fr, en, es, it, ja or pt). If passed, system will return dates in cancellation policy in the format corresponding to the passed language (see response attributes). If not, it will be returned based on the locale. Example: en.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685602239469,
        "lastModifiedTime": 1685604513169,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Successful Request",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "customer_ip": "192.168.31.116",
                    "errors": [],
                    "hotel_chains": [
                        {
                            "code": "6C",
                            "data_supplier": "amadeus",
                            "master_chain_code": null,
                            "name": "Intercontinental Hotels Group",
                            "slave_chain_codes": [
                                "CP",
                                "HI",
                                "IC",
                                "IN",
                                "KC",
                                "RE",
                                "UL",
                                "VA",
                                "VN",
                                "VX",
                                "YO",
                                "YZ"
                            ]
                        },
                        {
                            "code": "AA",
                            "data_supplier": "amadeus",
                            "master_chain_code": "LK",
                            "name": "Aadx Plus",
                            "slave_chain_codes": []
                        }
                    ],
                    "locale": "en_US",
                    "session_id": "7K5YuV1oljkKqDTwTjQ3sQ",
                    "user_agent": "Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95470,
        "executor_type": "THIRDPARTY",
        "executor_name": "searchTrips",
        "executor_version": "v1",
        "executor_display_name": "Search Trips",
        "executor_description": "Retrieves a list of itineraries that match the requested search criteria.",
        "executor_category": "Trips",
        "executor_category_group": "Trips",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://private-anon-da3421e218-traveldataapi.apiary-mock.com/trips",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "limit": 15,
                "offset": 0,
                "sort": [
                    {
                        "lastModifiedDateTime": "desc"
                    }
                ],
                "filter": {
                    "accountid": "9999999999",
                    "lastModifiedDateTime": "2019-08-28T11:30 TO 2019-08-28T12:00",
                    "hasAir": true
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685513824729,
        "lastModifiedTime": 1685513824729,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 200,
                    "status": "ok",
                    "remainingRecords": 129,
                    "result": [
                        {
                            "identification": {
                                "id": "3404f4ea-7c13-453c-9b4b-70c923577ea5",
                                "sourceId": "70e08fb4-2346-4912-8ea7-6abf1082caef",
                                "recordLocator": "NSTEZH",
                                "gds": "SABRE",
                                "globalCustomerNumber": "2948",
                                "accountId": "9993004",
                                "accountCountryCode": "US",
                                "clientId": "20.62546",
                                "companyId": "999017",
                                "customerNumber": "9993004",
                                "customerName": "MyCompany",
                                "creationOfficeId": "H2AH",
                                "agentSignature": "AWS",
                                "pseudoCityCode": "H2AH",
                                "dataType": "BCD",
                                "dataProvider": "US",
                                "version": 1
                            },
                            "tripDetails": {
                                "bookingDateTime": "2018-01-22T07:05:00Z",
                                "ticketedDateTime": "2018-01-24T00:00:00Z",
                                "sourceModifiedDateTime": "2019-08-28T11:53:11Z",
                                "lastModifiedDateTime": "2019-08-28T11:57:39Z",
                                "photoUrl": "/bcd-photos/GB/london.png",
                                "tags": [
                                    "TASF"
                                ]
                            },
                            "relatedBookings": [
                                {
                                    "tripId": "5b1c93b0-e43c-04d6-cf29-7e8035cb71b6",
                                    "sourceId": "7d158db7-5e28-4e9c-b979-f97d4d3c3a75",
                                    "recordLocator": "OSPWDN",
                                    "gds": "GALILEO",
                                    "customerNumber": "9993004",
                                    "customerName": "COMPANY ITALY",
                                    "creationOfficeID": "T99B",
                                    "agentSignature": "A99",
                                    "pseudoCityCode": "X9GC",
                                    "sourceDataType": "FareLogix",
                                    "reason": "Alternative"
                                }
                            ],
                            "travelers": [
                                {
                                    "travelerNumber": "1",
                                    "name": {
                                        "firstName": "Test",
                                        "lastName": "User"
                                    },
                                    "nameInGds": "User/Test",
                                    "loyaltyMemberships": [],
                                    "seatPreferences": [
                                        {
                                            "locationCode": "C",
                                            "locationText": "Center",
                                            "notes": "COMPLEAT-SEAT PREFS/C"
                                        }
                                    ],
                                    "identifier": [
                                        {
                                            "key": "TPP",
                                            "value": "24.4747474"
                                        }
                                    ]
                                }
                            ],
                            "contacts": {
                                "phoneNumbers": [
                                    {
                                        "number": "188.555.4667 x5228",
                                        "type": "Business"
                                    },
                                    {
                                        "number": "670-555-5388",
                                        "type": "Cellular"
                                    },
                                    {
                                        "number": "(420)555-4364",
                                        "type": "Home"
                                    },
                                    {
                                        "number": "624-555-5076",
                                        "type": "Agent"
                                    }
                                ],
                                "emailAddresses": [
                                    {
                                        "emailAddress": "USER_TEST@MYCOMPANY.COM",
                                        "type": "To",
                                        "isPrimary": true
                                    },
                                    {
                                        "emailAddress": "UTEST@YAHOO.COM",
                                        "type": "Cc"
                                    },
                                    {
                                        "emailAddress": "JOHN_DOE@MYCOMPANY.COM",
                                        "type": "Manager"
                                    }
                                ]
                            },
                            "segments": [
                                {
                                    "type": "Air",
                                    "segmentNumber": 1,
                                    "segmentId": "77aab922-ec40-4e6d-838e-a6052c39dc54",
                                    "groupId": "9dbfd08d-4c1d-4d42-8de0-7ad829beaad2",
                                    "title": "Bristol Bayu Indonesia",
                                    "confirmationNumber": "QWI0Q2",
                                    "startDateTime": "2019-09-05T04:45:47+01:00",
                                    "startTimezone": {
                                        "name": "Europe/Paris",
                                        "code": "CET"
                                    },
                                    "endDateTime": "2019-09-05T17:57:53+00:00",
                                    "endTimezone": {
                                        "name": "Europe/London",
                                        "code": "GMT"
                                    },
                                    "status": {
                                        "code": "HK",
                                        "description": "Booked"
                                    },
                                    "isPassive": false,
                                    "isCancelled": false,
                                    "departureAirport": {
                                        "airport": {
                                            "code": "CDG",
                                            "name": "Charles de Gaulle Airport",
                                            "address": {
                                                "address1": "95711",
                                                "address2": " Roissy Charles de Gaulle",
                                                "city": {
                                                    "name": "Paris"
                                                },
                                                "region": {},
                                                "country": {
                                                    "code": "FR",
                                                    "name": "France"
                                                },
                                                "coordinates": {
                                                    "latitude": "49.003197",
                                                    "longitude": "2.567023"
                                                }
                                            },
                                            "metroArea": {
                                                "code": "PAR",
                                                "name": "Paris"
                                            },
                                            "isMajorAirport": true
                                        },
                                        "terminal": "AEROGARE 3"
                                    },
                                    "arrivalAirport": {
                                        "airport": {
                                            "code": "BRS",
                                            "name": "Bristol Airport",
                                            "address": {
                                                "city": {
                                                    "name": "Bristol"
                                                },
                                                "region": {
                                                    "code": "EN"
                                                },
                                                "country": {
                                                    "code": "GB",
                                                    "name": "United Kingdom"
                                                },
                                                "coordinates": {
                                                    "latitude": "51.386757",
                                                    "longitude": "-2.710659"
                                                }
                                            },
                                            "metroArea": {},
                                            "isMajorAirport": true
                                        }
                                    },
                                    "marketingFlight": {
                                        "airlineCode": "BM",
                                        "airlineName": "Bayu Indonesia",
                                        "flightNumber": "2347",
                                        "icon": "/assets/img/Logos/AirlineIcons/BM.png"
                                    },
                                    "operatingFlight": {},
                                    "isInternational": true,
                                    "ticket": {
                                        "isTicketed": true,
                                        "ticketNumber": "1587337052275",
                                        "isTicketless": false,
                                        "isETicketCandidate": true
                                    },
                                    "seatSelections": [],
                                    "mealPreferences": [],
                                    "meal": {
                                        "hasSpecialMeal": 0
                                    },
                                    "equipment": {
                                        "code": "ER4"
                                    },
                                    "classOfService": {
                                        "code": "Q",
                                        "description": "Economy"
                                    },
                                    "inFlightServices": {
                                        "code": "10",
                                        "description": "Non Smoking"
                                    },
                                    "flightDistance": 285,
                                    "calculatedDefra": 37.76,
                                    "calculatedDefrarf": 71.43,
                                    "calculatedGhgp": 78.66,
                                    "calculatedCO2": [
                                        {
                                            "key": "defra",
                                            "value": 37.76
                                        },
                                        {
                                            "key": "defrarf",
                                            "value": 71.43
                                        },
                                        {
                                            "key": "ghgp",
                                            "value": 78.66
                                        }
                                    ],
                                    "calculatedDuration": "75",
                                    "numberOfStops": 0,
                                    "isScheduleChange": false,
                                    "isFlown": false,
                                    "isChangeOfGuage": false,
                                    "marriedSegments": [],
                                    "connectedSegments": [],
                                    "tags": [
                                        "codeshare"
                                    ]
                                },
                                {
                                    "type": "Bus",
                                    "segmentNumber": 1,
                                    "segmentId": "7b74edc7-ed55-47bb-aa44-aa38965b0fd4",
                                    "groupId": "8e051399-46da-48ce-992d-f56b33649fd6",
                                    "title": "similique",
                                    "confirmationNumber": "d96c12e1-7e73-42ac-918e-0cb4314f362b",
                                    "startDateTime": "2019-04-15T15:40:00",
                                    "endDateTime": "2019-04-15T17:05:00",
                                    "status": {
                                        "code": "HK",
                                        "description": "Booked"
                                    },
                                    "isPassive": false,
                                    "isCancelled": false,
                                    "vendor": {
                                        "name": "curabitur",
                                        "icon": "/assets/img/Logos/BusIcons/curabitur.png"
                                    },
                                    "departureStation": {
                                        "address": {
                                            "city": {
                                                "code": "iure"
                                            }
                                        }
                                    },
                                    "arrivalStation": {
                                        "address": {
                                            "city": {
                                                "code": "similique"
                                            }
                                        }
                                    },
                                    "numberInParty": "7654321",
                                    "fare": {
                                        "quotedRate": {
                                            "amount": 1841,
                                            "currency": "USD"
                                        },
                                        "penaltyRate": {
                                            "amount": 236,
                                            "currency": "USD"
                                        },
                                        "netRate": {
                                            "amount": 681,
                                            "currency": "USD"
                                        }
                                    },
                                    "notes": "MSP",
                                    "tags": [
                                        "Bus"
                                    ]
                                },
                                {
                                    "type": "Hotel",
                                    "segmentNumber": 2,
                                    "segmentId": "fb7eb57c-b90d-4e39-9467-674171f2eeb5",
                                    "groupId": "34bf51e3-467a-41fd-aef6-345730732d67",
                                    "title": "IBIS BRISTOL CENTRE",
                                    "confirmationNumber": "LDVGLQ-",
                                    "startDateTime": "2019-09-01T12:11:35+00:00",
                                    "startTimezone": {
                                        "name": "Europe/London",
                                        "code": "GMT"
                                    },
                                    "endDateTime": "2019-09-04T06:21:48+00:00",
                                    "endTimezone": {
                                        "name": "Europe/London",
                                        "code": "GMT"
                                    },
                                    "status": {
                                        "code": "GK",
                                        "description": "Booked"
                                    },
                                    "isPassive": true,
                                    "isCancelled": false,
                                    "isFinalDestination": true,
                                    "property": {
                                        "name": "IBIS BRISTOL CENTRE",
                                        "hotelChain": {
                                            "code": "HN",
                                            "icon": "/assets/img/Logos/HotelIcons/HN.png"
                                        },
                                        "phone": {},
                                        "address": {
                                            "city": {
                                                "code": "BRS",
                                                "name": "London"
                                            },
                                            "region": {},
                                            "country": {
                                                "code": "GB"
                                            },
                                            "notes": "EXPLORE LANE FOR CAR PARK USE BS1 5LL AVON B"
                                        },
                                        "airportCode": "BRS"
                                    },
                                    "numberOfNights": 1,
                                    "numberOfRooms": 1,
                                    "room": {
                                        "type": {},
                                        "numberOfGuests": 0,
                                        "specialInstructions": "FREE TEX"
                                    },
                                    "fare": {
                                        "rateSchedule": 1,
                                        "isMultiDateRate": 2,
                                        "rate": {
                                            "amount": 888.69,
                                            "currency": "USD"
                                        },
                                        "rateChangeDuringStay": 2,
                                        "rateChangeInfos": [],
                                        "creditCardGuarantee": "Unknown"
                                    },
                                    "cancellationDeadline": "2021-03-17T18:00:00",
                                    "minimumStay": 1,
                                    "overview": "NA",
                                    "loyaltyMemberships": [],
                                    "notes": "CY-GB\nTEL-44 117 319 9000\nFAX-\nHTS\nHRCOR\nFCGBP\nDR95\nHCC-RT",
                                    "tags": [
                                        "TSHBooking"
                                    ]
                                },
                                {
                                    "type": "CruiseFerry",
                                    "segmentNumber": 2,
                                    "segmentId": "0ee70a1c-58d9-4e9b-bb6c-4e4c97bc96bb",
                                    "groupId": "fb3a2100-4e64-41d7-aa71-b4e28c9890d7",
                                    "title": "phasellus",
                                    "confirmationNumber": "2e1843c6-6276-4110-914a-77a06ee5702a",
                                    "startDateTime": "2019-04-15T15:40:00",
                                    "endDateTime": "2019-04-15T17:05:00",
                                    "status": {
                                        "code": "HK",
                                        "description": "Booked"
                                    },
                                    "isPassive": false,
                                    "isCancelled": false,
                                    "vendor": {
                                        "code": "similique",
                                        "name": "nec",
                                        "icon": "/assets/img/Logos/CruiseFerryIcons/similique.png"
                                    },
                                    "departurePort": {
                                        "seaportCode": "euismod"
                                    },
                                    "arrivalPort": {
                                        "seaportCode": "phasellus"
                                    },
                                    "numberInParty": "7654321",
                                    "vessel": {
                                        "name": "Test",
                                        "cabin": "cabin_string",
                                        "linkCode": "LinkCode_"
                                    },
                                    "fare": {
                                        "fare": {
                                            "amount": 650,
                                            "currency": "USD"
                                        },
                                        "balanceDueDate": "2019-04-15T17:05:00"
                                    },
                                    "additionalInformation": "Auctor hac etaccusamus leo tortor error leo nisi venenatis saepeeveniet vel.",
                                    "notes": "Reiciendis habitasse voluptatibus nonrecusandae fugit inventore.",
                                    "tags": [
                                        "CruiseFerry"
                                    ]
                                },
                                {
                                    "type": "Car",
                                    "segmentNumber": 3,
                                    "segmentId": "ea6ab8b6-e9b0-472b-9ac9-e798e3a46fd6",
                                    "groupId": "65db662a-fb6a-4fdd-bc0a-096f7f768dc5",
                                    "title": "BRS",
                                    "confirmationNumber": "ZEH64024317F1",
                                    "startDateTime": "2019-08-30T22:16:57+00:00",
                                    "startTimezone": {
                                        "name": "Europe/London",
                                        "code": "GMT"
                                    },
                                    "endDateTime": "2019-09-04T04:54:49+00:00",
                                    "endTimezone": {
                                        "name": "Europe/London",
                                        "code": "GMT"
                                    },
                                    "status": {
                                        "code": "GK",
                                        "description": "Booked"
                                    },
                                    "isPassive": true,
                                    "isCancelled": false,
                                    "rentalCompany": {
                                        "code": "ZE",
                                        "name": "Hertz Rent-A-Car",
                                        "phone": {},
                                        "icon": "/assets/img/Logos/CarIcons/ZE.png"
                                    },
                                    "pickupLocation": {
                                        "address": {
                                            "address1": "Hertz Rent a Car ST5\nBRISTOL A/PORT CAR HIRE HALL BS48 3DS\nBristol",
                                            "city": {},
                                            "region": {},
                                            "country": {
                                                "code": "GB"
                                            },
                                            "notes": "BRST50"
                                        },
                                        "airportCode": "BRS",
                                        "pickupSpot": "T50"
                                    },
                                    "dropoffLocation": {
                                        "address": {
                                            "address1": "Hertz Rent a Car ST5\nBRISTOL A/PORT CAR HIRE HALL BS48 3DS\nBristol",
                                            "city": {},
                                            "region": {},
                                            "country": {
                                                "code": "GB"
                                            },
                                            "notes": "BRST50"
                                        },
                                        "airportCode": "BRST50",
                                        "dropoffSpot": "T50"
                                    },
                                    "arrivalFlight": {},
                                    "numberOfDays": 1,
                                    "numberOfHours": 0,
                                    "numberOfCars": 1,
                                    "car": {
                                        "type": {
                                            "description": "Economy Car Manual AC"
                                        },
                                        "specialEquipment": []
                                    },
                                    "fare": {
                                        "rateType": 1,
                                        "rateSchedule": 0,
                                        "baseRate": {
                                            "amount": 472.79,
                                            "currency": "USD"
                                        },
                                        "estimatedTotalRate": {
                                            "amount": 1147.73,
                                            "currency": "USD"
                                        },
                                        "quotedRate": {
                                            "amount": 71.84,
                                            "currency": "EUR"
                                        },
                                        "distanceUnitOfMeasure": 0,
                                        "corporateDiscountNumber": "404846"
                                    },
                                    "loyaltyMemberships": [],
                                    "tags": [
                                        "Car"
                                    ]
                                },
                                {
                                    "type": "Rail",
                                    "segmentNumber": 4,
                                    "segmentId": "9cdd9251-73c3-4e8d-9118-fef0ca64bf80",
                                    "groupId": "ac410dd6-a914-4c4b-8292-d962a9d92b3c",
                                    "title": "Strasbourg-Ville",
                                    "confirmationNumber": "TROZUP",
                                    "startDateTime": "2019-09-20T16:51:44",
                                    "endDateTime": "2019-09-24T02:35:25",
                                    "status": {
                                        "code": "GK",
                                        "description": "Booked"
                                    },
                                    "isPassive": true,
                                    "isCancelled": false,
                                    "carrier": {
                                        "name": "SNCF",
                                        "operator": "2C",
                                        "icon": "/assets/img/Logos/RailIcons/2C.png"
                                    },
                                    "startStation": {
                                        "stationCode": "CHARLESDEGAUL",
                                        "stationName": "Charles De Gaul",
                                        "address": {
                                            "address1": "CHARLESDEGAUL  CHARLES DE GAULLE 2 TGVFRMLW",
                                            "city": {},
                                            "region": {},
                                            "country": {},
                                            "notes": "CHARLESDEGAUL - CHARLES DE GAULLE 2 TGV-FRMLW"
                                        }
                                    },
                                    "endStation": {
                                        "stationCode": "STRASBOURGSTAT",
                                        "stationName": "Strasbourg-Ville",
                                        "address": {
                                            "address1": "STRASBOURGSTAT  STRASBOURG STATIONFRAEG",
                                            "city": {},
                                            "region": {},
                                            "country": {},
                                            "notes": "STRASBOURGSTAT - STRASBOURG STATION-FRAEG"
                                        }
                                    },
                                    "numberInParty": 1,
                                    "train": {
                                        "trainNumber": "1200",
                                        "classOfService": {},
                                        "specialInstructions": "SID01-TICKET"
                                    },
                                    "fare": {
                                        "rateQuote": {
                                            "amount": 34,
                                            "currency": "EUR"
                                        }
                                    },
                                    "seatSelections": [
                                        {
                                            "travelerNumber": "1",
                                            "location": "TGE 5479 SEAT 043-COACH 011-CL1"
                                        }
                                    ],
                                    "mealPreferences": [],
                                    "railDistance": 72,
                                    "calculatedCO2": [
                                        {
                                            "key": "defra",
                                            "value": 15.67
                                        }
                                    ],
                                    "calculatedDuration": "110",
                                    "numberOfStops": 0,
                                    "notes": "0004\u2020RAL\u20202C\u202001FEB\u20204\u2020GK\u202001\u2020\u2020CHARLESDEGAUL\u2020\u2020STRASBOURGSTAT\u20201121\u02c6CHARLES DE GAULLE 2 TGV-FRMLW\u02c61311\u02c601FEB\u02c6STRASBOURG STATION-FRAEG\u02c6TGE 5479\u02c6SEAT 043-COACH 011-CL1\u02c6SID01-TICKET\u02c6TROZUP-\u02c6\u02c6",
                                    "tags": [
                                        "Rail"
                                    ]
                                },
                                {
                                    "type": "Rail",
                                    "segmentNumber": 5,
                                    "segmentId": "2841dfa7-e62c-472f-a743-3db297c8f565",
                                    "groupId": "c1fa880e-c695-4fb6-b031-da21b6d5c8f8",
                                    "title": "Gare de Molsheim",
                                    "confirmationNumber": "TROZUP",
                                    "startDateTime": "2019-09-11T02:37:11",
                                    "endDateTime": "2019-09-14T16:31:25",
                                    "status": {
                                        "code": "GK",
                                        "description": "Booked"
                                    },
                                    "isPassive": true,
                                    "isCancelled": false,
                                    "carrier": {
                                        "name": "SNCF",
                                        "operator": "2C",
                                        "icon": "/assets/img/Logos/AirLineIcons/2C.png"
                                    },
                                    "startStation": {
                                        "stationCode": "STRASBOURGSTAT",
                                        "stationName": "Strasbourg-Ville",
                                        "address": {
                                            "address1": "STRASBOURGSTAT  STRASBOURG STATIONFRAEG",
                                            "city": {},
                                            "region": {},
                                            "country": {},
                                            "notes": "STRASBOURGSTAT - STRASBOURG STATION-FRAEG"
                                        }
                                    },
                                    "endStation": {
                                        "stationCode": "MOLSHEIM",
                                        "stationName": "Gare de Molsheim",
                                        "address": {
                                            "address1": "MOLSHEIM  MOLSHEIMFRMOL",
                                            "city": {},
                                            "region": {},
                                            "country": {},
                                            "notes": "MOLSHEIM - MOLSHEIM-FRMOL"
                                        }
                                    },
                                    "numberInParty": 1,
                                    "train": {
                                        "trainNumber": "24686",
                                        "classOfService": {},
                                        "specialInstructions": "SID02-TICKET"
                                    },
                                    "fare": {
                                        "rateQuote": {
                                            "amount": 34,
                                            "currency": "EUR"
                                        }
                                    },
                                    "seatSelections": [
                                        {
                                            "travelerNumber": "1",
                                            "location": "TER 30886 CL2"
                                        }
                                    ],
                                    "mealPreferences": [],
                                    "railDistance": 72,
                                    "calculatedCO2": [
                                        {
                                            "value": 0.82
                                        }
                                    ],
                                    "calculatedDuration": "23",
                                    "numberOfStops": 0,
                                    "notes": "0005\u2020RAL\u20202C\u202001FEB\u20204\u2020GK\u202001\u2020\u2020STRASBOURGSTAT\u2020\u2020MOLSHEIM\u20201327\u02c6STRASBOURG STATION-FRAEG\u02c61350\u02c601FEB\u02c6MOLSHEIM-FRMOL\u02c6TER 30886\u02c6CL2\u02c6SID02-TICKET\u02c6TROZUP-\u02c6\u02c6",
                                    "tags": [
                                        "Rail"
                                    ]
                                },
                                {
                                    "type": "Air",
                                    "segmentNumber": 6,
                                    "segmentId": "89345faf-4cbc-48db-bcab-fcb57006bf5b",
                                    "groupId": "eb289b09-1cc2-4d0e-87bf-50b645658e09",
                                    "title": "Paris Bayu Indonesia",
                                    "confirmationNumber": "QWI8Q2",
                                    "startDateTime": "2019-09-16T01:44:02+00:00",
                                    "startTimezone": {
                                        "name": "Europe/London",
                                        "code": "GMT"
                                    },
                                    "endDateTime": "2019-09-19T21:54:15+01:00",
                                    "endTimezone": {
                                        "name": "Europe/Paris",
                                        "code": "CET"
                                    },
                                    "status": {
                                        "code": "HK",
                                        "description": "Booked"
                                    },
                                    "isPassive": false,
                                    "isCancelled": false,
                                    "departureAirport": {
                                        "airport": {
                                            "code": "BRS",
                                            "name": "Bristol Airport",
                                            "address": {
                                                "city": {
                                                    "name": "Bristol"
                                                },
                                                "region": {
                                                    "code": "EN"
                                                },
                                                "country": {
                                                    "code": "GB",
                                                    "name": "United Kingdom"
                                                },
                                                "coordinates": {
                                                    "latitude": "51.386757",
                                                    "longitude": "-2.710659"
                                                }
                                            },
                                            "metroArea": {},
                                            "isMajorAirport": true
                                        }
                                    },
                                    "arrivalAirport": {
                                        "airport": {
                                            "code": "CDG",
                                            "name": "Charles de Gaulle Airport",
                                            "address": {
                                                "address1": "95711",
                                                "address2": " Roissy Charles de Gaulle",
                                                "city": {
                                                    "name": "Paris"
                                                },
                                                "region": {},
                                                "country": {
                                                    "code": "FR",
                                                    "name": "France"
                                                },
                                                "coordinates": {
                                                    "latitude": "49.003197",
                                                    "longitude": "2.567023"
                                                }
                                            },
                                            "metroArea": {
                                                "code": "PAR",
                                                "name": "Paris"
                                            },
                                            "isMajorAirport": true
                                        },
                                        "terminal": "AEROGARE 3"
                                    },
                                    "marketingFlight": {
                                        "airlineCode": "BM",
                                        "airlineName": "Bayu Indonesia",
                                        "flightNumber": "8701",
                                        "icon": "/assets/img/Logos/AirLineIcons/BM.png"
                                    },
                                    "operatingFlight": {},
                                    "isInternational": true,
                                    "ticket": {
                                        "isTicketed": true,
                                        "ticketNumber": "0832364446562",
                                        "isTicketless": false,
                                        "isETicketCandidate": true
                                    },
                                    "seatSelections": [],
                                    "mealPreferences": [],
                                    "meal": {
                                        "hasSpecialMeal": 0
                                    },
                                    "equipment": {
                                        "code": "ER3"
                                    },
                                    "classOfService": {
                                        "code": "W",
                                        "description": "Economy"
                                    },
                                    "inFlightServices": {
                                        "code": "10",
                                        "description": "Non Smoking"
                                    },
                                    "flightDistance": 285,
                                    "calculatedCO2": [
                                        {
                                            "key": "defra",
                                            "value": 37.76
                                        },
                                        {
                                            "key": "defrarf",
                                            "value": 71.43
                                        },
                                        {
                                            "key": "ghgp",
                                            "value": 78.66
                                        }
                                    ],
                                    "calculatedDuration": "75",
                                    "numberOfStops": 0,
                                    "isScheduleChange": false,
                                    "isFlown": false,
                                    "isChangeOfGuage": false,
                                    "marriedSegments": [],
                                    "connectedSegments": [],
                                    "tags": [
                                        "Air"
                                    ]
                                }
                            ],
                            "fareInfos": [
                                {
                                    "segmentNumbers": [
                                        "1",
                                        "6"
                                    ],
                                    "fare": {
                                        "amount": 195,
                                        "currency": "EUR"
                                    },
                                    "estimatedTotalFare": {
                                        "amount": 310.77,
                                        "currency": "EUR"
                                    }
                                },
                                {
                                    "segmentNumbers": [
                                        "3"
                                    ],
                                    "fare": {
                                        "amount": 1597.84,
                                        "currency": "USD"
                                    },
                                    "estimatedTotalFare": {
                                        "amount": 2551.07,
                                        "currency": "USD"
                                    }
                                },
                                {
                                    "segmentNumbers": [
                                        "2"
                                    ],
                                    "fare": {
                                        "amount": 962.41,
                                        "currency": "USD"
                                    },
                                    "estimatedTotalFare": {
                                        "amount": 962.41,
                                        "currency": "USD"
                                    }
                                },
                                {
                                    "segmentNumbers": [
                                        "2"
                                    ],
                                    "fare": {
                                        "amount": 1340,
                                        "currency": "USD"
                                    },
                                    "estimatedTotalFare": {
                                        "amount": 1340,
                                        "currency": "USD"
                                    }
                                },
                                {
                                    "segmentNumbers": [
                                        "4"
                                    ],
                                    "fare": {
                                        "amount": 34,
                                        "currency": "EUR"
                                    },
                                    "estimatedTotalFare": {
                                        "amount": 34,
                                        "currency": "EUR"
                                    }
                                },
                                {
                                    "segmentNumbers": [
                                        "5"
                                    ],
                                    "fare": {
                                        "amount": 34,
                                        "currency": "EUR"
                                    },
                                    "estimatedTotalFare": {
                                        "amount": 34,
                                        "currency": "EUR"
                                    }
                                },
                                {
                                    "segmentNumbers": [
                                        "1"
                                    ],
                                    "fare": {
                                        "amount": 1362,
                                        "currency": "USD"
                                    },
                                    "estimatedTotalFare": {
                                        "amount": 1362,
                                        "currency": "USD"
                                    }
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "status": "Forbidden",
                    "message": "Access is forbidden: Query contains restricted segments"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "status": "Bad Request",
                    "message": "Bad Request: Invalid Search Query"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "status": "Internal Server Error",
                    "message": "Server Error: Operation Failed"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95460,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTrip",
        "executor_version": "v1",
        "executor_display_name": "Get Trip",
        "executor_description": "Retrieves an itinerary/trip.",
        "executor_category": "Trips",
        "executor_category_group": "Trips",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-da3421e218-traveldataapi.apiary-mock.com/trips/{tripId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "tripId",
                "value": "",
                "description": " The BCD specific identifier of the trip record. Supports any GDS or non-GDS booked flight, rental car, hotel, rail, cruise/ferry, tour, or bus as the identifier. Example: 065f1994-ddda-403b-af88-4c90a7e7b930."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685512506804,
        "lastModifiedTime": 1685512506804,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": 200,
                    "status": "ok",
                    "result": {
                        "identification": {
                            "id": "3404f4ea-7c13-453c-9b4b-70c923577ea5",
                            "sourceId": "70e08fb4-2346-4912-8ea7-6abf1082caef",
                            "recordLocator": "NSTEZH",
                            "gds": "SABRE",
                            "globalCustomerNumber": "2948",
                            "accountId": "9993004",
                            "accountCountryCode": "US",
                            "clientId": "20.62546",
                            "companyId": "999017",
                            "customerNumber": "9993004",
                            "customerName": "MyCompany",
                            "creationOfficeId": "H2AH",
                            "agentSignature": "AWS",
                            "pseudoCityCode": "H2AH",
                            "dataType": "BCD",
                            "dataProvider": "US",
                            "version": 5
                        },
                        "tripDetails": {
                            "bookingDateTime": "2018-01-22T07:05:00Z",
                            "ticketedDateTime": "2018-01-24T00:00:00Z",
                            "sourceModifiedDateTime": "2019-08-28T11:53:11Z",
                            "lastModifiedDateTime": "2019-08-28T11:57:39Z",
                            "events": [
                                {
                                    "key": "CV",
                                    "value": "ABC123456"
                                }
                            ],
                            "photoUrl": "/bcd-photos/GB/london.png",
                            "tags": [
                                "TASF"
                            ]
                        },
                        "travelers": [
                            {
                                "travelerNumber": "1",
                                "name": {
                                    "firstName": "Test",
                                    "lastName": "User"
                                },
                                "nameInGds": "User/Test",
                                "loyaltyMemberships": [],
                                "seatPreferences": [
                                    {
                                        "locationCode": "C",
                                        "locationText": "Center",
                                        "notes": "COMPLEAT-SEAT PREFS/C"
                                    }
                                ],
                                "identifier": [
                                    {
                                        "key": "CB",
                                        "value": "24.4747474"
                                    }
                                ]
                            }
                        ],
                        "contacts": {
                            "phoneNumbers": [
                                {
                                    "number": "188.555.4667 x5228",
                                    "type": "Business"
                                },
                                {
                                    "number": "670-555-5388",
                                    "type": "Cellular"
                                },
                                {
                                    "number": "(420)555-4364",
                                    "type": "Home"
                                },
                                {
                                    "number": "624-555-5076",
                                    "type": "Agent"
                                }
                            ],
                            "emailAddresses": [
                                {
                                    "emailAddress": "USER_TEST@MYCOMPANY.COM",
                                    "type": "To",
                                    "isPrimary": true
                                },
                                {
                                    "emailAddress": "UTEST@YAHOO.COM",
                                    "type": "Cc"
                                },
                                {
                                    "emailAddress": "JOHN_DOE@MYCOMPANY.COM",
                                    "type": "Manager"
                                }
                            ]
                        },
                        "segments": [
                            {
                                "type": "Air",
                                "segmentNumber": 1,
                                "segmentId": "23af39fa-3113-ba42-ba33-234ad423ac31",
                                "groupId": "32ab322a-bcf3-2342-411d-32432ae4fc32",
                                "title": "Bristol Bayu Indonesia",
                                "confirmationNumber": "QWI0Q2",
                                "sourceId": "GWYPNM6A35DGHT3",
                                "startDateTime": "2019-09-05T04:45:47+01:00",
                                "startTimezone": {
                                    "name": "Europe/Paris",
                                    "code": "CET"
                                },
                                "endDateTime": "2019-09-05T17:57:53+00:00",
                                "endTimezone": {
                                    "name": "Europe/London",
                                    "code": "GMT"
                                },
                                "status": {
                                    "code": "HK",
                                    "description": "Booked"
                                },
                                "isPassive": false,
                                "isCancelled": false,
                                "departureAirport": {
                                    "airport": {
                                        "code": "CDG",
                                        "name": "Charles de Gaulle Airport",
                                        "address": {
                                            "address1": "95711",
                                            "address2": " Roissy Charles de Gaulle",
                                            "city": {
                                                "name": "Paris"
                                            },
                                            "region": {},
                                            "country": {
                                                "code": "FR",
                                                "name": "France"
                                            },
                                            "coordinates": {
                                                "latitude": "49.003197",
                                                "longitude": "2.567023"
                                            }
                                        },
                                        "metroArea": {
                                            "code": "PAR",
                                            "name": "Paris"
                                        },
                                        "isMajorAirport": true
                                    },
                                    "terminal": "AEROGARE 3"
                                },
                                "arrivalAirport": {
                                    "airport": {
                                        "code": "BRS",
                                        "name": "Bristol Airport",
                                        "address": {
                                            "city": {
                                                "name": "Bristol"
                                            },
                                            "region": {
                                                "code": "EN"
                                            },
                                            "country": {
                                                "code": "GB",
                                                "name": "United Kingdom"
                                            },
                                            "coordinates": {
                                                "latitude": "51.386757",
                                                "longitude": "-2.710659"
                                            }
                                        },
                                        "metroArea": {},
                                        "isMajorAirport": true
                                    }
                                },
                                "marketingFlight": {
                                    "airlineCode": "BM",
                                    "airlineName": "Bayu Indonesia",
                                    "flightNumber": "2347",
                                    "icon": "/assets/img/Logos/AirlineIcons/BM.png"
                                },
                                "operatingFlight": {},
                                "isInternational": true,
                                "ticket": {
                                    "isTicketed": true,
                                    "ticketNumber": "1587337052275",
                                    "isTicketless": false,
                                    "isETicketCandidate": true
                                },
                                "seatSelections": [],
                                "mealPreferences": [],
                                "meal": {
                                    "hasSpecialMeal": 0
                                },
                                "equipment": {
                                    "code": "ER4"
                                },
                                "classOfService": {
                                    "code": "Q",
                                    "description": "Economy"
                                },
                                "inFlightServices": {
                                    "code": "10",
                                    "description": "Non Smoking"
                                },
                                "flightDistance": 285,
                                "calculatedDefra": 37.76,
                                "calculatedDefrarf": 71.43,
                                "calculatedGhgp": 78.66,
                                "calculatedCO2": [
                                    {
                                        "key": "defra",
                                        "value": 37.76
                                    },
                                    {
                                        "key": "defrarf",
                                        "value": 71.43
                                    },
                                    {
                                        "key": "ghgp",
                                        "value": 78.66
                                    }
                                ],
                                "calculatedDuration": "75",
                                "numberOfStops": 0,
                                "isScheduleChange": false,
                                "isFlown": false,
                                "isChangeOfGuage": false,
                                "marriedSegments": [],
                                "connectedSegments": [],
                                "tags": [
                                    "codeshare"
                                ]
                            },
                            {
                                "type": "Bus",
                                "segmentNumber": 1,
                                "segmentId": "2fa3f731-5629-463c-916a-44222dea5bb1",
                                "groupId": "c8c983f4-495b-4faf-ab23-5dc84be86103",
                                "title": "similique",
                                "confirmationNumber": "d96c12e1-7e73-42ac-918e-0cb4314f362b",
                                "sourceId": "GWYPNM6A35DGHT3",
                                "startDateTime": "2019-04-15T15:40:00",
                                "endDateTime": "2019-04-15T17:05:00",
                                "status": {
                                    "code": "HK",
                                    "description": "Booked"
                                },
                                "isPassive": false,
                                "isCancelled": false,
                                "vendor": {
                                    "name": "curabitur",
                                    "icon": "/assets/img/Logos/BusIcons/curabitur.png"
                                },
                                "departureStation": {
                                    "address": {
                                        "city": {
                                            "code": "iure"
                                        }
                                    }
                                },
                                "arrivalStation": {
                                    "address": {
                                        "city": {
                                            "code": "similique"
                                        }
                                    }
                                },
                                "numberInParty": "7654321",
                                "fare": {
                                    "quotedRate": {
                                        "amount": 1841,
                                        "currency": "USD"
                                    },
                                    "penaltyRate": {
                                        "amount": 236,
                                        "currency": "USD"
                                    },
                                    "netRate": {
                                        "amount": 681,
                                        "currency": "USD"
                                    }
                                },
                                "calculatedDuration": "85",
                                "notes": "MSP",
                                "tags": [
                                    "Bus"
                                ]
                            },
                            {
                                "type": "Hotel",
                                "segmentNumber": 2,
                                "segmentId": "0910caf1-6d58-4ba4-8c38-5a4c14a4ead6",
                                "groupId": "99ef3217-834b-45cd-a2b2-e7042d273144",
                                "title": "IBIS BRISTOL CENTRE",
                                "confirmationNumber": "LDVGLQ-",
                                "sourceId": "GWYPNM6A35DGHT3",
                                "startDateTime": "2019-09-01T12:11:35+00:00",
                                "startTimezone": {
                                    "name": "Europe/London",
                                    "code": "GMT"
                                },
                                "endDateTime": "2019-09-04T06:21:48+00:00",
                                "endTimezone": {
                                    "name": "Europe/London",
                                    "code": "GMT"
                                },
                                "status": {
                                    "code": "GK",
                                    "description": "Booked"
                                },
                                "isPassive": true,
                                "isCancelled": false,
                                "isFinalDestination": true,
                                "property": {
                                    "name": "IBIS BRISTOL CENTRE",
                                    "hotelChain": {
                                        "code": "HN",
                                        "icon": "/assets/img/Logos/HotelIcons/HN.png"
                                    },
                                    "phone": {},
                                    "address": {
                                        "city": {
                                            "code": "BRS",
                                            "name": "London"
                                        },
                                        "region": {},
                                        "country": {
                                            "code": "GB"
                                        },
                                        "notes": "EXPLORE LANE FOR CAR PARK USE BS1 5LL AVON B"
                                    },
                                    "airportCode": "BRS"
                                },
                                "numberOfNights": 1,
                                "calculatedDuration": "1440",
                                "numberOfRooms": 1,
                                "room": {
                                    "type": {},
                                    "numberOfGuests": 0,
                                    "specialInstructions": "FREE TEX"
                                },
                                "fare": {
                                    "rateSchedule": 1,
                                    "isMultiDateRate": 2,
                                    "rate": {
                                        "amount": 888.69,
                                        "currency": "USD"
                                    },
                                    "rateChangeDuringStay": 2,
                                    "rateChangeInfos": [],
                                    "creditCardGuarantee": "Unknown"
                                },
                                "cancellationDeadline": "2021-03-17T18:00:00",
                                "minimumStay": 1,
                                "overview": "NA",
                                "loyaltyMemberships": [],
                                "notes": "CY-GB\nTEL-44 117 319 9000\nFAX-\nHTS\nHRCOR\nFCGBP\nDR95\nHCC-RT",
                                "tags": [
                                    "TSHBooking"
                                ]
                            },
                            {
                                "type": "CruiseFerry",
                                "segmentNumber": 2,
                                "segmentId": "8b59e0be-59b1-4879-ac02-e12d3144f5ca",
                                "groupId": "2dffe10a-ecf1-43f8-a926-6734625a28ed",
                                "title": "phasellus",
                                "confirmationNumber": "2e1843c6-6276-4110-914a-77a06ee5702a",
                                "sourceId": "GWYPNM6A35DGHT3",
                                "startDateTime": "2019-04-15T15:40:00",
                                "endDateTime": "2019-04-15T17:05:00",
                                "status": {
                                    "code": "HK",
                                    "description": "Booked"
                                },
                                "isPassive": false,
                                "isCancelled": false,
                                "vendor": {
                                    "code": "similique",
                                    "name": "nec",
                                    "icon": "/assets/img/Logos/CruiseFerryIcons/similique.png"
                                },
                                "departurePort": {
                                    "seaportCode": "euismod"
                                },
                                "arrivalPort": {
                                    "seaportCode": "phasellus"
                                },
                                "numberInParty": "7654321",
                                "vessel": {
                                    "name": "Test",
                                    "cabin": "cabin_string",
                                    "linkCode": "LinkCode_"
                                },
                                "fare": {
                                    "fare": {
                                        "amount": 650,
                                        "currency": "USD"
                                    },
                                    "balanceDueDate": "2019-04-15T17:05:00"
                                },
                                "calculatedDuration": "85",
                                "additionalInformation": "Auctor hac etaccusamus leo tortor error leo nisi venenatis saepeeveniet vel.",
                                "notes": "Reiciendis habitasse voluptatibus nonrecusandae fugit inventore.",
                                "tags": [
                                    "CruiseFerry"
                                ]
                            },
                            {
                                "type": "Car",
                                "segmentNumber": 3,
                                "segmentId": "9edf5262-2c4a-474f-bd7c-ecb60204f441",
                                "groupId": "3ce6563e-12c6-4279-9815-82a99a10e09a",
                                "title": "BRS",
                                "confirmationNumber": "ZEH64024317F1",
                                "sourceId": "GWYPNM6A35DGHT3",
                                "startDateTime": "2019-08-30T22:16:57+00:00",
                                "startTimezone": {
                                    "name": "Europe/London",
                                    "code": "GMT"
                                },
                                "endDateTime": "2019-09-04T04:54:49+00:00",
                                "endTimezone": {
                                    "name": "Europe/London",
                                    "code": "GMT"
                                },
                                "status": {
                                    "code": "GK",
                                    "description": "Booked"
                                },
                                "isPassive": true,
                                "isCancelled": false,
                                "rentalCompany": {
                                    "code": "ZE",
                                    "name": "Hertz Rent-A-Car",
                                    "phone": {},
                                    "icon": "/assets/img/Logos/CarIcons/ZE.png"
                                },
                                "pickupLocation": {
                                    "address": {
                                        "address1": "Hertz Rent a Car ST5\nBRISTOL A/PORT CAR HIRE HALL BS48 3DS\nBristol",
                                        "city": {},
                                        "region": {},
                                        "country": {
                                            "code": "GB"
                                        },
                                        "notes": "BRST50"
                                    },
                                    "airportCode": "BRS",
                                    "pickupSpot": "T50"
                                },
                                "dropoffLocation": {
                                    "address": {
                                        "address1": "Hertz Rent a Car ST5\nBRISTOL A/PORT CAR HIRE HALL BS48 3DS\nBristol",
                                        "city": {},
                                        "region": {},
                                        "country": {
                                            "code": "GB"
                                        },
                                        "notes": "BRST50"
                                    },
                                    "airportCode": "BRST50",
                                    "dropoffSpot": "T50"
                                },
                                "arrivalFlight": {},
                                "numberOfDays": 1,
                                "numberOfHours": 0,
                                "calculatedDuration": "1440",
                                "numberOfCars": 1,
                                "car": {
                                    "type": {
                                        "description": "Economy Car Manual AC"
                                    },
                                    "specialEquipment": []
                                },
                                "fare": {
                                    "rateType": 1,
                                    "rateSchedule": 0,
                                    "baseRate": {
                                        "amount": 472.79,
                                        "currency": "USD"
                                    },
                                    "estimatedTotalRate": {
                                        "amount": 1147.73,
                                        "currency": "USD"
                                    },
                                    "quotedRate": {
                                        "amount": 71.84,
                                        "currency": "EUR"
                                    },
                                    "distanceUnitOfMeasure": 0,
                                    "corporateDiscountNumber": "404846"
                                },
                                "loyaltyMemberships": [],
                                "tags": [
                                    "Car"
                                ]
                            },
                            {
                                "type": "Rail",
                                "segmentNumber": 4,
                                "segmentId": "3d6372ac-f258-4f6e-bf1d-8e0d3f2c72a4",
                                "groupId": "4a82e0c5-64a0-4db9-9030-ff3489b7eab0",
                                "title": "Strasbourg-Ville",
                                "confirmationNumber": "TROZUP",
                                "sourceId": "GWYPNM6A35DGHT3",
                                "startDateTime": "2019-09-20T16:51:44",
                                "endDateTime": "2019-09-24T02:35:25",
                                "status": {
                                    "code": "GK",
                                    "description": "Booked"
                                },
                                "isPassive": true,
                                "isCancelled": false,
                                "carrier": {
                                    "name": "SNCF",
                                    "operator": "2C",
                                    "icon": "/assets/img/Logos/RailIcons/2C.png"
                                },
                                "startStation": {
                                    "stationCode": "CHARLESDEGAUL",
                                    "stationName": "Charles De Gaul",
                                    "address": {
                                        "address1": "CHARLESDEGAUL  CHARLES DE GAULLE 2 TGVFRMLW",
                                        "city": {},
                                        "region": {},
                                        "country": {},
                                        "notes": "CHARLESDEGAUL - CHARLES DE GAULLE 2 TGV-FRMLW"
                                    }
                                },
                                "endStation": {
                                    "stationCode": "STRASBOURGSTAT",
                                    "stationName": "Strasbourg-Ville",
                                    "address": {
                                        "address1": "STRASBOURGSTAT  STRASBOURG STATIONFRAEG",
                                        "city": {},
                                        "region": {},
                                        "country": {},
                                        "notes": "STRASBOURGSTAT - STRASBOURG STATION-FRAEG"
                                    }
                                },
                                "numberInParty": 1,
                                "train": {
                                    "trainNumber": "1200",
                                    "classOfService": {},
                                    "specialInstructions": "SID01-TICKET"
                                },
                                "fare": {
                                    "rateQuote": {
                                        "amount": 34,
                                        "currency": "EUR"
                                    }
                                },
                                "seatSelections": [
                                    {
                                        "travelerNumber": "1",
                                        "location": "TGE 5479 SEAT 043-COACH 011-CL1"
                                    }
                                ],
                                "mealPreferences": [],
                                "railDistance": 72,
                                "calculatedCO2": [
                                    {
                                        "key": "defra",
                                        "value": 15.67
                                    }
                                ],
                                "calculatedDuration": "110",
                                "numberOfStops": 0,
                                "notes": "0004\u2020RAL\u20202C\u202001FEB\u20204\u2020GK\u202001\u2020\u2020CHARLESDEGAUL\u2020\u2020STRASBOURGSTAT\u20201121\u02c6CHARLES DE GAULLE 2 TGV-FRMLW\u02c61311\u02c601FEB\u02c6STRASBOURG STATION-FRAEG\u02c6TGE 5479\u02c6SEAT 043-COACH 011-CL1\u02c6SID01-TICKET\u02c6TROZUP-\u02c6\u02c6",
                                "tags": [
                                    "Rail"
                                ]
                            },
                            {
                                "type": "Rail",
                                "segmentNumber": 5,
                                "segmentId": "5eff081e-4679-4574-87eb-2a52b330842d",
                                "groupId": "7ef84f50-9dc7-438c-bf9b-9945d173284d",
                                "title": "Gare de Molsheim",
                                "confirmationNumber": "TROZUP",
                                "sourceId": "GWYPNM6A35DGHT3",
                                "startDateTime": "2019-09-11T02:37:11",
                                "endDateTime": "2019-09-14T16:31:25",
                                "status": {
                                    "code": "GK",
                                    "description": "Booked"
                                },
                                "isPassive": true,
                                "isCancelled": false,
                                "carrier": {
                                    "name": "SNCF",
                                    "operator": "2C",
                                    "icon": "/assets/img/Logos/RailIcons/2C.png"
                                },
                                "startStation": {
                                    "stationCode": "STRASBOURGSTAT",
                                    "stationName": "Strasbourg-Ville",
                                    "address": {
                                        "address1": "STRASBOURGSTAT  STRASBOURG STATIONFRAEG",
                                        "city": {},
                                        "region": {},
                                        "country": {},
                                        "notes": "STRASBOURGSTAT - STRASBOURG STATION-FRAEG"
                                    }
                                },
                                "endStation": {
                                    "stationCode": "MOLSHEIM",
                                    "stationName": "Gare de Molsheim",
                                    "address": {
                                        "address1": "MOLSHEIM  MOLSHEIMFRMOL",
                                        "city": {},
                                        "region": {},
                                        "country": {},
                                        "notes": "MOLSHEIM - MOLSHEIM-FRMOL"
                                    }
                                },
                                "numberInParty": 1,
                                "train": {
                                    "trainNumber": "24686",
                                    "classOfService": {},
                                    "specialInstructions": "SID02-TICKET"
                                },
                                "fare": {
                                    "rateQuote": {
                                        "amount": 34,
                                        "currency": "EUR"
                                    }
                                },
                                "seatSelections": [
                                    {
                                        "travelerNumber": "1",
                                        "location": "TER 30886 CL2"
                                    }
                                ],
                                "mealPreferences": [],
                                "railDistance": 72,
                                "calculatedCO2": [
                                    {
                                        "value": 0.82
                                    }
                                ],
                                "calculatedDuration": "23",
                                "numberOfStops": 0,
                                "notes": "0005\u2020RAL\u20202C\u202001FEB\u20204\u2020GK\u202001\u2020\u2020STRASBOURGSTAT\u2020\u2020MOLSHEIM\u20201327\u02c6STRASBOURG STATION-FRAEG\u02c61350\u02c601FEB\u02c6MOLSHEIM-FRMOL\u02c6TER 30886\u02c6CL2\u02c6SID02-TICKET\u02c6TROZUP-\u02c6\u02c6",
                                "tags": [
                                    "Rail"
                                ]
                            },
                            {
                                "type": "Air",
                                "segmentNumber": 6,
                                "segmentId": "d72c381f-7261-4ef9-b484-a2341c382461",
                                "groupId": "32ab322a-bcf3-2342-411d-32432ae4fc32",
                                "title": "Paris Bayu Indonesia",
                                "confirmationNumber": "QWI8Q2",
                                "sourceId": "GWYPNM6A35DGHT3",
                                "startDateTime": "2019-09-16T01:44:02+00:00",
                                "startTimezone": {
                                    "name": "Europe/London",
                                    "code": "GMT"
                                },
                                "endDateTime": "2019-09-19T21:54:15+01:00",
                                "endTimezone": {
                                    "name": "Europe/Paris",
                                    "code": "CET"
                                },
                                "status": {
                                    "code": "HK",
                                    "description": "Booked"
                                },
                                "isPassive": false,
                                "isCancelled": false,
                                "departureAirport": {
                                    "airport": {
                                        "code": "BRS",
                                        "name": "Bristol Airport",
                                        "address": {
                                            "city": {
                                                "name": "Bristol"
                                            },
                                            "region": {
                                                "code": "EN"
                                            },
                                            "country": {
                                                "code": "GB",
                                                "name": "United Kingdom"
                                            },
                                            "coordinates": {
                                                "latitude": "51.386757",
                                                "longitude": "-2.710659"
                                            }
                                        },
                                        "metroArea": {},
                                        "isMajorAirport": true
                                    }
                                },
                                "arrivalAirport": {
                                    "airport": {
                                        "code": "CDG",
                                        "name": "Charles de Gaulle Airport",
                                        "address": {
                                            "address1": "95711",
                                            "address2": " Roissy Charles de Gaulle",
                                            "city": {
                                                "name": "Paris"
                                            },
                                            "region": {},
                                            "country": {
                                                "code": "FR",
                                                "name": "France"
                                            },
                                            "coordinates": {
                                                "latitude": "49.003197",
                                                "longitude": "2.567023"
                                            }
                                        },
                                        "metroArea": {
                                            "code": "PAR",
                                            "name": "Paris"
                                        },
                                        "isMajorAirport": true
                                    },
                                    "terminal": "AEROGARE 3"
                                },
                                "marketingFlight": {
                                    "airlineCode": "BM",
                                    "airlineName": "Bayu Indonesia",
                                    "flightNumber": "8701",
                                    "icon": "/assets/img/Logos/AirLineIcons/BM.png"
                                },
                                "operatingFlight": {},
                                "isInternational": true,
                                "ticket": {
                                    "isTicketed": true,
                                    "ticketNumber": "0832364446562",
                                    "isTicketless": false,
                                    "isETicketCandidate": true
                                },
                                "seatSelections": [],
                                "mealPreferences": [],
                                "meal": {
                                    "hasSpecialMeal": 0
                                },
                                "equipment": {
                                    "code": "ER3"
                                },
                                "classOfService": {
                                    "code": "W",
                                    "description": "Economy"
                                },
                                "inFlightServices": {
                                    "code": "10",
                                    "description": "Non Smoking"
                                },
                                "flightDistance": 285,
                                "calculatedCO2": [
                                    {
                                        "key": "defra",
                                        "value": 37.76
                                    },
                                    {
                                        "key": "defrarf",
                                        "value": 71.43
                                    },
                                    {
                                        "key": "ghgp",
                                        "value": 78.66
                                    }
                                ],
                                "calculatedDuration": "75",
                                "numberOfStops": 0,
                                "isScheduleChange": false,
                                "isFlown": false,
                                "isChangeOfGuage": false,
                                "marriedSegments": [],
                                "connectedSegments": [],
                                "tags": [
                                    "Air"
                                ]
                            }
                        ],
                        "fareInfos": [
                            {
                                "segmentNumbers": [
                                    "1",
                                    "6"
                                ],
                                "fare": {
                                    "amount": 195,
                                    "currency": "EUR"
                                },
                                "estimatedTotalFare": {
                                    "amount": 310.77,
                                    "currency": "EUR"
                                }
                            },
                            {
                                "segmentNumbers": [
                                    "3"
                                ],
                                "fare": {
                                    "amount": 1597.84,
                                    "currency": "USD"
                                },
                                "estimatedTotalFare": {
                                    "amount": 2551.07,
                                    "currency": "USD"
                                }
                            },
                            {
                                "segmentNumbers": [
                                    "2"
                                ],
                                "fare": {
                                    "amount": 962.41,
                                    "currency": "USD"
                                },
                                "estimatedTotalFare": {
                                    "amount": 962.41,
                                    "currency": "USD"
                                }
                            },
                            {
                                "segmentNumbers": [
                                    "2"
                                ],
                                "fare": {
                                    "amount": 1340,
                                    "currency": "USD"
                                },
                                "estimatedTotalFare": {
                                    "amount": 1340,
                                    "currency": "USD"
                                }
                            },
                            {
                                "segmentNumbers": [
                                    "4"
                                ],
                                "fare": {
                                    "amount": 34,
                                    "currency": "EUR"
                                },
                                "estimatedTotalFare": {
                                    "amount": 34,
                                    "currency": "EUR"
                                }
                            },
                            {
                                "segmentNumbers": [
                                    "5"
                                ],
                                "fare": {
                                    "amount": 34,
                                    "currency": "EUR"
                                },
                                "estimatedTotalFare": {
                                    "amount": 34,
                                    "currency": "EUR"
                                }
                            },
                            {
                                "segmentNumbers": [
                                    "1"
                                ],
                                "fare": {
                                    "amount": 1362,
                                    "currency": "USD"
                                },
                                "estimatedTotalFare": {
                                    "amount": 1362,
                                    "currency": "USD"
                                }
                            }
                        ],
                        "remarks": [
                            {
                                "type": 10,
                                "category": "G",
                                "contents": "5G\u2021EVENT-CV-ABC123456"
                            }
                        ]
                    }
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "403",
                    "status": "Forbidden",
                    "message": "Access is forbidden: Access to this data is restricted"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "400",
                    "status": "Bad Request",
                    "message": "Bad Request: Trip was not found or tripid is in incorrect format"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "500",
                    "status": "Internal Server Error",
                    "message": "Server Error: Operation Failed"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95463,
        "executor_type": "THIRDPARTY",
        "executor_name": "clientcredentialsgrantItineraryAPI",
        "executor_version": "v1",
        "executor_display_name": "Client credentials grant",
        "executor_description": "Client credentials grant",
        "executor_category": "ItineraryAPI",
        "executor_category_group": "ItineraryAPI",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://b2b.gateway.apiplatform.io/v1/clientcredentialsgrant",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": [
                {
                    "key": "client_id",
                    "value": "",
                    "description": "Required client_id supplied by BCD",
                    "req": false,
                    "isFile": false,
                    "type": "Text"
                },
                {
                    "key": "client_secret",
                    "value": "",
                    "description": "Required client_secret supplied by BCD",
                    "req": false,
                    "isFile": false,
                    "type": "Text"
                },
                {
                    "key": "grant_type",
                    "value": "",
                    "description": "Required Specify which grant type you expect the OAuth 2.0 service to process. For client_credentials grant, the value is client_credentials",
                    "req": false,
                    "isFile": false,
                    "type": "Text"
                }
            ],
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685512872594,
        "lastModifiedTime": 1685512872594,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95753,
        "executor_type": "THIRDPARTY",
        "executor_name": "bookFlights",
        "executor_version": "v2",
        "executor_display_name": "book",
        "executor_description": "Books a flight/fare.",
        "executor_category": "Flights",
        "executor_category_group": "Flights",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://private-anon-a03b85d2d4-tshapiv20.apiary-mock.com/air/book/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": null,
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685607593059,
        "lastModifiedTime": 1685607593059,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "booking_uid": "asdfewqrs0234sdfa",
                    "customer_ip": "192.168.31.116",
                    "errors": [],
                    "locale": "en_US",
                    "session_id": "40Lpcxqzu8X2z3YoZEHnEV",
                    "user_agent": "Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95739,
        "executor_type": "THIRDPARTY",
        "executor_name": "availability",
        "executor_version": "v2",
        "executor_display_name": "availability",
        "executor_description": "Retrieves a list of flights and seats available at different class levels for a specific date.",
        "executor_category": "Flights",
        "executor_category_group": "Flights",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://private-anon-a03b85d2d4-tshapiv20.apiary-mock.com/air/availability/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "api_key": "testkey",
                "configuration_id": 3500000023,
                "customer_ip": "192.168.31.116",
                "entity_id": 23,
                "fare_codes": {
                    "farelogix": []
                },
                "locale": "en_US",
                "max_gds_flight_options": 15,
                "nonce": "1543353502645",
                "origin_destinations": [
                    {
                        "airline_codes": [],
                        "arrival_location": {
                            "location_code": "ATL",
                            "location_type": "airport"
                        },
                        "connecting_locations_codes": [],
                        "departure_date": "2020-02-25",
                        "departure_location": {
                            "location_code": "ATL",
                            "location_type": "airport"
                        },
                        "direct_only": true,
                        "specific_flights": [
                            {
                                "airline_code": "DL",
                                "flight_number": "123"
                            }
                        ],
                        "time_restriction": {
                            "time": "05:20",
                            "time_type": "ARRIVAL",
                            "time_window": 12
                        }
                    }
                ],
                "session_id": "71IxqHT8mgMe5ohsZ25e5P",
                "system": "aft",
                "timestamp": 1388774110,
                "user_agent": "Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685605775850,
        "lastModifiedTime": 1685605775850,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "customer_ip": "192.168.31.116",
                    "errors": [],
                    "locale": "en_US",
                    "origin_destinations": [
                        {
                            "arrival_iata": "ATL",
                            "departure_iata": "ATL",
                            "flight_options": [
                                {
                                    "all_segments_available": true,
                                    "alternative_ticketing": false,
                                    "currently_booked": false,
                                    "duration": {
                                        "hours": 0,
                                        "minutes": 0
                                    },
                                    "fare_group_ids": [],
                                    "flight_option_key": "abcdefghijklmnopqrstuvwxyz",
                                    "providers": [],
                                    "segments": [
                                        {
                                            "airplane": "Boeing 747",
                                            "airport_change": false,
                                            "arrival": {
                                                "airport": {
                                                    "code": "LHR",
                                                    "location": "London, England, United Kingdom",
                                                    "name": "Heathrow",
                                                    "timezone": "Europe/London",
                                                    "title": "London, England, United Kingdom (LHR-Heathrow)"
                                                },
                                                "datetime": "2020-02-11T13:23",
                                                "terminal": "A"
                                            },
                                            "bcd_preferred_airline": false,
                                            "bcd_preferred_airline_tier": null,
                                            "carrier": {
                                                "code": "LH",
                                                "flight_number": "123",
                                                "flight_number_suffix": "X",
                                                "name": "Lufthansa"
                                            },
                                            "classes": [
                                                {
                                                    "cabin": "first",
                                                    "class_of_service": "Y",
                                                    "seats_status": {
                                                        "code": "A",
                                                        "description": ""
                                                    }
                                                }
                                            ],
                                            "currently_booked": false,
                                            "departure": {
                                                "airport": {
                                                    "code": "LHR",
                                                    "location": "London, England, United Kingdom",
                                                    "name": "Heathrow",
                                                    "timezone": "Europe/London",
                                                    "title": "London, England, United Kingdom (LHR-Heathrow)"
                                                },
                                                "datetime": "2020-02-11T13:23",
                                                "terminal": "A"
                                            },
                                            "duration": {
                                                "hours": 0,
                                                "minutes": 0
                                            },
                                            "operating_carrier": {
                                                "code": "LH",
                                                "flight_number": "123",
                                                "flight_number_suffix": "X",
                                                "name": "Lufthansa"
                                            },
                                            "preferred_airline": false,
                                            "preferred_airline_tier": null,
                                            "segment_id_ref": "1"
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "provider_errors": [
                        {
                            "message": "No fares found",
                            "provider": "travelfusion",
                            "type": "NoResults"
                        }
                    ],
                    "session_id": "40Lpcxqzu8X2z3YoZEHnEV",
                    "user_agent": "Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95760,
        "executor_type": "THIRDPARTY",
        "executor_name": "cancelreservationFlights",
        "executor_version": "v2",
        "executor_display_name": "cancel_reservation",
        "executor_description": "Cancels a flight reservation.",
        "executor_category": "Flights",
        "executor_category_group": "Flights",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://private-anon-a03b85d2d4-tshapiv20.apiary-mock.com/air/cancel_reservation/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": null,
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685608133962,
        "lastModifiedTime": 1685608133962,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "booking_uid": "5bed9314db992881744d1ff3",
                    "cancellation_status": "success",
                    "customer_ip": "192.168.31.116",
                    "errors": [],
                    "locale": "en_US",
                    "session_id": "40Lpcxqzu8X2z3YoZEHnEV",
                    "user_agent": "Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95764,
        "executor_type": "THIRDPARTY",
        "executor_name": "destinationlookup",
        "executor_version": "v2",
        "executor_display_name": "destination_lookup",
        "executor_description": "Retrieves a list of the airports and cities associated with a user search term.",
        "executor_category": "Flights",
        "executor_category_group": "Flights",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-a03b85d2d4-tshapiv20.apiary-mock.com/air/destination_lookup/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "api_key",
                "value": "",
                "description": " Public key, provided by BCD Travel API team Example: testkey.",
                "req": false
            },
            {
                "key": "customer_ip",
                "value": "",
                "description": " IP address of a user, as captured by the customer\u2019s integration. Ensure your integration passes the user\u2019s IP, not your own. This value helps determine user's location for fraud recovery and other analytics. Example: 192.168.31.116.",
                "req": false
            },
            {
                "key": "locale",
                "value": "",
                "description": " Forces system to return data in other languages if available. Defaults to en_US if not passed. Example: en_US.Show Possible Values",
                "req": false
            },
            {
                "key": "nonce",
                "value": "",
                "description": " A randomly generated string of your choice. Ensure it is unique to each request with same timestamp within 5 minute interval and no more than 32 characters long. Maximum value length is 32. Example: 1543353502645.",
                "req": false
            },
            {
                "key": "session_id",
                "value": "",
                "description": " Customer generated identifier of user's session. Do not use real user's session id as it will be replayed back in the API response. Reuse this identifier for all requests by the same user. Including this value makes subsequent troubleshooting and audit easier, as it explicitly links together requests for individual users. <,>,& characters are not allowed. Example: 71IxqHT8mgMe5ohsZ25e5P.",
                "req": false
            },
            {
                "key": "system",
                "value": "",
                "description": " Certain things may be configured and subsequently returned very differently based on the booking channel. This attribute tells the system which one of the currently supported channels the data is being requested for. Please inquire which booking channel your integration should use for all requests when you obtain your API key. Example: aft.",
                "req": false
            },
            {
                "key": "term",
                "value": "",
                "description": " Search term for the destination (full string or substring, i.e. sfo, london, riu palace, angeles). Minimum length for the search term is 2 letters. Minimum value length is 2. Example: irpin.",
                "req": false
            },
            {
                "key": "timestamp",
                "value": "",
                "description": "Valid current UNIX timestamp in seconds. Example: 1388774110.",
                "req": false
            },
            {
                "key": "user_agent",
                "value": "",
                "description": " Properly encoded customer\u2019s user agent string (required to obtain mobile rates from some providers). For traffic from mobile or desktop apps (as opposed to browser apps), use the following format: {App Name}/{App Version} ({OS} {OS Version}) [APP or MOBILE_APP] (e.g. TripSource/5.0 (iOS 10_10_3) MOBILE_APP). Note: Required to get discounted mobile rates Example: Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685608581697,
        "lastModifiedTime": 1685608581697,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "airports": [
                        {
                            "iata_code": "KBP",
                            "id": "Airport:KBP",
                            "label": "Kyiv, Ukraine (KBP-Borispol Intl.)",
                            "latitude": 50.34094,
                            "longitude": 30.895151,
                            "name_location": "Kyiv, Ukraine",
                            "name_short": "Borispol Intl.",
                            "near_city": {
                                "iata_code": "IEV",
                                "id": "Region:e|1565",
                                "label": "Kyiv (IEV), Ukraine",
                                "latitude": 50.450054,
                                "longitude": 30.524057
                            },
                            "score": 0
                        }
                    ],
                    "cities": [
                        {
                            "airports": [
                                {
                                    "iata_code": "KBP",
                                    "id": "Airport:KBP",
                                    "label": "Kyiv, Ukraine (KBP-Borispol Intl.)",
                                    "latitude": 50.34094,
                                    "longitude": 30.895151,
                                    "name_location": "Kyiv, Ukraine",
                                    "name_short": "Borispol Intl."
                                }
                            ],
                            "iata_code": "IEV",
                            "id": "Region:e|1565",
                            "label": "Kyiv (IEV), Ukraine",
                            "latitude": 50.450054,
                            "longitude": 30.524057,
                            "near_city": {
                                "iata_code": "IEV",
                                "id": "Region:e|1565",
                                "label": "Kyiv (IEV), Ukraine",
                                "latitude": 50.450054,
                                "longitude": 30.524057
                            },
                            "score": 0
                        }
                    ],
                    "customer_ip": "192.168.31.116",
                    "errors": [],
                    "locale": "en_US",
                    "session_id": "40Lpcxqzu8X2z3YoZEHnEV",
                    "user_agent": "Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95756,
        "executor_type": "THIRDPARTY",
        "executor_name": "completeverification",
        "executor_version": "v2",
        "executor_display_name": "complete_verification",
        "executor_description": "Completes the booking process for Travelfusion airlines that require 3D security for credit card payments.",
        "executor_category": "Flights",
        "executor_category_group": "Flights",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://private-anon-a03b85d2d4-tshapiv20.apiary-mock.com/air/complete_verification/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": null,
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685607772306,
        "lastModifiedTime": 1685607772306,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "booking_uid": "asdfewqrs0234sdfa",
                    "customer_ip": "192.168.31.116",
                    "errors": [],
                    "locale": "en_US",
                    "session_id": "40Lpcxqzu8X2z3YoZEHnEV",
                    "user_agent": "Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95741,
        "executor_type": "THIRDPARTY",
        "executor_name": "faresearch",
        "executor_version": "v2",
        "executor_display_name": "fare_search",
        "executor_description": "Retrieves a list of flights/fares on a specific date.",
        "executor_category": "Flights",
        "executor_category_group": "Flights",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://private-anon-a03b85d2d4-tshapiv20.apiary-mock.com/air/fare_search/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": null,
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685605891619,
        "lastModifiedTime": 1685605891619,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "customer_ip": "192.168.31.116",
                    "errors": [],
                    "fare_groups": [
                        {
                            "baggage_allowance": {
                                "max_pieces": 1,
                                "max_weight": 23,
                                "weight_unit": "K"
                            },
                            "currency": "USD",
                            "exchange_info": {
                                "additional_collection": {
                                    "currency": "...",
                                    "total": 0
                                },
                                "refund": {
                                    "currency": "...",
                                    "total": 0
                                }
                            },
                            "fare_components": [
                                {
                                    "airline_code": "LH",
                                    "contract_codes": [],
                                    "fare_basis_code": "ABC123",
                                    "is_bcd_negotiated": false,
                                    "is_company_negotiated": false,
                                    "is_negotiated": false,
                                    "price_class_code": "BUSINESS",
                                    "price_class_description": "No luggage included and no refundability.",
                                    "price_class_name": "Business Saver",
                                    "segment_ids": [],
                                    "ticket_designator_code": "ABC123",
                                    "tour_code": "ABC123"
                                }
                            ],
                            "fare_group_key": "abcdefghijklmnopqrstuvwxyz",
                            "fare_type": "PUBL",
                            "freetext": "This is a very good fare for you.",
                            "is_bcd_negotiated": false,
                            "is_company_negotiated": false,
                            "is_ndc": false,
                            "is_negotiated": false,
                            "origin_destinations": [
                                {
                                    "arrival_airport_codes": [],
                                    "departure_airport_codes": [],
                                    "flight_options": [
                                        {
                                            "alternative_ticketing": false,
                                            "currently_booked": false,
                                            "duration": {
                                                "hours": 0,
                                                "minutes": 0
                                            },
                                            "flight_option_key": "abcdefghijklmnopqrstuvwxyz",
                                            "out_of_policy_reasons": [],
                                            "out_of_policy_rules": [],
                                            "seats": 6,
                                            "segments": [
                                                {
                                                    "airplane": "Boeing 747",
                                                    "airport_change": false,
                                                    "amenities": [
                                                        {
                                                            "amenity": "wifi",
                                                            "display_text": "No Wi-Fi",
                                                            "exists": false
                                                        }
                                                    ],
                                                    "arrival": {
                                                        "airport": {
                                                            "code": "LHR",
                                                            "location": "London, England, United Kingdom",
                                                            "name": "Heathrow",
                                                            "timezone": "Europe/London",
                                                            "title": "London, England, United Kingdom (LHR-Heathrow)"
                                                        },
                                                        "datetime": "2020-02-11T13:23",
                                                        "terminal": "A"
                                                    },
                                                    "baggage_allowance": {
                                                        "max_pieces": 1,
                                                        "max_weight": 23,
                                                        "weight_unit": "K"
                                                    },
                                                    "bcd_preferred_airline": false,
                                                    "bcd_preferred_airline_tier": 1,
                                                    "cabin": "first",
                                                    "carrier": {
                                                        "code": "LH",
                                                        "flight_number": "123",
                                                        "flight_number_suffix": "X",
                                                        "name": "Lufthansa"
                                                    },
                                                    "class_of_service": "Y",
                                                    "currently_booked": false,
                                                    "departure": {
                                                        "airport": {
                                                            "code": "LHR",
                                                            "location": "London, England, United Kingdom",
                                                            "name": "Heathrow",
                                                            "timezone": "Europe/London",
                                                            "title": "London, England, United Kingdom (LHR-Heathrow)"
                                                        },
                                                        "datetime": "2020-02-11T13:23",
                                                        "terminal": "A"
                                                    },
                                                    "duration": {
                                                        "hours": 0,
                                                        "minutes": 0
                                                    },
                                                    "emissions": null,
                                                    "married_segment": "B",
                                                    "operating_carrier": {
                                                        "code": "LH",
                                                        "flight_number": "123",
                                                        "flight_number_suffix": "X",
                                                        "name": "Lufthansa"
                                                    },
                                                    "preferred_airline": false,
                                                    "preferred_airline_tier": 1,
                                                    "segment_id_ref": "1",
                                                    "sell_indicator": "asdfghjkl",
                                                    "stops": [
                                                        {
                                                            "airport": {
                                                                "code": "LHR",
                                                                "location": "London, England, United Kingdom",
                                                                "name": "Heathrow",
                                                                "timezone": "Europe/London",
                                                                "title": "London, England, United Kingdom (LHR-Heathrow)"
                                                            },
                                                            "arrival_datetime": "2020-05-06T13:42",
                                                            "change_of_gauge": false,
                                                            "departure_datetime": "2020-05-06T13:42",
                                                            "equipment_code": "12345",
                                                            "equipment_name": "Boeing 737 Max"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "unbookable_reasons": [],
                                            "unbookable_rules": []
                                        }
                                    ]
                                }
                            ],
                            "out_of_policy_reasons": [],
                            "out_of_policy_rules": [],
                            "penalties": {
                                "cancellation_fee_applies": false,
                                "cancellation_fees": [
                                    {
                                        "allowed": "null",
                                        "application": "null",
                                        "guaranteed": false,
                                        "max_amount": 0,
                                        "max_unit": "null",
                                        "min_amount": 0,
                                        "min_unit": "null",
                                        "original_max_amount": 0,
                                        "original_min_amount": 0,
                                        "original_total": 0,
                                        "penalty_type": "null",
                                        "text": "null",
                                        "total": 0
                                    }
                                ],
                                "carrier_fee": false,
                                "change_itinerary_fee_applies": false,
                                "change_itinerary_fees": [
                                    {
                                        "allowed": "null",
                                        "application": "null",
                                        "guaranteed": false,
                                        "max_amount": 0,
                                        "max_unit": "null",
                                        "min_amount": 0,
                                        "min_unit": "null",
                                        "original_max_amount": 0,
                                        "original_min_amount": 0,
                                        "original_total": 0,
                                        "penalty_type": "null",
                                        "text": "null",
                                        "total": 0
                                    }
                                ],
                                "currency": "null",
                                "deposit_refundable": false,
                                "deposit_required": false,
                                "failure_to_confirm_fee_applies": false,
                                "failure_to_confirm_fees": [
                                    {
                                        "allowed": "null",
                                        "application": "null",
                                        "guaranteed": false,
                                        "max_amount": 0,
                                        "max_unit": "null",
                                        "min_amount": 0,
                                        "min_unit": "null",
                                        "original_max_amount": 0,
                                        "original_min_amount": 0,
                                        "original_total": 0,
                                        "penalty_type": "null",
                                        "text": "null",
                                        "total": 0
                                    }
                                ],
                                "original_currency": "null",
                                "ticket_changeable": false,
                                "ticket_refundable": false,
                                "ticket_replacement_fee_applies": false,
                                "ticket_replacement_fees": [
                                    {
                                        "allowed": "null",
                                        "application": "null",
                                        "guaranteed": false,
                                        "max_amount": 0,
                                        "max_unit": "null",
                                        "min_amount": 0,
                                        "min_unit": "null",
                                        "original_max_amount": 0,
                                        "original_min_amount": 0,
                                        "original_total": 0,
                                        "penalty_type": "null",
                                        "text": "null",
                                        "total": 0
                                    }
                                ]
                            },
                            "provider": "",
                            "ticket_attributes": {
                                "advance_change": {
                                    "allowed": false,
                                    "amount": {
                                        "amount": 90.8,
                                        "currency": "EUR",
                                        "original_amount": 120.1,
                                        "original_currency": "USD"
                                    },
                                    "description": "For a 50EUR fee",
                                    "fee": false,
                                    "percentage": 20
                                },
                                "baggage": {
                                    "description": "1pc up to 23kg",
                                    "included": false,
                                    "max_pieces": 1,
                                    "max_weight": 23,
                                    "weight_unit": "K"
                                },
                                "cancellation": {
                                    "amount": {
                                        "amount": 90.8,
                                        "currency": "EUR",
                                        "original_amount": 120.1,
                                        "original_currency": "USD"
                                    },
                                    "description": "Refundable for 50EUR fee",
                                    "fee": false,
                                    "refundable": false
                                },
                                "seats": {
                                    "seat_selection": [
                                        {
                                            "assessment": "fee",
                                            "bag_limits": {
                                                "size_lcm": 208,
                                                "weight_kg": 23
                                            },
                                            "description": "Advance change allowed for fee",
                                            "fees": [
                                                {
                                                    "amount": 100.6,
                                                    "amount_max": 200.6,
                                                    "amount_min": 50.6,
                                                    "currency": "USD"
                                                }
                                            ],
                                            "is_allowed": false
                                        }
                                    ]
                                }
                            },
                            "ticket_by_date": "2020-02-02",
                            "ticket_refundable": false,
                            "total": 125,
                            "unbookable_reasons": [],
                            "unbookable_rules": [],
                            "validating_carrier_codes": []
                        }
                    ],
                    "locale": "en_US",
                    "policy_rules": [
                        {
                            "id": "fe9eb3ae-first-rule",
                            "rule_name": "First rule.",
                            "rule_translations": [
                                {
                                    "language": "en",
                                    "title": ""
                                }
                            ]
                        }
                    ],
                    "provider_errors": [
                        {
                            "message": "No fares found",
                            "provider": "travelfusion",
                            "type": "NoResults"
                        }
                    ],
                    "session_id": "40Lpcxqzu8X2z3YoZEHnEV",
                    "user_agent": "Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95743,
        "executor_type": "THIRDPARTY",
        "executor_name": "pricing",
        "executor_version": "v2",
        "executor_display_name": "pricing",
        "executor_description": "Retrieves additional details and availability of a flight/fare.",
        "executor_category": "Flights",
        "executor_category_group": "Flights",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://private-anon-a03b85d2d4-tshapiv20.apiary-mock.com/air/pricing/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "alternate_fares": false,
                "api_key": "testkey",
                "best_pricing": false,
                "cabin": "first",
                "changeable_only": false,
                "configuration_id": 3500000023,
                "currency": "EUR",
                "customer_ip": "192.168.31.116",
                "entity_id": 23,
                "exclude_penalties": false,
                "fare_codes": {
                    "amadeus": [],
                    "apollo": [],
                    "farelogix": [],
                    "galileo": [],
                    "sabre": []
                },
                "fare_families": false,
                "fare_group_key": "abcdefghijklmnopqrstuvwxyz1234567890",
                "flight_option_keys": [],
                "included_baggage": false,
                "is_manual_exchange": false,
                "locale": "en_US",
                "nonce": "1543353502645",
                "optional_service_keys": [],
                "price_class_code": "BUSINESS",
                "refundable_only": false,
                "segment_options": [
                    {
                        "class_of_service": "Y",
                        "segment_id_ref": "1"
                    }
                ],
                "session_id": "71IxqHT8mgMe5ohsZ25e5P",
                "system": "aft",
                "timestamp": 1388774110,
                "travelers": [
                    {
                        "ff_numbers": [
                            {
                                "airline_code": "DL",
                                "ff_number": "ABC123"
                            }
                        ],
                        "traveler_type": "adult"
                    }
                ],
                "user_agent": "Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685606068137,
        "lastModifiedTime": 1685606636939,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "customer_ip": "192.168.31.116",
                    "errors": [],
                    "fare_groups": [
                        {
                            "baggage_allowances": [
                                {
                                    "baggage_allowance": {
                                        "max_pieces": 1,
                                        "max_weight": 23,
                                        "weight_unit": "K"
                                    },
                                    "traveler_id": "T1"
                                }
                            ],
                            "currency": "USD",
                            "exchange_info": {
                                "additional_collection": {
                                    "base_fare_difference": 0,
                                    "currency": "",
                                    "original_base_fare_difference": 0,
                                    "original_currency": "null",
                                    "original_taxes_total": 0,
                                    "original_total": 0,
                                    "original_total_additional_collection": 0,
                                    "original_total_credit": 0,
                                    "taxes": [
                                        {
                                            "amount": 10.5,
                                            "description": "Fuel Tax",
                                            "designator": "AB",
                                            "nature": "XY",
                                            "original_amount": 10.5
                                        }
                                    ],
                                    "taxes_total": 0,
                                    "total": 0,
                                    "total_additional_collection": 0,
                                    "total_credit": 0
                                },
                                "fare_balance": {
                                    "equivalent_difference": {
                                        "amount": 0,
                                        "currency": "",
                                        "original_amount": 0,
                                        "original_currency": "null"
                                    },
                                    "filed_in_difference": {
                                        "amount": 0,
                                        "currency": "",
                                        "original_amount": 0,
                                        "original_currency": "null"
                                    }
                                },
                                "forfeit": {
                                    "amount": 0,
                                    "fare_amount": 0,
                                    "original_amount": 0,
                                    "original_fare_amount": 0,
                                    "original_tax_amount": 0,
                                    "original_total": 0,
                                    "tax_amount": 0,
                                    "total": 0
                                },
                                "original_value_of_old_ticket": 0,
                                "penalty": {
                                    "amount": 0,
                                    "original_amount": 0,
                                    "original_total": 0,
                                    "total": 0
                                },
                                "refund": {
                                    "base_fare_difference": 0,
                                    "currency": "",
                                    "original_base_fare_difference": 0,
                                    "original_currency": "null",
                                    "original_taxes_total": 0,
                                    "original_total": 0,
                                    "original_total_additional_collection": 0,
                                    "original_total_credit": 0,
                                    "taxes": [
                                        {
                                            "amount": 10.5,
                                            "description": "Fuel Tax",
                                            "designator": "AB",
                                            "nature": "XY",
                                            "original_amount": 10.5
                                        }
                                    ],
                                    "taxes_total": 0,
                                    "total": 0,
                                    "total_additional_collection": 0,
                                    "total_credit": 0
                                },
                                "value_of_old_ticket": 0
                            },
                            "fare_components": [
                                {
                                    "airline_code": "LH",
                                    "contract_codes": [],
                                    "discount_granted": {
                                        "amount": "50",
                                        "type": "percent"
                                    },
                                    "fare_basis_code": "ABC123",
                                    "is_bcd_negotiated": false,
                                    "is_company_negotiated": false,
                                    "is_negotiated": false,
                                    "original_total_after_taxes": 103.2,
                                    "penalties": {
                                        "cancellation_fee_applies": false,
                                        "cancellation_fees": [
                                            {
                                                "allowed": "null",
                                                "application": "null",
                                                "guaranteed": false,
                                                "max_amount": 0,
                                                "max_unit": "null",
                                                "min_amount": 0,
                                                "min_unit": "null",
                                                "original_max_amount": 0,
                                                "original_min_amount": 0,
                                                "original_total": 0,
                                                "penalty_type": "null",
                                                "text": "null",
                                                "total": 0
                                            }
                                        ],
                                        "carrier_fee": false,
                                        "change_itinerary_fee_applies": false,
                                        "change_itinerary_fees": [
                                            {
                                                "allowed": "null",
                                                "application": "null",
                                                "guaranteed": false,
                                                "max_amount": 0,
                                                "max_unit": "null",
                                                "min_amount": 0,
                                                "min_unit": "null",
                                                "original_max_amount": 0,
                                                "original_min_amount": 0,
                                                "original_total": 0,
                                                "penalty_type": "null",
                                                "text": "null",
                                                "total": 0
                                            }
                                        ],
                                        "currency": "null",
                                        "deposit_refundable": false,
                                        "deposit_required": false,
                                        "failure_to_confirm_fee_applies": false,
                                        "failure_to_confirm_fees": [
                                            {
                                                "allowed": "null",
                                                "application": "null",
                                                "guaranteed": false,
                                                "max_amount": 0,
                                                "max_unit": "null",
                                                "min_amount": 0,
                                                "min_unit": "null",
                                                "original_max_amount": 0,
                                                "original_min_amount": 0,
                                                "original_total": 0,
                                                "penalty_type": "null",
                                                "text": "null",
                                                "total": 0
                                            }
                                        ],
                                        "original_currency": "null",
                                        "ticket_changeable": false,
                                        "ticket_refundable": false,
                                        "ticket_replacement_fee_applies": false,
                                        "ticket_replacement_fees": [
                                            {
                                                "allowed": "null",
                                                "application": "null",
                                                "guaranteed": false,
                                                "max_amount": 0,
                                                "max_unit": "null",
                                                "min_amount": 0,
                                                "min_unit": "null",
                                                "original_max_amount": 0,
                                                "original_min_amount": 0,
                                                "original_total": 0,
                                                "penalty_type": "null",
                                                "text": "null",
                                                "total": 0
                                            }
                                        ]
                                    },
                                    "price_class_code": "BUSINESS",
                                    "price_class_description": "No luggage included and no refundability.",
                                    "price_class_name": "Business Saver",
                                    "segment_ids": [],
                                    "ticket_designator_code": "ABC123",
                                    "total_after_taxes": 103.2,
                                    "tour_code": "ABC123"
                                }
                            ],
                            "fare_group_key": "abcdefghijklmnopqrstuvwxyz1234567890",
                            "fare_type": "PUBL",
                            "freetext": "This is a very good fare for you.",
                            "included_services": [
                                {
                                    "airline_code": "DL",
                                    "amount": 20.3,
                                    "attributes": {
                                        "desc1": {
                                            "code": "BG",
                                            "text": "Baggage"
                                        },
                                        "desc2": {
                                            "code": "BG",
                                            "text": "Baggage"
                                        },
                                        "group": {
                                            "code": "BG",
                                            "text": "Baggage"
                                        },
                                        "subgroup": {
                                            "code": "BG",
                                            "text": "Baggage"
                                        }
                                    },
                                    "code": "S324",
                                    "description": "Free Baggage Allowance",
                                    "details": "Some description details",
                                    "method": "F",
                                    "original_amount": 20.3,
                                    "reason_code": "C",
                                    "subcode": "0C3",
                                    "travelers": [],
                                    "type": "Included"
                                }
                            ],
                            "is_bcd_negotiated": false,
                            "is_company_negotiated": false,
                            "is_ndc": false,
                            "is_negotiated": false,
                            "optional_services": [
                                {
                                    "airline_code": "DL",
                                    "amount": 20.3,
                                    "attributes": {
                                        "desc1": {
                                            "code": "BG",
                                            "text": "Baggage"
                                        },
                                        "desc2": {
                                            "code": "BG",
                                            "text": "Baggage"
                                        },
                                        "group": {
                                            "code": "BG",
                                            "text": "Baggage"
                                        },
                                        "subgroup": {
                                            "code": "BG",
                                            "text": "Baggage"
                                        }
                                    },
                                    "code": "S324",
                                    "description": "Free Baggage Allowance",
                                    "details": "Some description details",
                                    "method": "F",
                                    "original_amount": 20.3,
                                    "reason_code": "C",
                                    "service_key": "abcdefghijklmnop",
                                    "subcode": "0C3",
                                    "travelers": [],
                                    "type": "Included"
                                }
                            ],
                            "origin_destinations": [
                                {
                                    "baggage_allowances": [
                                        {
                                            "baggage_allowance": {
                                                "max_pieces": 1,
                                                "max_weight": 23,
                                                "weight_unit": "K"
                                            },
                                            "traveler_id": "T1"
                                        }
                                    ],
                                    "duration": {
                                        "hours": 0,
                                        "minutes": 0
                                    },
                                    "flight_option_key": "abcdefghijklmnopqrstuvwxyz",
                                    "included_services": [
                                        {
                                            "airline_code": "DL",
                                            "amount": 20.3,
                                            "attributes": {
                                                "desc1": {
                                                    "code": "BG",
                                                    "text": "Baggage"
                                                },
                                                "desc2": {
                                                    "code": "BG",
                                                    "text": "Baggage"
                                                },
                                                "group": {
                                                    "code": "BG",
                                                    "text": "Baggage"
                                                },
                                                "subgroup": {
                                                    "code": "BG",
                                                    "text": "Baggage"
                                                }
                                            },
                                            "code": "S324",
                                            "description": "Free Baggage Allowance",
                                            "details": "Some description details",
                                            "method": "F",
                                            "original_amount": 20.3,
                                            "reason_code": "C",
                                            "subcode": "0C3",
                                            "travelers": [],
                                            "type": "Included"
                                        }
                                    ],
                                    "optional_services": [
                                        {
                                            "airline_code": "DL",
                                            "amount": 20.3,
                                            "attributes": {
                                                "desc1": {
                                                    "code": "BG",
                                                    "text": "Baggage"
                                                },
                                                "desc2": {
                                                    "code": "BG",
                                                    "text": "Baggage"
                                                },
                                                "group": {
                                                    "code": "BG",
                                                    "text": "Baggage"
                                                },
                                                "subgroup": {
                                                    "code": "BG",
                                                    "text": "Baggage"
                                                }
                                            },
                                            "code": "S324",
                                            "description": "Free Baggage Allowance",
                                            "details": "Some description details",
                                            "method": "F",
                                            "original_amount": 20.3,
                                            "reason_code": "C",
                                            "service_key": "abcdefghijklmnop",
                                            "subcode": "0C3",
                                            "travelers": [],
                                            "type": "Included"
                                        }
                                    ],
                                    "out_of_policy_reasons": [],
                                    "out_of_policy_rules": [],
                                    "seats": 6,
                                    "segments": [
                                        {
                                            "airplane": "Boeing 747",
                                            "airport_change": false,
                                            "amenities": [
                                                {
                                                    "amenity": "wifi",
                                                    "display_text": "No Wi-Fi",
                                                    "exists": false
                                                }
                                            ],
                                            "arrival": {
                                                "airport": {
                                                    "code": "LHR",
                                                    "location": "London, England, United Kingdom",
                                                    "name": "Heathrow",
                                                    "timezone": "Europe/London",
                                                    "title": "London, England, United Kingdom (LHR-Heathrow)"
                                                },
                                                "datetime": "2020-02-11T13:23",
                                                "terminal": "A"
                                            },
                                            "baggage_allowances": [
                                                {
                                                    "baggage_allowance": {
                                                        "max_pieces": 1,
                                                        "max_weight": 23,
                                                        "weight_unit": "K"
                                                    },
                                                    "traveler_id": "T1"
                                                }
                                            ],
                                            "baggage_policies": [
                                                {
                                                    "amount": 35,
                                                    "item": "1",
                                                    "original_amount": 35,
                                                    "text": "BG:LO",
                                                    "url": "https://bags.amadeus.com/Display.aspx?a=LO"
                                                }
                                            ],
                                            "bcd_preferred_airline": false,
                                            "bcd_preferred_airline_tier": 1,
                                            "cabin": "first",
                                            "carrier": {
                                                "code": "LH",
                                                "flight_number": "123",
                                                "flight_number_suffix": "X",
                                                "name": "Lufthansa"
                                            },
                                            "class_of_service": "Y",
                                            "departure": {
                                                "airport": {
                                                    "code": "LHR",
                                                    "location": "London, England, United Kingdom",
                                                    "name": "Heathrow",
                                                    "timezone": "Europe/London",
                                                    "title": "London, England, United Kingdom (LHR-Heathrow)"
                                                },
                                                "datetime": "2020-02-11T13:23",
                                                "terminal": "A"
                                            },
                                            "duration": {
                                                "hours": 0,
                                                "minutes": 0
                                            },
                                            "emissions": null,
                                            "included_services": [
                                                {
                                                    "airline_code": "DL",
                                                    "amount": 20.3,
                                                    "attributes": {
                                                        "desc1": {
                                                            "code": "BG",
                                                            "text": "Baggage"
                                                        },
                                                        "desc2": {
                                                            "code": "BG",
                                                            "text": "Baggage"
                                                        },
                                                        "group": {
                                                            "code": "BG",
                                                            "text": "Baggage"
                                                        },
                                                        "subgroup": {
                                                            "code": "BG",
                                                            "text": "Baggage"
                                                        }
                                                    },
                                                    "code": "S324",
                                                    "description": "Free Baggage Allowance",
                                                    "details": "Some description details",
                                                    "method": "F",
                                                    "original_amount": 20.3,
                                                    "reason_code": "C",
                                                    "subcode": "0C3",
                                                    "travelers": [],
                                                    "type": "Included"
                                                }
                                            ],
                                            "married_segment": "B",
                                            "operating_carrier": {
                                                "code": "LH",
                                                "flight_number": "123",
                                                "flight_number_suffix": "X",
                                                "name": "Lufthansa"
                                            },
                                            "optional_services": [
                                                {
                                                    "airline_code": "DL",
                                                    "amount": 20.3,
                                                    "attributes": {
                                                        "desc1": {
                                                            "code": "BG",
                                                            "text": "Baggage"
                                                        },
                                                        "desc2": {
                                                            "code": "BG",
                                                            "text": "Baggage"
                                                        },
                                                        "group": {
                                                            "code": "BG",
                                                            "text": "Baggage"
                                                        },
                                                        "subgroup": {
                                                            "code": "BG",
                                                            "text": "Baggage"
                                                        }
                                                    },
                                                    "code": "S324",
                                                    "description": "Free Baggage Allowance",
                                                    "details": "Some description details",
                                                    "method": "F",
                                                    "original_amount": 20.3,
                                                    "reason_code": "C",
                                                    "service_key": "abcdefghijklmnop",
                                                    "subcode": "0C3",
                                                    "travelers": [],
                                                    "type": "Included"
                                                }
                                            ],
                                            "preferred_airline": false,
                                            "preferred_airline_tier": 1,
                                            "segment_id_ref": "1",
                                            "sell_indicator": "asdfghjkl",
                                            "stopover_indicator": "X",
                                            "stops": [
                                                {
                                                    "airport": {
                                                        "code": "LHR",
                                                        "location": "London, England, United Kingdom",
                                                        "name": "Heathrow",
                                                        "timezone": "Europe/London",
                                                        "title": "London, England, United Kingdom (LHR-Heathrow)"
                                                    },
                                                    "arrival_datetime": "2020-05-06T13:42",
                                                    "change_of_gauge": false,
                                                    "departure_datetime": "2020-05-06T13:42",
                                                    "equipment_code": "12345",
                                                    "equipment_name": "Boeing 737 Max"
                                                }
                                            ]
                                        }
                                    ],
                                    "unbookable_reasons": [],
                                    "unbookable_rules": []
                                }
                            ],
                            "original_currency": "USD",
                            "original_surcharges_total": 134,
                            "original_taxes_total": 200,
                            "original_total": 964,
                            "original_total_after_taxes": 830,
                            "original_total_before_taxes": 630,
                            "out_of_policy_reasons": [],
                            "out_of_policy_rules": [],
                            "provider": "",
                            "requested_services": [
                                {
                                    "airline_code": "DL",
                                    "amount": 20.3,
                                    "attributes": {
                                        "desc1": {
                                            "code": "BG",
                                            "text": "Baggage"
                                        },
                                        "desc2": {
                                            "code": "BG",
                                            "text": "Baggage"
                                        },
                                        "group": {
                                            "code": "BG",
                                            "text": "Baggage"
                                        },
                                        "subgroup": {
                                            "code": "BG",
                                            "text": "Baggage"
                                        }
                                    },
                                    "code": "S324",
                                    "description": "Free Baggage Allowance",
                                    "details": "Some description details",
                                    "method": "F",
                                    "original_amount": 20.3,
                                    "reason_code": "C",
                                    "subcode": "0C3",
                                    "travelers": [],
                                    "type": "Included"
                                }
                            ],
                            "surcharges_total": 134,
                            "taxes_total": 200,
                            "ticket_attributes": {
                                "advance_change": {
                                    "allowed": false,
                                    "amount": {
                                        "amount": 90.8,
                                        "currency": "EUR",
                                        "original_amount": 120.1,
                                        "original_currency": "USD"
                                    },
                                    "description": "For a 50EUR fee",
                                    "fee": false,
                                    "percentage": 20
                                },
                                "baggage": {
                                    "description": "1pc up to 23kg",
                                    "included": false,
                                    "max_pieces": 1,
                                    "max_weight": 23,
                                    "weight_unit": "K"
                                },
                                "cancellation": {
                                    "amount": {
                                        "amount": 90.8,
                                        "currency": "EUR",
                                        "original_amount": 120.1,
                                        "original_currency": "USD"
                                    },
                                    "description": "Refundable for 50EUR fee",
                                    "fee": false,
                                    "refundable": false
                                },
                                "seats": {
                                    "seat_selection": [
                                        {
                                            "assessment": "fee",
                                            "bag_limits": {
                                                "size_lcm": 208,
                                                "weight_kg": 23
                                            },
                                            "description": "Advance change allowed for fee",
                                            "fees": [
                                                {
                                                    "amount": 100.6,
                                                    "amount_max": 200.6,
                                                    "amount_min": 50.6,
                                                    "currency": "USD"
                                                }
                                            ],
                                            "is_allowed": false
                                        }
                                    ]
                                }
                            },
                            "ticket_by_date": "2020-02-02",
                            "ticket_by_time": "23:12",
                            "ticket_refundable": false,
                            "total": 125,
                            "total_after_taxes": 830,
                            "total_before_taxes": 630,
                            "traveler_count": 1,
                            "traveler_price": {
                                "original_surcharges_total": 500.2,
                                "original_taxes_total": 100.6,
                                "original_total_after_taxes": 800.6,
                                "original_total_before_taxes": 700,
                                "surcharges": [
                                    {
                                        "amount": 10.5,
                                        "description": "Airport Fee",
                                        "designator": "VW",
                                        "original_amount": 10.5
                                    }
                                ],
                                "surcharges_total": 500.2,
                                "taxes": [
                                    {
                                        "amount": 10.5,
                                        "description": "Fuel Tax",
                                        "designator": "AB",
                                        "nature": "XY",
                                        "original_amount": 10.5
                                    }
                                ],
                                "taxes_total": 100.6,
                                "total_after_taxes": 800.6,
                                "total_before_taxes": 700.6
                            },
                            "unbookable_reasons": [],
                            "unbookable_rules": [],
                            "uta": [
                                [
                                    {
                                        "assessment": "fee",
                                        "bag_limits": {
                                            "size_lcm": 208,
                                            "weight_kg": 23
                                        },
                                        "description": "Advance change allowed for fee",
                                        "fees": [
                                            {
                                                "amount": 100.6,
                                                "amount_max": 200.6,
                                                "amount_min": 50.6,
                                                "currency": "USD"
                                            }
                                        ],
                                        "headline": "Allowed for fee",
                                        "is_allowed": false,
                                        "large_icon_url": "null",
                                        "name": "advance-change"
                                    }
                                ]
                            ],
                            "validating_carrier_code": "AA"
                        }
                    ],
                    "locale": "en_US",
                    "policy_rules": [
                        {
                            "id": "fe9eb3ae-first-rule",
                            "rule_name": "First rule.",
                            "rule_translations": [
                                {
                                    "language": "en",
                                    "title": ""
                                }
                            ]
                        }
                    ],
                    "session_id": "40Lpcxqzu8X2z3YoZEHnEV",
                    "user_agent": "Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95763,
        "executor_type": "THIRDPARTY",
        "executor_name": "documentsissue",
        "executor_version": "v2",
        "executor_display_name": "documents_issue",
        "executor_description": "Issues a flight and EMD tickets.",
        "executor_category": "Flights",
        "executor_category_group": "Flights",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://private-anon-a03b85d2d4-tshapiv20.apiary-mock.com/air/documents_issue/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": null,
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685608370639,
        "lastModifiedTime": 1685608370639,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "booking_uid": "5bed9314db992881744d1ff3",
                    "customer_ip": "192.168.31.116",
                    "emd_numbers": [
                        {
                            "doc_type": "EMDA",
                            "number": "01234567891234",
                            "status": "ISSUED"
                        }
                    ],
                    "errors": [],
                    "locale": "en_US",
                    "session_id": "40Lpcxqzu8X2z3YoZEHnEV",
                    "ticket_numbers": [
                        {
                            "number": "125-2108672522",
                            "segments_ids": [],
                            "traveler_id": "1"
                        }
                    ],
                    "user_agent": "Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95749,
        "executor_type": "THIRDPARTY",
        "executor_name": "farerules",
        "executor_version": "v2",
        "executor_display_name": "fare_rules",
        "executor_description": "Retrieves fare rules and restrictions of a flight.",
        "executor_category": "Flights",
        "executor_category_group": "Flights",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://private-anon-a03b85d2d4-tshapiv20.apiary-mock.com/air/fare_rules/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": null,
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685606742409,
        "lastModifiedTime": 1685606742409,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "customer_ip": "192.168.31.116",
                    "errors": [],
                    "fare_components": [
                        {
                            "advance_res_ticketing": "Advanced reservation and ticketing rules",
                            "airline_code": "DL",
                            "arrival_iata": "ATL",
                            "departure_date": "2020-06-02",
                            "departure_iata": "MIA",
                            "fare_basis_code": "ABC123",
                            "fare_rules": {
                                "advance_res_ticketing": "Advanced reservation and ticketing rules",
                                "other_freetext": "Any other rule text",
                                "penalties": "Penalties rules",
                                "refunds": "Refunds rules",
                                "rule_application": "Rule application rules",
                                "voluntary_changes": "Voluntary changes rules",
                                "voluntary_refunds": "Voluntary refunds rules"
                            },
                            "other_freetext": "Any other rule text",
                            "penalties": "Penalties rules",
                            "refunds": "Refunds rules",
                            "rule_application": "Rule application rules",
                            "segment_ids": [],
                            "voluntary_changes": "Voluntary changes rules",
                            "voluntary_refunds": "Voluntary refunds rules"
                        }
                    ],
                    "locale": "en_US",
                    "session_id": "40Lpcxqzu8X2z3YoZEHnEV",
                    "user_agent": "Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95751,
        "executor_type": "THIRDPARTY",
        "executor_name": "seatmap",
        "executor_version": "v2",
        "executor_display_name": "seat_map",
        "executor_description": "Retrieves seat layout and availability for requested flights. Accepts Frequent Flyer (FF) numbers (may affect seat selection choices). Note: if no FF numbers are present under traveler then the numbers provided on /air/fare_search step will be used (if any).",
        "executor_category": "Flights",
        "executor_category_group": "Flights",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://private-anon-a03b85d2d4-tshapiv20.apiary-mock.com/air/seat_map/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": null,
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685606885874,
        "lastModifiedTime": 1685606885874,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "currency": "USD",
                    "customer_ip": "192.168.31.116",
                    "errors": [],
                    "locale": "en_US",
                    "seat_maps": [
                        {
                            "decks": [
                                {
                                    "cabin": {
                                        "code": "Y",
                                        "description": "economy"
                                    },
                                    "columns": [
                                        {
                                            "index": "A",
                                            "position": {
                                                "code": "Y",
                                                "description": "economy"
                                            }
                                        }
                                    ],
                                    "location": {
                                        "code": "Y",
                                        "description": "economy"
                                    },
                                    "overwing_row_numbers": {
                                        "first": 1,
                                        "last": 11
                                    },
                                    "row_numbers": {
                                        "first": 1,
                                        "last": 11
                                    },
                                    "rows": [
                                        {
                                            "characteristics": [
                                                {
                                                    "code": "Y",
                                                    "description": "economy"
                                                }
                                            ],
                                            "number": 0,
                                            "seats": [
                                                {
                                                    "amount": 20.35,
                                                    "characteristics": [
                                                        {
                                                            "code": "Y",
                                                            "description": "economy"
                                                        }
                                                    ],
                                                    "column": "",
                                                    "description": "null",
                                                    "restrictions": [
                                                        {
                                                            "code": "Y",
                                                            "description": "economy"
                                                        }
                                                    ],
                                                    "seat_key": "",
                                                    "status": {
                                                        "code": "Y",
                                                        "description": "economy"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "errors": [],
                            "segment": {
                                "segment_id_ref": "1"
                            }
                        }
                    ],
                    "session_id": "40Lpcxqzu8X2z3YoZEHnEV",
                    "user_agent": "Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95758,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrievereservationslistFlights",
        "executor_version": "v2",
        "executor_display_name": "retrieve_reservations_list",
        "executor_description": "Retrieves a list of traveler reservations.",
        "executor_category": "Flights",
        "executor_category_group": "Flights",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://private-anon-a03b85d2d4-tshapiv20.apiary-mock.com/air/retrieve_reservations_list/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": null,
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685607981648,
        "lastModifiedTime": 1685607981648,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "bookings": [
                        {
                            "airplus_dbi_success": false,
                            "amex_bta_file_creation_date": "null",
                            "api_app": {
                                "consumer_id": "ikarus"
                            },
                            "booker_user": {
                                "email": "someone@provider.com",
                                "oid": "ABCDEFGHI",
                                "roles": {
                                    "agent": false,
                                    "travel_arranger": false,
                                    "traveler": false
                                },
                                "sign": "ABC123"
                            },
                            "booking_remarks_error": "null",
                            "cancellation_remarks_error": "null",
                            "cancellation_remarks_success": false,
                            "cancellation_status": "success",
                            "cancellation_steps_supported": [],
                            "cancelled_at": "2018-09-17T13:42:48.090146-07:00",
                            "cancelled_by_user": {
                                "email": "someone@provider.com",
                                "oid": "ABCDEFGHI",
                                "roles": {
                                    "agent": false,
                                    "travel_arranger": false,
                                    "traveler": false
                                },
                                "sign": "ABC123"
                            },
                            "case_number": "null",
                            "company": {
                                "id": 34,
                                "name": "Big Company, Inc.",
                                "tspm_id": "20.8579"
                            },
                            "configuration_id": 0,
                            "confirmation": {
                                "airline_code": "LH",
                                "airline_locator": "ABC123",
                                "currency": "EUR",
                                "emd_numbers": [
                                    {
                                        "number": "xxxxxxxxxx1234",
                                        "services_ids": [],
                                        "traveler_id": "1"
                                    }
                                ],
                                "farelogix_locator": "FLX123",
                                "original_currency": "EUR",
                                "original_total": 234.56,
                                "services": [
                                    {
                                        "amount": 20.3,
                                        "currency": "USD",
                                        "description": "Free Baggage Allowance",
                                        "details": "CC SURCHRG",
                                        "original_amount": 20.3,
                                        "original_currency": "USD"
                                    }
                                ],
                                "ticket_numbers": [
                                    {
                                        "number": "125-2108672522",
                                        "segments_ids": [],
                                        "traveler_id": "1"
                                    }
                                ],
                                "total": 234.56
                            },
                            "container_id": "null",
                            "created_at": "2018-09-17T13:42:48.090146-07:00",
                            "currency": "EUR",
                            "fare_group": {
                                "currency": "USD",
                                "exchange_info": {
                                    "additional_collection": {
                                        "base_fare_difference": 0,
                                        "currency": "",
                                        "original_base_fare_difference": 0,
                                        "original_currency": "null",
                                        "original_taxes_total": 0,
                                        "original_total": 0,
                                        "original_total_additional_collection": 0,
                                        "original_total_credit": 0,
                                        "taxes": [
                                            {
                                                "amount": 10.5,
                                                "description": "Fuel Tax",
                                                "designator": "AB",
                                                "nature": "XY",
                                                "original_amount": 10.5
                                            }
                                        ],
                                        "taxes_total": 0,
                                        "total": 0,
                                        "total_additional_collection": 0,
                                        "total_credit": 0
                                    },
                                    "fare_balance": {
                                        "equivalent_difference": {
                                            "amount": 0,
                                            "currency": "",
                                            "original_amount": 0,
                                            "original_currency": "null"
                                        },
                                        "filed_in_difference": {
                                            "amount": 0,
                                            "currency": "",
                                            "original_amount": 0,
                                            "original_currency": "null"
                                        }
                                    },
                                    "forfeit": {
                                        "amount": 0,
                                        "fare_amount": 0,
                                        "original_amount": 0,
                                        "original_fare_amount": 0,
                                        "original_tax_amount": 0,
                                        "original_total": 0,
                                        "tax_amount": 0,
                                        "total": 0
                                    },
                                    "original_value_of_old_ticket": 0,
                                    "penalty": {
                                        "amount": 0,
                                        "original_amount": 0,
                                        "original_total": 0,
                                        "total": 0
                                    },
                                    "refund": {
                                        "base_fare_difference": 0,
                                        "currency": "",
                                        "original_base_fare_difference": 0,
                                        "original_currency": "null",
                                        "original_taxes_total": 0,
                                        "original_total": 0,
                                        "original_total_additional_collection": 0,
                                        "original_total_credit": 0,
                                        "taxes": [
                                            {
                                                "amount": 10.5,
                                                "description": "Fuel Tax",
                                                "designator": "AB",
                                                "nature": "XY",
                                                "original_amount": 10.5
                                            }
                                        ],
                                        "taxes_total": 0,
                                        "total": 0,
                                        "total_additional_collection": 0,
                                        "total_credit": 0
                                    },
                                    "value_of_old_ticket": 0
                                },
                                "fare_components": [
                                    {
                                        "airline_code": "LH",
                                        "contract_codes": [],
                                        "discount_granted": {
                                            "amount": "50",
                                            "type": "percent"
                                        },
                                        "fare_basis_code": "ABC123",
                                        "is_bcd_negotiated": false,
                                        "is_company_negotiated": false,
                                        "is_negotiated": false,
                                        "original_total_after_taxes": 103.2,
                                        "penalties": {
                                            "cancellation_fee_applies": false,
                                            "cancellation_fees": [
                                                {
                                                    "allowed": "null",
                                                    "application": "null",
                                                    "guaranteed": false,
                                                    "max_amount": 0,
                                                    "max_unit": "null",
                                                    "min_amount": 0,
                                                    "min_unit": "null",
                                                    "original_max_amount": 0,
                                                    "original_min_amount": 0,
                                                    "original_total": 0,
                                                    "penalty_type": "null",
                                                    "text": "null",
                                                    "total": 0
                                                }
                                            ],
                                            "carrier_fee": false,
                                            "change_itinerary_fee_applies": false,
                                            "change_itinerary_fees": [
                                                {
                                                    "allowed": "null",
                                                    "application": "null",
                                                    "guaranteed": false,
                                                    "max_amount": 0,
                                                    "max_unit": "null",
                                                    "min_amount": 0,
                                                    "min_unit": "null",
                                                    "original_max_amount": 0,
                                                    "original_min_amount": 0,
                                                    "original_total": 0,
                                                    "penalty_type": "null",
                                                    "text": "null",
                                                    "total": 0
                                                }
                                            ],
                                            "currency": "null",
                                            "deposit_refundable": false,
                                            "deposit_required": false,
                                            "failure_to_confirm_fee_applies": false,
                                            "failure_to_confirm_fees": [
                                                {
                                                    "allowed": "null",
                                                    "application": "null",
                                                    "guaranteed": false,
                                                    "max_amount": 0,
                                                    "max_unit": "null",
                                                    "min_amount": 0,
                                                    "min_unit": "null",
                                                    "original_max_amount": 0,
                                                    "original_min_amount": 0,
                                                    "original_total": 0,
                                                    "penalty_type": "null",
                                                    "text": "null",
                                                    "total": 0
                                                }
                                            ],
                                            "original_currency": "null",
                                            "ticket_changeable": false,
                                            "ticket_refundable": false,
                                            "ticket_replacement_fee_applies": false,
                                            "ticket_replacement_fees": [
                                                {
                                                    "allowed": "null",
                                                    "application": "null",
                                                    "guaranteed": false,
                                                    "max_amount": 0,
                                                    "max_unit": "null",
                                                    "min_amount": 0,
                                                    "min_unit": "null",
                                                    "original_max_amount": 0,
                                                    "original_min_amount": 0,
                                                    "original_total": 0,
                                                    "penalty_type": "null",
                                                    "text": "null",
                                                    "total": 0
                                                }
                                            ]
                                        },
                                        "price_class_code": "BUSINESS",
                                        "price_class_description": "No luggage included and no refundability.",
                                        "price_class_name": "Business Saver",
                                        "segment_ids": [],
                                        "ticket_designator_code": "ABC123",
                                        "total_after_taxes": 103.2,
                                        "tour_code": "ABC123"
                                    }
                                ],
                                "fare_type": "PUBL",
                                "is_bcd_negotiated": false,
                                "is_company_negotiated": false,
                                "is_ndc": false,
                                "is_negotiated": false,
                                "origin_destinations": [
                                    {
                                        "duration": {
                                            "hours": 0,
                                            "minutes": 0
                                        },
                                        "seats": 6,
                                        "segments": [
                                            {
                                                "airplane": "Boeing 747",
                                                "airport_change": false,
                                                "amenities": [
                                                    {
                                                        "amenity": "wifi",
                                                        "display_text": "No Wi-Fi",
                                                        "exists": false
                                                    }
                                                ],
                                                "arrival": {
                                                    "airport": {
                                                        "code": "LHR",
                                                        "location": "London, England, United Kingdom",
                                                        "name": "Heathrow",
                                                        "timezone": "Europe/London",
                                                        "title": "London, England, United Kingdom (LHR-Heathrow)"
                                                    },
                                                    "datetime": "2020-02-11T13:23",
                                                    "terminal": "A"
                                                },
                                                "bcd_preferred_airline": false,
                                                "bcd_preferred_airline_tier": 1,
                                                "cabin": "first",
                                                "carrier": {
                                                    "code": "LH",
                                                    "flight_number": "123",
                                                    "flight_number_suffix": "X",
                                                    "name": "Lufthansa"
                                                },
                                                "class_of_service": "Y",
                                                "departure": {
                                                    "airport": {
                                                        "code": "LHR",
                                                        "location": "London, England, United Kingdom",
                                                        "name": "Heathrow",
                                                        "timezone": "Europe/London",
                                                        "title": "London, England, United Kingdom (LHR-Heathrow)"
                                                    },
                                                    "datetime": "2020-02-11T13:23",
                                                    "terminal": "A"
                                                },
                                                "duration": {
                                                    "hours": 0,
                                                    "minutes": 0
                                                },
                                                "married_segment": "B",
                                                "operating_carrier": {
                                                    "code": "LH",
                                                    "flight_number": "123",
                                                    "flight_number_suffix": "X",
                                                    "name": "Lufthansa"
                                                },
                                                "preferred_airline": false,
                                                "preferred_airline_tier": 1,
                                                "segment_id_ref": "1",
                                                "sell_indicator": "asdfghjkl",
                                                "stopover_indicator": "X",
                                                "stops": [
                                                    {
                                                        "airport": {
                                                            "code": "LHR",
                                                            "location": "London, England, United Kingdom",
                                                            "name": "Heathrow",
                                                            "timezone": "Europe/London",
                                                            "title": "London, England, United Kingdom (LHR-Heathrow)"
                                                        },
                                                        "arrival_datetime": "2020-05-06T13:42",
                                                        "change_of_gauge": false,
                                                        "departure_datetime": "2020-05-06T13:42",
                                                        "equipment_code": "12345",
                                                        "equipment_name": "Boeing 737 Max"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "original_currency": "USD",
                                "original_surcharges_total": 134,
                                "original_taxes_total": 200,
                                "original_total": 964,
                                "original_total_after_taxes": 830,
                                "original_total_before_taxes": 630,
                                "surcharges_total": 134,
                                "taxes_total": 200,
                                "ticket_attributes": {
                                    "advance_change": {
                                        "allowed": false,
                                        "amount": {
                                            "amount": 90.8,
                                            "currency": "EUR",
                                            "original_amount": 120.1,
                                            "original_currency": "USD"
                                        },
                                        "description": "For a 50EUR fee",
                                        "fee": false,
                                        "percentage": 20
                                    },
                                    "baggage": {
                                        "description": "1pc up to 23kg",
                                        "included": false,
                                        "max_pieces": 1,
                                        "max_weight": 23,
                                        "weight_unit": "K"
                                    },
                                    "cancellation": {
                                        "amount": {
                                            "amount": 90.8,
                                            "currency": "EUR",
                                            "original_amount": 120.1,
                                            "original_currency": "USD"
                                        },
                                        "description": "Refundable for 50EUR fee",
                                        "fee": false,
                                        "refundable": false
                                    },
                                    "seats": {
                                        "seat_selection": [
                                            {
                                                "assessment": "fee",
                                                "bag_limits": {
                                                    "size_lcm": 208,
                                                    "weight_kg": 23
                                                },
                                                "description": "Advance change allowed for fee",
                                                "fees": [
                                                    {
                                                        "amount": 100.6,
                                                        "amount_max": 200.6,
                                                        "amount_min": 50.6,
                                                        "currency": "USD"
                                                    }
                                                ],
                                                "is_allowed": false
                                            }
                                        ]
                                    }
                                },
                                "ticket_by_date": "2020-02-02",
                                "ticket_refundable": false,
                                "total": 125,
                                "total_after_taxes": 830,
                                "total_before_taxes": 630,
                                "traveler_count": 1,
                                "validating_carrier_code": "AA",
                                "validating_carrier_codes": []
                            },
                            "fare_groups": [
                                {
                                    "currency": "USD",
                                    "fare_type": "PUBL",
                                    "is_ndc": false,
                                    "ticket_attributes": {
                                        "advance_change": {
                                            "allowed": false,
                                            "amount": {
                                                "amount": 90.8,
                                                "currency": "EUR",
                                                "original_amount": 120.1,
                                                "original_currency": "USD"
                                            },
                                            "description": "For a 50EUR fee",
                                            "fee": false,
                                            "percentage": 20
                                        },
                                        "baggage": {
                                            "description": "1pc up to 23kg",
                                            "included": false,
                                            "max_pieces": 1,
                                            "max_weight": 23,
                                            "weight_unit": "K"
                                        },
                                        "cancellation": {
                                            "amount": {
                                                "amount": 90.8,
                                                "currency": "EUR",
                                                "original_amount": 120.1,
                                                "original_currency": "USD"
                                            },
                                            "description": "Refundable for 50EUR fee",
                                            "fee": false,
                                            "refundable": false
                                        },
                                        "seats": {
                                            "seat_selection": [
                                                {
                                                    "assessment": "fee",
                                                    "bag_limits": {
                                                        "size_lcm": 208,
                                                        "weight_kg": 23
                                                    },
                                                    "description": "Advance change allowed for fee",
                                                    "fees": [
                                                        {
                                                            "amount": 100.6,
                                                            "amount_max": 200.6,
                                                            "amount_min": 50.6,
                                                            "currency": "USD"
                                                        }
                                                    ],
                                                    "is_allowed": false
                                                }
                                            ]
                                        }
                                    },
                                    "ticket_by_date": "2020-02-02",
                                    "ticket_refundable": false,
                                    "total": 125,
                                    "validating_carrier_code": "AA"
                                }
                            ],
                            "farelogix_pcc": "null",
                            "gds_profile": {
                                "gds_name": "amadeus",
                                "iata_code": "ABC",
                                "office_id": "ABCDEFG"
                            },
                            "locator": "ABC123",
                            "origin": "BCD_SANDBOX",
                            "passive_segments_error": "null",
                            "passive_segments_success": false,
                            "payment": {
                                "credit_card": {
                                    "number": "xxxxxxxxxxxx2358",
                                    "type": "VI"
                                },
                                "payment_method": "card"
                            },
                            "phone_number": "null",
                            "pnr": {
                                "id": "ABC123",
                                "pnr_created": false
                            },
                            "policy_group_id": 0,
                            "provider": "",
                            "remarks_success": false,
                            "residual_emds": [
                                {
                                    "attempt": 0,
                                    "last_update": "",
                                    "number": "",
                                    "status": "pending"
                                }
                            ],
                            "segments": [
                                {
                                    "arrival": {
                                        "airport_name": "null",
                                        "date": "",
                                        "datetime": "",
                                        "iata_code": "",
                                        "terminal": "null",
                                        "time": ""
                                    },
                                    "carrier": {
                                        "code": "LH",
                                        "flight_number": "123",
                                        "flight_number_suffix": "X",
                                        "name": "Lufthansa"
                                    },
                                    "cnxx_indicator": false,
                                    "departure": {
                                        "airport_name": "null",
                                        "date": "",
                                        "datetime": "",
                                        "iata_code": "",
                                        "terminal": "null",
                                        "time": ""
                                    },
                                    "flown_indicator": false,
                                    "id": "",
                                    "operating_carrier": {
                                        "code": "LH",
                                        "flight_number": "123",
                                        "flight_number_suffix": "X",
                                        "name": "Lufthansa"
                                    },
                                    "origin_destination_id": "ODC1"
                                }
                            ],
                            "status": "active",
                            "system": "obt",
                            "travelers": [
                                {
                                    "email": "someone@provider.com",
                                    "first_name": "Joe",
                                    "last_name": "Smith",
                                    "tspm_id": "24.123"
                                }
                            ],
                            "uid": "abcdef2341234asdf",
                            "underlying_provider": "",
                            "warnings": [
                                {
                                    "message": "",
                                    "type": ""
                                }
                            ]
                        }
                    ],
                    "customer_ip": "192.168.31.116",
                    "errors": [],
                    "locale": "en_US",
                    "session_id": "40Lpcxqzu8X2z3YoZEHnEV",
                    "total": 100,
                    "user_agent": "Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95766,
        "executor_type": "THIRDPARTY",
        "executor_name": "getreservationdetailsFlights",
        "executor_version": "v2",
        "executor_display_name": "get_reservation_details",
        "executor_description": "Retrieves a detailed summary and status of a reservation made by a traveler.",
        "executor_category": "Flights",
        "executor_category_group": "Flights",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-a03b85d2d4-tshapiv20.apiary-mock.com/air/get_reservation_details/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "api_key",
                "value": "",
                "description": " Public key, provided by BCD Travel API team Example: testkey.",
                "req": false
            },
            {
                "key": "customer_ip",
                "value": "",
                "description": " IP address of a user, as captured by the customer\u2019s integration. Ensure your integration passes the user\u2019s IP, not your own. This value helps determine user's location for fraud recovery and other analytics. Example: 192.168.31.116.",
                "req": false
            },
            {
                "key": "locale",
                "value": "",
                "description": " Forces system to return data in other languages if available. Defaults to en_US if not passed. Example: en_US.Show Possible Values",
                "req": false
            },
            {
                "key": "nonce",
                "value": "",
                "description": " A randomly generated string of your choice. Ensure it is unique to each request with same timestamp within 5 minute interval and no more than 32 characters long. Maximum value length is 32. Example: 1543353502645.",
                "req": false
            },
            {
                "key": "session_id",
                "value": "",
                "description": " Customer generated identifier of user's session. Do not use real user's session id as it will be replayed back in the API response. Reuse this identifier for all requests by the same user. Including this value makes subsequent troubleshooting and audit easier, as it explicitly links together requests for individual users. <,>,& characters are not allowed. Example: 71IxqHT8mgMe5ohsZ25e5P.",
                "req": false
            },
            {
                "key": "system",
                "value": "",
                "description": " Certain things may be configured and subsequently returned very differently based on the booking channel. This attribute tells the system which one of the currently supported channels the data is being requested for. Please inquire which booking channel your integration should use for all requests when you obtain your API key. Example: aft.",
                "req": false
            },
            {
                "key": "timestamp",
                "value": "",
                "description": "Valid current UNIX timestamp in seconds. Example: 1388774110.",
                "req": false
            },
            {
                "key": "user_agent",
                "value": "",
                "description": " Properly encoded customer\u2019s user agent string (required to obtain mobile rates from some providers). For traffic from mobile or desktop apps (as opposed to browser apps), use the following format: {App Name}/{App Version} ({OS} {OS Version}) [APP or MOBILE_APP] (e.g. TripSource/5.0 (iOS 10_10_3) MOBILE_APP). Note: Required to get discounted mobile rates Example: Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36.",
                "req": false
            },
            {
                "key": "booking_uid",
                "value": "",
                "description": "Unique identifier of booking in the database. Returned from /book or /get_reservations_list. Example: 5bed9314db992881744d1ff3.",
                "req": false
            },
            {
                "key": "currency",
                "value": "",
                "description": "ISO 4217 formatted code of a currency, that prices should be converted to. We support most of the commonly used currencies (see https://openexchangerates.org/currencies for the full list). Example: EUR",
                "req": false
            },
            {
                "key": "refresh_data",
                "value": "",
                "description": "Get booking pnr from Farelogix and return additional/updated data in response. Applicable only for Farelogix bookings. Example: false. Default: false.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685609220661,
        "lastModifiedTime": 1685609220661,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "booking": {
                        "airplus_dbi_success": false,
                        "amex_bta_file_creation_date": "null",
                        "api_app": {
                            "consumer_id": "ikarus"
                        },
                        "booker_user": {
                            "country_code": "US",
                            "email": "someone@provider.com",
                            "first_name": "Joe",
                            "last_name": "Smith",
                            "oid": "ABCDEFGHI",
                            "roles": {
                                "agent": false,
                                "travel_arranger": false,
                                "traveler": false
                            },
                            "sign": "ABC123"
                        },
                        "booking_remarks_error": "null",
                        "cancellation_remarks_error": "null",
                        "cancellation_remarks_success": false,
                        "cancellation_status": "success",
                        "cancellation_steps_supported": [],
                        "cancelled_at": "2018-09-17T13:42:48.090146-07:00",
                        "cancelled_by_user": {
                            "country_code": "US",
                            "email": "someone@provider.com",
                            "first_name": "Joe",
                            "last_name": "Smith",
                            "oid": "ABCDEFGHI",
                            "roles": {
                                "agent": false,
                                "travel_arranger": false,
                                "traveler": false
                            },
                            "sign": "ABC123"
                        },
                        "case_number": "null",
                        "company": {
                            "id": 34,
                            "name": "Big Company, Inc.",
                            "tspm_id": "20.8579"
                        },
                        "configuration_id": 0,
                        "confirmation": {
                            "airline_code": "LH",
                            "airline_locator": "ABC123",
                            "currency": "EUR",
                            "emd_numbers": [
                                {
                                    "number": "xxxxxxxxxx1234",
                                    "services_ids": [],
                                    "traveler_id": "1"
                                }
                            ],
                            "endorsement": "PAX CHNG NOT PERMITTED/NON REF",
                            "farelogix_locator": "FLX123",
                            "original_currency": "EUR",
                            "original_total": 234.56,
                            "seats": [
                                {
                                    "assignments": [
                                        {
                                            "characteristics": [
                                                {
                                                    "code": "Y",
                                                    "description": "economy"
                                                }
                                            ],
                                            "seat_location": {
                                                "column": "A",
                                                "row": 10
                                            },
                                            "traveler_id": "1"
                                        }
                                    ],
                                    "segment_id": "1"
                                }
                            ],
                            "segments": [
                                {
                                    "id": "1",
                                    "status": "HK"
                                }
                            ],
                            "services": [
                                {
                                    "airline_code": "DL",
                                    "amount": 20.3,
                                    "attributes": {
                                        "desc1": {
                                            "code": "BG",
                                            "text": "Baggage"
                                        },
                                        "desc2": {
                                            "code": "BG",
                                            "text": "Baggage"
                                        },
                                        "group": {
                                            "code": "BG",
                                            "text": "Baggage"
                                        },
                                        "subgroup": {
                                            "code": "BG",
                                            "text": "Baggage"
                                        }
                                    },
                                    "code": "S324",
                                    "currency": "USD",
                                    "description": "Free Baggage Allowance",
                                    "details": "Some description details",
                                    "method": "F",
                                    "original_amount": 20.3,
                                    "original_currency": "USD",
                                    "reason_code": "C",
                                    "subcode": "0C3",
                                    "travelers": [],
                                    "type": "Included"
                                }
                            ],
                            "ticket_numbers": [
                                {
                                    "number": "125-2108672522",
                                    "segments_ids": [],
                                    "traveler_id": "1"
                                }
                            ],
                            "total": 234.56
                        },
                        "container_id": "null",
                        "created_at": "2018-09-17T13:42:48.090146-07:00",
                        "currency": "EUR",
                        "emds": [
                            {
                                "doc_type": "null",
                                "emd_total": {
                                    "base_total_amount": 100,
                                    "currency": "USD",
                                    "fee_calculation": "LAX BB AKL BB CHC70.00 BB AKL BB LAX70.00USD140.00END",
                                    "original_base_total_amount": 100,
                                    "original_currency": "USD",
                                    "original_tax_total_amount": 5,
                                    "original_total": 125,
                                    "refund_data": {
                                        "currency": "USD",
                                        "fees_and_penalties": {
                                            "amount": 0,
                                            "cancellation_penalty": 0,
                                            "original_amount": 0,
                                            "original_cancellation_penalty": 0
                                        },
                                        "original_currency": "USD",
                                        "refund_date": "2020-12-25",
                                        "total_refund": {
                                            "amount": 0,
                                            "base_fare_amount": 0,
                                            "original_amount": 0,
                                            "original_base_fare_amount": 0,
                                            "original_refund": 0,
                                            "original_taxes_total": 0,
                                            "refund": 0,
                                            "taxes": [
                                                {
                                                    "amount": 0,
                                                    "currency": "USD",
                                                    "description": "AIR TRANSPORT TAX",
                                                    "designator": "OY",
                                                    "local_amount": 0,
                                                    "nature": "US2",
                                                    "original_amount": 0,
                                                    "original_currency": "USD",
                                                    "refundable": false
                                                }
                                            ],
                                            "taxes_total": 0
                                        }
                                    },
                                    "tax_total_amount": 5,
                                    "total": 125
                                },
                                "number": "",
                                "service_references": [
                                    {
                                        "code": "null",
                                        "coupon_number": "",
                                        "description": "null",
                                        "document_number": "null",
                                        "reason_code": "null",
                                        "subcode": "null",
                                        "trx_ref_key": "null"
                                    }
                                ],
                                "source": "null",
                                "status": "",
                                "time": "null",
                                "traveler_id": ""
                            }
                        ],
                        "error": {
                            "developer_message": "",
                            "error_code": 1014000,
                            "extra": {
                                "actual_original_currency": "",
                                "actual_original_total": "",
                                "actual_total": "",
                                "currency": ""
                            },
                            "field": "null",
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        },
                        "exchanged_from": {
                            "ticket_number": "",
                            "uid": "null"
                        },
                        "fare_group": {
                            "baggage_allowances": [
                                {
                                    "baggage_allowance": {
                                        "max_pieces": 1,
                                        "max_weight": 23,
                                        "weight_unit": "K"
                                    },
                                    "traveler_id": "T1"
                                }
                            ],
                            "currency": "USD",
                            "exchange_info": {
                                "additional_collection": {
                                    "base_fare_difference": 0,
                                    "currency": "",
                                    "original_base_fare_difference": 0,
                                    "original_currency": "null",
                                    "original_taxes_total": 0,
                                    "original_total": 0,
                                    "original_total_additional_collection": 0,
                                    "original_total_credit": 0,
                                    "taxes": [
                                        {
                                            "amount": 10.5,
                                            "description": "Fuel Tax",
                                            "designator": "AB",
                                            "nature": "XY",
                                            "original_amount": 10.5
                                        }
                                    ],
                                    "taxes_total": 0,
                                    "total": 0,
                                    "total_additional_collection": 0,
                                    "total_credit": 0
                                },
                                "fare_balance": {
                                    "equivalent_difference": {
                                        "amount": 0,
                                        "currency": "",
                                        "original_amount": 0,
                                        "original_currency": "null"
                                    },
                                    "filed_in_difference": {
                                        "amount": 0,
                                        "currency": "",
                                        "original_amount": 0,
                                        "original_currency": "null"
                                    }
                                },
                                "forfeit": {
                                    "amount": 0,
                                    "fare_amount": 0,
                                    "original_amount": 0,
                                    "original_fare_amount": 0,
                                    "original_tax_amount": 0,
                                    "original_total": 0,
                                    "tax_amount": 0,
                                    "total": 0
                                },
                                "original_value_of_old_ticket": 0,
                                "penalty": {
                                    "amount": 0,
                                    "original_amount": 0,
                                    "original_total": 0,
                                    "total": 0
                                },
                                "refund": {
                                    "base_fare_difference": 0,
                                    "currency": "",
                                    "original_base_fare_difference": 0,
                                    "original_currency": "null",
                                    "original_taxes_total": 0,
                                    "original_total": 0,
                                    "original_total_additional_collection": 0,
                                    "original_total_credit": 0,
                                    "taxes": [
                                        {
                                            "amount": 10.5,
                                            "description": "Fuel Tax",
                                            "designator": "AB",
                                            "nature": "XY",
                                            "original_amount": 10.5
                                        }
                                    ],
                                    "taxes_total": 0,
                                    "total": 0,
                                    "total_additional_collection": 0,
                                    "total_credit": 0
                                },
                                "value_of_old_ticket": 0
                            },
                            "fare_components": [
                                {
                                    "airline_code": "LH",
                                    "contract_codes": [],
                                    "discount_granted": {
                                        "amount": "50",
                                        "type": "percent"
                                    },
                                    "fare_basis_code": "ABC123",
                                    "fare_rules": {
                                        "advance_res_ticketing": "Advanced reservation and ticketing rules",
                                        "other_freetext": "Any other rule text",
                                        "penalties": "Penalties rules",
                                        "refunds": "Refunds rules",
                                        "rule_application": "Rule application rules",
                                        "voluntary_changes": "Voluntary changes rules",
                                        "voluntary_refunds": "Voluntary refunds rules"
                                    },
                                    "is_bcd_negotiated": false,
                                    "is_company_negotiated": false,
                                    "is_negotiated": false,
                                    "original_total_after_taxes": 103.2,
                                    "penalties": {
                                        "cancellation_fee_applies": false,
                                        "cancellation_fees": [
                                            {
                                                "allowed": "null",
                                                "application": "null",
                                                "guaranteed": false,
                                                "max_amount": 0,
                                                "max_unit": "null",
                                                "min_amount": 0,
                                                "min_unit": "null",
                                                "original_max_amount": 0,
                                                "original_min_amount": 0,
                                                "original_total": 0,
                                                "penalty_type": "null",
                                                "text": "null",
                                                "total": 0
                                            }
                                        ],
                                        "carrier_fee": false,
                                        "change_itinerary_fee_applies": false,
                                        "change_itinerary_fees": [
                                            {
                                                "allowed": "null",
                                                "application": "null",
                                                "guaranteed": false,
                                                "max_amount": 0,
                                                "max_unit": "null",
                                                "min_amount": 0,
                                                "min_unit": "null",
                                                "original_max_amount": 0,
                                                "original_min_amount": 0,
                                                "original_total": 0,
                                                "penalty_type": "null",
                                                "text": "null",
                                                "total": 0
                                            }
                                        ],
                                        "currency": "null",
                                        "deposit_refundable": false,
                                        "deposit_required": false,
                                        "failure_to_confirm_fee_applies": false,
                                        "failure_to_confirm_fees": [
                                            {
                                                "allowed": "null",
                                                "application": "null",
                                                "guaranteed": false,
                                                "max_amount": 0,
                                                "max_unit": "null",
                                                "min_amount": 0,
                                                "min_unit": "null",
                                                "original_max_amount": 0,
                                                "original_min_amount": 0,
                                                "original_total": 0,
                                                "penalty_type": "null",
                                                "text": "null",
                                                "total": 0
                                            }
                                        ],
                                        "original_currency": "null",
                                        "ticket_changeable": false,
                                        "ticket_refundable": false,
                                        "ticket_replacement_fee_applies": false,
                                        "ticket_replacement_fees": [
                                            {
                                                "allowed": "null",
                                                "application": "null",
                                                "guaranteed": false,
                                                "max_amount": 0,
                                                "max_unit": "null",
                                                "min_amount": 0,
                                                "min_unit": "null",
                                                "original_max_amount": 0,
                                                "original_min_amount": 0,
                                                "original_total": 0,
                                                "penalty_type": "null",
                                                "text": "null",
                                                "total": 0
                                            }
                                        ]
                                    },
                                    "price_class_code": "BUSINESS",
                                    "price_class_description": "No luggage included and no refundability.",
                                    "price_class_name": "Business Saver",
                                    "segment_ids": [],
                                    "ticket_designator_code": "ABC123",
                                    "total_after_taxes": 103.2,
                                    "tour_code": "ABC123"
                                }
                            ],
                            "fare_type": "PUBL",
                            "freetext": "This is a very good fare for you.",
                            "included_services": [
                                {
                                    "airline_code": "DL",
                                    "amount": 20.3,
                                    "attributes": {
                                        "desc1": {
                                            "code": "BG",
                                            "text": "Baggage"
                                        },
                                        "desc2": {
                                            "code": "BG",
                                            "text": "Baggage"
                                        },
                                        "group": {
                                            "code": "BG",
                                            "text": "Baggage"
                                        },
                                        "subgroup": {
                                            "code": "BG",
                                            "text": "Baggage"
                                        }
                                    },
                                    "code": "S324",
                                    "description": "Free Baggage Allowance",
                                    "details": "Some description details",
                                    "method": "F",
                                    "original_amount": 20.3,
                                    "reason_code": "C",
                                    "subcode": "0C3",
                                    "travelers": [],
                                    "type": "Included"
                                }
                            ],
                            "is_bcd_negotiated": false,
                            "is_company_negotiated": false,
                            "is_ndc": false,
                            "is_negotiated": false,
                            "optional_services": [
                                {
                                    "airline_code": "DL",
                                    "amount": 20.3,
                                    "attributes": {
                                        "desc1": {
                                            "code": "BG",
                                            "text": "Baggage"
                                        },
                                        "desc2": {
                                            "code": "BG",
                                            "text": "Baggage"
                                        },
                                        "group": {
                                            "code": "BG",
                                            "text": "Baggage"
                                        },
                                        "subgroup": {
                                            "code": "BG",
                                            "text": "Baggage"
                                        }
                                    },
                                    "code": "S324",
                                    "description": "Free Baggage Allowance",
                                    "details": "Some description details",
                                    "method": "F",
                                    "original_amount": 20.3,
                                    "reason_code": "C",
                                    "subcode": "0C3",
                                    "travelers": [],
                                    "type": "Included"
                                }
                            ],
                            "origin_destinations": [
                                {
                                    "baggage_allowances": [
                                        {
                                            "baggage_allowance": {
                                                "max_pieces": 1,
                                                "max_weight": 23,
                                                "weight_unit": "K"
                                            },
                                            "traveler_id": "T1"
                                        }
                                    ],
                                    "duration": {
                                        "hours": 0,
                                        "minutes": 0
                                    },
                                    "included_services": [
                                        {
                                            "airline_code": "DL",
                                            "amount": 20.3,
                                            "attributes": {
                                                "desc1": {
                                                    "code": "BG",
                                                    "text": "Baggage"
                                                },
                                                "desc2": {
                                                    "code": "BG",
                                                    "text": "Baggage"
                                                },
                                                "group": {
                                                    "code": "BG",
                                                    "text": "Baggage"
                                                },
                                                "subgroup": {
                                                    "code": "BG",
                                                    "text": "Baggage"
                                                }
                                            },
                                            "code": "S324",
                                            "description": "Free Baggage Allowance",
                                            "details": "Some description details",
                                            "method": "F",
                                            "original_amount": 20.3,
                                            "reason_code": "C",
                                            "subcode": "0C3",
                                            "travelers": [],
                                            "type": "Included"
                                        }
                                    ],
                                    "optional_services": [
                                        {
                                            "airline_code": "DL",
                                            "amount": 20.3,
                                            "attributes": {
                                                "desc1": {
                                                    "code": "BG",
                                                    "text": "Baggage"
                                                },
                                                "desc2": {
                                                    "code": "BG",
                                                    "text": "Baggage"
                                                },
                                                "group": {
                                                    "code": "BG",
                                                    "text": "Baggage"
                                                },
                                                "subgroup": {
                                                    "code": "BG",
                                                    "text": "Baggage"
                                                }
                                            },
                                            "code": "S324",
                                            "description": "Free Baggage Allowance",
                                            "details": "Some description details",
                                            "method": "F",
                                            "original_amount": 20.3,
                                            "reason_code": "C",
                                            "subcode": "0C3",
                                            "travelers": [],
                                            "type": "Included"
                                        }
                                    ],
                                    "seats": 6,
                                    "segments": [
                                        {
                                            "airplane": "Boeing 747",
                                            "airport_change": false,
                                            "amenities": [
                                                {
                                                    "amenity": "wifi",
                                                    "display_text": "No Wi-Fi",
                                                    "exists": false
                                                }
                                            ],
                                            "arrival": {
                                                "airport": {
                                                    "code": "LHR",
                                                    "location": "London, England, United Kingdom",
                                                    "name": "Heathrow",
                                                    "timezone": "Europe/London",
                                                    "title": "London, England, United Kingdom (LHR-Heathrow)"
                                                },
                                                "datetime": "2020-02-11T13:23",
                                                "terminal": "A"
                                            },
                                            "baggage_allowances": [
                                                {
                                                    "baggage_allowance": {
                                                        "max_pieces": 1,
                                                        "max_weight": 23,
                                                        "weight_unit": "K"
                                                    },
                                                    "traveler_id": "T1"
                                                }
                                            ],
                                            "baggage_policies": [
                                                {
                                                    "amount": 35,
                                                    "item": "1",
                                                    "original_amount": 35,
                                                    "text": "BG:LO",
                                                    "url": "https://bags.amadeus.com/Display.aspx?a=LO"
                                                }
                                            ],
                                            "bcd_preferred_airline": false,
                                            "bcd_preferred_airline_tier": 1,
                                            "cabin": "first",
                                            "carrier": {
                                                "code": "LH",
                                                "flight_number": "123",
                                                "flight_number_suffix": "X",
                                                "name": "Lufthansa"
                                            },
                                            "class_of_service": "Y",
                                            "departure": {
                                                "airport": {
                                                    "code": "LHR",
                                                    "location": "London, England, United Kingdom",
                                                    "name": "Heathrow",
                                                    "timezone": "Europe/London",
                                                    "title": "London, England, United Kingdom (LHR-Heathrow)"
                                                },
                                                "datetime": "2020-02-11T13:23",
                                                "terminal": "A"
                                            },
                                            "duration": {
                                                "hours": 0,
                                                "minutes": 0
                                            },
                                            "included_services": [
                                                {
                                                    "airline_code": "DL",
                                                    "amount": 20.3,
                                                    "attributes": {
                                                        "desc1": {
                                                            "code": "BG",
                                                            "text": "Baggage"
                                                        },
                                                        "desc2": {
                                                            "code": "BG",
                                                            "text": "Baggage"
                                                        },
                                                        "group": {
                                                            "code": "BG",
                                                            "text": "Baggage"
                                                        },
                                                        "subgroup": {
                                                            "code": "BG",
                                                            "text": "Baggage"
                                                        }
                                                    },
                                                    "code": "S324",
                                                    "description": "Free Baggage Allowance",
                                                    "details": "Some description details",
                                                    "method": "F",
                                                    "original_amount": 20.3,
                                                    "reason_code": "C",
                                                    "subcode": "0C3",
                                                    "travelers": [],
                                                    "type": "Included"
                                                }
                                            ],
                                            "married_segment": "B",
                                            "operating_carrier": {
                                                "code": "LH",
                                                "flight_number": "123",
                                                "flight_number_suffix": "X",
                                                "name": "Lufthansa"
                                            },
                                            "optional_services": [
                                                {
                                                    "airline_code": "DL",
                                                    "amount": 20.3,
                                                    "attributes": {
                                                        "desc1": {
                                                            "code": "BG",
                                                            "text": "Baggage"
                                                        },
                                                        "desc2": {
                                                            "code": "BG",
                                                            "text": "Baggage"
                                                        },
                                                        "group": {
                                                            "code": "BG",
                                                            "text": "Baggage"
                                                        },
                                                        "subgroup": {
                                                            "code": "BG",
                                                            "text": "Baggage"
                                                        }
                                                    },
                                                    "code": "S324",
                                                    "description": "Free Baggage Allowance",
                                                    "details": "Some description details",
                                                    "method": "F",
                                                    "original_amount": 20.3,
                                                    "reason_code": "C",
                                                    "subcode": "0C3",
                                                    "travelers": [],
                                                    "type": "Included"
                                                }
                                            ],
                                            "preferred_airline": false,
                                            "preferred_airline_tier": 1,
                                            "segment_id_ref": "1",
                                            "sell_indicator": "asdfghjkl",
                                            "stopover_indicator": "X",
                                            "stops": [
                                                {
                                                    "airport": {
                                                        "code": "LHR",
                                                        "location": "London, England, United Kingdom",
                                                        "name": "Heathrow",
                                                        "timezone": "Europe/London",
                                                        "title": "London, England, United Kingdom (LHR-Heathrow)"
                                                    },
                                                    "arrival_datetime": "2020-05-06T13:42",
                                                    "change_of_gauge": false,
                                                    "departure_datetime": "2020-05-06T13:42",
                                                    "equipment_code": "12345",
                                                    "equipment_name": "Boeing 737 Max"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "original_currency": "USD",
                            "original_surcharges_total": 134,
                            "original_taxes_total": 200,
                            "original_total": 964,
                            "original_total_after_taxes": 830,
                            "original_total_before_taxes": 630,
                            "requested_services": [
                                {
                                    "airline_code": "DL",
                                    "amount": 20.3,
                                    "attributes": {
                                        "desc1": {
                                            "code": "BG",
                                            "text": "Baggage"
                                        },
                                        "desc2": {
                                            "code": "BG",
                                            "text": "Baggage"
                                        },
                                        "group": {
                                            "code": "BG",
                                            "text": "Baggage"
                                        },
                                        "subgroup": {
                                            "code": "BG",
                                            "text": "Baggage"
                                        }
                                    },
                                    "code": "S324",
                                    "description": "Free Baggage Allowance",
                                    "details": "Some description details",
                                    "method": "F",
                                    "original_amount": 20.3,
                                    "reason_code": "C",
                                    "subcode": "0C3",
                                    "travelers": [],
                                    "type": "Included"
                                }
                            ],
                            "surcharges_total": 134,
                            "taxes_total": 200,
                            "ticket_attributes": {
                                "advance_change": {
                                    "allowed": false,
                                    "amount": {
                                        "amount": 90.8,
                                        "currency": "EUR",
                                        "original_amount": 120.1,
                                        "original_currency": "USD"
                                    },
                                    "description": "For a 50EUR fee",
                                    "fee": false,
                                    "percentage": 20
                                },
                                "baggage": {
                                    "description": "1pc up to 23kg",
                                    "included": false,
                                    "max_pieces": 1,
                                    "max_weight": 23,
                                    "weight_unit": "K"
                                },
                                "cancellation": {
                                    "amount": {
                                        "amount": 90.8,
                                        "currency": "EUR",
                                        "original_amount": 120.1,
                                        "original_currency": "USD"
                                    },
                                    "description": "Refundable for 50EUR fee",
                                    "fee": false,
                                    "refundable": false
                                },
                                "seats": {
                                    "seat_selection": [
                                        {
                                            "assessment": "fee",
                                            "bag_limits": {
                                                "size_lcm": 208,
                                                "weight_kg": 23
                                            },
                                            "description": "Advance change allowed for fee",
                                            "fees": [
                                                {
                                                    "amount": 100.6,
                                                    "amount_max": 200.6,
                                                    "amount_min": 50.6,
                                                    "currency": "USD"
                                                }
                                            ],
                                            "is_allowed": false
                                        }
                                    ]
                                }
                            },
                            "ticket_by_date": "2020-02-02",
                            "ticket_refundable": false,
                            "total": 125,
                            "total_after_taxes": 830,
                            "total_before_taxes": 630,
                            "traveler_count": 1,
                            "traveler_price": {
                                "original_surcharges_total": 500.2,
                                "original_taxes_total": 100.6,
                                "original_total_after_taxes": 800.6,
                                "original_total_before_taxes": 700,
                                "surcharges": [
                                    {
                                        "amount": 10.5,
                                        "description": "Airport Fee",
                                        "designator": "VW",
                                        "original_amount": 10.5
                                    }
                                ],
                                "surcharges_total": 500.2,
                                "taxes": [
                                    {
                                        "amount": 10.5,
                                        "description": "Fuel Tax",
                                        "designator": "AB",
                                        "nature": "XY",
                                        "original_amount": 10.5
                                    }
                                ],
                                "taxes_total": 100.6,
                                "total_after_taxes": 800.6,
                                "total_before_taxes": 700.6
                            },
                            "uta": [
                                [
                                    {
                                        "assessment": "fee",
                                        "bag_limits": {
                                            "size_lcm": 208,
                                            "weight_kg": 23
                                        },
                                        "description": "Advance change allowed for fee",
                                        "fees": [
                                            {
                                                "amount": 100.6,
                                                "amount_max": 200.6,
                                                "amount_min": 50.6,
                                                "currency": "USD"
                                            }
                                        ],
                                        "headline": "Allowed for fee",
                                        "is_allowed": false,
                                        "large_icon_url": "null",
                                        "name": "advance-change"
                                    }
                                ]
                            ],
                            "validating_carrier_code": "AA"
                        },
                        "fare_groups": [
                            {
                                "currency": "USD",
                                "fare_type": "PUBL",
                                "freetext": "This is a very good fare for you.",
                                "included_services": [
                                    {
                                        "airline_code": "DL",
                                        "amount": 20.3,
                                        "attributes": {
                                            "desc1": {
                                                "code": "BG",
                                                "text": "Baggage"
                                            },
                                            "desc2": {
                                                "code": "BG",
                                                "text": "Baggage"
                                            },
                                            "group": {
                                                "code": "BG",
                                                "text": "Baggage"
                                            },
                                            "subgroup": {
                                                "code": "BG",
                                                "text": "Baggage"
                                            }
                                        },
                                        "code": "S324",
                                        "description": "Free Baggage Allowance",
                                        "details": "Some description details",
                                        "method": "F",
                                        "original_amount": 20.3,
                                        "reason_code": "C",
                                        "subcode": "0C3",
                                        "travelers": [],
                                        "type": "Included"
                                    }
                                ],
                                "is_ndc": false,
                                "optional_services": [
                                    {
                                        "airline_code": "DL",
                                        "amount": 20.3,
                                        "attributes": {
                                            "desc1": {
                                                "code": "BG",
                                                "text": "Baggage"
                                            },
                                            "desc2": {
                                                "code": "BG",
                                                "text": "Baggage"
                                            },
                                            "group": {
                                                "code": "BG",
                                                "text": "Baggage"
                                            },
                                            "subgroup": {
                                                "code": "BG",
                                                "text": "Baggage"
                                            }
                                        },
                                        "code": "S324",
                                        "description": "Free Baggage Allowance",
                                        "details": "Some description details",
                                        "method": "F",
                                        "original_amount": 20.3,
                                        "reason_code": "C",
                                        "subcode": "0C3",
                                        "travelers": [],
                                        "type": "Included"
                                    }
                                ],
                                "requested_services": [
                                    {
                                        "airline_code": "DL",
                                        "amount": 20.3,
                                        "attributes": {
                                            "desc1": {
                                                "code": "BG",
                                                "text": "Baggage"
                                            },
                                            "desc2": {
                                                "code": "BG",
                                                "text": "Baggage"
                                            },
                                            "group": {
                                                "code": "BG",
                                                "text": "Baggage"
                                            },
                                            "subgroup": {
                                                "code": "BG",
                                                "text": "Baggage"
                                            }
                                        },
                                        "code": "S324",
                                        "description": "Free Baggage Allowance",
                                        "details": "Some description details",
                                        "method": "F",
                                        "original_amount": 20.3,
                                        "reason_code": "C",
                                        "subcode": "0C3",
                                        "travelers": [],
                                        "type": "Included"
                                    }
                                ],
                                "ticket_attributes": {
                                    "advance_change": {
                                        "allowed": false,
                                        "amount": {
                                            "amount": 90.8,
                                            "currency": "EUR",
                                            "original_amount": 120.1,
                                            "original_currency": "USD"
                                        },
                                        "description": "For a 50EUR fee",
                                        "fee": false,
                                        "percentage": 20
                                    },
                                    "baggage": {
                                        "description": "1pc up to 23kg",
                                        "included": false,
                                        "max_pieces": 1,
                                        "max_weight": 23,
                                        "weight_unit": "K"
                                    },
                                    "cancellation": {
                                        "amount": {
                                            "amount": 90.8,
                                            "currency": "EUR",
                                            "original_amount": 120.1,
                                            "original_currency": "USD"
                                        },
                                        "description": "Refundable for 50EUR fee",
                                        "fee": false,
                                        "refundable": false
                                    },
                                    "seats": {
                                        "seat_selection": [
                                            {
                                                "assessment": "fee",
                                                "bag_limits": {
                                                    "size_lcm": 208,
                                                    "weight_kg": 23
                                                },
                                                "description": "Advance change allowed for fee",
                                                "fees": [
                                                    {
                                                        "amount": 100.6,
                                                        "amount_max": 200.6,
                                                        "amount_min": 50.6,
                                                        "currency": "USD"
                                                    }
                                                ],
                                                "is_allowed": false
                                            }
                                        ]
                                    }
                                },
                                "ticket_by_date": "2020-02-02",
                                "ticket_refundable": false,
                                "total": 125,
                                "traveler_groups": [
                                    {
                                        "fare_components": [
                                            {
                                                "airline_code": "LH",
                                                "contract_codes": [],
                                                "discount_granted": {
                                                    "amount": "50",
                                                    "type": "percent"
                                                },
                                                "fare_basis_code": "ABC123",
                                                "fare_rules": {
                                                    "advance_res_ticketing": "Advanced reservation and ticketing rules",
                                                    "other_freetext": "Any other rule text",
                                                    "penalties": "Penalties rules",
                                                    "refunds": "Refunds rules",
                                                    "rule_application": "Rule application rules",
                                                    "voluntary_changes": "Voluntary changes rules",
                                                    "voluntary_refunds": "Voluntary refunds rules"
                                                },
                                                "is_bcd_negotiated": false,
                                                "is_company_negotiated": false,
                                                "is_negotiated": false,
                                                "original_total_after_taxes": 103.2,
                                                "penalties": {
                                                    "cancellation_fee_applies": false,
                                                    "cancellation_fees": [
                                                        {
                                                            "allowed": "null",
                                                            "application": "null",
                                                            "guaranteed": false,
                                                            "max_amount": 0,
                                                            "max_unit": "null",
                                                            "min_amount": 0,
                                                            "min_unit": "null",
                                                            "original_max_amount": 0,
                                                            "original_min_amount": 0,
                                                            "original_total": 0,
                                                            "penalty_type": "null",
                                                            "text": "null",
                                                            "total": 0
                                                        }
                                                    ],
                                                    "carrier_fee": false,
                                                    "change_itinerary_fee_applies": false,
                                                    "change_itinerary_fees": [
                                                        {
                                                            "allowed": "null",
                                                            "application": "null",
                                                            "guaranteed": false,
                                                            "max_amount": 0,
                                                            "max_unit": "null",
                                                            "min_amount": 0,
                                                            "min_unit": "null",
                                                            "original_max_amount": 0,
                                                            "original_min_amount": 0,
                                                            "original_total": 0,
                                                            "penalty_type": "null",
                                                            "text": "null",
                                                            "total": 0
                                                        }
                                                    ],
                                                    "currency": "null",
                                                    "deposit_refundable": false,
                                                    "deposit_required": false,
                                                    "failure_to_confirm_fee_applies": false,
                                                    "failure_to_confirm_fees": [
                                                        {
                                                            "allowed": "null",
                                                            "application": "null",
                                                            "guaranteed": false,
                                                            "max_amount": 0,
                                                            "max_unit": "null",
                                                            "min_amount": 0,
                                                            "min_unit": "null",
                                                            "original_max_amount": 0,
                                                            "original_min_amount": 0,
                                                            "original_total": 0,
                                                            "penalty_type": "null",
                                                            "text": "null",
                                                            "total": 0
                                                        }
                                                    ],
                                                    "original_currency": "null",
                                                    "ticket_changeable": false,
                                                    "ticket_refundable": false,
                                                    "ticket_replacement_fee_applies": false,
                                                    "ticket_replacement_fees": [
                                                        {
                                                            "allowed": "null",
                                                            "application": "null",
                                                            "guaranteed": false,
                                                            "max_amount": 0,
                                                            "max_unit": "null",
                                                            "min_amount": 0,
                                                            "min_unit": "null",
                                                            "original_max_amount": 0,
                                                            "original_min_amount": 0,
                                                            "original_total": 0,
                                                            "penalty_type": "null",
                                                            "text": "null",
                                                            "total": 0
                                                        }
                                                    ]
                                                },
                                                "price_class_code": "BUSINESS",
                                                "price_class_description": "No luggage included and no refundability.",
                                                "price_class_name": "Business Saver",
                                                "segment_ids": [],
                                                "ticket_designator_code": "ABC123",
                                                "total_after_taxes": 103.2,
                                                "tour_code": "ABC123"
                                            }
                                        ],
                                        "is_bcd_negotiated": false,
                                        "is_company_negotiated": false,
                                        "is_negotiated": false,
                                        "taxes_total": 0,
                                        "ticket_refundable": false,
                                        "total_after_taxes": 103.2,
                                        "total_before_taxes": 103.2,
                                        "traveler_price": {
                                            "original_surcharges_total": 500.2,
                                            "original_taxes_total": 100.6,
                                            "original_total_after_taxes": 800.6,
                                            "original_total_before_taxes": 700,
                                            "surcharges": [
                                                {
                                                    "amount": 10.5,
                                                    "description": "Airport Fee",
                                                    "designator": "VW",
                                                    "original_amount": 10.5
                                                }
                                            ],
                                            "surcharges_total": 500.2,
                                            "taxes": [
                                                {
                                                    "amount": 10.5,
                                                    "description": "Fuel Tax",
                                                    "designator": "AB",
                                                    "nature": "XY",
                                                    "original_amount": 10.5
                                                }
                                            ],
                                            "taxes_total": 100.6,
                                            "total_after_taxes": 800.6,
                                            "total_before_taxes": 700.6
                                        },
                                        "traveler_type": "adult"
                                    }
                                ],
                                "validating_carrier_code": "AA"
                            }
                        ],
                        "farelogix_pcc": "null",
                        "gds_profile": {
                            "gds_name": "amadeus",
                            "iata_code": "ABC",
                            "office_id": "ABCDEFG"
                        },
                        "locator": "ABC123",
                        "modification_warnings": [
                            {
                                "message": "",
                                "type": ""
                            }
                        ],
                        "modify_flights": {
                            "availability_flow": false,
                            "fare_search_flow": false,
                            "origin_destination_change": false
                        },
                        "origin": "BCD_SANDBOX",
                        "passive_segments_error": "null",
                        "passive_segments_success": false,
                        "payment": {
                            "credit_card": {
                                "bcd_token": "4111111111111111",
                                "billing_address": {
                                    "address1": "123 Nice St.",
                                    "address2": "Apt. 4",
                                    "city": "Atlanta",
                                    "country_code": "US",
                                    "postal_code": "30030",
                                    "state_code": "GA"
                                },
                                "email": "someone@somewhere.com",
                                "first_name": "Joe",
                                "last_name": "Smith",
                                "number": "xxxxxxxxxxxx2358",
                                "type": "VI",
                                "verification_url": "https://bank.com/complete/auth"
                            },
                            "payment_method": "card",
                            "vpa": {
                                "deployment_id": "12345678"
                            }
                        },
                        "phone_number": "null",
                        "pnr": {
                            "id": "ABC123",
                            "pnr_created": false
                        },
                        "policy_group_id": 0,
                        "provider": "",
                        "remarks_success": false,
                        "residual_emds": [
                            {
                                "attempt": 0,
                                "last_update": "",
                                "number": "",
                                "status": "pending"
                            }
                        ],
                        "segments": [
                            {
                                "arrival": {
                                    "airport_name": "null",
                                    "date": "",
                                    "datetime": "",
                                    "iata_code": "",
                                    "terminal": "null",
                                    "time": ""
                                },
                                "carrier": {
                                    "code": "LH",
                                    "flight_number": "123",
                                    "flight_number_suffix": "X",
                                    "name": "Lufthansa"
                                },
                                "cnxx_indicator": false,
                                "departure": {
                                    "airport_name": "null",
                                    "date": "",
                                    "datetime": "",
                                    "iata_code": "",
                                    "terminal": "null",
                                    "time": ""
                                },
                                "flown_indicator": false,
                                "id": "",
                                "operating_carrier": {
                                    "code": "LH",
                                    "flight_number": "123",
                                    "flight_number_suffix": "X",
                                    "name": "Lufthansa"
                                },
                                "origin_destination_id": "ODC1",
                                "status": ""
                            }
                        ],
                        "status": "active",
                        "system": "obt",
                        "tickets": [
                            {
                                "conjunction_number": "null",
                                "fare_group": {
                                    "traveler_group": {
                                        "traveler_price": {
                                            "surcharges": [
                                                {
                                                    "amount": 10.5,
                                                    "description": "Airport Fee",
                                                    "designator": "VW"
                                                }
                                            ],
                                            "surcharges_total": 500.2,
                                            "taxes": [
                                                {
                                                    "amount": 0,
                                                    "currency": "USD",
                                                    "description": "AIR TRANSPORT TAX",
                                                    "designator": "OY",
                                                    "local_amount": 0,
                                                    "nature": "US2",
                                                    "original_amount": 0,
                                                    "original_currency": "USD",
                                                    "refundable": false
                                                }
                                            ],
                                            "taxes_total": 100.6,
                                            "total_after_taxes": 800.6,
                                            "total_before_taxes": 700
                                        }
                                    }
                                },
                                "iata": "null",
                                "number": "",
                                "original_ticket": {
                                    "date": "2020-12-25",
                                    "iata": "23202281",
                                    "issue_place": "MIA",
                                    "tickets": [
                                        {
                                            "amount": "88.89",
                                            "currency": "USD",
                                            "number": "0012345467891"
                                        }
                                    ]
                                },
                                "pcc": "null",
                                "previous_ticket": "0012345467891",
                                "segments": [
                                    {
                                        "coupon_number": "1",
                                        "segment_id_ref": "1",
                                        "ticket_number": "125-2117016146"
                                    }
                                ],
                                "source": "null",
                                "status": "null",
                                "ticket_total": {
                                    "base_total_amount": 0,
                                    "currency": "",
                                    "fee_total_amount": null,
                                    "original_base_total_amount": 0,
                                    "original_currency": "null",
                                    "original_fee_total_amount": null,
                                    "original_tax_total_amount": 0,
                                    "original_total": 0,
                                    "refund_data": {
                                        "currency": "USD",
                                        "fees_and_penalties": {
                                            "amount": 0,
                                            "cancellation_penalty": 0,
                                            "original_amount": 0,
                                            "original_cancellation_penalty": 0
                                        },
                                        "original_currency": "USD",
                                        "refund_date": "2020-12-25",
                                        "total_refund": {
                                            "amount": 0,
                                            "base_fare_amount": 0,
                                            "original_amount": 0,
                                            "original_base_fare_amount": 0,
                                            "original_refund": 0,
                                            "original_taxes_total": 0,
                                            "refund": 0,
                                            "taxes": [
                                                {
                                                    "amount": 0,
                                                    "currency": "USD",
                                                    "description": "AIR TRANSPORT TAX",
                                                    "designator": "OY",
                                                    "local_amount": 0,
                                                    "nature": "US2",
                                                    "original_amount": 0,
                                                    "original_currency": "USD",
                                                    "refundable": false
                                                }
                                            ],
                                            "taxes_total": 0
                                        }
                                    },
                                    "tax_total_amount": 0,
                                    "total": 0
                                },
                                "traveler_id": "null",
                                "traveler_type": "null"
                            }
                        ],
                        "travelers": [
                            {
                                "date_of_birth": "1987-01-01",
                                "email": "someone@provider.com",
                                "first_name": "Joe",
                                "gender": "M",
                                "is_vip": false,
                                "last_name": "Smith",
                                "title": "MR",
                                "tspm_id": "24.123"
                            }
                        ],
                        "uid": "abcdef2341234asdf",
                        "underlying_provider": "",
                        "warnings": [
                            {
                                "message": "",
                                "type": ""
                            }
                        ]
                    },
                    "customer_ip": "192.168.31.116",
                    "errors": [],
                    "locale": "en_US",
                    "session_id": "40Lpcxqzu8X2z3YoZEHnEV",
                    "user_agent": "Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95767,
        "executor_type": "THIRDPARTY",
        "executor_name": "getcheckoutdataFlights",
        "executor_version": "v2",
        "executor_display_name": "get_checkout_data",
        "executor_description": "Retrieves traveler profile and payment information.",
        "executor_category": "Flights",
        "executor_category_group": "Flights",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://private-anon-a03b85d2d4-tshapiv20.apiary-mock.com/air/get_checkout_data/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": null,
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685609342270,
        "lastModifiedTime": 1685609342270,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "allowed_to_enter_cc": false,
                    "billing_address_required": false,
                    "can_request_meal": false,
                    "content_restrictions": {
                        "hide_branded_fares": false,
                        "hide_paid_ancillaries": false,
                        "hide_paid_seats": false
                    },
                    "crd": [
                        {
                            "choices": [
                                {
                                    "code": "",
                                    "description": ""
                                }
                            ],
                            "code": "",
                            "conditions": [
                                "card",
                                "in_policy",
                                "invoice",
                                "out_of_policy",
                                "pnr",
                                "vpa_payment"
                            ],
                            "default": "null",
                            "help_text": "null",
                            "max_length": 0,
                            "min_length": 0,
                            "name": "",
                            "required": false,
                            "type": "select",
                            "validation_type": "email"
                        }
                    ],
                    "credit_cards": [
                        {
                            "card_index": "1",
                            "card_month": 2,
                            "card_name": "John Smith",
                            "card_name_valid": true,
                            "card_number": "1234",
                            "card_source": "tspm_traveler",
                            "card_type": "VI",
                            "card_year": 2024,
                            "first_name": "John",
                            "last_name": "Smith"
                        }
                    ],
                    "customer_ip": "192.168.31.116",
                    "cvv_required": false,
                    "date_of_birth": "1987-01-01",
                    "date_of_birth_required": false,
                    "default_billing_address": {
                        "address2": "apt.2 National Capital Territory",
                        "city": "null",
                        "company_name": "null",
                        "country_code": "null",
                        "phone": {
                            "country_code": "US",
                            "number": "+14155552671"
                        },
                        "postal_code": "null",
                        "state_province_code": "AL"
                    },
                    "email": "someone@provider.com",
                    "errors": [],
                    "first_name": "Joe",
                    "gender": "M",
                    "gender_required": false,
                    "genders_supported": [],
                    "idcard_exp_date_required": false,
                    "idcards": [
                        {
                            "country": "US",
                            "expiration_date": "2023-01-03",
                            "number": "AA123456"
                        }
                    ],
                    "is_passport_required_for_redress": false,
                    "last_name": "Smith",
                    "locale": "en_US",
                    "meal_request": "MEAL",
                    "middle_name": "Guy",
                    "passports": [
                        {
                            "citizenship": "US",
                            "expiration_date": "2023-01-03",
                            "first_name": "John",
                            "issue_country": "US",
                            "issue_date": "2018-05-02",
                            "issue_place": "Atlanta",
                            "last_name": "Smith",
                            "middle_name": "null",
                            "number": "ZZ123456",
                            "residence": "Saudi Arabia"
                        }
                    ],
                    "payment_options": [],
                    "phone": {
                        "country_code": "US",
                        "number": "+14155552671"
                    },
                    "phone_number_required": false,
                    "place_of_birth": "Kyiv",
                    "salutation": "Mr",
                    "seat_preference": {
                        "seat": "A",
                        "seat_side": "L",
                        "travel_row": "E"
                    },
                    "secure_flight": {
                        "known_traveler_numbers": [
                            {
                                "number": ""
                            }
                        ],
                        "redress_numbers": [
                            {
                                "number": ""
                            }
                        ],
                        "visa_documents": [
                            {
                                "number": ""
                            }
                        ]
                    },
                    "session_id": "40Lpcxqzu8X2z3YoZEHnEV",
                    "ssr_codes": [
                        {
                            "code": "INFT",
                            "description": "SPORTS EQUIPMENT",
                            "text_required": false
                        }
                    ],
                    "tsa_supported": false,
                    "user_agent": "Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36",
                    "vpa_card_pools": [
                        {
                            "card_pool_name": "",
                            "vpa_client_id": ""
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95819,
        "executor_type": "THIRDPARTY",
        "executor_name": "travelerByEmail",
        "executor_version": "v2",
        "executor_display_name": "Traveler By Email",
        "executor_description": "Retrieves one or more traveler profiles by email address. Optionally, lastname and firstname can be passed in the query string to refine the search.",
        "executor_category": "Profiles",
        "executor_category_group": "Profiles",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-a88455fe5e-tspmapiv2.apiary-mock.com/profiles/traveler/email/{email}/{lastname}/{firstname}/{convertspecialchars}/{convertfullprofile}/{includeoriginalvalues}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "email",
                "value": "",
                "description": ""
            },
            {
                "key": "lastname",
                "value": "",
                "description": "Example: {lastname}."
            },
            {
                "key": "firstname",
                "value": "",
                "description": " Example: {firstname}."
            },
            {
                "key": "convertspecialchars",
                "value": "",
                "description": " Example: {true/false}."
            },
            {
                "key": "convertfullprofile",
                "value": "",
                "description": " Example: {true}."
            },
            {
                "key": "includeoriginalvalues",
                "value": "",
                "description": " Example: {true/false}."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685615820141,
        "lastModifiedTime": 1685615820141,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95806,
        "executor_type": "THIRDPARTY",
        "executor_name": "companyConversation",
        "executor_version": "v2",
        "executor_display_name": "Company Conversation",
        "executor_description": "Get the next batch of profiles based on Conversation Id. Once a batch is pulled, the next request with the Conversation Id would always return the next batch of profiles.In case, if the consumer has issues receiving or processing the batch, then the current batch can be requested again by using the following URI template \u2013The Conversation Id would be available in the response xml of \u201cRetrieval by last updated date\u201d (please refer 2.1) operation.v2/profiles/{profiletype}/conversation/{conversationid}/retryProfileType \u2013 Company/Traveler.Exclude Optional ElementsThis operation is same as Retrieve Profiles by Conversation Id (please refer 2.3) with an additional parameter to exclude the following elements in the Profile:ExternalSystemsArrangersApprovers",
        "executor_category": "Profiles",
        "executor_category_group": "Profiles",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-a88455fe5e-tspmapiv2.apiary-mock.com/profiles/traveler/conversation/{conversationid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "conversationid",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685613219111,
        "lastModifiedTime": 1685613929595,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95838,
        "executor_type": "THIRDPARTY",
        "executor_name": "travelerEntityidWithCharacterconversion",
        "executor_version": "v2",
        "executor_display_name": "Traveler Entityid With Characterconversion",
        "executor_description": "Retrieves character converted traveler profile by EntityId. Optionally, convertSpecialChars, convertFullProfile and includeOriginalValue can be passed in order to perform special character conversion. This applies to only traveler profile and company profile elements character conversion is NOT available.",
        "executor_category": "Profiles",
        "executor_category_group": "Profiles",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-a88455fe5e-tspmapiv2.apiary-mock.com/profiles/traveler/entityidwithcharacterconversion/{entityid}/{convertspecialchars}/{convertfullprofile}/{includeoriginalvalues}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "entityid",
                "value": "",
                "description": ""
            },
            {
                "key": "convertspecialchars",
                "value": "",
                "description": "Example: {true/false}."
            },
            {
                "key": "convertfullprofile",
                "value": "",
                "description": "Example: {true}."
            },
            {
                "key": "includeoriginalvalues",
                "value": "",
                "description": "Example: {true/false}."
            }
        ],
        "queryParams": [
            {
                "key": "lastname",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "convertspecialchars",
                "value": "",
                "description": ""
            },
            {
                "key": "{}",
                "value": "",
                "description": ""
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685618268308,
        "lastModifiedTime": 1685618268308,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95833,
        "executor_type": "THIRDPARTY",
        "executor_name": "officeProfileByEntityid",
        "executor_version": "v2",
        "executor_display_name": "Office Profile By Entityid",
        "executor_description": "Get a unique office profile by Entity Id.",
        "executor_category": "Profiles",
        "executor_category_group": "Profiles",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-a88455fe5e-tspmapiv2.apiary-mock.com/profiles/office/entityid/{entityid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "entityid",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "lastname",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685617657726,
        "lastModifiedTime": 1685617657726,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95817,
        "executor_type": "THIRDPARTY",
        "executor_name": "companyByEntityid",
        "executor_version": "v2",
        "executor_display_name": "Company By Entityid",
        "executor_description": "Get a unique traveler/company profile by Entity Id.Retrieves traveler profile by EntityId. Optionally, convertspecialchars, convertfullprofile and includeoriginalvalue can be passed in order to perform special character conversion. This applies to only traveler profile and company profile elements character conversion is NOT available.ProfileType - Company or Traveler HTTP Method \u2013 GET",
        "executor_category": "Profiles",
        "executor_category_group": "Profiles",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-a88455fe5e-tspmapiv2.apiary-mock.com/profiles/company/entityid/{entityid}/{convertspecialchars}/{convertfullprofile}/{includeoriginalvalues}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "entityid",
                "value": "",
                "description": ""
            },
            {
                "key": "convertspecialchars",
                "value": "",
                "description": "Example: {true/false}."
            },
            {
                "key": "convertfullprofile",
                "value": "",
                "description": " Example: {true}."
            },
            {
                "key": "includeoriginalvalues",
                "value": "",
                "description": "Example: {true/false}."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685615492755,
        "lastModifiedTime": 1685615492755,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95824,
        "executor_type": "THIRDPARTY",
        "executor_name": "deactivateTravelerbyEntityid",
        "executor_version": "v2",
        "executor_display_name": "Deactivate Traveler by Entityid",
        "executor_description": "Deactivates the traveler profile. Profile in the system is identified by Entity Id.",
        "executor_category": "Profiles",
        "executor_category_group": "Profiles",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://private-anon-a88455fe5e-tspmapiv2.apiary-mock.com/profiles/traveler/entityid/{entityid}/deactivate",
        "dataroot": null,
        "pathParams": [
            {
                "key": "entityid",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685616391401,
        "lastModifiedTime": 1685616391401,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95832,
        "executor_type": "THIRDPARTY",
        "executor_name": "associationsbyEntityid",
        "executor_version": "v2",
        "executor_display_name": "Associations by Entityid",
        "executor_description": "Retrieves list of Active ONLY traveler profiles (meta data) associated to the arranger Entity Id. Optionally traveler\u2019s lastname, firstname and email can be passed in the query string to refine the search.",
        "executor_category": "Profiles",
        "executor_category_group": "Profiles",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-a88455fe5e-tspmapiv2.apiary-mock.com/profiles/associations/entityid/{entityid}/{lastname}/{firstname}/{email}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "entityid",
                "value": "",
                "description": ""
            },
            {
                "key": "lastname",
                "value": "",
                "description": "Example: {lastname}."
            },
            {
                "key": "firstname",
                "value": "",
                "description": "Example: {firstname}."
            },
            {
                "key": "email",
                "value": "",
                "description": "Example: {emailaddress}."
            }
        ],
        "queryParams": [
            {
                "key": "lastname",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685617472834,
        "lastModifiedTime": 1685617472834,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95813,
        "executor_type": "THIRDPARTY",
        "executor_name": "travelerByEntityid",
        "executor_version": "v2",
        "executor_display_name": "Traveler By Entityid",
        "executor_description": "Get a unique traveler/company profile by Entity Id.Retrieves traveler profile by EntityId. Optionally, convertspecialchars, convertfullprofile and includeoriginalvalue can be passed in order to perform special character conversion. This applies to only traveler profile and company profile elements character conversion is NOT available.ProfileType - Company or Traveler HTTP Method \u2013 GET",
        "executor_category": "Profiles",
        "executor_category_group": "Profiles",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-a88455fe5e-tspmapiv2.apiary-mock.com/profiles/traveler/entityid/{entityid}/{convertspecialchars}/{convertfullprofile}/{includeoriginalvalues}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "entityid",
                "value": "",
                "description": ""
            },
            {
                "key": "convertspecialchars",
                "value": "",
                "description": "Example: {true/false}."
            },
            {
                "key": "convertfullprofile",
                "value": "",
                "description": "Example: {true}."
            },
            {
                "key": "includeoriginalvalues",
                "value": "",
                "description": "Example: {true/false}."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685613773796,
        "lastModifiedTime": 1685613773796,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95826,
        "executor_type": "THIRDPARTY",
        "executor_name": "listofProfilesByEmailaddress",
        "executor_version": "v2",
        "executor_display_name": "List of Profiles By Emailaddress",
        "executor_description": "Get list of all traveler profiles (meta data) from system. Profiles would be identified in the system by Email Address.",
        "executor_category": "Profiles",
        "executor_category_group": "Profiles",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-a88455fe5e-tspmapiv2.apiary-mock.com/profiles/list/email/{emailaddress}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "emailaddress",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685616631694,
        "lastModifiedTime": 1685616631694,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95829,
        "executor_type": "THIRDPARTY",
        "executor_name": "travelerbyEmployeeid",
        "executor_version": "v2",
        "executor_display_name": "Traveler by Employeeid",
        "executor_description": "Retrieves one or more traveler profiles by employee id. Optionally, \"orgid\", \"searchfield\" and/or \"status\" can be passed in the query string to refine the search.orgid = Integer value. An organization identifier within TSPM.searchfield = gdsuniqueid or obeuserref. If not passed, system would consider the default search field",
        "executor_category": "Profiles",
        "executor_category_group": "Profiles",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-a88455fe5e-tspmapiv2.apiary-mock.com/profiles/traveler/employeeid/{employeeid}/{orgid}/{searchfield}/{status}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "employeeid",
                "value": "",
                "description": ""
            },
            {
                "key": "orgid",
                "value": "",
                "description": "Example: {organizationId}."
            },
            {
                "key": "searchfield",
                "value": "",
                "description": " Example: {searchfield}."
            },
            {
                "key": "status",
                "value": "",
                "description": " Example: {status}."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685617266048,
        "lastModifiedTime": 1685617266048,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95801,
        "executor_type": "THIRDPARTY",
        "executor_name": "companyLastUpdatedDate",
        "executor_version": "v2",
        "executor_display_name": "Company Last Updated Date",
        "executor_description": "Get list of profiles that are updated in TSPM after the given datetime. This operation should be used for retrieval of profiles in bulk.If this operation results in retrieval of profiles exceeding the pre-configured max batch size, then along with the first batch of profiles, a conversation is initiated, batch count is determined and both will be sent back as part of the response",
        "executor_category": "Profiles",
        "executor_category_group": "Profiles",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-a88455fe5e-tspmapiv2.apiary-mock.com/profiles/company/lastupdateddate/{datetime}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "datetime",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685612765107,
        "lastModifiedTime": 1685613876660,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95803,
        "executor_type": "THIRDPARTY",
        "executor_name": "travelerConversation",
        "executor_version": "v2",
        "executor_display_name": "Traveler Conversation",
        "executor_description": "Get the next batch of profiles based on Conversation Id. Once a batch is pulled, the next request with the Conversation Id would always return the next batch of profiles.In case, if the consumer has issues receiving or processing the batch, then the current batch can be requested again by using the following URI template \u2013The Conversation Id would be available in the response xml of \u201cRetrieval by last updated date\u201d (please refer 2.1) operation.v2/profiles/{profiletype}/conversation/{conversationid}/retryProfileType \u2013 Company/Traveler.Exclude Optional ElementsThis operation is same as Retrieve Profiles by Conversation Id (please refer 2.3) with an additional parameter to exclude the following elements in the Profile:ExternalSystemsArrangersApprovers",
        "executor_category": "Profiles",
        "executor_category_group": "Profiles",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-a88455fe5e-tspmapiv2.apiary-mock.com/profiles/traveler/conversation/{conversationid}{exclude}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "conversationid",
                "value": "",
                "description": ""
            },
            {
                "key": "exclude",
                "value": "",
                "description": "Example: externalsystems,arrangers,approvers."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685612953032,
        "lastModifiedTime": 1685613902807,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95821,
        "executor_type": "THIRDPARTY",
        "executor_name": "createTravelerProfileByEntityid",
        "executor_version": "v2",
        "executor_display_name": "Create Traveler Profile By Entityid",
        "executor_description": "Creates a traveler profile in the system.",
        "executor_category": "Profiles",
        "executor_category_group": "Profiles",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-a88455fe5e-tspmapiv2.apiary-mock.com/{entityid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "entityid",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685615953712,
        "lastModifiedTime": 1685615953712,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95827,
        "executor_type": "THIRDPARTY",
        "executor_name": "retriveTravelerbyPhonenumber",
        "executor_version": "v2",
        "executor_display_name": "Retrive Traveler by Phonenumber",
        "executor_description": "Retrieves one or more traveler profiles by phone number. Optionally, \"orgid\" and/or \"status\" parameters can be passed in the query string to refine the search.orgid = Integer value. An organization identifier within TSPM.status = 1/0 (binary)1 - (returns all active profiles)0 - (returns all inactive profiles) or not sending status field will return ALL (active and inactive) profiles.If multiple profiles are found, the most recently updated profile with detailed profile information will be returned along with a limited set of profile elements for each profile that match the criteria are returned back to the consumer. If a unique profile is found, detailed profile information with similar response schema as \"Traveler profile by EntityId\" will be returned back to the customer.",
        "executor_category": "Profiles",
        "executor_category_group": "Profiles",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-a88455fe5e-tspmapiv2.apiary-mock.com/profiles/traveler/phonenumber/{phonenumber}/{orgid}/{status}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "phonenumber",
                "value": "",
                "description": ""
            },
            {
                "key": "orgid",
                "value": "",
                "description": " Example: {organizationId}."
            },
            {
                "key": "status",
                "value": "",
                "description": " Example: {status}."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685617034325,
        "lastModifiedTime": 1685617034325,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95836,
        "executor_type": "THIRDPARTY",
        "executor_name": "travelerEmailidWithCharacterConversion",
        "executor_version": "v2",
        "executor_display_name": "Traveler Emailid With Character Conversion",
        "executor_description": "Retrieves character converted travel profile by email address. Optionally, convertSpecialChars, convertFullProfile and includeOriginalValue can be passed in order to perform special character conversion.",
        "executor_category": "Profiles",
        "executor_category_group": "Profiles",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-a88455fe5e-tspmapiv2.apiary-mock.com/profiles/traveler/emailidwithcharacterconversion/{emailaddress}/{convertspecialchars}/{convertfullprofile}/{includeoriginalvalues}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "emailaddress",
                "value": "",
                "description": ""
            },
            {
                "key": "convertspecialchars",
                "value": "",
                "description": ""
            },
            {
                "key": "convertfullprofile",
                "value": "",
                "description": ""
            },
            {
                "key": "includeoriginalvalues",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "lastname",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "convertspecialchars",
                "value": "",
                "description": ""
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685617996167,
        "lastModifiedTime": 1685617996167,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95823,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateTravelerProfileByEntityid",
        "executor_version": "v2",
        "executor_display_name": "Update Traveler Profile By Entityid",
        "executor_description": "Updates the traveler profile information. Profile in the system is identified by Entity Id.",
        "executor_category": "Profiles",
        "executor_category_group": "Profiles",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-a88455fe5e-tspmapiv2.apiary-mock.com/profiles/traveler/entityid/{entityid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "entityid",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685616081616,
        "lastModifiedTime": 1685616081616,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95799,
        "executor_type": "THIRDPARTY",
        "executor_name": "travelerLastUpdatedDate",
        "executor_version": "v2",
        "executor_display_name": "Traveler Last Updated Date",
        "executor_description": "Get list of profiles that are updated in TSPM after the given datetime. This operation should be used for retrieval of profiles in bulk.If this operation results in retrieval of profiles exceeding the pre-configured max batch size, then along with the first batch of profiles, a conversation is initiated, batch count is determined and both will be sent back as part of the response.",
        "executor_category": "Profiles",
        "executor_category_group": "Profiles",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-a88455fe5e-tspmapiv2.apiary-mock.com/profiles/traveler/lastupdateddate/{datetime}{exclude}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "datetime",
                "value": "",
                "description": ""
            },
            {
                "key": "exclude",
                "value": "",
                "description": "Example: externalsystems,arrangers,approvers."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685612576362,
        "lastModifiedTime": 1685613845498,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95548,
        "executor_type": "THIRDPARTY",
        "executor_name": "getcompanylocations",
        "executor_version": "v1",
        "executor_display_name": "get_company_locations v2",
        "executor_description": "Retrieves a list of company locations (if present) as stored in the Admin Panel for the specified company, based on company ID. Also capable of returning a list of company locations around a particular destination (as returned by destination_lookup method) based on optional search_radius.",
        "executor_category": "Generic",
        "executor_category_group": "Generic",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-d42b36950c-tshapiv20.apiary-mock.com/get_company_locations/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "api_key",
                "value": "",
                "description": "Public key, provided by BCD Travel API team Example: testkey.",
                "req": false
            },
            {
                "key": "configuration_id",
                "value": "",
                "description": " In order for us to return data in compliance with settings defined for each client configuration, we need to identify the client configuration for this request. This parameter represents Internal Configuration ID as returned in get_configurations. Example: 3500000023.",
                "req": false
            },
            {
                "key": "customer_ip",
                "value": "",
                "description": " IP address of a user, as captured by the customer\u2019s integration. Ensure your integration passes the user\u2019s IP, not your own. This value helps determine user's location for fraud recovery and other analytics. Example: 192.168.31.116.",
                "req": false
            },
            {
                "key": "destination",
                "value": "",
                "description": "Code of the chosen destination as returned in a code element of the destination_lookup call (e.g. destination=Region:48.224147,16.350547, destination=Hotel:590111, destination=Region:3704) or a set of coordinates (e.g. destination=37.7772448,-122.3955118)",
                "req": false
            },
            {
                "key": "entity_id",
                "value": "",
                "description": "This field is deprecated and will be removed in future versions. Use configuration_id instead. Entity_id is required if configuration_id is not passed. In order for us to return data in compliance with settings defined for each client company, we need to identify the client company for this request. This parameter represents Internal Company ID as shown in Admin Panel. Example: 23.",
                "req": false
            },
            {
                "key": "locale",
                "value": "",
                "description": "Forces system to return data in other languages if available. Defaults to en_US if not passed. Example: en_US.",
                "req": false
            },
            {
                "key": "nonce",
                "value": "",
                "description": " A randomly generated string of your choice. Ensure it is unique to each request with same timestamp within 5 minute interval and no more than 32 characters long. Maximum value length is 32. Example: 1543353502645.",
                "req": false
            },
            {
                "key": "search_radius",
                "value": "",
                "description": " Search radius in miles for searches around a particular destination. Default is 10. Minimum is 0.1. Maximum is 50. Optional. If passed, also requires destination to be passed as well. Default: 10.0.",
                "req": false
            },
            {
                "key": "session_id",
                "value": "",
                "description": "ustomer generated identifier of user's session. Do not use real user's session id as it will be replayed back in the API response. Reuse this identifier for all requests by the same user. Including this value makes subsequent troubleshooting and audit easier, as it explicitly links together requests for individual users. <,>,& characters are not allowed. Example: 71IxqHT8mgMe5ohsZ25e5P.",
                "req": false
            },
            {
                "key": "system",
                "value": "",
                "description": "Certain things may be configured and subsequently returned very differently based on the booking channel. This attribute tells the system which one of the currently supported channels the data is being requested for. Please inquire which booking channel your integration should use for all requests when you obtain your API key.",
                "req": false
            },
            {
                "key": "timestamp",
                "value": "",
                "description": " Valid current UNIX timestamp in seconds. Example: 1388774110.",
                "req": false
            },
            {
                "key": "user_agent",
                "value": "",
                "description": " Properly encoded customer\u2019s user agent string (required to obtain mobile rates from some providers). For traffic from mobile or desktop apps (as opposed to browser apps), use the following format: {App Name}/{App Version} ({OS} {OS Version}) [APP or MOBILE_APP] (e.g. TripSource/5.0 (iOS 10_10_3) MOBILE_APP). Note: Required to get discounted mobile rates Example: Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685527899253,
        "lastModifiedTime": 1685598206270,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "company_locations": [
                        {
                            "address": "Schwieberdinger Stra\u00dfe 58, 70435 Stuttgart, Germany",
                            "city": "Stuttgart",
                            "country": "Germany",
                            "latitude": 48.832684,
                            "longitude": 9.16073,
                            "name": "Stuttgart Printing Center"
                        },
                        {
                            "address": "36 avenue de l\u2019Opera",
                            "city": "Paris",
                            "country": "France",
                            "latitude": 48.869207,
                            "longitude": 2.333215,
                            "name": "BNP Paris"
                        }
                    ],
                    "customer_ip": "1.1.1.1",
                    "errors": [],
                    "locale": "en_US",
                    "session_id": "45yPSjtXCIIhTA7lya75CS",
                    "user_agent": "MOBILEAPP"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95545,
        "executor_type": "THIRDPARTY",
        "executor_name": "destinationlookup",
        "executor_version": "v1",
        "executor_display_name": "destination_lookup v2",
        "executor_description": "Retrieves a list of the cities, landmarks, airports, rail stations, company locations, and hotel names associated with a user search term. If at least one match exists for a search term, the response will contain a list of destinations by category (e.g. landmarks), based on a full or partial search term (e.g. Angeles). If a match exists, up to 8 results can be returned per category.",
        "executor_category": "Generic",
        "executor_category_group": "Generic",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-d42b36950c-tshapiv20.apiary-mock.com/destination_lookup/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "api_key",
                "value": "",
                "description": "Public key, provided by BCD Travel API team Example: testkey.",
                "req": false
            },
            {
                "key": "customer_ip",
                "value": "",
                "description": " IP address of a user, as captured by the customer\u2019s integration. Ensure your integration passes the user\u2019s IP, not your own. This value helps determine user's location for fraud recovery and other analytics. Example: 192.168.31.116.",
                "req": false
            },
            {
                "key": "entity_id",
                "value": "",
                "description": " This field is deprecated and will be removed in future versions. Use configuration_id instead. Entity_id is required if configuration_id is not passed. In order for us to return data in compliance with settings defined for each client company, we need to identify the client company for this request. This parameter represents Internal Company ID as shown in Admin Panel. Example: 23",
                "req": false
            },
            {
                "key": "locale",
                "value": "",
                "description": "Forces system to return data in other languages if available. Defaults to en_US if not passed. Example: en_US.",
                "req": false
            },
            {
                "key": "nonce",
                "value": "",
                "description": " A randomly generated string of your choice. Ensure it is unique to each request with same timestamp within 5 minute interval and no more than 32 characters long. Maximum value length is 32. Example: 1543353502645.",
                "req": false
            },
            {
                "key": "product",
                "value": "",
                "description": "Defines whether results will be used for CARS or HOTELS (defaults to HOTELS if nothing is passed). Returns order based on proper setting (Hotels>Autocomplete or Cars>Autocomplete). Default: hotels.",
                "req": false
            },
            {
                "key": "session_id",
                "value": "",
                "description": " Customer generated identifier of user's session. Do not use real user's session id as it will be replayed back in the API response. Reuse this identifier for all requests by the same user. Including this value makes subsequent troubleshooting and audit easier, as it explicitly links together requests for individual users. <,>,& characters are not allowed. Example: 71IxqHT8mgMe5ohsZ25e5P.",
                "req": false
            },
            {
                "key": "smid_company_id",
                "value": "",
                "description": "SMID (a.k.a. \"Security Manager ID\", e.g. 99991)). Example: SMID.14881.",
                "req": false
            },
            {
                "key": "system",
                "value": "",
                "description": "Certain things may be configured and subsequently returned very differently based on the booking channel. This attribute tells the system which one of the currently supported channels the data is being requested for. Please inquire which booking channel your integration should use for all requests when you obtain your API key. Example: obt.",
                "req": false
            },
            {
                "key": "category_list",
                "value": "",
                "description": "List of categories to return (e.g. category_list=landmarks or category_list=hotels,cities). If omitted, all categories will be returned.",
                "req": false
            },
            {
                "key": "category_max_results",
                "value": "",
                "description": "Defines the number of results to return in each category (e.g. category_max_results=4). If omitted, we\u2019ll return anywhere from 3 to 5 results in each category (except for airport_and_stations that returns 10) based on the current auto-complete algorithm. Currently supported values are 1 through 5.",
                "req": false
            },
            {
                "key": "configuration_id",
                "value": "",
                "description": "In order for us to return data in compliance with settings defined for each client configuration, we need to identify the client configuration for this request. This parameter represents Internal Configuration ID as returned in get_configurations. Example: 3500000023.",
                "req": false
            },
            {
                "key": "term",
                "value": "",
                "description": "Search term for the destination (full string or substring, i.e. sfo, london, riu palace, angeles). Minimum length for the search term is 2 letters.",
                "req": false
            },
            {
                "key": "timestamp",
                "value": "",
                "description": " Valid current UNIX timestamp in seconds. Example: 1388774110.",
                "req": false
            },
            {
                "key": "user_agent",
                "value": "",
                "description": " Properly encoded customer\u2019s user agent string (required to obtain mobile rates from some providers). For traffic from mobile or desktop apps (as opposed to browser apps), use the following format: {App Name}/{App Version} ({OS} {OS Version}) [APP or MOBILE_APP] (e.g. TripSource/5.0 (iOS 10_10_3) MOBILE_APP). Note: Required to get discounted mobile rates Example: Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685527360013,
        "lastModifiedTime": 1685598183305,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "customer_ip": "1.1.1.1",
                    "errors": [],
                    "locale": "en_US",
                    "match_data": {
                        "airports_and_stations": [
                            {
                                "code": "Region:53.427151,-6.24324",
                                "iata_code": "DUB",
                                "label": "Dublin, Ireland (DUB)",
                                "latitude": 53.427151,
                                "longitude": -6.24324,
                                "type": "a"
                            },
                            {
                                "code": "Region:37.138451,-80.68132",
                                "iata_code": "PSK",
                                "label": "Dublin, Virginia, USA (PSK-New River Valley, Roanoke (and vicinity) area)",
                                "latitude": 37.138451,
                                "longitude": -80.68132,
                                "type": "a"
                            }
                        ],
                        "cities": [
                            {
                                "code": "Region:e|1069",
                                "iata_code": null,
                                "label": "Dublin, Ireland",
                                "latitude": 53.344021,
                                "longitude": -6.26146,
                                "type": "c"
                            },
                            {
                                "code": "Region:e|6888",
                                "iata_code": null,
                                "label": "Dublin, Ohio, USA",
                                "latitude": 40.105755,
                                "longitude": -83.143318,
                                "type": "c"
                            }
                        ],
                        "company_locations": [
                            {
                                "code": "Region:53.3324546814,-6.2392630577",
                                "iata_code": null,
                                "label": "Dublin Office, Dublin, Ireland",
                                "latitude": 53.3324546814,
                                "longitude": -6.2392630577,
                                "type": "cl"
                            }
                        ],
                        "hotels": [
                            {
                                "code": "Hotel:577397",
                                "iata_code": null,
                                "label": "Hilton Dublin Airport, Dublin, Ireland",
                                "latitude": 53.40316,
                                "longitude": -6.17969,
                                "type": "h"
                            },
                            {
                                "code": "Hotel:577262",
                                "iata_code": null,
                                "label": "Conrad Dublin, Dublin, Ireland",
                                "latitude": 53.33499,
                                "longitude": -6.25793,
                                "type": "h"
                            }
                        ],
                        "landmarks": [
                            {
                                "code": "Region:53.353329,-6.30367",
                                "iata_code": null,
                                "label": "Dublin Zoo, Dublin, Ireland",
                                "latitude": 53.353329,
                                "longitude": -6.30367,
                                "type": "l"
                            },
                            {
                                "code": "Region:53.343681,-6.26783",
                                "iata_code": null,
                                "label": "Dublin Castle, Dublin, Ireland",
                                "latitude": 53.343681,
                                "longitude": -6.26783,
                                "type": "l"
                            }
                        ]
                    },
                    "order": [
                        "company_locations",
                        "cities",
                        "airports_and_stations",
                        "hotels",
                        "landmarks"
                    ],
                    "session_id": "7rmCnNiVM6XqZcL4s77Pxn",
                    "user_agent": "MOBILEAPP"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95541,
        "executor_type": "THIRDPARTY",
        "executor_name": "getentityid",
        "executor_version": "v1",
        "executor_display_name": "get_entity_id v2",
        "executor_description": "Returns internal ID of the company (a.k.a. entity_id), which is required for most of the API calls listed here to apply proper company settings, based on passed parameters. If a positive match to a single company entity in our system is made based on passed parameters and the logic described below, ID of that company is returned. If a company was not found, a fallback_entity_id (if it was passed with the request) or an error is returned. This API call also returns short company name, if configured for the company.",
        "executor_category": "Generic",
        "executor_category_group": "Generic",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-d42b36950c-tshapiv20.apiary-mock.com/get_entity_id/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "tspm_company_id",
                "value": "",
                "description": "TCP (a.k.a. \"TSPM EntityID\", e.g. 20.54521). Either tspm, smid or obt id is required for this method to work. Example: 20.14881.",
                "req": false
            },
            {
                "key": "smid_company_id",
                "value": "",
                "description": "SMID (a.k.a. \"Security Manager ID\", e.g. 99991)). Either tspm, smid or obt id is required for this method to work. Example: 99991.",
                "req": false
            },
            {
                "key": "obt_company_id",
                "value": "",
                "description": "OBTID (a.k.a. \"OBT Client ID\", e.g. 12345). Either tspm, smid or obt id is required for this method to work. Example: 12345.",
                "req": false
            },
            {
                "key": "fallback_entity_id",
                "value": "",
                "description": "Internal ID of a default company that will be returned in the response should we be unable to find single company based on other request parameters (e.g. 25). Example: 42904.",
                "req": false
            },
            {
                "key": "traveler_email",
                "value": "",
                "description": "Pass the url-encoded e-mail of the traveler to look up against the TSPM system. Maximum length of the local part (before \"@\") is 50 characters. Example: johnsmith%40example.com.",
                "req": false
            },
            {
                "key": "pnr_id",
                "value": "",
                "description": "Existing PNR identifier that is to be used for the reservation. Alphanumeric 6 characters. If present, system will attempt to retrieve this PNR using GDS settings of the located company ID (if any). If attempt is not successful, HTTP 400 error will be returned. Example: W9WMYP.",
                "req": false
            },
            {
                "key": "system",
                "value": "",
                "description": "Certain things may be configured and subsequently returned very differently based on the booking channel. This attribute tells the system which one of the currently supported channels the data is being requested for. Please inquire which booking channel your integration should use for all requests when you obtain your API key. Example: obt.",
                "req": false
            },
            {
                "key": "api_key",
                "value": "",
                "description": "Public key, provided by BCD Travel API team Example: testkey.",
                "req": false
            },
            {
                "key": "customer_ip",
                "value": "",
                "description": " IP address of a user, as captured by the customer\u2019s integration. Ensure your integration passes the user\u2019s IP, not your own. This value helps determine user's location for fraud recovery and other analytics. Example: 192.168.31.116.",
                "req": false
            },
            {
                "key": "locale",
                "value": "",
                "description": "Forces system to returns data in other languages if available. Current list of supported locales is: en_US, fr_FR, de_DE, es_ES, it_IT, ko_KR, ja_JP and pt_PT. Defaults to en_US if not passed. Example: en_US.",
                "req": false
            },
            {
                "key": "nonce",
                "value": "",
                "description": "A randomly generated string of your choice. Ensure it is unique to each request with same timestamp within 5 minute interval and no more than 32 characters long. Example: 1543353502645.",
                "req": false
            },
            {
                "key": "session_id",
                "value": "",
                "description": "Optional Customer generated identifier of user's session. Do not use real user's session id as it will be replayed back in the API response. Reuse this identifier for all requests by the same user. Including this value makes subsequent troubleshooting and audit easier, as it explicitly links together requests for individual users. <,>,& characters are not allowed. Example: 71IxqHT8mgMe5ohsZ25e5P.",
                "req": false
            },
            {
                "key": "timestamp",
                "value": "",
                "description": " Valid current UNIX timestamp in seconds. Example: 1388774110.",
                "req": false
            },
            {
                "key": "user_agent",
                "value": "",
                "description": "Properly encoded customer\u2019s user agent string (required to obtain mobile rates from some providers). For traffic from mobile or desktop apps (as opposed to browser apps), use the following format: {App Name}/{App Version} ({OS} {OS Version}) [APP or MOBILE_APP] (e.g. TripSource/5.0 (iOS 10_10_3) MOBILE_APP). Note: Required to get discounted mobile rates + Sample: Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685526186239,
        "lastModifiedTime": 1685598093177,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "customer_ip": null,
                    "errors": [],
                    "locale": "en_US",
                    "session_id": "71IxqHT8mgMe5ohsZ25e5P",
                    "user_agent": "MOBAPICLIENTv1",
                    "entity_id": 12,
                    "entity_name": "Dunder Mifflin ALL AM",
                    "max_booking_duration_days": 90,
                    "short_company_name": "Dunder"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95542,
        "executor_type": "THIRDPARTY",
        "executor_name": "getConfigurations",
        "executor_version": "v1",
        "executor_display_name": "get_configurations v2",
        "executor_description": "The main purpose of this endpoint is to properly match trip/traveler with his company and relevant configuration. The endpoint returns list of available configurations in order of relevance per given input information about the trip. Each configuration contains two fields: \u2018id\u2019 \u2013 configuration id; \u2018title\u2019 \u2013 human readable title for the configuration.Configuration ID is required parameter for most of the API calls listed here to apply proper company settings, based on passed parameters. If a positive match to a company entity in our system is made based on passed parameters and the logic described below, list of the company's available configuration IDs and their respective titles is returned.Each company in the company tree hierarchy can be configured with up to three additional external IDs on top of internal ID (see screenshot below). This method allows to look up the internal ID of the company based on one of these external IDs: TSPM ID, SMID ID or an ID of the client in external system (a.k.a. OBT ID). The TSPM ID can also be derived based on the provided TSPM Traveler ID.",
        "executor_category": "Generic",
        "executor_category_group": "Generic",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-d42b36950c-tshapiv20.apiary-mock.com/get_configurations/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "api_key",
                "value": "",
                "description": "Public key, provided by BCD Travel API team Example: testkey.",
                "req": false
            },
            {
                "key": "customer_ip",
                "value": "",
                "description": " IP address of a user, as captured by the customer\u2019s integration. Ensure your integration passes the user\u2019s IP, not your own. This value helps determine user's location for fraud recovery and other analytics. Example: 192.168.31.116.",
                "req": false
            },
            {
                "key": "entity_id",
                "value": "",
                "description": "Internal ID of the company if known. Example: 6.",
                "req": false
            },
            {
                "key": "fallback_entity_id",
                "value": "",
                "description": " Internal ID of a default company that will be returned in the response should we be unable to find single company based on other request parameters (e.g. 25). Example: 42904.",
                "req": false
            },
            {
                "key": "locale",
                "value": "",
                "description": "Forces system to return data in other languages if available. Defaults to en_US if not passed. Example: en_US.",
                "req": false
            },
            {
                "key": "nonce",
                "value": "",
                "description": " A randomly generated string of your choice. Ensure it is unique to each request with same timestamp within 5 minute interval and no more than 32 characters long. Maximum value length is 32. Example: 1543353502645.",
                "req": false
            },
            {
                "key": "obt_company_id",
                "value": "",
                "description": "OBTID (a.k.a. \"OBT Client ID\", e.g. 12345). Example: 12345.",
                "req": false
            },
            {
                "key": "pnr_id",
                "value": "",
                "description": " Existing PNR identifier that is to be used for the reservation. Alphanumeric 6 characters. If present, system will attempt to retrieve this PNR using GDS settings of the located company ID (if any). If attempt is not successful, HTTP 400 error will be returned. Example: W9WMYP.",
                "req": false
            },
            {
                "key": "session_id",
                "value": "",
                "description": " Customer generated identifier of user's session. Do not use real user's session id as it will be replayed back in the API response. Reuse this identifier for all requests by the same user. Including this value makes subsequent troubleshooting and audit easier, as it explicitly links together requests for individual users. <,>,& characters are not allowed. Example: 71IxqHT8mgMe5ohsZ25e5P.",
                "req": false
            },
            {
                "key": "smid_company_id",
                "value": "",
                "description": "SMID (a.k.a. \"Security Manager ID\", e.g. 99991)). Example: SMID.14881.",
                "req": false
            },
            {
                "key": "system",
                "value": "",
                "description": "Certain things may be configured and subsequently returned very differently based on the booking channel. This attribute tells the system which one of the currently supported channels the data is being requested for. Please inquire which booking channel your integration should use for all requests when you obtain your API key. Example: obt.",
                "req": false
            },
            {
                "key": "timestamp",
                "value": "",
                "description": "Valid current UNIX timestamp in seconds. Example: 1388774110.",
                "req": false
            },
            {
                "key": "traveler_email",
                "value": "",
                "description": "Pass the url-encoded e-mail of the traveler to look up against the TSPM system. Maximum length of the local part (before \"@\") is 50 characters. Example: johnsmith%40example.com.",
                "req": false
            },
            {
                "key": "tspm_company_id",
                "value": "",
                "description": "TCP (a.k.a. \"TSPM EntityID\", e.g. 20.54521). Example: 20.14881.",
                "req": false
            },
            {
                "key": "tspm_traveler_id",
                "value": "",
                "description": "If traveler's profile exists in TSPM and the TSPM ID of that traveler is known, it is preferable to pass this TSPM ID in order for the system to correctly match configuration for the current traveler/trip. If it is not passed, system will attempt to locate the TSPM profile based on the traveler's e-mail. Example: 24.100000037.",
                "req": false
            },
            {
                "key": "user_agent",
                "value": "",
                "description": " Properly encoded customer\u2019s user agent string (required to obtain mobile rates from some providers). For traffic from mobile or desktop apps (as opposed to browser apps), use the following format: {App Name}/{App Version} ({OS} {OS Version}) [APP or MOBILE_APP] (e.g. TripSource/5.0 (iOS 10_10_3) MOBILE_APP). Note: Required to get discounted mobile rates Example: Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685526838551,
        "lastModifiedTime": 1685598156738,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "configurations": [
                        {
                            "id": 500000006,
                            "title": "VIP"
                        },
                        {
                            "id": 6,
                            "title": "Dunder Mifflin AMADEUS"
                        },
                        {
                            "id": 100000006,
                            "title": "guest"
                        }
                    ],
                    "customer_ip": "127.0.0.1",
                    "errors": [],
                    "locale": "en_US",
                    "session_id": "12334556723",
                    "user_agent": "MOBAPICLIENTv1"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95552,
        "executor_type": "THIRDPARTY",
        "executor_name": "getcompanysettings",
        "executor_version": "v1",
        "executor_display_name": "get_company_settings v2",
        "executor_description": "Retrieves a subset of company settings as stored in the admin panel, based on company ID and booking channel. If company ID is not present in the system, returns HTTP Status 404.",
        "executor_category": "Generic",
        "executor_category_group": "Generic",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-d42b36950c-tshapiv20.apiary-mock.com/get_company_settings/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "api_key",
                "value": "",
                "description": "Public key, provided by BCD Travel API team Example: testkey.",
                "req": false
            },
            {
                "key": "configuration_id",
                "value": "",
                "description": " In order for us to return data in compliance with settings defined for each client configuration, we need to identify the client configuration for this request. This parameter represents Internal Configuration ID as returned in get_configurations. Example: 3500000023.",
                "req": false
            },
            {
                "key": "customer_ip",
                "value": "",
                "description": " IP address of a user, as captured by the customer\u2019s integration. Ensure your integration passes the user\u2019s IP, not your own. This value helps determine user's location for fraud recovery and other analytics. Example: 192.168.31.116.",
                "req": false
            },
            {
                "key": "entity_id",
                "value": "",
                "description": "This field is deprecated and will be removed in future versions. Use configuration_id instead. Entity_id is required if configuration_id is not passed. In order for us to return data in compliance with settings defined for each client company, we need to identify the client company for this request. This parameter represents Internal Company ID as shown in Admin Panel. Example: 23.",
                "req": false
            },
            {
                "key": "locale",
                "value": "",
                "description": "Forces system to return data in other languages if available. Defaults to en_US if not passed. Example: en_US.",
                "req": false
            },
            {
                "key": "nonce",
                "value": "",
                "description": " A randomly generated string of your choice. Ensure it is unique to each request with same timestamp within 5 minute interval and no more than 32 characters long. Maximum value length is 32. Example: 1543353502645.",
                "req": false
            },
            {
                "key": "session_id",
                "value": "",
                "description": "ustomer generated identifier of user's session. Do not use real user's session id as it will be replayed back in the API response. Reuse this identifier for all requests by the same user. Including this value makes subsequent troubleshooting and audit easier, as it explicitly links together requests for individual users. <,>,& characters are not allowed. Example: 71IxqHT8mgMe5ohsZ25e5P.",
                "req": false
            },
            {
                "key": "system",
                "value": "",
                "description": "Certain things may be configured and subsequently returned very differently based on the booking channel. This attribute tells the system which one of the currently supported channels the data is being requested for. Please inquire which booking channel your integration should use for all requests when you obtain your API key.",
                "req": false
            },
            {
                "key": "timestamp",
                "value": "",
                "description": " Valid current UNIX timestamp in seconds. Example: 1388774110.",
                "req": false
            },
            {
                "key": "user_agent",
                "value": "",
                "description": " Properly encoded customer\u2019s user agent string (required to obtain mobile rates from some providers). For traffic from mobile or desktop apps (as opposed to browser apps), use the following format: {App Name}/{App Version} ({OS} {OS Version}) [APP or MOBILE_APP] (e.g. TripSource/5.0 (iOS 10_10_3) MOBILE_APP). Note: Required to get discounted mobile rates Example: Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685528097961,
        "lastModifiedTime": 1685598225835,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "crd_air_questions": [
                        {
                            "choices": [
                                {
                                    "code": "INT",
                                    "description": "Internal Meeting"
                                },
                                {
                                    "code": "CON",
                                    "description": "Conference/Seminar/Training"
                                }
                            ],
                            "code": "MOBILE.COMMON.CRD.purpose_of_trip",
                            "conditions": [],
                            "default_employee_text": null,
                            "default_guest_text": null,
                            "default_select_dynamic": null,
                            "default_text_dynamic": null,
                            "help_text": null,
                            "max_length": null,
                            "min_length": null,
                            "name": "Purpose of Trip",
                            "required": true,
                            "type": "select",
                            "validation_type": "text"
                        },
                        {
                            "choices": [],
                            "code": "MOBILE.AIR.CRD.company_code",
                            "conditions": [
                                "out_of_policy",
                                "pnr"
                            ],
                            "default_employee_text": "888",
                            "default_guest_text": null,
                            "default_select_dynamic": null,
                            "default_text_dynamic": "[24.PDAT].[PROJECT]",
                            "help_text": null,
                            "max_length": 6,
                            "min_length": 3,
                            "name": "Company Code",
                            "required": false,
                            "type": "text",
                            "validation_type": "nonascii"
                        }
                    ],
                    "crd_cars_questions": [
                        {
                            "choices": [
                                {
                                    "code": "INT",
                                    "description": "Internal Meeting"
                                },
                                {
                                    "code": "CON",
                                    "description": "Conference/Seminar/Training"
                                }
                            ],
                            "code": "MOBILE.COMMON.CRD.purpose_of_trip",
                            "conditions": [],
                            "default_employee_text": null,
                            "default_guest_text": null,
                            "default_select_dynamic": null,
                            "default_text_dynamic": null,
                            "help_text": null,
                            "max_length": null,
                            "min_length": null,
                            "name": "Purpose of Trip",
                            "required": true,
                            "type": "select",
                            "validation_type": "text"
                        },
                        {
                            "choices": [
                                {
                                    "code": "INT",
                                    "description": "Internal Meeting"
                                },
                                {
                                    "code": "CON",
                                    "description": "Conference/Seminar/Training"
                                }
                            ],
                            "code": "MOBILE.CARS.CRD.purpose_of_trip",
                            "conditions": [
                                "card"
                            ],
                            "default_employee_text": null,
                            "default_guest_text": null,
                            "default_select_dynamic": null,
                            "default_text_dynamic": null,
                            "help_text": null,
                            "max_length": null,
                            "min_length": null,
                            "name": "Purpose of Trip",
                            "required": true,
                            "type": "select",
                            "validation_type": "text"
                        }
                    ],
                    "crd_hotels_questions": [
                        {
                            "choices": [
                                {
                                    "code": "INT",
                                    "description": "Internal Meeting"
                                },
                                {
                                    "code": "CON",
                                    "description": "Conference/Seminar/Training"
                                }
                            ],
                            "code": "MOBILE.COMMON.CRD.purpose_of_trip",
                            "conditions": [],
                            "default_employee_text": null,
                            "default_guest_text": null,
                            "default_select_dynamic": null,
                            "default_text_dynamic": null,
                            "help_text": null,
                            "max_length": null,
                            "min_length": null,
                            "name": "Purpose of Trip",
                            "required": true,
                            "type": "select",
                            "validation_type": "text"
                        },
                        {
                            "choices": [],
                            "code": "MOBILE.HOTELS.CRD.company_code",
                            "conditions": [
                                "guarantee",
                                "in_policy",
                                "card"
                            ],
                            "default_employee_text": "888",
                            "default_guest_text": null,
                            "default_select_dynamic": null,
                            "default_text_dynamic": "[24.PDAT].[PROJECT]",
                            "help_text": null,
                            "max_length": 6,
                            "min_length": 3,
                            "name": "Company Code",
                            "required": false,
                            "type": "text",
                            "validation_type": "nonascii"
                        }
                    ],
                    "crd_settings": [
                        {
                            "allow_special_characters": null,
                            "choices": [
                                {
                                    "code": "INT",
                                    "description": "Internal Meeting"
                                },
                                {
                                    "code": "CON",
                                    "description": "Conference/Seminar/Training"
                                }
                            ],
                            "code": "MOBILE.COMMON.CRD.purpose_of_trip",
                            "conditions": [],
                            "default_employee_text": null,
                            "default_guest_text": null,
                            "default_select_dynamic": null,
                            "default_text_dynamic": null,
                            "help_text": null,
                            "max_length": null,
                            "min_length": null,
                            "name": "Purpose of Trip",
                            "required": true,
                            "type": "select",
                            "validation_type": "text"
                        },
                        {
                            "allow_special_characters": true,
                            "choices": [],
                            "code": "MOBILE.HOTELS.CRD.company_code",
                            "conditions": [
                                "guarantee",
                                "in_policy",
                                "card"
                            ],
                            "default_employee_text": "888",
                            "default_guest_text": null,
                            "default_select_dynamic": null,
                            "default_text_dynamic": "[24.PDAT].[PROJECT]",
                            "help_text": null,
                            "max_length": 6,
                            "min_length": 3,
                            "name": "Company Code",
                            "required": false,
                            "type": "text",
                            "validation_type": "text"
                        }
                    ],
                    "customer_ip": "1.1.1.1",
                    "default_currency": "EUR",
                    "default_date_format": "DD/MM/YYYY",
                    "default_distance_units": "KM",
                    "default_language": "de",
                    "errors": [],
                    "gcn_id": "8090",
                    "hotel_loyalty_programs": [
                        {
                            "code": "Y48",
                            "include_by_default": false,
                            "name": "Marriott Rewards Member"
                        }
                    ],
                    "locale": "en_US",
                    "primary_gds": "amadeus",
                    "sap_account_number": "0123456789",
                    "session_id": "7BCEbPhxs9hCS5fUXhI9ox",
                    "smid_id": "6518000",
                    "tspm_id": "20.8579",
                    "user_agent": "MOBILEAPP"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95557,
        "executor_type": "THIRDPARTY",
        "executor_name": "geterrors",
        "executor_version": "v1",
        "executor_display_name": "get_errors v2",
        "executor_description": "Retrieves a list of all possible errors that our API can return in its response as a reference or for use in translation tables.",
        "executor_category": "Generic",
        "executor_category_group": "Generic",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-d42b36950c-tshapiv20.apiary-mock.com/get_errors/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "api_key",
                "value": "",
                "description": " Public key, provided by BCD Travel API team Example: testkey.",
                "req": false
            },
            {
                "key": "customer_ip",
                "value": "",
                "description": " IP address of a user, as captured by the customer\u2019s integration. Ensure your integration passes the user\u2019s IP, not your own. This value helps determine user's location for fraud recovery and other analytics. Example: 192.168.31.116.",
                "req": false
            },
            {
                "key": "locale",
                "value": "",
                "description": "Forces system to return data in other languages if available. Defaults to en_US if not passed. Example: en_US.",
                "req": false
            },
            {
                "key": "nonce",
                "value": "",
                "description": " A randomly generated string of your choice. Ensure it is unique to each request with same timestamp within 5 minute interval and no more than 32 characters long. Maximum value length is 32. Example: 1543353502645.",
                "req": false
            },
            {
                "key": "session_id",
                "value": "",
                "description": "ustomer generated identifier of user's session. Do not use real user's session id as it will be replayed back in the API response. Reuse this identifier for all requests by the same user. Including this value makes subsequent troubleshooting and audit easier, as it explicitly links together requests for individual users. <,>,& characters are not allowed. Example: 71IxqHT8mgMe5ohsZ25e5P.",
                "req": false
            },
            {
                "key": "timestamp",
                "value": "",
                "description": " Valid current UNIX timestamp in seconds. Example: 1388774110.",
                "req": false
            },
            {
                "key": "user_agent",
                "value": "",
                "description": " Properly encoded customer\u2019s user agent string (required to obtain mobile rates from some providers). For traffic from mobile or desktop apps (as opposed to browser apps), use the following format: {App Name}/{App Version} ({OS} {OS Version}) [APP or MOBILE_APP] (e.g. TripSource/5.0 (iOS 10_10_3) MOBILE_APP). Note: Required to get discounted mobile rates Example: Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685528460169,
        "lastModifiedTime": 1685598274459,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "customer_ip": "1.1.1.1",
                    "locale": "en_US",
                    "session_id": "7MJiByUGsrjDeaVvAhXwyC",
                    "user_agent": "MOBAPICLIENTv1",
                    "errors": [
                        {
                            "code": 1000000,
                            "description": "Validation error"
                        },
                        {
                            "code": 1001000,
                            "description": "Incorrect API method"
                        },
                        {
                            "code": 1002000,
                            "description": "Unsupported API version"
                        },
                        {
                            "code": 5005000,
                            "description": "Rate is no longer available"
                        },
                        {
                            "code": 5006000,
                            "description": "Provider processing error"
                        }
                    ],
                    "fields": [
                        {
                            "code": 1,
                            "description": "Alternative entity ID",
                            "name": "alt_company_id"
                        },
                        {
                            "code": 2,
                            "description": "API key",
                            "name": "api_key"
                        },
                        {
                            "code": 3,
                            "description": "Booker email",
                            "name": "booker_email"
                        },
                        {
                            "code": 107,
                            "description": "Special Information",
                            "name": "special_information"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95554,
        "executor_type": "THIRDPARTY",
        "executor_name": "getprofileinfo",
        "executor_version": "v1",
        "executor_display_name": "get_profile_info v2",
        "executor_description": "getprofileinfo",
        "executor_category": "Generic",
        "executor_category_group": "Generic",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-d42b36950c-tshapiv20.apiary-mock.com/get_profile_info/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "api_key",
                "value": "",
                "description": "Public key, provided by BCD Travel API team Example: testkey.",
                "req": false
            },
            {
                "key": "configuration_id",
                "value": "",
                "description": " In order for us to return data in compliance with settings defined for each client configuration, we need to identify the client configuration for this request. This parameter represents Internal Configuration ID as returned in get_configurations. Example: 3500000023.",
                "req": false
            },
            {
                "key": "customer_ip",
                "value": "",
                "description": " IP address of a user, as captured by the customer\u2019s integration. Ensure your integration passes the user\u2019s IP, not your own. This value helps determine user's location for fraud recovery and other analytics. Example: 192.168.31.116.",
                "req": false
            },
            {
                "key": "entity_id",
                "value": "",
                "description": "This field is deprecated and will be removed in future versions. Use configuration_id instead. Entity_id is required if configuration_id is not passed. In order for us to return data in compliance with settings defined for each client company, we need to identify the client company for this request. This parameter represents Internal Company ID as shown in Admin Panel. Example: 23.",
                "req": false
            },
            {
                "key": "locale",
                "value": "",
                "description": "Forces system to return data in other languages if available. Defaults to en_US if not passed. Example: en_US.",
                "req": false
            },
            {
                "key": "nonce",
                "value": "",
                "description": " A randomly generated string of your choice. Ensure it is unique to each request with same timestamp within 5 minute interval and no more than 32 characters long. Maximum value length is 32. Example: 1543353502645.",
                "req": false
            },
            {
                "key": "session_id",
                "value": "",
                "description": "ustomer generated identifier of user's session. Do not use real user's session id as it will be replayed back in the API response. Reuse this identifier for all requests by the same user. Including this value makes subsequent troubleshooting and audit easier, as it explicitly links together requests for individual users. <,>,& characters are not allowed. Example: 71IxqHT8mgMe5ohsZ25e5P.",
                "req": false
            },
            {
                "key": "system",
                "value": "",
                "description": "Certain things may be configured and subsequently returned very differently based on the booking channel. This attribute tells the system which one of the currently supported channels the data is being requested for. Please inquire which booking channel your integration should use for all requests when you obtain your API key.",
                "req": false
            },
            {
                "key": "timestamp",
                "value": "",
                "description": " Valid current UNIX timestamp in seconds. Example: 1388774110.",
                "req": false
            },
            {
                "key": "traveler_email",
                "value": "",
                "description": "Pass url-encoded e-mail of the traveler to look up against external profile system. If there is a match, the response will contain profile data that can be used for booking. Maximum length of the local part (before \"@\") is 50 characters.",
                "req": false
            },
            {
                "key": "user_agent",
                "value": "",
                "description": " Properly encoded customer\u2019s user agent string (required to obtain mobile rates from some providers). For traffic from mobile or desktop apps (as opposed to browser apps), use the following format: {App Name}/{App Version} ({OS} {OS Version}) [APP or MOBILE_APP] (e.g. TripSource/5.0 (iOS 10_10_3) MOBILE_APP). Note: Required to get discounted mobile rates Example: Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685528304541,
        "lastModifiedTime": 1685598254083,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "customer_ip": "1.1.1.1",
                    "errors": [],
                    "locale": "en_US",
                    "session_id": "7MJiByUGsrjDeaVvAhXwyC",
                    "traveler_profile": {
                        "email": "johnsmith@example.com",
                        "first_name": "John",
                        "last_name": "Smith",
                        "loyalty_programs": [
                            {
                                "loyalty_card_chain_code": "OM",
                                "loyalty_card_chain_name": "Omni Hotels",
                                "loyalty_card_number": "8770605093",
                                "loyalty_card_program_name": "All Omni Hotels",
                                "loyalty_card_source": "tspm"
                            },
                            {
                                "loyalty_card_chain_code": "RT",
                                "loyalty_card_chain_name": "Accor Hotels",
                                "loyalty_card_number": "3081032693950892",
                                "loyalty_card_program_name": "Accor Hotel Group",
                                "loyalty_card_source": "tspm"
                            }
                        ],
                        "payment_information": {
                            "credit_cards": [
                                {
                                    "card_index": 1,
                                    "card_month": "02",
                                    "card_type": "VI",
                                    "card_year": "2020",
                                    "last_four_digits": "1234",
                                    "name_on_card": "John Smith"
                                }
                            ]
                        },
                        "room_smoking_preference": "N",
                        "salutation": "Mr",
                        "special_requests": "King Size"
                    },
                    "user_agent": "MOBAPICLIENTv1"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95727,
        "executor_type": "THIRDPARTY",
        "executor_name": "getratedetails",
        "executor_version": "v2",
        "executor_display_name": "get_rate_details",
        "executor_description": "Retrieves a detailed breakdown of the rate.",
        "executor_category": "Cars",
        "executor_category_group": "Cars",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-a03b85d2d4-tshapiv20.apiary-mock.com/cars/get_rate_details/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "api_key",
                "value": "",
                "description": " Public key, provided by BCD Travel API team Example: testkey.",
                "req": false
            },
            {
                "key": "configuration_id",
                "value": "",
                "description": "In order for us to return data in compliance with settings defined for each client configuration, we need to identify the client configuration for this request. This parameter represents Internal Configuration ID as returned in get_configurations. Example: 3500000023.",
                "req": false
            },
            {
                "key": "customer_ip",
                "value": "",
                "description": " IP address of a user, as captured by the customer\u2019s integration. Ensure your integration passes the user\u2019s IP, not your own. This value helps determine user's location for fraud recovery and other analytics. Example: 192.168.31.116.",
                "req": false
            },
            {
                "key": "entity_id",
                "value": "",
                "description": " This field is deprecated and will be removed in future versions. Use configuration_id instead. Entity_id is required if configuration_id is not passed. In order for us to return data in compliance with settings defined for each client company, we need to identify the client company for this request. This parameter represents Internal Company ID as shown in Admin Panel. Example: 23.",
                "req": false
            },
            {
                "key": "locale",
                "value": "",
                "description": "Forces system to return data in other languages if available. Defaults to en_US if not passed. Example: en_US.",
                "req": false
            },
            {
                "key": "nonce",
                "value": "",
                "description": " A randomly generated string of your choice. Ensure it is unique to each request with same timestamp within 5 minute interval and no more than 32 characters long. Maximum value length is 32. Example: 1543353502645.",
                "req": false
            },
            {
                "key": "rate_key",
                "value": "",
                "description": " Unique identifier of the rate to use in the booking process. Example: ['63fnz3ZcBJVCnAuHwKBpawe0mbq_vK5xjCULjAZD3kgvw5dO_TheRVrORn1kZhe53eEg0Jl_pisgJvKf51-GJzaDxfGkldODpYU_GNOiTjMezo7veOBxAPbPcavBjyxsQLt_4OU3uuVVK2gs0D6KYOIZMPfC7q3hpWLW29coT-jqhjbc9h3x84PShgfNF8yWz05E9H_l0NBY2gqVHUIIEbb8Y_0WbtLpiWmS6kgW-kR1mkCGfnqThb5evyQrKw60OO1eIc7C9zW2fFw-P7jxXcC9Abgus6LgsAvGPSFXcQNHAcOb6OmZYEcEtmPnBLB2Y4G7g0CBayT1rhnKamlpIPojYLCuyy8dtkdnrFacvii0CaIfy2JcWjPvf7_YUjVtZJ6qbQwi6Pu_SL3Isu4OyU4UtA4JwU4dmXQmWT-rOuGY9zMVwiRfVQ-IN7jsoQTBVvtOwMVv0GcQa00OVLlLPCwIDewm9mDpIYtfB-jQ68drLHWRK0pXEs0QHf0gbRcaWUGD3wvSCl7bNC6ivM5AYxzu'].",
                "req": false
            },
            {
                "key": "session_id",
                "value": "",
                "description": "Customer generated identifier of user's session. Do not use real user's session id as it will be replayed back in the API response. Reuse this identifier for all requests by the same user. Including this value makes subsequent troubleshooting and audit easier, as it explicitly links together requests for individual users. <,>,& characters are not allowed. Example: 71IxqHT8mgMe5ohsZ25e5P.",
                "req": false
            },
            {
                "key": "system",
                "value": "",
                "description": " Certain things may be configured and subsequently returned very differently based on the booking channel. This attribute tells the system which one of the currently supported channels the data is being requested for. Please inquire which booking channel your integration should use for all requests when you obtain your API key. Example: obt.",
                "req": false
            },
            {
                "key": "timestamp",
                "value": "",
                "description": "Valid current UNIX timestamp in seconds. Example: 1388774110.",
                "req": false
            },
            {
                "key": "user_agent",
                "value": "",
                "description": " Properly encoded customer\u2019s user agent string (required to obtain mobile rates from some providers). For traffic from mobile or desktop apps (as opposed to browser apps), use the following format: {App Name}/{App Version} ({OS} {OS Version}) [APP or MOBILE_APP] (e.g. TripSource/5.0 (iOS 10_10_3) MOBILE_APP). Note: Required to get discounted mobile rates Example: Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685603083765,
        "lastModifiedTime": 1685604404651,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Successful Request",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "customer_ip": "192.168.31.116",
                    "errors": [],
                    "locale": "en_US",
                    "rate": {
                        "bcd_preference_tier": 1,
                        "bcd_preferred_car_type": false,
                        "bcd_preferred_vendor": false,
                        "car": {
                            "doors": 4,
                            "model": "Ford Fusion Hybrid",
                            "seats": 6,
                            "type": "ICAH"
                        },
                        "commission": {
                            "amount": 20.35,
                            "percent": 3
                        },
                        "currency": "UAH",
                        "dropoff": {
                            "address": {
                                "city": "SAN BRUNO",
                                "country": "US",
                                "fax": "123-456-7890",
                                "phone": "123-456-7890",
                                "postal": "94583",
                                "state": "CA",
                                "street_address": "1198 EL CAMINO REAL"
                            },
                            "airport": {
                                "code": "BOB",
                                "shuttle": "Call Rental company for pick-up.",
                                "terminals": []
                            },
                            "coordinates": {
                                "latitude": -16.53308,
                                "longitude": -151.73525
                            },
                            "distance": {
                                "units": "KM",
                                "value": 3.21
                            },
                            "hours": {
                                "dropoff": "08:30 - 17:00",
                                "pickup": "08:30 - 17:00"
                            },
                            "location_code": "BOBC02"
                        },
                        "freetext_info": "This is a really special rate just for you! If you are under 25 you will have to pay more!",
                        "included_coverage": [
                            {
                                "code": "PAI",
                                "name": "PERSONAL ACCIDENT INSURANCE: 3.12EUR Per day"
                            }
                        ],
                        "is_bcd_cd_rate": true,
                        "is_cd_rate": true,
                        "is_id_rate": false,
                        "optional_coverage": [
                            {
                                "code": "PAI",
                                "name": "PERSONAL ACCIDENT INSURANCE: 3.12EUR Per day"
                            }
                        ],
                        "original_currency": "USD",
                        "original_taxes": 23.45,
                        "original_total": 120,
                        "out_of_policy": false,
                        "out_of_policy_reason_codes": [],
                        "paid_policy": [],
                        "payment_options": [
                            "card",
                            "evoucher",
                            "evoucher_card",
                            "evoucher_voucher",
                            "no_payment",
                            "voucher",
                            "vpa_payment"
                        ],
                        "pickup": {
                            "address": {
                                "city": "SAN BRUNO",
                                "country": "US",
                                "fax": "123-456-7890",
                                "phone": "123-456-7890",
                                "postal": "94583",
                                "state": "CA",
                                "street_address": "1198 EL CAMINO REAL"
                            },
                            "airport": {
                                "code": "BOB",
                                "shuttle": "Call Rental company for pick-up.",
                                "terminals": []
                            },
                            "coordinates": {
                                "latitude": -16.53308,
                                "longitude": -151.73525
                            },
                            "distance": {
                                "units": "KM",
                                "value": 3.21
                            },
                            "hours": {
                                "dropoff": "08:30 - 17:00",
                                "pickup": "08:30 - 17:00"
                            },
                            "location_code": "BOBC02"
                        },
                        "pictures": [
                            {
                                "size": {
                                    "height": 0,
                                    "width": 0
                                },
                                "url": ""
                            }
                        ],
                        "preference_tier": 1,
                        "preferred_car_type": false,
                        "preferred_vendor": false,
                        "provider": "amadeus",
                        "rate_code": "BDI",
                        "rate_key": "63fnz3ZcBJVCnAuHwKBpawe0mbq_vK5xjCULjAZD3kgvw5dO_TheRVrORn1kZhe53eEg0Jl_pisgJvKf51-GJzaDxfGkldODpYU_GNOiTjMezo7veOBxAPbPcavBjyxsQLt_4OU3uuVVK2gs0D6KYOIZMPfC7q3hpWLW29coT-jqhjbc9h3x84PShgfNF8yWz05E9H_l0NBY2gqVHUIIEbb8Y_0WbtLpiWmS6kgW-kR1mkCGfnqThb5evyQrKw60OO1eIc7C9zW2fFw-P7jxXcC9Abgus6LgsAvGPSFXcQNHAcOb6OmZYEcEtmPnBLB2Y4G7g0CBayT1rhnKamlpIPojYLCuyy8dtkdnrFacvii0CaIfy2JcWjPvf7_YUjVtZJ6qbQwi6Pu_SL3Isu4OyU4UtA4JwU4dmXQmWT-rOuGY9zMVwiRfVQ-IN7jsoQTBVvtOwMVv0GcQa00OVLlLPCwIDewm9mDpIYtfB-jQ68drLHWRK0pXEs0QHf0gbRcaWUGD3wvSCl7bNC6ivM5AYxzu",
                        "rate_plan": {
                            "amount": 3200,
                            "distance_included": {
                                "distance_amount": 0,
                                "distance_unit": "KM",
                                "unlimited": true
                            },
                            "extra_day": {
                                "amount": 25.4,
                                "distance_included": {
                                    "distance_amount": 0,
                                    "distance_unit": "KM",
                                    "unlimited": true
                                },
                                "extra_distance": {
                                    "amount": 21,
                                    "distance_unit": "KM"
                                }
                            },
                            "extra_distance": {
                                "amount": 21,
                                "distance_unit": "KM"
                            },
                            "extra_hour": {
                                "amount": 25.4,
                                "distance_included": {
                                    "distance_amount": 0,
                                    "distance_unit": "KM",
                                    "unlimited": true
                                },
                                "extra_distance": {
                                    "amount": 21,
                                    "distance_unit": "KM"
                                }
                            },
                            "type": "Daily"
                        },
                        "special_equipment": [
                            {
                                "code": "CSI",
                                "description": "Some extra long information... If you want this special equipment you will have to call on the phone 48 hours ahead of time...",
                                "name": "Infant child seat: 20.00USD Per rental"
                            }
                        ],
                        "surcharges": [
                            {
                                "amount": 14.35,
                                "name": "Airport fee: 30.00USD Per rental"
                            }
                        ],
                        "taxes": 0,
                        "total": 7231,
                        "vendor": {
                            "code": "ZI",
                            "name": "Avis"
                        }
                    },
                    "session_id": "40Lpcxqzu8X2z3YoZEHnEV",
                    "user_agent": "Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95732,
        "executor_type": "THIRDPARTY",
        "executor_name": "getreservationslistCars",
        "executor_version": "v2",
        "executor_display_name": "get_reservations_list",
        "executor_description": "Retrieves a list of the active, completed, or cancelled reservations of a given traveler.",
        "executor_category": "Cars",
        "executor_category_group": "Cars",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-a03b85d2d4-tshapiv20.apiary-mock.com/cars/get_reservations_list/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "api_key",
                "value": "",
                "description": "Public key, provided by BCD Travel API team Example: testkey.",
                "req": false
            },
            {
                "key": "configuration_id",
                "value": "",
                "description": "This parameter is accepted for backward compatibility, but is completely ignored. Example: 3500000023.",
                "req": false
            },
            {
                "key": "customer_ip",
                "value": "",
                "description": " IP address of a user, as captured by the customer\u2019s integration. Ensure your integration passes the user\u2019s IP, not your own. This value helps determine user's location for fraud recovery and other analytics. Example: 192.168.31.116.",
                "req": false
            },
            {
                "key": "entity_id",
                "value": "",
                "description": "This parameter is accepted for backward compatibility, but is completely ignored. Example: 23.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": " Maximum number of reservations to return on this particular call. If a user has 45 bookings but limit is set to 20 and offset is not set, the first 20 reservations out of the 45 will be returned. If offset is set to 21, this will return the next 20 (#21-40). If offsest is set to 41 and limit is still 20, we will receive the last few reservations in the total list (#41-45). limit value can be anywhere between 1 and 500. Example: 20. Default: 20.",
                "req": false
            },
            {
                "key": "locale",
                "value": "",
                "description": " Forces system to return data in other languages if available. Defaults to en_US if not passed. Example: en_US.Show Possible Values",
                "req": false
            },
            {
                "key": "nonce",
                "value": "",
                "description": " A randomly generated string of your choice. Ensure it is unique to each request with same timestamp within 5 minute interval and no more than 32 characters long. Maximum value length is 32. Example: 1543353502645.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "The n'th booking in the total list from which the results in this call will start. If a user has 45 bookings but limit is set to 20 and offset is not set, the first 20 reservations out of the 45 will be returned. If offset is set to 21, this will return the next 20 (#21-40). If offsest is set to 41 and limit is still 20, we will receive the last few reservations in the total list (#41-45). Minimum value of offset is 0. Example: 21.",
                "req": false
            },
            {
                "key": "session_id",
                "value": "",
                "description": " Customer generated identifier of user's session. Do not use real user's session id as it will be replayed back in the API response. Reuse this identifier for all requests by the same user. Including this value makes subsequent troubleshooting and audit easier, as it explicitly links together requests for individual users. <,>,& characters are not allowed. Example: 71IxqHT8mgMe5ohsZ25e5P.",
                "req": false
            },
            {
                "key": "status",
                "value": "",
                "description": "This field allows the user to filter the returned bookings to those with a status of \"active\", \"canceled\", or \"past\". Example: active.",
                "req": false
            },
            {
                "key": "system",
                "value": "",
                "description": "Certain things may be configured and subsequently returned very differently based on the booking channel. This attribute tells the system which one of the currently supported channels the data is being requested for. Please inquire which booking channel your integration should use for all requests when you obtain your API key. Example: obt.",
                "req": false
            },
            {
                "key": "timestamp",
                "value": "",
                "description": "Valid current UNIX timestamp in seconds. Example: 1388774110.",
                "req": false
            },
            {
                "key": "traveler_email",
                "value": "",
                "description": "Email address of traveler. Maximum length of the local part (before \"@\") is 50 characters. Example: someone@gmail.com.",
                "req": false
            },
            {
                "key": "user_agent",
                "value": "",
                "description": "Properly encoded customer\u2019s user agent string (required to obtain mobile rates from some providers). For traffic from mobile or desktop apps (as opposed to browser apps), use the following format: {App Name}/{App Version} ({OS} {OS Version}) [APP or MOBILE_APP] (e.g. TripSource/5.0 (iOS 10_10_3) MOBILE_APP). Note: Required to get discounted mobile rates Example: Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685604223125,
        "lastModifiedTime": 1685604328457,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "bookings": [
                        {
                            "airplus_dbi_success": false,
                            "booker": {
                                "email": "aguy@gmail.com",
                                "first_name": "John",
                                "last_name": "Smith",
                                "oid": "ABCDEFGHI",
                                "sign": "ABC123",
                                "tspm_id": "24.123"
                            },
                            "booking_remarks_error": "null",
                            "cancelled_at": "2018-11-28T10:51:35.553000+00:00",
                            "cancelled_by_user": {
                                "email": "aguy@gmail.com",
                                "first_name": "John",
                                "last_name": "Smith",
                                "oid": "ABCDEFGHI",
                                "sign": "ABC123",
                                "tspm_id": "24.123"
                            },
                            "case_number": "1234",
                            "company": {
                                "id": 0,
                                "name": "",
                                "tspm_id": "null"
                            },
                            "configuration_id": 0,
                            "container_id": "1234",
                            "created_at": "2018-11-28T10:51:35.553000+00:00",
                            "gds_profile": {
                                "gds_name": "",
                                "iata_code": "null",
                                "office_id": ""
                            },
                            "gds_segment": {
                                "confirmation_number": "123456ABC",
                                "id": "",
                                "original_total": 0,
                                "special_equipment": [
                                    {
                                        "code": "NAV",
                                        "name": "Navigation system"
                                    }
                                ],
                                "special_equipment_original_total": 0,
                                "special_equipment_total": 0,
                                "status": "",
                                "total": 0,
                                "voucher_error_message": "null",
                                "voucher_number": "null"
                            },
                            "payment": {
                                "billing_reference": "ABC123",
                                "credit_card": {
                                    "type": "VI"
                                },
                                "invoice_code": "BV5",
                                "it_number": "ABCD1234",
                                "payment_method": "card",
                                "vpa": {
                                    "bcd_card_pool": false,
                                    "provider": "itelya"
                                }
                            },
                            "pnr": {
                                "id": "",
                                "pnr_created": false
                            },
                            "policy_group_id": 0,
                            "provider": "amadeus",
                            "rate": {
                                "currency": "USD",
                                "dropoff_datetime": "2019-02-27T10:30",
                                "dropoff_location": {
                                    "address": {
                                        "city": "SAN BRUNO",
                                        "country": "US",
                                        "phone": "123-456-7890",
                                        "postal": "94583",
                                        "state": "CA",
                                        "street_address": "1198 EL CAMINO REAL"
                                    },
                                    "airport": {
                                        "code": "BOB",
                                        "terminals": []
                                    },
                                    "coordinates": {
                                        "latitude": -16.53308,
                                        "longitude": -151.73525
                                    },
                                    "location_code": "BOBC02"
                                },
                                "is_bcd_cd_rate": true,
                                "is_cd_rate": true,
                                "is_id_rate": true,
                                "original_currency": "USD",
                                "pickup_datetime": "2019-02-26T10:30",
                                "pickup_location": {
                                    "address": {
                                        "city": "SAN BRUNO",
                                        "country": "US",
                                        "phone": "123-456-7890",
                                        "postal": "94583",
                                        "state": "CA",
                                        "street_address": "1198 EL CAMINO REAL"
                                    },
                                    "airport": {
                                        "code": "BOB",
                                        "terminals": []
                                    },
                                    "coordinates": {
                                        "latitude": -16.53308,
                                        "longitude": -151.73525
                                    },
                                    "location_code": "BOBC02"
                                },
                                "vendor": {
                                    "code": "ZI",
                                    "name": "Avis"
                                }
                            },
                            "remarks_success": false,
                            "status": "",
                            "system": "obt",
                            "traveler": {
                                "email": "aguy@gmail.com",
                                "first_name": "John",
                                "last_name": "Smith",
                                "oid": "ABCDEFGHI",
                                "sign": "ABC123",
                                "tspm_id": "24.123"
                            },
                            "uid": "5bed9314db992881744d1ff3"
                        }
                    ],
                    "customer_ip": "192.168.31.116",
                    "errors": [],
                    "locale": "en_US",
                    "session_id": "40Lpcxqzu8X2z3YoZEHnEV",
                    "user_agent": "Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95729,
        "executor_type": "THIRDPARTY",
        "executor_name": "bookCars",
        "executor_version": "v2",
        "executor_display_name": "book",
        "executor_description": "Books a rental car.",
        "executor_category": "Cars",
        "executor_category_group": "Cars",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://private-anon-a03b85d2d4-tshapiv20.apiary-mock.com/cars/book/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "api_key": "testkey",
                "billing_number": "ABC123",
                "billing_reference": "ABC123",
                "booker_email": "someone@gmail.com",
                "booker_first_name": "Joe",
                "booker_last_name": "Smith",
                "booktrack_id": "ATotallyUniqueString",
                "card_index": "1",
                "client_reportable_data": [
                    {
                        "answer": "HA",
                        "code": "MOBILE.CARS.CRD.car_reason_code"
                    }
                ],
                "configuration_id": 3500000023,
                "credit_card_expiration_month": "03",
                "credit_card_expiration_year": "2023",
                "credit_card_first_name": "john",
                "credit_card_last_name": "smith",
                "credit_card_number": "12345678901234",
                "custom_trip_data": [
                    {
                        "key": "CUSTOM02",
                        "value": "spam"
                    }
                ],
                "customer_ip": "192.168.31.116",
                "entity_id": 23,
                "flight_number": "UA1234",
                "invoice_code": "BV5",
                "it_number": "ABCD1234",
                "locale": "en_US",
                "nonce": "1543353502645",
                "payment_method": "card",
                "pnr_id": "ABC123",
                "rate_key": "63fnz3ZcBJVCnAuHwKBpawe0mbq_vK5xjCULjAZD3kgvw5dO_TheRVrORn1kZhe53eEg0Jl_pisgJvKf51-GJzaDxfGkldODpYU_GNOiTjMezo7veOBxAPbPcavBjyxsQLt_4OU3uuVVK2gs0D6KYOIZMPfC7q3hpWLW29coT-jqhjbc9h3x84PShgfNF8yWz05E9H_l0NBY2gqVHUIIEbb8Y_0WbtLpiWmS6kgW-kR1mkCGfnqThb5evyQrKw60OO1eIc7C9zW2fFw-P7jxXcC9Abgus6LgsAvGPSFXcQNHAcOb6OmZYEcEtmPnBLB2Y4G7g0CBayT1rhnKamlpIPojYLCuyy8dtkdnrFacvii0CaIfy2JcWjPvf7_YUjVtZJ6qbQwi6Pu_SL3Isu4OyU4UtA4JwU4dmXQmWT-rOuGY9zMVwiRfVQ-IN7jsoQTBVvtOwMVv0GcQa00OVLlLPCwIDewm9mIYtfB-jQ68drLHWRK0pXEs0QHf0gbRcaWUGD3wvSCl7bNC6ivM5AYxzu",
                "session_id": "71IxqHT8mgMe5ohsZ25e5P",
                "skip_gds_queuing": false,
                "special_equipment": [],
                "special_information": "I want a blue car",
                "system": "obt",
                "timestamp": 1388774110,
                "traveler_email": "traveler@example.com",
                "traveler_first_name": "Frank",
                "traveler_last_name": "Johnson",
                "tspm_company_id": "20.001",
                "tspm_traveler_id": "24.123",
                "user_agent": "Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36",
                "vpa_card_pool_id": "1234"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685603441839,
        "lastModifiedTime": 1685605703719,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Successful Request",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "booking_uid": "5bed9314db992881744d1ff3",
                    "customer_ip": "192.168.31.116",
                    "errors": [],
                    "locale": "en_US",
                    "session_id": "40Lpcxqzu8X2z3YoZEHnEV",
                    "user_agent": "Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95726,
        "executor_type": "THIRDPARTY",
        "executor_name": "getavailability",
        "executor_version": "v2",
        "executor_display_name": "get_availability",
        "executor_description": "Retrieves a list of available rental cars near a geographic coordinate or airport location.",
        "executor_category": "Cars",
        "executor_category_group": "Cars",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-a03b85d2d4-tshapiv20.apiary-mock.com/cars/get_availability/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "api_key",
                "value": "",
                "description": " Public key, provided by BCD Travel API team Example: testkey.",
                "req": false
            },
            {
                "key": "car_types",
                "value": "",
                "description": "This attribute allows limiting the results to only type of inventory that is matching passed ACRISS code(s). Pass comma-separated list of ACRISS Car Classification Codes. There is a maximum of 5 ACRISS codes allowed per request. Maximum value length is 5. Example: EBAR,ECMR,EDAR,EDMR,FFDR.",
                "req": false
            },
            {
                "key": "cd_numbers",
                "value": "",
                "description": " Allows user to retrieve company discount (CD) rates with a particular car company if they have an CD number. Pass comma-separated list of CD numbers in format {vendor_code}:{id_number}. Only one number per vendor is allowed. Example: EP:40184175,ZI:E6L84U.",
                "req": false
            },
            {
                "key": "configuration_id",
                "value": "",
                "description": "In order for us to return data in compliance with settings defined for each client configuration, we need to identify the client configuration for this request. This parameter represents Internal Configuration ID as returned in get_configurations. Example: 3500000023.",
                "req": false
            },
            {
                "key": "currency",
                "value": "",
                "description": " ISO 4217 formatted code of a currency that rates should be converted to. We support most of the commonly used currencies (see https://openexchangerates.org/currencies for the full list). Example: EUR. Default: EUR.Show Possible Values",
                "req": false
            },
            {
                "key": "customer_ip",
                "value": "",
                "description": " IP address of a user, as captured by the customer\u2019s integration. Ensure your integration passes the user\u2019s IP, not your own. This value helps determine user's location for fraud recovery and other analytics. Example: 192.168.31.116.",
                "req": false
            },
            {
                "key": "dropoff_datetime",
                "value": "",
                "description": " Date and time of the desired rental car drop off. Expected format is \"YYYY-MM-DDThh:mm\". Example: 2019-02-27T10:30.",
                "req": false
            },
            {
                "key": "dropoff_location",
                "value": "",
                "description": "Can be either Latitude and longitude coordinates of the desired dropoff location for the vehicle, or the airport IATA code (i.e., ATL) if strictly interested in vendors with locations at the airport. Defaults to the same value as pickup_location Example: 51.4700,-0.4542.",
                "req": false
            },
            {
                "key": "dropoff_search_radius",
                "value": "",
                "description": " Maximum allowed distance using units passed in search_radius_unit from the desired drop-off location that will be searched for. Example: 5.",
                "req": false
            },
            {
                "key": "entity_id",
                "value": "",
                "description": " This field is deprecated and will be removed in future versions. Use configuration_id instead. Entity_id is required if configuration_id is not passed. In order for us to return data in compliance with settings defined for each client company, we need to identify the client company for this request. This parameter represents Internal Company ID as shown in Admin Panel. Example: 23.",
                "req": false
            },
            {
                "key": "id_numbers",
                "value": "",
                "description": "Allows user to retrieve individual discount (ID) rates with a particular car company if they have an ID number. Pass comma-separated list of ID numbers in format {vendor_code}:{id_number}. Only one number per vendor is allowed. Example: EP:40184175,ZI:E6L84U.",
                "req": false
            },
            {
                "key": "locale",
                "value": "",
                "description": "Forces system to return data in other languages if available. Defaults to en_US if not passed. Example: en_US.",
                "req": false
            },
            {
                "key": "nonce",
                "value": "",
                "description": " A randomly generated string of your choice. Ensure it is unique to each request with same timestamp within 5 minute interval and no more than 32 characters long. Maximum value length is 32. Example: 1543353502645.",
                "req": false
            },
            {
                "key": "pickup_datetime",
                "value": "",
                "description": "Date and time of the desired rental car pick up. Expected format is \"YYYY-MM-DDThh:mm\". Example: 2019-02-25T11:15.",
                "req": false
            },
            {
                "key": "pickup_location",
                "value": "",
                "description": "Can be either Latitude and longitude coordinates of the desired pick up location for the vehicle, or the airport IATA code (i.e., ATL) if strictly interested in vendors with locations at the airport. Example: 51.495,-0.145.",
                "req": false
            },
            {
                "key": "pickup_search_radius",
                "value": "",
                "description": "Maximum allowed distance using units passed in search_radius_unit from the desired pick up location that will be searched for. Example: 5.",
                "req": false
            },
            {
                "key": "search_radius_unit",
                "value": "",
                "description": " Units to use for the; search radiuses. Example: KM. Default: MI.",
                "req": false
            },
            {
                "key": "session_id",
                "value": "",
                "description": "Customer generated identifier of user's session. Do not use real user's session id as it will be replayed back in the API response. Reuse this identifier for all requests by the same user. Including this value makes subsequent troubleshooting and audit easier, as it explicitly links together requests for individual users. <,>,& characters are not allowed. Example: 71IxqHT8mgMe5ohsZ25e5P.",
                "req": false
            },
            {
                "key": "system",
                "value": "",
                "description": " Certain things may be configured and subsequently returned very differently based on the booking channel. This attribute tells the system which one of the currently supported channels the data is being requested for. Please inquire which booking channel your integration should use for all requests when you obtain your API key. Example: obt.",
                "req": false
            },
            {
                "key": "timestamp",
                "value": "",
                "description": "Valid current UNIX timestamp in seconds. Example: 1388774110.",
                "req": false
            },
            {
                "key": "user_agent",
                "value": "",
                "description": " Properly encoded customer\u2019s user agent string (required to obtain mobile rates from some providers). For traffic from mobile or desktop apps (as opposed to browser apps), use the following format: {App Name}/{App Version} ({OS} {OS Version}) [APP or MOBILE_APP] (e.g. TripSource/5.0 (iOS 10_10_3) MOBILE_APP). Note: Required to get discounted mobile rates Example: Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36.",
                "req": false
            },
            {
                "key": "vendor_codes",
                "value": "",
                "description": " This attribute allows limiting the results to inventory provided by specified vendors only. Pass comma-separated list of 2-alphanumeric-characters vendor codes. Example: ZI,ZE,ET.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685602817610,
        "lastModifiedTime": 1685604430083,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Successful Request",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "customer_ip": "192.168.31.116",
                    "errors": [],
                    "locale": "en_US",
                    "rates": [
                        {
                            "bcd_preference_tier": 1,
                            "bcd_preferred_car_type": false,
                            "bcd_preferred_vendor": false,
                            "car": {
                                "model": "Ford Fusion Hybrid",
                                "type": "ICAH"
                            },
                            "commission": {
                                "amount": 20.35,
                                "percent": 3
                            },
                            "currency": "UAH",
                            "dropoff": {
                                "address": {
                                    "city": "SAN BRUNO",
                                    "country": "US",
                                    "postal": "94583",
                                    "state": "CA",
                                    "street_address": "1198 EL CAMINO REAL"
                                },
                                "airport": {
                                    "code": "BOB",
                                    "shuttle": "Call Rental company for pick-up.",
                                    "terminals": []
                                },
                                "coordinates": {
                                    "latitude": -16.53308,
                                    "longitude": -151.73525
                                },
                                "distance": {
                                    "units": "KM",
                                    "value": 3.21
                                },
                                "hours": {
                                    "dropoff": "08:30 - 17:00",
                                    "pickup": "08:30 - 17:00"
                                },
                                "location_code": "BOBC02"
                            },
                            "is_bcd_cd_rate": true,
                            "is_cd_rate": true,
                            "is_id_rate": false,
                            "out_of_policy": false,
                            "out_of_policy_reason_codes": [],
                            "paid_policy": [],
                            "payment_options": [
                                "card",
                                "evoucher",
                                "evoucher_card",
                                "evoucher_voucher",
                                "no_payment",
                                "voucher",
                                "vpa_payment"
                            ],
                            "pickup": {
                                "address": {
                                    "city": "SAN BRUNO",
                                    "country": "US",
                                    "postal": "94583",
                                    "state": "CA",
                                    "street_address": "1198 EL CAMINO REAL"
                                },
                                "airport": {
                                    "code": "BOB",
                                    "shuttle": "Call Rental company for pick-up.",
                                    "terminals": []
                                },
                                "coordinates": {
                                    "latitude": -16.53308,
                                    "longitude": -151.73525
                                },
                                "distance": {
                                    "units": "KM",
                                    "value": 3.21
                                },
                                "hours": {
                                    "dropoff": "08:30 - 17:00",
                                    "pickup": "08:30 - 17:00"
                                },
                                "location_code": "BOBC02"
                            },
                            "pictures": [
                                {
                                    "size": {
                                        "height": 0,
                                        "width": 0
                                    },
                                    "url": ""
                                }
                            ],
                            "preference_tier": 1,
                            "preferred_car_type": false,
                            "preferred_vendor": false,
                            "provider": "amadeus",
                            "rate_code": "BDI",
                            "rate_key": "63fnz3ZcBJVCnAuHwKBpawe0mbq_vK5xjCULjAZD3kgvw5dO_TheRVrORn1kZhe53eEg0Jl_pisgJvKf51-GJzaDxfGkldODpYU_GNOiTjMezo7veOBxAPbPcavBjyxsQLt_4OU3uuVVK2gs0D6KYOIZMPfC7q3hpWLW29coT-jqhjbc9h3x84PShgfNF8yWz05E9H_l0NBY2gqVHUIIEbb8Y_0WbtLpiWmS6kgW-kR1mkCGfnqThb5evyQrKw60OO1eIc7C9zW2fFw-P7jxXcC9Abgus6LgsAvGPSFXcQNHAcOb6OmZYEcEtmPnBLB2Y4G7g0CBayT1rhnKamlpIPojYLCuyy8dtkdnrFacvii0CaIfy2JcWjPvf7_YUjVtZJ6qbQwi6Pu_SL3Isu4OyU4UtA4JwU4dmXQmWT-rOuGY9zMVwiRfVQ-IN7jsoQTBVvtOwMVv0GcQa00OVLlLPCwIDewm9mDpIYtfB-jQ68drLHWRK0pXEs0QHf0gbRcaWUGD3wvSCl7bNC6ivM5AYxzu",
                            "rate_plan": {
                                "amount": 3200,
                                "distance_included": {
                                    "distance_amount": 0,
                                    "distance_unit": "KM",
                                    "unlimited": true
                                },
                                "extra_distance": {
                                    "amount": 21,
                                    "distance_unit": "KM"
                                },
                                "type": "Daily"
                            },
                            "sort_metric": [
                                {
                                    "ascending": false,
                                    "name": "star_rating",
                                    "value": 5
                                }
                            ],
                            "taxes": 0,
                            "total": 7231,
                            "vendor": {
                                "code": "ZI",
                                "name": "Avis"
                            }
                        }
                    ],
                    "session_id": "40Lpcxqzu8X2z3YoZEHnEV",
                    "user_agent": "Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95728,
        "executor_type": "THIRDPARTY",
        "executor_name": "getcheckoutdata",
        "executor_version": "v2",
        "executor_display_name": "get_checkout_data",
        "executor_description": "Retrieves traveler payment and company information.",
        "executor_category": "Cars",
        "executor_category_group": "Cars",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-a03b85d2d4-tshapiv20.apiary-mock.com/cars/get_checkout_data/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "api_key",
                "value": "",
                "description": " Public key, provided by BCD Travel API team Example: testkey.",
                "req": false
            },
            {
                "key": "configuration_id",
                "value": "",
                "description": "In order for us to return data in compliance with settings defined for each client configuration, we need to identify the client configuration for this request. This parameter represents Internal Configuration ID as returned in get_configurations. Example: 3500000023.",
                "req": false
            },
            {
                "key": "customer_ip",
                "value": "",
                "description": " IP address of a user, as captured by the customer\u2019s integration. Ensure your integration passes the user\u2019s IP, not your own. This value helps determine user's location for fraud recovery and other analytics. Example: 192.168.31.116.",
                "req": false
            },
            {
                "key": "entity_id",
                "value": "",
                "description": " This field is deprecated and will be removed in future versions. Use configuration_id instead. Entity_id is required if configuration_id is not passed. In order for us to return data in compliance with settings defined for each client company, we need to identify the client company for this request. This parameter represents Internal Company ID as shown in Admin Panel. Example: 23.",
                "req": false
            },
            {
                "key": "locale",
                "value": "",
                "description": "Forces system to return data in other languages if available. Defaults to en_US if not passed. Example: en_US.",
                "req": false
            },
            {
                "key": "nonce",
                "value": "",
                "description": " A randomly generated string of your choice. Ensure it is unique to each request with same timestamp within 5 minute interval and no more than 32 characters long. Maximum value length is 32. Example: 1543353502645.",
                "req": false
            },
            {
                "key": "rate_key",
                "value": "",
                "description": " Unique identifier of the rate to use in the booking process. Example: ['63fnz3ZcBJVCnAuHwKBpawe0mbq_vK5xjCULjAZD3kgvw5dO_TheRVrORn1kZhe53eEg0Jl_pisgJvKf51-GJzaDxfGkldODpYU_GNOiTjMezo7veOBxAPbPcavBjyxsQLt_4OU3uuVVK2gs0D6KYOIZMPfC7q3hpWLW29coT-jqhjbc9h3x84PShgfNF8yWz05E9H_l0NBY2gqVHUIIEbb8Y_0WbtLpiWmS6kgW-kR1mkCGfnqThb5evyQrKw60OO1eIc7C9zW2fFw-P7jxXcC9Abgus6LgsAvGPSFXcQNHAcOb6OmZYEcEtmPnBLB2Y4G7g0CBayT1rhnKamlpIPojYLCuyy8dtkdnrFacvii0CaIfy2JcWjPvf7_YUjVtZJ6qbQwi6Pu_SL3Isu4OyU4UtA4JwU4dmXQmWT-rOuGY9zMVwiRfVQ-IN7jsoQTBVvtOwMVv0GcQa00OVLlLPCwIDewm9mDpIYtfB-jQ68drLHWRK0pXEs0QHf0gbRcaWUGD3wvSCl7bNC6ivM5AYxzu'].",
                "req": false
            },
            {
                "key": "session_id",
                "value": "",
                "description": "Customer generated identifier of user's session. Do not use real user's session id as it will be replayed back in the API response. Reuse this identifier for all requests by the same user. Including this value makes subsequent troubleshooting and audit easier, as it explicitly links together requests for individual users. <,>,& characters are not allowed. Example: 71IxqHT8mgMe5ohsZ25e5P.",
                "req": false
            },
            {
                "key": "system",
                "value": "",
                "description": " Certain things may be configured and subsequently returned very differently based on the booking channel. This attribute tells the system which one of the currently supported channels the data is being requested for. Please inquire which booking channel your integration should use for all requests when you obtain your API key. Example: obt.",
                "req": false
            },
            {
                "key": "timestamp",
                "value": "",
                "description": "Valid current UNIX timestamp in seconds. Example: 1388774110.",
                "req": false
            },
            {
                "key": "user_agent",
                "value": "",
                "description": " Properly encoded customer\u2019s user agent string (required to obtain mobile rates from some providers). For traffic from mobile or desktop apps (as opposed to browser apps), use the following format: {App Name}/{App Version} ({OS} {OS Version}) [APP or MOBILE_APP] (e.g. TripSource/5.0 (iOS 10_10_3) MOBILE_APP). Note: Required to get discounted mobile rates Example: Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36.",
                "req": false
            },
            {
                "key": "internal_traveler_id",
                "value": "",
                "description": "Internal ID of a traveler. Example: 1234.",
                "req": false
            },
            {
                "key": "tspm_company_id",
                "value": "",
                "description": " ID of the company in TSPM. Example: 20.001.",
                "req": false
            },
            {
                "key": "tspm_traveler_id",
                "value": "",
                "description": " ID of traveler in TSPM. Example: 24.0001.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685603294029,
        "lastModifiedTime": 1685604706032,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Successful Request",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "billing_number": "ABC123",
                    "billing_reference": "ABC123",
                    "crd": [
                        {
                            "choices": [],
                            "code": "ALL.COMMON.CRD.company_code",
                            "conditions": [],
                            "default": "888",
                            "help_text": null,
                            "max_length": 6,
                            "min_length": 3,
                            "name": "Company Code",
                            "required": false,
                            "type": "text",
                            "validation_type": "text"
                        },
                        {
                            "choices": [
                                {
                                    "code": "AP",
                                    "description": "Asia/Pacific"
                                },
                                {
                                    "code": "EEMEA",
                                    "description": "Eastern Europe/Middle East/Africa"
                                },
                                {
                                    "code": "EU",
                                    "description": "Europe"
                                },
                                {
                                    "code": "LA",
                                    "description": "Latin America"
                                },
                                {
                                    "code": "NA",
                                    "description": "North America"
                                }
                            ],
                            "code": "ALL.CARS.CRD.work_region",
                            "conditions": [
                                "card"
                            ],
                            "default": "EU",
                            "help_text": null,
                            "max_length": null,
                            "min_length": null,
                            "name": "Work Region",
                            "required": true,
                            "type": "select",
                            "validation_type": "nonascii"
                        }
                    ],
                    "credit_cards": [
                        {
                            "card_index": "1",
                            "card_month": 2,
                            "card_name": "John Smith",
                            "card_name_valid": true,
                            "card_number": "1234",
                            "card_source": "traveler",
                            "card_type": "VI",
                            "card_year": "2024",
                            "first_name": "John",
                            "last_name": "Smith"
                        }
                    ],
                    "customer_ip": "192.168.31.116",
                    "email": "someone@example.com",
                    "errors": [],
                    "first_name": "John",
                    "is_smoking": true,
                    "last_name": "Smith",
                    "locale": "en_US",
                    "middle_name": "Guy",
                    "session_id": "session123",
                    "special_information": "I have a wheelchair",
                    "user_agent": "Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36",
                    "vpa_card_pools": [
                        {
                            "name": "VPA card pool name",
                            "vpa_client_id": "1234"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95735,
        "executor_type": "THIRDPARTY",
        "executor_name": "cancelreservationCars",
        "executor_version": "v2",
        "executor_display_name": "cancel_reservation",
        "executor_description": "Cancels a rental car reservation.",
        "executor_category": "Cars",
        "executor_category_group": "Cars",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://private-anon-a03b85d2d4-tshapiv20.apiary-mock.com/cars/cancel_reservation/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685605311390,
        "lastModifiedTime": 1685605534428,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95733,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrievereservationslist",
        "executor_version": "v2",
        "executor_display_name": "retrieve_reservations_list",
        "executor_description": "Retrieves a list of reservations, corresponding to filtering parameters",
        "executor_category": "Cars",
        "executor_category_group": "Cars",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://private-anon-a03b85d2d4-tshapiv20.apiary-mock.com/cars/retrieve_reservations_list/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "api_key": "testkey",
                "customer_ip": "192.168.31.116",
                "filters": {
                    "agent_country": [],
                    "api_consumer": [],
                    "booker_email": [],
                    "company": [],
                    "country_of_fulfillment": [],
                    "country_of_origin": [],
                    "created_at": {
                        "max": "2018-09-17T13:42:48.090146-07:00",
                        "min": "2018-09-17T13:42:48.090146-07:00"
                    },
                    "dropoff_datetime": {
                        "max": "2018-09-17T13:42:48.090146-07:00",
                        "min": "2018-09-17T13:42:48.090146-07:00"
                    },
                    "gds_name": [
                        "amadeus",
                        "apollo",
                        "galileo",
                        "sabre"
                    ],
                    "gds_office_id": [],
                    "iata": [],
                    "payment_method": [
                        "card",
                        "evoucher",
                        "evoucher_card",
                        "evoucher_voucher",
                        "no_payment",
                        "voucher",
                        "vpa_payment"
                    ],
                    "pickup_datetime": {
                        "max": "2018-09-17T13:42:48.090146-07:00",
                        "min": "2018-09-17T13:42:48.090146-07:00"
                    },
                    "pnr_creation_method": [
                        "non_tsh",
                        "tsh"
                    ],
                    "status": [
                        "active",
                        "canceled",
                        "past"
                    ],
                    "system": [
                        "aft",
                        "cbt",
                        "mobile",
                        "obt"
                    ],
                    "traveler_email": []
                },
                "limit": 20,
                "locale": "en_US",
                "nonce": "1543353502645",
                "offset": 21,
                "session_id": "71IxqHT8mgMe5ohsZ25e5P",
                "system": "aft",
                "timestamp": 1388774110,
                "traveler_email": "johnsmith@example.com",
                "user_agent": "Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685604941658,
        "lastModifiedTime": 1685605641825,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "bookings": [
                        {
                            "airplus_dbi_success": false,
                            "booker": {
                                "email": "aguy@gmail.com",
                                "first_name": "John",
                                "last_name": "Smith",
                                "oid": "ABCDEFGHI",
                                "sign": "ABC123",
                                "tspm_id": "24.123"
                            },
                            "booking_remarks_error": "null",
                            "cancelled_at": "2018-11-28T10:51:35.553000+00:00",
                            "cancelled_by_user": {
                                "email": "aguy@gmail.com",
                                "first_name": "John",
                                "last_name": "Smith",
                                "oid": "ABCDEFGHI",
                                "sign": "ABC123",
                                "tspm_id": "24.123"
                            },
                            "case_number": "1234",
                            "company": {
                                "id": 0,
                                "name": "",
                                "tspm_id": "null"
                            },
                            "configuration_id": 0,
                            "container_id": "1234",
                            "created_at": "2018-11-28T10:51:35.553000+00:00",
                            "gds_profile": {
                                "gds_name": "",
                                "iata_code": "null",
                                "office_id": ""
                            },
                            "gds_segment": {
                                "confirmation_number": "123456ABC",
                                "id": "",
                                "original_total": 0,
                                "special_equipment": [
                                    {
                                        "code": "NAV",
                                        "name": "Navigation system"
                                    }
                                ],
                                "special_equipment_original_total": 0,
                                "special_equipment_total": 0,
                                "status": "",
                                "total": 0,
                                "voucher_error_message": "null",
                                "voucher_number": "null"
                            },
                            "payment": {
                                "billing_reference": "ABC123",
                                "credit_card": {
                                    "type": "VI"
                                },
                                "invoice_code": "BV5",
                                "it_number": "ABCD1234",
                                "payment_method": "card",
                                "vpa": {
                                    "bcd_card_pool": false,
                                    "provider": "itelya"
                                }
                            },
                            "pnr": {
                                "id": "",
                                "pnr_created": false
                            },
                            "policy_group_id": 0,
                            "provider": "amadeus",
                            "rate": {
                                "currency": "USD",
                                "dropoff_datetime": "2019-02-27T10:30",
                                "dropoff_location": {
                                    "address": {
                                        "city": "SAN BRUNO",
                                        "country": "US",
                                        "phone": "123-456-7890",
                                        "postal": "94583",
                                        "state": "CA",
                                        "street_address": "1198 EL CAMINO REAL"
                                    },
                                    "airport": {
                                        "code": "BOB",
                                        "terminals": []
                                    },
                                    "coordinates": {
                                        "latitude": -16.53308,
                                        "longitude": -151.73525
                                    },
                                    "location_code": "BOBC02"
                                },
                                "is_bcd_cd_rate": true,
                                "is_cd_rate": true,
                                "is_id_rate": true,
                                "original_currency": "USD",
                                "pickup_datetime": "2019-02-26T10:30",
                                "pickup_location": {
                                    "address": {
                                        "city": "SAN BRUNO",
                                        "country": "US",
                                        "phone": "123-456-7890",
                                        "postal": "94583",
                                        "state": "CA",
                                        "street_address": "1198 EL CAMINO REAL"
                                    },
                                    "airport": {
                                        "code": "BOB",
                                        "terminals": []
                                    },
                                    "coordinates": {
                                        "latitude": -16.53308,
                                        "longitude": -151.73525
                                    },
                                    "location_code": "BOBC02"
                                },
                                "vendor": {
                                    "code": "ZI",
                                    "name": "Avis"
                                }
                            },
                            "remarks_success": false,
                            "status": "",
                            "system": "obt",
                            "traveler": {
                                "email": "aguy@gmail.com",
                                "first_name": "John",
                                "last_name": "Smith",
                                "oid": "ABCDEFGHI",
                                "sign": "ABC123",
                                "tspm_id": "24.123"
                            },
                            "uid": "5bed9314db992881744d1ff3"
                        }
                    ],
                    "customer_ip": "192.168.31.116",
                    "errors": [],
                    "locale": "en_US",
                    "session_id": "40Lpcxqzu8X2z3YoZEHnEV",
                    "total": 0,
                    "user_agent": "Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95734,
        "executor_type": "THIRDPARTY",
        "executor_name": "getreservationdetailsCars",
        "executor_version": "v2",
        "executor_display_name": "get_reservation_details",
        "executor_description": "Retrieves a detailed reservation summary and status of a traveler reservation.",
        "executor_category": "Cars",
        "executor_category_group": "Cars",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://private-anon-a03b85d2d4-tshapiv20.apiary-mock.com/cars/get_reservation_details/",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "api_key",
                "value": "",
                "description": "Public key, provided by BCD Travel API team Example: testkey.",
                "req": false
            },
            {
                "key": "configuration_id",
                "value": "",
                "description": "This parameter is accepted for backward compatibility, but is completely ignored. Example: 3500000023.",
                "req": false
            },
            {
                "key": "customer_ip",
                "value": "",
                "description": " IP address of a user, as captured by the customer\u2019s integration. Ensure your integration passes the user\u2019s IP, not your own. This value helps determine user's location for fraud recovery and other analytics. Example: 192.168.31.116.",
                "req": false
            },
            {
                "key": "entity_id",
                "value": "",
                "description": "This parameter is accepted for backward compatibility, but is completely ignored. Example: 23.",
                "req": false
            },
            {
                "key": "locale",
                "value": "",
                "description": " Forces system to return data in other languages if available. Defaults to en_US if not passed. Example: en_US.Show Possible Values",
                "req": false
            },
            {
                "key": "nonce",
                "value": "",
                "description": " A randomly generated string of your choice. Ensure it is unique to each request with same timestamp within 5 minute interval and no more than 32 characters long. Maximum value length is 32. Example: 1543353502645.",
                "req": false
            },
            {
                "key": "session_id",
                "value": "",
                "description": " Customer generated identifier of user's session. Do not use real user's session id as it will be replayed back in the API response. Reuse this identifier for all requests by the same user. Including this value makes subsequent troubleshooting and audit easier, as it explicitly links together requests for individual users. <,>,& characters are not allowed. Example: 71IxqHT8mgMe5ohsZ25e5P.",
                "req": false
            },
            {
                "key": "system",
                "value": "",
                "description": "Certain things may be configured and subsequently returned very differently based on the booking channel. This attribute tells the system which one of the currently supported channels the data is being requested for. Please inquire which booking channel your integration should use for all requests when you obtain your API key. Example: obt.",
                "req": false
            },
            {
                "key": "timestamp",
                "value": "",
                "description": "Valid current UNIX timestamp in seconds. Example: 1388774110.",
                "req": false
            },
            {
                "key": "user_agent",
                "value": "",
                "description": "Properly encoded customer\u2019s user agent string (required to obtain mobile rates from some providers). For traffic from mobile or desktop apps (as opposed to browser apps), use the following format: {App Name}/{App Version} ({OS} {OS Version}) [APP or MOBILE_APP] (e.g. TripSource/5.0 (iOS 10_10_3) MOBILE_APP). Note: Required to get discounted mobile rates Example: Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36.",
                "req": false
            },
            {
                "key": "booking_uid",
                "value": "",
                "description": " Unique identifier of booking in the database. Returned from /book or /get_reservations_list. Example: 5bed9314db992881744d1ff3.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685605155900,
        "lastModifiedTime": 1685605155900,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Successful Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "booking": {
                        "airplus_dbi_success": false,
                        "booker": {
                            "email": "aguy@gmail.com",
                            "first_name": "John",
                            "last_name": "Smith",
                            "oid": "ABCDEFGHI",
                            "sign": "ABC123",
                            "tspm_id": "24.123"
                        },
                        "booking_remarks_error": "null",
                        "cancellation_error": {
                            "message": "Critical failure.",
                            "type": "ProcessingError"
                        },
                        "cancellation_status": "success",
                        "cancelled_at": "2018-11-28T10:51:35.553000+00:00",
                        "cancelled_by_user": {
                            "email": "aguy@gmail.com",
                            "first_name": "John",
                            "last_name": "Smith",
                            "oid": "ABCDEFGHI",
                            "sign": "ABC123",
                            "tspm_id": "24.123"
                        },
                        "case_number": "1234",
                        "company": {
                            "id": 0,
                            "name": "",
                            "tspm_id": "null"
                        },
                        "configuration_id": 0,
                        "confirmation_number": "123456ABC",
                        "container_id": "1234",
                        "created_at": "2018-11-28T10:51:35.553000+00:00",
                        "flight_number": "UA1234",
                        "freetext": "15 USD/DY LATE FEE MAY APPLY",
                        "gds_profile": {
                            "gds_name": "",
                            "iata_code": "null",
                            "office_id": ""
                        },
                        "gds_segment": {
                            "confirmation_number": "123456ABC",
                            "id": "",
                            "original_total": 0,
                            "special_equipment": [
                                {
                                    "code": "NAV",
                                    "name": "Navigation system"
                                }
                            ],
                            "special_equipment_original_total": 0,
                            "special_equipment_total": 0,
                            "status": "",
                            "total": 0,
                            "voucher_error_message": "null",
                            "voucher_number": "null"
                        },
                        "payment": {
                            "billing_reference": "ABC123",
                            "credit_card": {
                                "first_name": "",
                                "last_name": "",
                                "type": "VI"
                            },
                            "invoice_code": "BV5",
                            "it_number": "ABCD1234",
                            "payment_method": "card",
                            "vpa": {
                                "bcd_card_pool": false,
                                "provider": "itelya"
                            }
                        },
                        "pnr": {
                            "id": "",
                            "pnr_created": false
                        },
                        "pnr_id": "ABC123",
                        "policy_group_id": 0,
                        "provider": "amadeus",
                        "rate": {
                            "bcd_preference_tier": 1,
                            "bcd_preferred_car_type": false,
                            "bcd_preferred_vendor": false,
                            "car": {
                                "doors": 4,
                                "model": "Ford Fusion Hybrid",
                                "seats": 6,
                                "type": "ICAH"
                            },
                            "cd_number": "123ABC456",
                            "currency": "USD",
                            "dropoff_datetime": "2019-02-27T10:30",
                            "dropoff_location": {
                                "address": {
                                    "city": "SAN BRUNO",
                                    "country": "US",
                                    "phone": "123-456-7890",
                                    "postal": "94583",
                                    "state": "CA",
                                    "street_address": "1198 EL CAMINO REAL"
                                },
                                "airport": {
                                    "code": "BOB",
                                    "shuttle": "Call Rental company for pick-up.",
                                    "terminals": []
                                },
                                "coordinates": {
                                    "latitude": -16.53308,
                                    "longitude": -151.73525
                                },
                                "hours": {
                                    "dropoff": "08:30 - 17:00",
                                    "pickup": "08:30 - 17:00"
                                },
                                "location_code": "BOBC02"
                            },
                            "id_number": "123ABC456",
                            "included_coverage": [
                                {
                                    "code": "PAI",
                                    "name": "PERSONAL ACCIDENT INSURANCE: 3.12EUR Per day"
                                }
                            ],
                            "is_bcd_cd_rate": false,
                            "is_cd_rate": false,
                            "is_id_rate": false,
                            "optional_coverage": [
                                {
                                    "code": "PAI",
                                    "name": "PERSONAL ACCIDENT INSURANCE: 3.12EUR Per day"
                                }
                            ],
                            "original_currency": "USD",
                            "original_taxes": 23.45,
                            "original_total": 120,
                            "out_of_policy": false,
                            "out_of_policy_reason_codes": [],
                            "pickup_datetime": "2019-02-26T10:30",
                            "pickup_location": {
                                "address": {
                                    "city": "SAN BRUNO",
                                    "country": "US",
                                    "phone": "123-456-7890",
                                    "postal": "94583",
                                    "state": "CA",
                                    "street_address": "1198 EL CAMINO REAL"
                                },
                                "airport": {
                                    "code": "BOB",
                                    "shuttle": "Call Rental company for pick-up.",
                                    "terminals": []
                                },
                                "coordinates": {
                                    "latitude": -16.53308,
                                    "longitude": -151.73525
                                },
                                "hours": {
                                    "dropoff": "08:30 - 17:00",
                                    "pickup": "08:30 - 17:00"
                                },
                                "location_code": "BOBC02"
                            },
                            "preference_tier": 1,
                            "preferred_car_type": false,
                            "preferred_vendor": false,
                            "rate_plan": {
                                "amount": 3200,
                                "distance_included": {
                                    "distance_amount": 0,
                                    "distance_unit": "KM",
                                    "unlimited": true
                                },
                                "extra_day": {
                                    "amount": 25.4,
                                    "distance_included": {
                                        "distance_amount": 0,
                                        "distance_unit": "KM",
                                        "unlimited": true
                                    },
                                    "extra_distance": {
                                        "amount": 21,
                                        "distance_unit": "KM"
                                    }
                                },
                                "extra_distance": {
                                    "amount": 21,
                                    "distance_unit": "KM"
                                },
                                "extra_hour": {
                                    "amount": 25.4,
                                    "distance_included": {
                                        "distance_amount": 0,
                                        "distance_unit": "KM",
                                        "unlimited": true
                                    },
                                    "extra_distance": {
                                        "amount": 21,
                                        "distance_unit": "KM"
                                    }
                                },
                                "type": "Daily"
                            },
                            "special_equipment": [
                                {
                                    "code": "NAV",
                                    "name": "Navigation system"
                                }
                            ],
                            "special_equipment_original_total": 32.66,
                            "special_equipment_total": 92.21,
                            "surcharges": [
                                {
                                    "amount": 14.35,
                                    "name": "Airport fee: 30.00USD Per rental"
                                }
                            ],
                            "taxes": 0,
                            "total": 1245.4,
                            "vendor": {
                                "code": "ZI",
                                "name": "Avis"
                            }
                        },
                        "remarks_success": false,
                        "special_equipment": [],
                        "special_information": "I want tinted windows, please.",
                        "status": "",
                        "system": "obt",
                        "traveler": {
                            "email": "aguy@gmail.com",
                            "first_name": "John",
                            "last_name": "Smith",
                            "oid": "ABCDEFGHI",
                            "sign": "ABC123",
                            "tspm_id": "24.123"
                        },
                        "uid": "5bed9314db992881744d1ff3"
                    },
                    "customer_ip": "192.168.31.116",
                    "errors": [],
                    "locale": "en_US",
                    "session_id": "40Lpcxqzu8X2z3YoZEHnEV",
                    "user_agent": "Mozilla%2F5.0%20%28Linux%3B%20Android%207.0%3B%20SM-G930V%20Build%2FNRD90M%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F59.0.3071.125%20Mobile%20Safari%2F537.36"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "Proceed to manual refund.",
                            "error_code": 1014000,
                            "message": "Unexpected parameters: xxx.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "ProcessCardVerification",
                            "error_code": 4000000,
                            "message": "Incorrect authentication credentials.",
                            "reason": "auth"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "PricingOptionNotAllowed",
                            "error_code": 1003000,
                            "message": "You have no permissions to perform this request.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: NO CAR RENTAL LOC FOUND FOR REQ AREA",
                            "error_code": 1004000,
                            "message": "No rates found.",
                            "reason": "validation"
                        }
                    ],
                    "session_id": "session123"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "developer_message": "amadeus error in Car_Availability: INVALID ARRIVAL INFORMATION",
                            "error_code": 5006000,
                            "message": "Sorry, we cannot complete your search at this time because our third-party search partner is experiencing technical difficulties. Please try again in a few minutes.",
                            "reason": "processing"
                        }
                    ],
                    "session_id": "session123"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95540,
        "executor_type": "THIRDPARTY",
        "executor_name": "expenses",
        "executor_version": "v1",
        "executor_display_name": "Expenses",
        "executor_description": "Retrieves a list of expenses that match the requested search criteria. API allows pagination by using limit (number of results on the page) and offset values (next batch of items to return starting from the offset).   ",
        "executor_category": "InvoicAPI",
        "executor_category_group": "InvoicAPI",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://private-anon-4937556019-expenseapi1.apiary-mock.com/v1/expenses",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "allOf": [
                    {
                        "ref": "#/definitions/ExpenseSearchFilterSearchRequestModel"
                    }
                ],
                "definitions": {
                    "ExpenseSearchFilterSearchRequestModel": {
                        "type": "object",
                        "properties": {
                            "limit": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "offset": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "filter": {
                                "ref": "#/definitions/ExpenseSearchFilter"
                            }
                        }
                    },
                    "ExpenseSearchFilter": {
                        "type": "object",
                        "properties": {
                            "invoiceNumber": {
                                "description": "The Invoice Number from the vendor for the Invoice. Specify single or multiple values.",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "examples": [
                                    [
                                        "EZ0209459"
                                    ]
                                ]
                            },
                            "travelerEmail": {
                                "description": "The traveler email address associated with the trip record. Specify single or multiple values.",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "examples": [
                                    [
                                        "joe.smith@bcdtravel.com"
                                    ]
                                ]
                            },
                            "invoiceDateTime": {
                                "description": "The ISO 8601 date/time or date/time range of the invoice issue.\r\nOur systems search any expense items with issue date that falls on or within the specified date/time range.\r\nNote: the date (in YYYY-MM-DD format) is required.\r\nOnly hours and minutes (not seconds) can be specified in the request.\r\nExamples: for ranges: 2020-02-14T19:47 TO 2020-02-18T19:47, for single date: 2020-02-14T19:47.",
                                "type": "string",
                                "examples": [
                                    "2022-02-14T19:47 TO 2022-02-18T19:47"
                                ]
                            },
                            "lastModifiedDateTime": {
                                "description": "The ISO 8601 date/time when the booking was last modified.\r\nNote: the date (in YYYY-MM-DD format) is required.\r\nOnly hours and minutes (not seconds) can be specified in the request.\r\nExamples: for ranges: 2020-02-14T19:47 TO 2020-02-18T19:47, for single date: 2020-02-14T19:47.",
                                "type": "string",
                                "examples": [
                                    "2022-02-14T19:47 TO 2022-02-18T19:47"
                                ]
                            },
                            "customerNumber": {
                                "description": "The back office customer number associated with the customer name. Specify single or multiple values.",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "examples": [
                                    [
                                        "00008098"
                                    ]
                                ]
                            },
                            "accountId": {
                                "description": "The BCD specific identifier for the regional corporate office that owns the record (aka SMID). Specify single or multiple values.",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "examples": [
                                    [
                                        "111000"
                                    ]
                                ]
                            },
                            "globalCustomerNumber": {
                                "description": "The global BCD specific number of the corporate account. Specify single or multiple values.",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "examples": [
                                    [
                                        "1234"
                                    ]
                                ]
                            },
                            "recordLocator": {
                                "description": "The GDS passenger name record (PNR) identifier. Specify single or multiple values.",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "examples": [
                                    [
                                        "BKBQIT"
                                    ]
                                ]
                            }
                        }
                    }
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685525138273,
        "lastModifiedTime": 1685525310969,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": -100000000,
                    "status": "",
                    "remainingRecords": -100000000,
                    "result": [
                        {
                            "id": "2b0e301b-3865-4e62-a34b-397271bd4593",
                            "total": -100000000,
                            "taxesTotal": -100000000,
                            "subtotal": -100000000,
                            "currencyCode": "",
                            "customerName": "",
                            "globalCustomerNumber": "",
                            "accountId": "",
                            "customerNumber": "",
                            "businessUnit": "",
                            "costCenter": "",
                            "department": "",
                            "isInternational": false,
                            "recordLocator": "BMSAAD",
                            "lastModifiedDateTime": "2022-02-16T07:05:00.0Z",
                            "approvals": [
                                {
                                    "approverCode": "",
                                    "approvedDateTime": "2023-02-02T19:57:52.408Z"
                                }
                            ],
                            "travelers": [
                                {
                                    "firstName": "Joe",
                                    "lastName": "Smith",
                                    "emailAddress": "joe.smith@bcdtravel.com",
                                    "country": "",
                                    "travelerType": "",
                                    "employeeId": ""
                                }
                            ],
                            "brokers": [
                                {
                                    "name": "BCD Travel",
                                    "description": "",
                                    "taxId": "",
                                    "location": {
                                        "address": {
                                            "address1": "",
                                            "address2": "",
                                            "address3": "",
                                            "addressCountryCode": "US",
                                            "addressLocality": "",
                                            "addressRegion": "",
                                            "postalCode": ""
                                        }
                                    },
                                    "vatNumber": "",
                                    "companyNumber": ""
                                }
                            ],
                            "sellers": [
                                {
                                    "name": "UA",
                                    "location": {
                                        "address": {
                                            "address1": "",
                                            "address2": "",
                                            "address3": "",
                                            "addressCountryCode": "US",
                                            "addressLocality": "",
                                            "addressRegion": "",
                                            "postalCode": ""
                                        }
                                    }
                                }
                            ],
                            "payments": [
                                {
                                    "productId": "",
                                    "amount": 1203.97,
                                    "paymentType": "Credit Card",
                                    "currencyCode": "GBP",
                                    "ticketNumber": "",
                                    "cardDetail": {
                                        "type": "",
                                        "number": ""
                                    },
                                    "authorizationCode": ""
                                }
                            ],
                            "taxes": [
                                {
                                    "productId": "",
                                    "name": "",
                                    "authority": {
                                        "address1": "",
                                        "address2": "",
                                        "address3": "",
                                        "addressCountryCode": "US",
                                        "addressLocality": "",
                                        "addressRegion": "",
                                        "postalCode": ""
                                    },
                                    "code": "",
                                    "rate": -100000000,
                                    "amount": -100000000,
                                    "currencyCode": ""
                                }
                            ],
                            "products": {
                                "air": {
                                    "id": "",
                                    "taxes": [
                                        {
                                            "productId": "",
                                            "name": "",
                                            "authority": {
                                                "address1": "",
                                                "address2": "",
                                                "address3": "",
                                                "addressCountryCode": "US",
                                                "addressLocality": "",
                                                "addressRegion": "",
                                                "postalCode": ""
                                            },
                                            "code": "",
                                            "rate": -100000000,
                                            "amount": -100000000,
                                            "currencyCode": ""
                                        }
                                    ],
                                    "tickets": [
                                        {
                                            "legs": [
                                                {
                                                    "departureAirportCode": "",
                                                    "departureDate": "2023-02-02T19:57:52.413Z",
                                                    "arrivalAirportCode": "",
                                                    "arrivalDate": "2023-02-02T19:57:52.413Z",
                                                    "flightNumber": "3093",
                                                    "segmentNumber": -100000000,
                                                    "marketingAirlineCode": "",
                                                    "operatingAirlineCode": "",
                                                    "classOfServiceCode": "P",
                                                    "fareBasisCode": "SAA0AKDS"
                                                }
                                            ],
                                            "invoiceNumber": "EZ0209459",
                                            "validatingCarrier": "UA",
                                            "taxes": [
                                                {
                                                    "productId": "",
                                                    "name": "",
                                                    "authority": {
                                                        "address1": "",
                                                        "address2": "",
                                                        "address3": "",
                                                        "addressCountryCode": "US",
                                                        "addressLocality": "",
                                                        "addressRegion": "",
                                                        "postalCode": ""
                                                    },
                                                    "code": "",
                                                    "rate": -100000000,
                                                    "amount": -100000000,
                                                    "currencyCode": ""
                                                }
                                            ],
                                            "ticketNumber": "",
                                            "recordLocator": "",
                                            "issueDateTime": "2020-10-22T07:05:00.0Z",
                                            "fare": {
                                                "amount": -100000000,
                                                "currencyCode": "GBP",
                                                "description": ""
                                            },
                                            "payments": [
                                                {
                                                    "productId": "",
                                                    "amount": 1203.97,
                                                    "paymentType": "Credit Card",
                                                    "currencyCode": "GBP",
                                                    "ticketNumber": "",
                                                    "cardDetail": {
                                                        "type": "",
                                                        "number": ""
                                                    },
                                                    "authorizationCode": ""
                                                }
                                            ],
                                            "lineItems": [
                                                {
                                                    "sequenceNumber": 1,
                                                    "description": "",
                                                    "total": -100000000
                                                }
                                            ],
                                            "bookingType": "Purchase",
                                            "passenger": {
                                                "firstName": "Joe",
                                                "lastName": "Smith",
                                                "emailAddress": "joe.smith@bcdtravel.com",
                                                "country": "",
                                                "travelerType": "",
                                                "employeeId": ""
                                            },
                                            "isInternational": false
                                        }
                                    ]
                                },
                                "car": {
                                    "id": "",
                                    "reservations": [
                                        {
                                            "bookingDateTime": "2023-02-02T19:57:52.414Z",
                                            "bookingType": "Purchase",
                                            "carType": "Intermediate Car Auto A/C",
                                            "confirmationNumber": "",
                                            "dropOffLocation": {
                                                "address1": "",
                                                "address2": "",
                                                "address3": "",
                                                "addressCountryCode": "US",
                                                "addressLocality": "",
                                                "addressRegion": "",
                                                "postalCode": ""
                                            },
                                            "endDateTime": "2023-02-02T19:57:52.414Z",
                                            "fare": {
                                                "amount": -100000000,
                                                "currencyCode": "GBP",
                                                "description": ""
                                            },
                                            "isInternational": false,
                                            "lineItems": [
                                                {
                                                    "sequenceNumber": 1,
                                                    "description": "",
                                                    "total": -100000000
                                                }
                                            ],
                                            "numberOfCars": -100000000,
                                            "pickupLocation": {
                                                "address1": "",
                                                "address2": "",
                                                "address3": "",
                                                "addressCountryCode": "US",
                                                "addressLocality": "",
                                                "addressRegion": "",
                                                "postalCode": ""
                                            },
                                            "rentalDays": -100000000,
                                            "segmentNumber": -100000000,
                                            "startDateTime": "2023-02-02T19:57:52.415Z",
                                            "vendorChainCode": "ET",
                                            "vendorChainName": "Enterprise Rent A Car"
                                        }
                                    ]
                                },
                                "hotel": {
                                    "id": "",
                                    "reservations": [
                                        {
                                            "address": {
                                                "address1": "",
                                                "address2": "",
                                                "address3": "",
                                                "addressCountryCode": "US",
                                                "addressLocality": "",
                                                "addressRegion": "",
                                                "postalCode": ""
                                            },
                                            "bookingDateTime": "2023-02-02T19:57:52.415Z",
                                            "bookingType": "Purchase",
                                            "checkInDateTime": "2023-02-02T19:57:52.415Z",
                                            "checkOutDateTime": "2023-02-02T19:57:52.415Z",
                                            "confirmationNumber": "25699453",
                                            "fare": {
                                                "amount": -100000000,
                                                "currencyCode": "GBP",
                                                "description": ""
                                            },
                                            "guests": [
                                                {
                                                    "firstName": "Joe",
                                                    "lastName": "Smith",
                                                    "emailAddress": "joe.smith@bcdtravel.com",
                                                    "country": "",
                                                    "travelerType": "",
                                                    "employeeId": ""
                                                }
                                            ],
                                            "lineItems": [
                                                {
                                                    "sequenceNumber": 1,
                                                    "description": "",
                                                    "total": -100000000
                                                }
                                            ],
                                            "nightsStayed": 3,
                                            "numberOfRooms": 1,
                                            "roomType": "OVR",
                                            "vendorChainCode": "HX",
                                            "vendorChainName": "HAMPTON INNS",
                                            "vendorCode": "PHL130",
                                            "vendorName": "Hampton Inn Phl Ctr City-Conv"
                                        }
                                    ]
                                },
                                "rail": {
                                    "id": "",
                                    "tickets": [
                                        {
                                            "legs": [
                                                {
                                                    "arrivalDateTime": "2023-02-02T19:57:52.416Z",
                                                    "arrivalStationCode": "QQS",
                                                    "carrierCode": "9V",
                                                    "carrierName": "",
                                                    "classOfServiceCode": "Y",
                                                    "departureDateTime": "2023-02-02T19:57:52.416Z",
                                                    "departureStationCode": "XPG",
                                                    "segmentNumber": "",
                                                    "trainNumber": "9007"
                                                }
                                            ],
                                            "ticketNumber": "",
                                            "recordLocator": "",
                                            "issueDateTime": "2020-10-22T07:05:00.0Z",
                                            "fare": {
                                                "amount": -100000000,
                                                "currencyCode": "GBP",
                                                "description": ""
                                            },
                                            "payments": [
                                                {
                                                    "productId": "",
                                                    "amount": 1203.97,
                                                    "paymentType": "Credit Card",
                                                    "currencyCode": "GBP",
                                                    "ticketNumber": "",
                                                    "cardDetail": {
                                                        "type": "",
                                                        "number": ""
                                                    },
                                                    "authorizationCode": ""
                                                }
                                            ],
                                            "lineItems": [
                                                {
                                                    "sequenceNumber": 1,
                                                    "description": "",
                                                    "total": -100000000
                                                }
                                            ],
                                            "bookingType": "Purchase",
                                            "passenger": {
                                                "firstName": "Joe",
                                                "lastName": "Smith",
                                                "emailAddress": "joe.smith@bcdtravel.com",
                                                "country": "",
                                                "travelerType": "",
                                                "employeeId": ""
                                            },
                                            "isInternational": false
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "messages": [
                        ""
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": -100000000,
                    "status": "",
                    "remainingRecords": -100000000,
                    "messages": [
                        ""
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": -100000000,
                    "status": "",
                    "remainingRecords": -100000000,
                    "messages": [
                        ""
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": -100000000,
                    "status": "",
                    "remainingRecords": -100000000,
                    "messages": [
                        ""
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": -100000000,
                    "status": "",
                    "remainingRecords": -100000000,
                    "messages": [
                        ""
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 130819,
        "executor_type": "THIRDPARTY",
        "executor_name": "expensesversions",
        "executor_version": "v1",
        "executor_display_name": "Expenses versions",
        "executor_description": "Retrieves versions of an expense item by its unique trip identifier in BCD database.",
        "executor_category": "InvoicAPI",
        "executor_category_group": "InvoicAPI",
        "service_provider": "bcdtravel",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://travel-data-api.bcdapi.bcdtravel.com/v1/expenses/tripId/versions",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "tripId",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1723202567885,
        "lastModifiedTime": 1723202567885,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Success",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": -100000000,
                    "status": "",
                    "remainingRecords": -100000000,
                    "result": [
                        {}
                    ],
                    "messages": [
                        ""
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": -100000000,
                    "status": "",
                    "remainingRecords": -100000000,
                    "messages": [
                        ""
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    }
]